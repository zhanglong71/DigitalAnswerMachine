
.NOLIST
.INCLUDE	REG_D22.inc
.INCLUDE	MX93D22.inc
.INCLUDE	MACRO.inc
.INCLUDE	CONST.inc
;-------------------------------------------------------------------------------
.EXTERN	GetOneConst

.EXTERN	BBBEEP
.EXTERN	BBEEP
.EXTERN	BEEP
.EXTERN	BCVOX_INIT
.EXTERN	CLR_FUNC
.EXTERN	CLR_FLAG
.EXTERN	CLR_TIMER
.EXTERN	DAA_SPK
.EXTERN	DAA_OFF
.EXTERN	DAM_BIOSFUNC
.EXTERN	DGT_TAB

.EXTERN	FFW_MANAGE
.EXTERN	GC_CHK

.EXTERN	HOOK_ON
.EXTERN	HOOK_OFF
.EXTERN	INIT_DAM_FUNC
.EXTERN	LBEEP
.EXTERN	LINE_START
.EXTERN	LOCAL_PRO

.EXTERN	OGM_SELECT
.EXTERN	OGM_STATUS

.EXTERN	PUSH_FUNC

.EXTERN	REC_START
.EXTERN	REW_MANAGE
.EXTERN	REAL_DEL

.EXTERN	SET_DELMARK
.EXTERN	SET_LED3
.EXTERN	SET_LED4
.EXTERN	SET_TIMER
.EXTERN	STOR_MSG
.EXTERN	STOR_VP

.EXTERN	VOL_TAB
.EXTERN	VPMSG_CHK
.EXTERN	VPMSG_DEL

;-------------------------------------------------------------------------------
.LIST
.GLOBAL	ANS_STATE
ANS_STATE:
	LAC	MSG
	XORL	CMSG_CPC		;接线后摘机(相当于CPC)
	BS	ACZ,ANS_STATE_CPC
	
	LAC	MSG
	XORL	CMSG_KEY5S		;接线按ON/OFF(相当于CPC)
	BS	ACZ,ANS_STATE_CPC

	LAC	PRO_VAR
	ANDK	0XF
	BS	ACZ,ANS_STATE0		;for initial
	SBHK	1
	BS	ACZ,ANS_STATE_REC	;for record(ANSWER AND RECORD ICM)
	SBHK	1
	BS	ACZ,ANS_STATE_EXIT	;for end(TimeOut/BTONE/CTONE/VOX_ON)
	SBHK	1
	BS	ACZ,ANS_STATE_LINE	;for line(ANSWER ONLY)

	RET
ANS_STATE_CPC:
	BS	B1,ICM_STATE_EXIT_END
	
;=============================================================
ANS_STATE0:
	LAC	MSG
	XORL	CMSG_INIT		;INITIAL
	BS	ACZ,ANS_STATE_INIT
;ANS_STATE0_1:	
	LAC	MSG
	XORL	CVP_STOP		
	BS	ACZ,ICM_STATE0_VPSTOP	;CVP_STOP,OGM播放完毕
;ANS_STATE0_2:
	LAC	MSG
	XORL	CREV_DTMF		;CREV_DTMF
	BS	ACZ,ANS_STATE_DTMF

	RET
;---
ANS_STATE_INIT:
	CALL	INIT_DAM_FUNC
	CALL	DAA_ANS_SPK
	LACL	0XFFFF
	SAH	PSWORD_TMP
	CALL	INIT_DAM_FUNC
	LAC	VOI_ATT
	SFR	8
	ANDK	0X0F
	CALL	OGM_SELECT
	
	LAC	MSG_N
	ADHL	DGT_TAB
	CALL	GetOneConst
	CALL	SET_LED4

	LAC	MSG_ID
	ORL	0XFE00
	CALL	STOR_VP
	CALL	LBEEP

	LAC	MSG_N
	CALL	OGM_SELECT
	BZ	ACZ,ANS_STATE_PLYOGM
	
	CALL	INIT_DAM_FUNC
	LACK	41
	ORL	0XFF00
	CALL	STOR_VP
	CALL	LBEEP
ANS_STATE_PLYOGM:
	RET

;-------
ICM_STATE0_VPSTOP:			;开始录音(ICM)/ON_LINE(only)
	LACL	0X86	;EE
	CALL	SET_LED3
	LACL	0X86
	CALL	SET_LED4
	
	CALL	INIT_DAM_FUNC
	CALL	DAA_ANS_REC
	CALL	BCVOX_INIT

	LACK	0
	SAH	PRO_VAR1
	LACL	1000
	CALL	SET_TIMER

	LACK	0X0001
	SAH	PRO_VAR
	
	CALL	VPMSG_CHK
	CALL	REC_START

	RET
;---------------for DTMF
ANS_STATE_DTMF:		;比较密码
	CALL	BCVOX_INIT	;有键按下BCVOX要清零

	LAC	DTMF_VAL
	ANDK	0X0F
	CALL	PSWORD_CHK
	BS	ACZ,ICM_REV_DTMF_PASS

	RET

;-------
ICM_REV_DTMF_PASS:		;密码成功
	LAC	CONF
	SFR	12
	SBHK	1
	BZ	ACZ,ICM_REV_DTMF_YES1

	LAC	CONF
	ORL	1<<11
	CALL	DAM_BIOSFUNC	;若是录音过程,则删除之
ICM_REV_DTMF_YES1:	
	CALL	INIT_DAM_FUNC
	CALL	DAA_ANS_REC

	CALL	CLR_FUNC	;先空
	LACL	REMOTE_PRO	;进入遥控
	CALL	PUSH_FUNC

	LACL	CMSG_INIT
	CALL	STOR_MSG
	
	LACK	0
	SAH	PRO_VAR		;程序步骤
	SAH	PRO_VAR1	;计时清零
	CALL	BCVOX_INIT
	
	RET
;-------
;=============================================================
ANS_STATE_REC:
	LAC	MSG
	XORL	CREV_DTMF		;CREV_DTMF
	BS	ACZ,ANS_STATE_DTMF
;ANS_STATE_REC_1:
	LAC	MSG
	XORL	CMSG_TMR		;time 1s
	BS	ACZ,ICM_TMR_DET
;ANS_STATE_REC_2:
	LAC	MSG
	XORL	CMSG_VOX		;VOX_ON 8s
	BS	ACZ,ICM_VOX_DET
;ANS_STATE_REC_3:
	LAC	MSG
	XORL	CMSG_CTONE		;CTONE 8s
	BS	ACZ,ICM_CTONE_DET
;ANS_STATE_REC_4:
	LAC	MSG
	XORL	CMSG_BTONE		;BTONE 8s
	BS	ACZ,ICM_BTONE_DET
;ANS_STATE_REC_5:
	LAC	MSG
	XORL	CREC_FULL		;REC_FULL
	BS	ACZ,ICM_REC_FUL
;ANS_STATE_REC_6:
	LAC	MSG
	XORL	CVP_STOP		;PLAY END
	BS	ACZ,ICM_FUL_EVP
	
	RET
;-------
ICM_VOX_DET:				;由于后BTONE,CTONE,VOX要持续一段时间,可不考虑小长度的录音删除问题
ICM_CTONE_DET:
ICM_BTONE_DET:
	CALL	INIT_DAM_FUNC
	CALL	VPMSG_CHK
;---
	LACK	0X0002
	SAH	PRO_VAR
	
;	CALL	DAA_OFF
	CALL	DAA_SPK		;???????????????????
	CALL	BBEEP		;替换语音BB

	RET

;---
ICM_TMR_DET:
	LAC	PRO_VAR1
	ADHK	1
	SAH	PRO_VAR1
	SBHK	120	
	BS	SGN,ICM_TMR_DET_END
	
	CALL	INIT_DAM_FUNC
	CALL	DAA_ANS_SPK
	CALL	BBEEP
	
	LACK	0X0002
	SAH	PRO_VAR

ICM_TMR_DET_END:
	RET
;-------
ICM_REC_FUL:
	CALL	INIT_DAM_FUNC
	CALL	BBBEEP		;警告语音BBB
	
	RET
ICM_FUL_EVP:
	LACK	0
	SAH	PRO_VAR1
	CALL	INIT_DAM_FUNC
	CALL	LINE_START
	
	RET
;=================================================================
ANS_STATE_EXIT:
	LAC	MSG
	XORL	CVP_STOP		
	BS	ACZ,ICM_STATE_EXIT_END	;CVP_STOP,EXIT播放完毕
	
	RET
ICM_STATE_EXIT_END:		;退出答录状态
	CALL	INIT_DAM_FUNC
	CALL	HOOK_OFF
	CALL	CLR_FUNC	;先空
   	LACL	LOCAL_PRO	;进入本地操作
     	CALL	PUSH_FUNC
	
	LACK	0
	SAH	PRO_VAR
	
	LACL	CMSG_INIT
	CALL	STOR_MSG

	RET
;========================================================================
ANS_STATE_LINE:
	LAC	MSG
	XORL	CREV_DTMF		;CREV_DTMF
	BS	ACZ,ANS_STATE_DTMF
;ANS_STATE_LINE_1:
	LAC	MSG
	XORL	CMSG_TMR		;time 1s
	BS	ACZ,LINE_TMR_DET
;ANS_STATE_LINE_2:
	LAC	MSG
	XORL	CMSG_VOX		;VOX_ON 8s
	BS	ACZ,ICM_VOX_DET
;ANS_STATE_LINE_3:
	LAC	MSG
	XORL	CMSG_CTONE		;CTONE 8s
	BS	ACZ,ICM_CTONE_DET
;ANS_STATE_LINE_4:
	LAC	MSG
	XORL	CMSG_BTONE		;BTONE 8s
	BS	ACZ,ICM_BTONE_DET

	RET
;-------
LINE_TMR_DET:		;for memful/answer only/answer off
	LAC	PRO_VAR1
	ADHK	1
	SAH	PRO_VAR1
	SBHK	3
	BS	SGN,LINE_TMR_DET_END

	LACK	0X0002
	SAH	PRO_VAR
	
	CALL	INIT_DAM_FUNC
	CALL	DAA_ANS_SPK
	CALL	BBEEP	;替换语音BB

LINE_TMR_DET_END:
	RET
	
;-------------------------------------------------------------------------------
;----------------------------------------------------------------------------
;       Function : PSWORD_CHK
;       Password check
;	Input  : ACCH = VALUE(DTMF_VAL)
;       Output : ACCH = 0 - password in ok
;                       1 - password for mailbox 1
;                       2 - password for mailbox 2
;                       3 - password for mailbox 3
;                       0XFF - password fail
;-------------------------------------------------------------------------------
PSWORD_CHK:
        SAH	SYSTMP0
PSWORD_CHK1:
        LAC     PSWORD_TMP
        SFL     4
	OR	SYSTMP0
        SAH     PSWORD_TMP        ; PSWORD_TMP keep the new input digit string
;-------------------------------------------------------------------------------
        LAC     PSWORD_TMP
        XOR     PASSWORD
        ANDL	0X0FFF
        BS      ACZ,PSWORD_IN_OK
;---
        LAC     PSWORD_TMP
        XORL	0XF1F
        ANDL	0X0FFF
        BS      ACZ,PSWORD_MBOX1_OK
;---
        LAC     PSWORD_TMP
        XORL	0XF2F
        ANDL	0X0FFF
        BS      ACZ,PSWORD_MBOX2_OK
;---
        LAC     PSWORD_TMP
        XORL	0XF3F
        ANDL	0X0FFF
        BS      ACZ,PSWORD_MBOX3_OK

PSWORD_NOT_IN:		;the intput not digital or wrong remote access code
        LACL    0XFF
        RET	
PSWORD_IN_OK:
	LACK	0
        RET
PSWORD_MBOX1_OK:
	LACK	1
	RET
PSWORD_MBOX2_OK:
	LACK	2
	RET
PSWORD_MBOX3_OK:
	LACK	3
	RET
;-------------------------------------------------------------------------------
DAA_ANS_SPK:	;(SW1)&(SW3)&(SW7) ==> (LIN->ADC)&(DAC->SPK)&(DAC->LOUT)
	LIPK    6
        OUTL    ((1<<1)|(1<<3)|(1<<7)),SWITCH
        NOP
;---
	LAC	VOI_ATT
	ANDK	0X07
	ADHL	VOL_TAB
	CALL	GetOneConst
	SAH	CODECREG2
	SFL	5		;LOPVOL = SPVOL
	OR	CODECREG2
	SAH	CODECREG2
	OUT	CODECREG2,LOUTSPK
	ADHK	0
	
	RET
;---------------------------------------
DAA_ANS_REC:	;(SW1)&(SW7) ==> (LIN->ADC)&(DAC->SPK)
;---
	LIPK    6
        OUTL    0x0082,SWITCH
        OUTL    ((1<<1)|(1<<7)),SWITCH
	NOP
;---
	IN	SYSTMP0,AGC
	LAC	SYSTMP0
	ANDL	0xF00F
	ORL	0X0997
	SAH	SYSTMP0
	OUT     SYSTMP0,AGC
	ADHK	0
;---
	LAC	VOI_ATT
	ANDK	0X07
	ADHL	VOL_TAB
	CALL	GetOneConst
	SAH	CODECREG2
	SFL	5
	OR	CODECREG2
	SAH	CODECREG2
	OUT	CODECREG2,LOUTSPK
	ADHK	0
	
	RET
DAA_LIN_SPK:	;(SW1)&(SW3) ==> (LIN->ADC)&(DAC->LOUT)
	LIPK    6
        OUTL    ((1<<1)|(1<<3)),SWITCH
        NOP
	OUTL	(0x19)+(0x19<<5)+(0x19<<10),LOUTSPK
	NOP
	IN	SYSTMP0,AGC
	LAC	SYSTMP0
	ANDL	0xF00F
	ORL	0X0999
	SAH	SYSTMP0
	OUT     SYSTMP0,AGC
	ADHK	0
	
	RET
DAA_LIN_REC:	;(SW1)&(SW7) ==> (LIN->ADC)
	LIPK    6

        OUTL    (1<<1),SWITCH

	OUTL	((0x19)+(0x19<<5)+(0x19<<10)),LOUTSPK
	NOP
	IN	SYSTMP0,AGC
	LAC	SYSTMP0
	ANDL	0xF00F
	ORL	0X0999
	SAH	SYSTMP0
	OUT     SYSTMP0,AGC
	ADHK	0
	
	RET
DAA_ROM_MOR:	;(SW0)&(SW4)			
				; MIC ->pre-pga -> ad1-pga -> SW4 -> LOUT
				; LIN -> ad2-pga -> ADC2
	LIPK    6
	OUTK	0x0013,SWITCH
        NOP
	OUTL	0x7fE0,LOUTSPK
	NOP
	;OUTL	0X0BCC,AGC
	OUTL	0X05CC,AGC
	NOP
	
	RET
;-------------------------------------------------------------------------------
.INCLUDE	f_remote.asm

.END

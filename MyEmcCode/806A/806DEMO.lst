     1                     
     2                     /***************************************
     3                                  项目主程序
     4                     功能：
     5                     	程序调用
     6                     	程序分配
     7                     
     8                     ***************************************/
     9                     
    10                     include	"emc806.inc"	; emc806定义文件
     1            C        ; 寄存器定义
     2       0000 C        _IAR	==	0
     3       0001 C        _TCC	==	1
     4       0002 C        _PC	==	2
     5       0003 C        _STATUS	==	3
     6       0004 C        _RSR	==	4
     7       0005 C        _PPSR	==	5
     8       000A C        _FSR	==	10
     9       000F C        _ISR	==	15
    10            C        
    11       0005 C        _P5	==	5
    12       0006 C        _P6	==	6
    13       0007 C        _P7	==	7
    14       0008 C        _P8	==	8
    15       0009 C        _P9	==	9
    16            C        
    17       0005 C        _IOC5	==	5
    18       0006 C        _IOC6	==	6
    19       0007 C        _IOC7	==	7
    20       0008 C        _IOC8	==	8
    21       0009 C        _IOC9	==	9
    22       000A C        _IOCA	==	10
    23       000B C        _IOCB	==	11
    24       000C C        _IOCC	==	12
    25       000D C        _IOCD	==	13
    26       000E C        _IOCE	==	14
    27       000F C        _IOCF	==	15
    28            C        
    29       0000 C        _R0	==	0
    30       0001 C        _R1	==	1
    31       0002 C        _R2	==	2
    32       0003 C        _R3	==	3
    33       0004 C        _R4	==	4
    34       0005 C        _R5	==	5
    35       0006 C        _R6	==	6
    36       0007 C        _R7	==	7
    37       0008 C        _R8	==	8
    38       0009 C        _R9	==	9
    39       000A C        _RA	==	10
    40       000B C        _RB	==	11
    41       000C C        _RC	==	12
    42       000D C        _RD	==	13
    43       000E C        _RE	==	14
    44       000F C        _RF	==	15
    45            C        
    46            C        ; 位定义
    47       0000 C        C	==	0
    48       0001 C        DC	==	1
    49       0002 C        Z	==	2
    50       0003 C        P	==	3
    51       0004 C        T	==	4
    52       0000 C        PS0	==	0
    53       0001 C        PS1	==	1
    54       0002 C        PS2	==	2
    55            C        
    56            C        ; 常数定义
    57       0000 C        NULL	==	0
    58            C        
    59            C        
    60            C        ; 指令定义
    61            C        
    62            C        ; ---------------------------------------
    63            C        ; 寻址指令
    64            C        
    65            C        BANK	MACRO	NUM		; C2
    66            C        	IF	NUM == 0
    67            C        		BC	_RSR,6
    68            C        		BC	_RSR,7
    69            C        	ELSEIF	NUM == 1
    70            C        		BS	_RSR,6
    71            C        		BC	_RSR,7
    72            C        	ELSEIF	NUM == 2
    73            C        		BC	_RSR,6
    74            C        		BS	_RSR,7
    75            C        	ELSEIF	NUM == 3
    76            C        		BS	_RSR,6
    77            C        		BS	_RSR,7
    78            C        	ELSE
    79            C        		MESSAGE "WARRING: DON'T HAVE SPECIFY BANK!"
    80            C        	ENDIF
    81            C        	ENDM
    82            C        
    83            C        CIDBANK	MACRO	NUM
    84            C        	IF	NUM == 0
    85            C        		BC	_RB,0
    86            C        		BC	_RB,2
    87            C        	ELSEIF	NUM == 1
    88            C        		BS	_RB,0
    89            C        		BC	_RB,2
    90            C        	ELSEIF	NUM == 2
    91            C        		BC	_RB,0
    92            C        		BS	_RB,2
    93            C        	ELSEIF	NUM == 3
    94            C        		BS	_RB,0
    95            C        		BS	_RB,2
    96            C        	ELSE
    97            C        		MESSAGE "WARRING: DON'T HAVE SPECIFY BANK!"
    98            C        	ENDIF
    99            C        	ENDM
   100            C        
   101            C        PAGE	MACRO	#ADDR		; C1
   102            C        	IF	ADDR < 0X2000
   103            C        		PAGE	(ADDR/0X400)
   104            C        	ELSE
   105            C        		MESSAGE "OUT OF PROGRAM MEMORY !"
   106            C        	ENDIF
   107            C        	ENDM
   108            C        
   109            C        PAGEIO	MACRO	NUM
   110            C        	IF	NUM == 0
   111            C        		BC	_STATUS,7
   112            C        	ELSEIF	NUM == 1
   113            C        		BS	_STATUS,7
   114            C        	ELSE
   115            C        		MESSAGE	"WARRING: DON'T HAVE SPECIFY PAGE"
   116            C        	ENDIF
   117            C        	ENDM
   118            C        
   119            C        CALL	MACRO	#ADDR		; C1/C3
   120            C        	IF	ADDR < 0X2000
   121            C        	IF	($/0X400) == (ADDR/0X400)
   122            C        		CALL	(ADDR%0X400)
   123            C        	ELSE
   124            C        		LCALL	ADDR
   125            C        	ENDIF
   126            C        	ELSE
   127            C        		MESSAGE	"WARRING: DON'T HAVE SPECIFY PAGE"
   128            C        	ENDIF
   129            C        	ENDM
   130            C        
   131            C        LCALL	MACRO	ADDR		; C3
   132            C        	IF	ADDR < 0X2000
   133            C        		PAGE	#ADDR
   134            C        		CALL	(ADDR%0X400)
   135            C        		PAGE	#$
   136            C        	ELSE
   137            C        		MESSAGE	"WARRING: DON'T HAVE SPECIFY PAGE"
   138            C        	ENDIF
   139            C        	ENDM
   140            C        
   141            C        JMP	MACRO	#ADDR		; C1/C2
   142            C        	IF	ADDR < 0X2000
   143            C        	IF	($/0X400) == (ADDR/0X400)
   144            C        		JMP	(ADDR%0X400)
   145            C        	ELSE
   146            C        		LJMP	ADDR
   147            C        	ENDIF
   148            C        	ELSE
   149            C        		MESSAGE	"WARRING: DON'T HAVE SPECIFY PAGE"
   150            C        	ENDIF
   151            C        	ENDM
   152            C        
   153            C        LJMP	MACRO	ADDR		; C2
   154            C        	IF	ADDR < 0X2000
   155            C        		PAGE	#ADDR
   156            C        		JMP	(ADDR%0X400)
   157            C        	ELSE
   158            C        		MESSAGE	"WARRING: DON'T HAVE SPECIFY PAGE"
   159            C        	ENDIF
   160            C        	ENDM
   161            C        
   162            C        JPZ	MACRO	ADDR		; C2
   163            C        	JBC	_STATUS,Z
   164            C        	JMP	ADDR
   165            C        	ENDM
   166            C        
   167            C        JPNZ	MACRO	ADDR		; C2
   168            C        	JBS	_STATUS,Z
   169            C        	JMP	ADDR
   170            C        	ENDM
   171            C        
   172            C        JPC	MACRO	ADDR		; C2
   173            C        	JBC	_STATUS,C
   174            C        	JMP	ADDR
   175            C        	ENDM
   176            C        
   177            C        JPNC	MACRO	ADDR		; C2
   178            C        	JBS	_STATUS,C
   179            C        	JMP	ADDR
   180            C        	ENDM
   181            C        
   182            C        JPB	MACRO	REG,BIT,ADDR	; C2
   183            C        	JBC	REG,BIT
   184            C        	JMP	ADDR
   185            C        	ENDM
   186            C        
   187            C        JPNB	MACRO	REG,BIT,ADDR	; C2
   188            C        	JBS	REG,BIT
   189            C        	JMP	ADDR
   190            C        	ENDM
   191            C        
   192            C        JPOB	MACRO	IO_REG,BIT,ADDR	; C4
   193            C        	IOR	IO_REG
   194            C        	GA	BIT
   195            C        	JPNZ	ADDR
   196            C        	ENDM
   197            C        
   198            C        JPONB	MACRO	IO_REG,BIT,ADDR	; C4
   199            C        	IOR	IO_REG
   200            C        	GA	BIT
   201            C        	JPZ	ADDR
   202            C        	ENDM
   203            C        
   204            C        JPS	MACRO	REG1,REG2,ADDR	;	if REG1 < REG2, than jump to ADDR
   205            C        	SUBA	REG1,REG2
   206            C        	JPNC	ADDR
   207            C        	ENDM
   208            C        
   209            C        JPNS	MACRO	REG1,REG2,ADDR
   210            C        	SUBA	REG1,REG2
   211            C        	JPC	ADDR
   212            C        	ENDM
   213            C        
   214            C        
   215            C        ; --------------------------------------
   216            C        ; 位操作指令
   217            C        
   218            C        SA	MACRO	BIT		; C1
   219            C        	IF	BIT == 0
   220            C        		OR	A,@0X1
   221            C        	ELSEIF	BIT == 1
   222            C        		OR	A,@0X2
   223            C        	ELSEIF	BIT == 2
   224            C        		OR	A,@0X4
   225            C        	ELSEIF	BIT == 3
   226            C        		OR	A,@0X8
   227            C        	ELSEIF	BIT == 4
   228            C        		OR	A,@0X10
   229            C        	ELSEIF	BIT == 5
   230            C        		OR	A,@0X20
   231            C        	ELSEIF	BIT == 6
   232            C        		OR	A,@0X40
   233            C        	ELSEIF	BIT == 7
   234            C        		OR	A,@0X80
   235            C        	ENDIF
   236            C        	ENDM
   237            C        
   238            C        CA	MACRO	BIT		; C1
   239            C        	IF	BIT == 0
   240            C        		AND	A,@0XFE
   241            C        	ELSEIF	BIT == 1
   242            C        		AND	A,@0XFD
   243            C        	ELSEIF	BIT == 2
   244            C        		AND	A,@0XFB
   245            C        	ELSEIF	BIT == 3
   246            C        		AND	A,@0XF7
   247            C        	ELSEIF	BIT == 4
   248            C        		AND	A,@0XEF
   249            C        	ELSEIF	BIT == 5
   250            C        		AND	A,@0XDF
   251            C        	ELSEIF	BIT == 6
   252            C        		AND	A,@0XBF
   253            C        	ELSEIF	BIT == 7
   254            C        		AND	A,@0X7F
   255            C        	ENDIF
   256            C        	ENDM
   257            C        
   258            C        GA	MACRO	BIT		; C1
   259            C        	IF	BIT == 0
   260            C        		AND	A,@0X01
   261            C        	ELSEIF	BIT == 1
   262            C        		AND	A,@0X02
   263            C        	ELSEIF	BIT == 2
   264            C        		AND	A,@0X04
   265            C        	ELSEIF	BIT == 3
   266            C        		AND	A,@0X08
   267            C        	ELSEIF	BIT == 4
   268            C        		AND	A,@0X10
   269            C        	ELSEIF	BIT == 5
   270            C        		AND	A,@0X20
   271            C        	ELSEIF	BIT == 6
   272            C        		AND	A,@0X40
   273            C        	ELSEIF	BIT == 7
   274            C        		AND	A,@0X80
   275            C        	ENDIF
   276            C        	ENDM
   277            C        
   278            C        SRAM	MACRO	REG,BIT		; C1
   279            C        	;MOV	A,REG
   280            C        	;SA	BIT
   281            C        	;MOV	REG,A
   282            C        	BS	REG,BIT
   283            C        	ENDM
   284            C        
   285            C        CRAM	MACRO	REG,BIT		; C1
   286            C        	;MOV	A,REG
   287            C        	;CA	BIT
   288            C        	;MOV	REG,A
   289            C        	BC	REG,BIT
   290            C        	ENDM
   291            C        
   292            C        GRAM	MACRO	REG,BIT		; C2
   293            C        	MOV	A,REG
   294            C        	GA	BIT
   295            C        	ENDM
   296            C        
   297            C        BINVRAM	MACRO	REG,BIT		; C5
   298            C        	JPB	REG,BIT,$+3
   299            C        	BS	REG,BIT
   300            C        	JMP	$+2
   301            C        	BC	REG,BIT
   302            C        	ENDM
   303            C        
   304            C        SIO	MACRO	IO_REG,BIT	; C3
   305            C        	IOR	IO_REG
   306            C        	SA	BIT
   307            C        	IOW	IO_REG
   308            C        	ENDM
   309            C        
   310            C        CIO	MACRO	IO_REG,BIT	; C3
   311            C        	IOR	IO_REG
   312            C        	CA	BIT
   313            C        	IOW	IO_REG
   314            C        	ENDM
   315            C        
   316            C        GIO	MACRO	IO_REG,BIT	; C2
   317            C        	IOR	IO_REG
   318            C        	GA	BIT
   319            C        	ENDM
   320            C        
   321            C        BINVIO	MACRO	IO_REG,BIT
   322            C        	GIO	IO_REG,BIT
   323            C        	JPNZ	$+5
   324            C        	SIO	IO_REG,BIT
   325            C        	JMP	$+4
   326            C        	CIO	IO_REG,BIT
   327            C        	ENDM
   328            C        
   329            C        CLRC	MACRO
   330            C        	BC	_STATUS,C
   331            C        	ENDM
   332            C        
   333            C        SETC	MACRO
   334            C        	BS	_STATUS,C
   335            C        	ENDM
   336            C        
   337            C        CLRZ	MACRO
   338            C        	BC	_STATUS,Z
   339            C        	ENDM
   340            C        
   341            C        SETZ	MACRO
   342            C        	BS	_STATUS,Z
   343            C        	ENDM
   344            C        
   345            C        ; --------------------------------------
   346            C        ; 数据移动指令
   347            C        
   348            C        MOV	MACRO	REG1,@VALUE	; C2
   349            C        	MOV	A,@VALUE
   350            C        	MOV	REG1,A
   351            C        	ENDM
   352            C        
   353            C        MOV	MACRO	REG1,REG2	; C2
   354            C        	IF	REG1 != REG2
   355            C        	MOV	A,REG2
   356            C        	MOV	REG1,A
   357            C        	ENDIF
   358            C        	ENDM
   359            C        
   360            C        IOR	MACRO	REG,IO_REG	; C2
   361            C        	IOR	IO_REG
   362            C        	MOV	REG,A
   363            C        	ENDM
   364            C        
   365            C        IOW	MACRO	IO_REG,@VALUE	; C2
   366            C        	MOV	A,@VALUE
   367            C        	IOW	IO_REG
   368            C        	ENDM
   369            C        
   370            C        IOW	MACRO	IO_REG,REG	; C2
   371            C        	MOV	A,REG
   372            C        	IOW	IO_REG
   373            C        	ENDM
   374            C        	
   375            C        
   376            C        ; --------------------------------------
   377            C        ; 算术运算指令
   378            C        
   379            C        DECZ	MACRO	REG		; 自减至0停止
   380            C        	MOV	A,REG
   381            C        	JPZ	$+2
   382            C        	DEC	REG
   383            C        	ENDM
   384            C        
   385            C        ADD	MACRO	REG1,@VALUE	; C2
   386            C        	MOV	A,@VALUE
   387            C        	ADD	REG1,A
   388            C        	ENDM
   389            C        
   390            C        ADD	MACRO	REG1,REG2	; C2
   391            C        	MOV	A,REG2
   392            C        	ADD	REG1,A
   393            C        	ENDM
   394            C        
   395            C        ADDA	MACRO	REG1,@VALUE	; C2
   396            C        	MOV	A,@VALUE
   397            C        	ADD	A,REG1
   398            C        	ENDM
   399            C        
   400            C        ADDA	MACRO	REG1,REG2	; C2
   401            C        	MOV	A,REG2
   402            C        	ADD	A,REG1
   403            C        	ENDM
   404            C        
   405            C        SUB	MACRO	REG1,@VALUE	; C2
   406            C        	MOV	A,@VALUE
   407            C        	SUB	REG1,A
   408            C        	ENDM
   409            C        
   410            C        SUB	MACRO	REG1,REG2	; C2
   411            C        	MOV	A,REG2
   412            C        	SUB	REG1,A
   413            C        	ENDM
   414            C        
   415            C        SUBA	MACRO	REG1,@VALUE	; C2
   416            C        	MOV	A,@VALUE
   417            C        	SUB	A,REG1
   418            C        	ENDM
   419            C        
   420            C        SUBA	MACRO	@VALUE,REG1	; C2
   421            C        	MOV	A,REG1
   422            C        	SUB	A,@VALUE
   423            C        	ENDM
   424            C        
   425            C        SUBA	MACRO	REG1,REG2	; C2
   426            C        	MOV	A,REG2
   427            C        	SUB	A,REG1
   428            C        	ENDM
   429            C        
   430            C        FADD	MACRO	A,REG		; C3
   431            C        	IF	REG < 0x40
   432            C        		BANK	0
   433            C        		ADD	A,REG
   434            C        	ELSEIF	REG < 0X60
   435            C        		BANK	1
   436            C        		ADD	A,REG - 0X20
   437            C        	ELSEIF	REG < 0X80
   438            C        		BANK	2
   439            C        		ADD	A,REG - 0X40
   440            C        	ELSEIF	REG < 0XA0
   441            C        		BANK	3
   442            C        		ADD	A,REG - 0X60
   443            C        	ELSE
   444            C        		MESSAGE "WARRING: OUT OF BANK !"
   445            C        	ENDIF
   446            C        	ENDM
   447            C        
   448            C        FADD	MACRO	REG,A		;C3
   449            C        	IF	REG < 0x40
   450            C        		BANK	0
   451            C        		ADD	REG,A
   452            C        	ELSEIF	REG < 0X60
   453            C        		BANK	1
   454            C        		ADD	REG - 0X20,A
   455            C        	ELSEIF	REG < 0X80
   456            C        		BANK	2
   457            C        		ADD	REG - 0X40,A
   458            C        	ELSEIF	REG < 0XA0
   459            C        		BANK	3
   460            C        		ADD	REG - 0X60,A
   461            C        	ELSE
   462            C        		MESSAGE "WARRING: OUT OF BANK !"
   463            C        	ENDIF
   464            C        	ENDM
   465            C        
   466            C        FADD	MACRO	REG1,@VALUE	; C4
   467            C        	IF	REG1 < 0x40
   468            C        		BANK	0
   469            C        		MOV	A,@VALUE
   470            C        		ADD	REG1,A
   471            C        	ELSEIF	REG1 < 0X60
   472            C        		BANK	1
   473            C        		MOV	A,@VALUE
   474            C        		ADD	REG1 - 0X20,A
   475            C        	ELSEIF	REG1 < 0X80
   476            C        		BANK	2
   477            C        		MOV	A,@VALUE
   478            C        		ADD	REG1 - 0X40,A
   479            C        	ELSEIF	REG1 < 0XA0
   480            C        		BANK	3
   481            C        		MOV	A,@VALUE
   482            C        		ADD	REG1 - 0X60,A
   483            C        	ELSE
   484            C        		MESSAGE "WARRING: OUT OF BANK !"
   485            C        	ENDIF
   486            C        	ENDM
   487            C        
   488            C        FADD	MACRO	REG1,REG2	; C6
   489            C        	IF	REG2 < 0x40
   490            C        		BANK	0
   491            C        		MOV	A, REG2
   492            C        		FADD	REG1,A
   493            C        	ELSEIF	REG2 < 0X60
   494            C        		BANK	1
   495            C        		MOV	A, REG2 - 0X20
   496            C        		FADD 	REG1,A
   497            C        	ELSEIF	REG2 < 0X80
   498            C        		BANK	2
   499            C        		MOV	A, REG2 - 0X40
   500            C        		FADD	REG1,A
   501            C        	ELSEIF	REG2 < 0XA0
   502            C        		BANK	3
   503            C        		MOV	A, REG2 - 0X60
   504            C        		FADD	REG1,A
   505            C        	ELSE
   506            C        		MESSAGE "WARRING: OUT OF BANK !"
   507            C        	ENDIF
   508            C        	ENDM
   509            C        
   510            C        FADDA	MACRO	REG1,@VALUE	; C4
   511            C        	IF	REG1 < 0x40
   512            C        		BANK	0
   513            C        		MOV	A,@VALUE
   514            C        		ADD	A,REG1
   515            C        	ELSEIF	REG1 < 0X60
   516            C        		BANK	1
   517            C        		MOV	A,@VALUE
   518            C        		ADD	A,REG1 - 0X20
   519            C        	ELSEIF	REG1 < 0X80
   520            C        		BANK	2
   521            C        		MOV	A,@VALUE
   522            C        		ADD	A,REG1 - 0X40
   523            C        	ELSEIF	REG1 < 0XA0
   524            C        		BANK	3
   525            C        		MOV	A,@VALUE
   526            C        		ADD	A,REG1 - 0X60
   527            C        	ELSE
   528            C        		MESSAGE "WARRING: OUT OF BANK !"
   529            C        	ENDIF
   530            C        	ENDM
   531            C        
   532            C        FADDA	MACRO	REG1,REG2	; C6
   533            C        	IF	REG2 < 0x40
   534            C        		BANK	0
   535            C        		MOV	A, REG2
   536            C        		FADD	A,REG1
   537            C        	ELSEIF	REG2 < 0X60
   538            C        		BANK	1
   539            C        		MOV	A, REG2 - 0X20
   540            C        		FADD 	A,REG1
   541            C        	ELSEIF	REG2 < 0X80
   542            C        		BANK	2
   543            C        		MOV	A, REG2 - 0X40
   544            C        		FADD	A,REG1
   545            C        	ELSEIF	REG2 < 0XA0
   546            C        		BANK	3
   547            C        		MOV	A, REG2 - 0X60
   548            C        		FADD	A,REG1
   549            C        	ELSE
   550            C        		MESSAGE "WARRING: OUT OF BANK !"
   551            C        	ENDIF
   552            C        	ENDM
   553            C        
   554            C        FSUB	MACRO	A,REG		; C3
   555            C        	IF	REG < 0x40
   556            C        		BANK	0
   557            C        		SUB	A,REG
   558            C        	ELSEIF	REG < 0X60
   559            C        		BANK	1
   560            C        		SUB	A,REG - 0X20
   561            C        	ELSEIF	REG < 0X80
   562            C        		BANK	2
   563            C        		SUB	A,REG - 0X40
   564            C        	ELSEIF	REG < 0XA0
   565            C        		BANK	3
   566            C        		SUB	A,REG - 0X60
   567            C        	ELSE
   568            C        		MESSAGE "WARRING: OUT OF BANK !"
   569            C        	ENDIF
   570            C        	ENDM
   571            C        
   572            C        FSUB	MACRO	REG,A		;C3
   573            C        	IF	REG < 0x40
   574            C        		BANK	0
   575            C        		SUB	REG,A
   576            C        	ELSEIF	REG < 0X60
   577            C        		BANK	1
   578            C        		SUB	REG - 0X20,A
   579            C        	ELSEIF	REG < 0X80
   580            C        		BANK	2
   581            C        		SUB	REG - 0X40,A
   582            C        	ELSEIF	REG < 0XA0
   583            C        		BANK	3
   584            C        		SUB	REG - 0X60,A
   585            C        	ELSE
   586            C        		MESSAGE "WARRING: OUT OF BANK !"
   587            C        	ENDIF
   588            C        	ENDM
   589            C        
   590            C        FSUB	MACRO	REG1,@VALUE	; C4
   591            C        	IF	REG1 < 0x40
   592            C        		BANK	0
   593            C        		MOV	A,@VALUE
   594            C        		SUB	REG1,A
   595            C        	ELSEIF	REG1 < 0X60
   596            C        		BANK	1
   597            C        		MOV	A,@VALUE
   598            C        		SUB	REG1 - 0X20,A
   599            C        	ELSEIF	REG1 < 0X80
   600            C        		BANK	2
   601            C        		MOV	A,@VALUE
   602            C        		SUB	REG1 - 0X40,A
   603            C        	ELSEIF	REG1 < 0XA0
   604            C        		BANK	3
   605            C        		MOV	A,@VALUE
   606            C        		SUB	REG1 - 0X60,A
   607            C        	ELSE
   608            C        		MESSAGE "WARRING: OUT OF BANK !"
   609            C        	ENDIF
   610            C        	ENDM
   611            C        
   612            C        FSUB	MACRO	REG1,REG2	; C6
   613            C        	IF	REG2 < 0x40
   614            C        		BANK	0
   615            C        		MOV	A, REG2
   616            C        		FSUB	REG1,A
   617            C        	ELSEIF	REG2 < 0X60
   618            C        		BANK	1
   619            C        		MOV	A, REG2 - 0X20
   620            C        		FSUB 	REG1,A
   621            C        	ELSEIF	REG2 < 0X80
   622            C        		BANK	2
   623            C        		MOV	A, REG2 - 0X40
   624            C        		FSUB	REG1,A
   625            C        	ELSEIF	REG2 < 0XA0
   626            C        		BANK	3
   627            C        		MOV	A, REG2 - 0X60
   628            C        		FSUB	REG1,A
   629            C        	ELSE
   630            C        		MESSAGE "WARRING: OUT OF BANK !"
   631            C        	ENDIF
   632            C        	ENDM
   633            C        
   634            C        FSUBA	MACRO	REG1,@VALUE	; C4
   635            C        	IF	REG1 < 0x40
   636            C        		BANK	0
   637            C        		MOV	A,@VALUE
   638            C        		SUB	A,REG1
   639            C        	ELSEIF	REG1 < 0X60
   640            C        		BANK	1
   641            C        		MOV	A,@VALUE
   642            C        		SUB	A,REG1 - 0X20
   643            C        	ELSEIF	REG1 < 0X80
   644            C        		BANK	2
   645            C        		MOV	A,@VALUE
   646            C        		SUB	A,REG1 - 0X40
   647            C        	ELSEIF	REG1 < 0XA0
   648            C        		BANK	3
   649            C        		MOV	A,@VALUE
   650            C        		SUB	A,REG1 - 0X60
   651            C        	ELSE
   652            C        		MESSAGE "WARRING: OUT OF BANK !"
   653            C        	ENDIF
   654            C        	ENDM
   655            C        
   656            C        FSUBA	MACRO	REG1,REG2	; C6
   657            C        	IF	REG2 < 0x40
   658            C        		BANK	0
   659            C        		MOV	A, REG2
   660            C        		FSUB	A,REG1
   661            C        	ELSEIF	REG2 < 0X60
   662            C        		BANK	1
   663            C        		MOV	A, REG2 - 0X20
   664            C        		FSUB 	A,REG1
   665            C        	ELSEIF	REG2 < 0X80
   666            C        		BANK	2
   667            C        		MOV	A, REG2 - 0X40
   668            C        		FSUB	A,REG1
   669            C        	ELSEIF	REG2 < 0XA0
   670            C        		BANK	3
   671            C        		MOV	A, REG2 - 0X60
   672            C        		FSUB	A,REG1
   673            C        	ELSE
   674            C        		MESSAGE "WARRING: OUT OF BANK !"
   675            C        	ENDIF
   676            C        	ENDM
   677            C        
   678            C        ; --------------------------------------
   679            C        ; 逻辑运算指令
   680            C        
   681            C        AND	MACRO	REG1,@VALUE	; C2
   682            C        	MOV	A,@VALUE
   683            C        	AND	REG1,A
   684            C        	ENDM
   685            C        
   686            C        AND	MACRO	REG1,REG2	; C2
   687            C        	MOV	A,REG2
   688            C        	AND	REG1,A
   689            C        	ENDM
   690            C        
   691            C        ANDA	MACRO	REG1,@VALUE	; C2
   692            C        	MOV	A,@VALUE
   693            C        	AND	A,REG1
   694            C        	ENDM
   695            C        
   696            C        ANDA	MACRO	REG1,REG2	; C2
   697            C        	MOV	A,REG2
   698            C        	AND	A,REG1
   699            C        	ENDM
   700            C        
   701            C        OR	MACRO	REG1,@VALUE	; C2
   702            C        	MOV	A,@VALUE
   703            C        	OR	REG1,A
   704            C        	ENDM
   705            C        
   706            C        OR	MACRO	REG1,REG2	; C2
   707            C        	MOV	A,REG2
   708            C        	OR	REG1,A
   709            C        	ENDM
   710            C        
   711            C        ORA	MACRO	REG1,@VALUE	; C2
   712            C        	MOV	A,@VALUE
   713            C        	OR	A,REG1
   714            C        	ENDM
   715            C        
   716            C        ORA	MACRO	REG1,REG2	; C2
   717            C        	MOV	A,REG2
   718            C        	OR	A,REG1
   719            C        	ENDM
   720            C        
   721            C        XOR	MACRO	REG1,@VALUE	; C2
   722            C        	MOV	A,@VALUE
   723            C        	XOR	REG1,A
   724            C        	ENDM
   725            C        
   726            C        XOR	MACRO	REG1,REG2	; C2
   727            C        	MOV	A,REG2
   728            C        	XOR	REG1,A
   729            C        	ENDM
   730            C        
   731            C        XORA	MACRO	REG1,@VALUE	; C2
   732            C        	MOV	A,@VALUE
   733            C        	XOR	A,REG1
   734            C        	ENDM
   735            C        
   736            C        XORA	MACRO	REG1,REG2	; C2
   737            C        	MOV	A,REG2
   738            C        	XOR	A,REG1
   739            C        	ENDM
   740            C        
   741            C        FAND	MACRO	A,REG		; C3
   742            C        	IF	REG < 0x40
   743            C        		BANK	0
   744            C        		AND	A,REG
   745            C        	ELSEIF	REG < 0X60
   746            C        		BANK	1
   747            C        		AND	A,REG - 0X20
   748            C        	ELSEIF	REG < 0X80
   749            C        		BANK	2
   750            C        		AND	A,REG - 0X40
   751            C        	ELSEIF	REG < 0XA0
   752            C        		BANK	3
   753            C        		AND	A,REG - 0X60
   754            C        	ELSE
   755            C        		MESSAGE "WARRING: OUT OF BANK !"
   756            C        	ENDIF
   757            C        	ENDM
   758            C        
   759            C        FAND	MACRO	REG,A		;C3
   760            C        	IF	REG < 0x40
   761            C        		BANK	0
   762            C        		AND	REG,A
   763            C        	ELSEIF	REG < 0X60
   764            C        		BANK	1
   765            C        		AND	REG - 0X20,A
   766            C        	ELSEIF	REG < 0X80
   767            C        		BANK	2
   768            C        		AND	REG - 0X40,A
   769            C        	ELSEIF	REG < 0XA0
   770            C        		BANK	3
   771            C        		AND	REG - 0X60,A
   772            C        	ELSE
   773            C        		MESSAGE "WARRING: OUT OF BANK !"
   774            C        	ENDIF
   775            C        	ENDM
   776            C        
   777            C        FAND	MACRO	REG1,@VALUE	; C4
   778            C        	IF	REG1 < 0x40
   779            C        		BANK	0
   780            C        		MOV	A,@VALUE
   781            C        		AND	REG1,A
   782            C        	ELSEIF	REG1 < 0X60
   783            C        		BANK	1
   784            C        		MOV	A,@VALUE
   785            C        		AND	REG1 - 0X20,A
   786            C        	ELSEIF	REG1 < 0X80
   787            C        		BANK	2
   788            C        		MOV	A,@VALUE
   789            C        		AND	REG1 - 0X40,A
   790            C        	ELSEIF	REG1 < 0XA0
   791            C        		BANK	3
   792            C        		MOV	A,@VALUE
   793            C        		AND	REG1 - 0X60,A
   794            C        	ELSE
   795            C        		MESSAGE "WARRING: OUT OF BANK !"
   796            C        	ENDIF
   797            C        	ENDM
   798            C        
   799            C        FAND	MACRO	REG1,REG2	; C6
   800            C        	IF	REG2 < 0x40
   801            C        		BANK	0
   802            C        		MOV	A, REG2
   803            C        		FAND	REG1,A
   804            C        	ELSEIF	REG2 < 0X60
   805            C        		BANK	1
   806            C        		MOV	A, REG2 - 0X20
   807            C        		FAND 	REG1,A
   808            C        	ELSEIF	REG2 < 0X80
   809            C        		BANK	2
   810            C        		MOV	A, REG2 - 0X40
   811            C        		FAND	REG1,A
   812            C        	ELSEIF	REG2 < 0XA0
   813            C        		BANK	3
   814            C        		MOV	A, REG2 - 0X60
   815            C        		FAND	REG1,A
   816            C        	ELSE
   817            C        		MESSAGE "WARRING: OUT OF BANK !"
   818            C        	ENDIF
   819            C        	ENDM
   820            C        
   821            C        FANDA	MACRO	REG1,@VALUE	; C4
   822            C        	IF	REG1 < 0x40
   823            C        		BANK	0
   824            C        		MOV	A,@VALUE
   825            C        		AND	A,REG1
   826            C        	ELSEIF	REG1 < 0X60
   827            C        		BANK	1
   828            C        		MOV	A,@VALUE
   829            C        		AND	A,REG1 - 0X20
   830            C        	ELSEIF	REG1 < 0X80
   831            C        		BANK	2
   832            C        		MOV	A,@VALUE
   833            C        		AND	A,REG1 - 0X40
   834            C        	ELSEIF	REG1 < 0XA0
   835            C        		BANK	3
   836            C        		MOV	A,@VALUE
   837            C        		AND	A,REG1 - 0X60
   838            C        	ELSE
   839            C        		MESSAGE "WARRING: OUT OF BANK !"
   840            C        	ENDIF
   841            C        	ENDM
   842            C        
   843            C        FANDA	MACRO	REG1,REG2	; C6
   844            C        	IF	REG2 < 0x40
   845            C        		BANK	0
   846            C        		MOV	A, REG2
   847            C        		FAND	A,REG1
   848            C        	ELSEIF	REG2 < 0X60
   849            C        		BANK	1
   850            C        		MOV	A, REG2 - 0X20
   851            C        		FAND 	A,REG1
   852            C        	ELSEIF	REG2 < 0X80
   853            C        		BANK	2
   854            C        		MOV	A, REG2 - 0X40
   855            C        		FAND	A,REG1
   856            C        	ELSEIF	REG2 < 0XA0
   857            C        		BANK	3
   858            C        		MOV	A, REG2 - 0X60
   859            C        		FAND	A,REG1
   860            C        	ELSE
   861            C        		MESSAGE "WARRING: OUT OF BANK !"
   862            C        	ENDIF
   863            C        	ENDM
   864            C        
   865            C        FOR	MACRO	A,REG		; C3
   866            C        	IF	REG < 0x40
   867            C        		BANK	0
   868            C        		OR	A,REG
   869            C        	ELSEIF	REG < 0X60
   870            C        		BANK	1
   871            C        		OR	A,REG - 0X20
   872            C        	ELSEIF	REG < 0X80
   873            C        		BANK	2
   874            C        		OR	A,REG - 0X40
   875            C        	ELSEIF	REG < 0XA0
   876            C        		BANK	3
   877            C        		OR	A,REG - 0X60
   878            C        	ELSE
   879            C        		MESSAGE "WARRING: OUT OF BANK !"
   880            C        	ENDIF
   881            C        	ENDM
   882            C        
   883            C        FOR	MACRO	REG,A		;C3
   884            C        	IF	REG < 0x40
   885            C        		BANK	0
   886            C        		OR	REG,A
   887            C        	ELSEIF	REG < 0X60
   888            C        		BANK	1
   889            C        		OR	REG - 0X20,A
   890            C        	ELSEIF	REG < 0X80
   891            C        		BANK	2
   892            C        		OR	REG - 0X40,A
   893            C        	ELSEIF	REG < 0XA0
   894            C        		BANK	3
   895            C        		OR	REG - 0X60,A
   896            C        	ELSE
   897            C        		MESSAGE "WARRING: OUT OF BANK !"
   898            C        	ENDIF
   899            C        	ENDM
   900            C        
   901            C        FOR	MACRO	REG1,@VALUE	; C4
   902            C        	IF	REG1 < 0x40
   903            C        		BANK	0
   904            C        		MOV	A,@VALUE
   905            C        		OR	REG1,A
   906            C        	ELSEIF	REG1 < 0X60
   907            C        		BANK	1
   908            C        		MOV	A,@VALUE
   909            C        		OR	REG1 - 0X20,A
   910            C        	ELSEIF	REG1 < 0X80
   911            C        		BANK	2
   912            C        		MOV	A,@VALUE
   913            C        		OR	REG1 - 0X40,A
   914            C        	ELSEIF	REG1 < 0XA0
   915            C        		BANK	3
   916            C        		MOV	A,@VALUE
   917            C        		OR	REG1 - 0X60,A
   918            C        	ELSE
   919            C        		MESSAGE "WARRING: OUT OF BANK !"
   920            C        	ENDIF
   921            C        	ENDM
   922            C        
   923            C        FOR	MACRO	REG1,REG2	; C6
   924            C        	IF	REG2 < 0x40
   925            C        		BANK	0
   926            C        		MOV	A, REG2
   927            C        		FOR	REG1,A
   928            C        	ELSEIF	REG2 < 0X60
   929            C        		BANK	1
   930            C        		MOV	A, REG2 - 0X20
   931            C        		FOR 	REG1,A
   932            C        	ELSEIF	REG2 < 0X80
   933            C        		BANK	2
   934            C        		MOV	A, REG2 - 0X40
   935            C        		FOR	REG1,A
   936            C        	ELSEIF	REG2 < 0XA0
   937            C        		BANK	3
   938            C        		MOV	A, REG2 - 0X60
   939            C        		FOR	REG1,A
   940            C        	ELSE
   941            C        		MESSAGE "WARRING: OUT OF BANK !"
   942            C        	ENDIF
   943            C        	ENDM
   944            C        
   945            C        FORA	MACRO	REG1,@VALUE	; C4
   946            C        	IF	REG1 < 0x40
   947            C        		BANK	0
   948            C        		MOV	A,@VALUE
   949            C        		OR	A,REG1
   950            C        	ELSEIF	REG1 < 0X60
   951            C        		BANK	1
   952            C        		MOV	A,@VALUE
   953            C        		OR	A,REG1 - 0X20
   954            C        	ELSEIF	REG1 < 0X80
   955            C        		BANK	2
   956            C        		MOV	A,@VALUE
   957            C        		OR	A,REG1 - 0X40
   958            C        	ELSEIF	REG1 < 0XA0
   959            C        		BANK	3
   960            C        		MOV	A,@VALUE
   961            C        		OR	A,REG1 - 0X60
   962            C        	ELSE
   963            C        		MESSAGE "WARRING: OUT OF BANK !"
   964            C        	ENDIF
   965            C        	ENDM
   966            C        
   967            C        FORA	MACRO	REG1,REG2	; C6
   968            C        	IF	REG2 < 0x40
   969            C        		BANK	0
   970            C        		MOV	A, REG2
   971            C        		FOR	A,REG1
   972            C        	ELSEIF	REG2 < 0X60
   973            C        		BANK	1
   974            C        		MOV	A, REG2 - 0X20
   975            C        		FOR 	A,REG1
   976            C        	ELSEIF	REG2 < 0X80
   977            C        		BANK	2
   978            C        		MOV	A, REG2 - 0X40
   979            C        		FOR	A,REG1
   980            C        	ELSEIF	REG2 < 0XA0
   981            C        		BANK	3
   982            C        		MOV	A, REG2 - 0X60
   983            C        		FOR	A,REG1
   984            C        	ELSE
   985            C        		MESSAGE "WARRING: OUT OF BANK !"
   986            C        	ENDIF
   987            C        	ENDM
   988            C        
   989            C        FXOR	MACRO	A,REG		; C3
   990            C        	IF	REG < 0x40
   991            C        		BANK	0
   992            C        		XOR	A,REG
   993            C        	ELSEIF	REG < 0X60
   994            C        		BANK	1
   995            C        		XOR	A,REG - 0X20
   996            C        	ELSEIF	REG < 0X80
   997            C        		BANK	2
   998            C        		XOR	A,REG - 0X40
   999            C        	ELSEIF	REG < 0XA0
  1000            C        		BANK	3
  1001            C        		XOR	A,REG - 0X60
  1002            C        	ELSE
  1003            C        		MESSAGE "WARRING: OUT OF BANK !"
  1004            C        	ENDIF
  1005            C        	ENDM
  1006            C        
  1007            C        FXOR	MACRO	REG,A		;C3
  1008            C        	IF	REG < 0x40
  1009            C        		BANK	0
  1010            C        		XOR	REG,A
  1011            C        	ELSEIF	REG < 0X60
  1012            C        		BANK	1
  1013            C        		XOR	REG - 0X20,A
  1014            C        	ELSEIF	REG < 0X80
  1015            C        		BANK	2
  1016            C        		XOR	REG - 0X40,A
  1017            C        	ELSEIF	REG < 0XA0
  1018            C        		BANK	3
  1019            C        		XOR	REG - 0X60,A
  1020            C        	ELSE
  1021            C        		MESSAGE "WARRING: OUT OF BANK !"
  1022            C        	ENDIF
  1023            C        	ENDM
  1024            C        
  1025            C        FXOR	MACRO	REG1,@VALUE	; C4
  1026            C        	IF	REG1 < 0x40
  1027            C        		BANK	0
  1028            C        		MOV	A,@VALUE
  1029            C        		XOR	REG1,A
  1030            C        	ELSEIF	REG1 < 0X60
  1031            C        		BANK	1
  1032            C        		MOV	A,@VALUE
  1033            C        		XOR	REG1 - 0X20,A
  1034            C        	ELSEIF	REG1 < 0X80
  1035            C        		BANK	2
  1036            C        		MOV	A,@VALUE
  1037            C        		XOR	REG1 - 0X40,A
  1038            C        	ELSEIF	REG1 < 0XA0
  1039            C        		BANK	3
  1040            C        		MOV	A,@VALUE
  1041            C        		XOR	REG1 - 0X60,A
  1042            C        	ELSE
  1043            C        		MESSAGE "WARRING: OUT OF BANK !"
  1044            C        	ENDIF
  1045            C        	ENDM
  1046            C        
  1047            C        FXOR	MACRO	REG1,REG2	; C6
  1048            C        	IF	REG2 < 0x40
  1049            C        		BANK	0
  1050            C        		MOV	A, REG2
  1051            C        		FXOR	REG1,A
  1052            C        	ELSEIF	REG2 < 0X60
  1053            C        		BANK	1
  1054            C        		MOV	A, REG2 - 0X20
  1055            C        		FXOR 	REG1,A
  1056            C        	ELSEIF	REG2 < 0X80
  1057            C        		BANK	2
  1058            C        		MOV	A, REG2 - 0X40
  1059            C        		FXOR	REG1,A
  1060            C        	ELSEIF	REG2 < 0XA0
  1061            C        		BANK	3
  1062            C        		MOV	A, REG2 - 0X60
  1063            C        		FXOR	REG1,A
  1064            C        	ELSE
  1065            C        		MESSAGE "WARRING: OUT OF BANK !"
  1066            C        	ENDIF
  1067            C        	ENDM
  1068            C        
  1069            C        FXORA	MACRO	REG1,@VALUE	; C4
  1070            C        	IF	REG1 < 0x40
  1071            C        		BANK	0
  1072            C        		MOV	A,@VALUE
  1073            C        		XOR	A,REG1
  1074            C        	ELSEIF	REG1 < 0X60
  1075            C        		BANK	1
  1076            C        		MOV	A,@VALUE
  1077            C        		XOR	A,REG1 - 0X20
  1078            C        	ELSEIF	REG1 < 0X80
  1079            C        		BANK	2
  1080            C        		MOV	A,@VALUE
  1081            C        		XOR	A,REG1 - 0X40
  1082            C        	ELSEIF	REG1 < 0XA0
  1083            C        		BANK	3
  1084            C        		MOV	A,@VALUE
  1085            C        		XOR	A,REG1 - 0X60
  1086            C        	ELSE
  1087            C        		MESSAGE "WARRING: OUT OF BANK !"
  1088            C        	ENDIF
  1089            C        	ENDM
  1090            C        
  1091            C        FXORA	MACRO	REG1,REG2	; C6
  1092            C        	IF	REG2 < 0x40
  1093            C        		BANK	0
  1094            C        		MOV	A, REG2
  1095            C        		FXOR	A,REG1
  1096            C        	ELSEIF	REG2 < 0X60
  1097            C        		BANK	1
  1098            C        		MOV	A, REG2 - 0X20
  1099            C        		FXOR 	A,REG1
  1100            C        	ELSEIF	REG2 < 0X80
  1101            C        		BANK	2
  1102            C        		MOV	A, REG2 - 0X40
  1103            C        		FXOR	A,REG1
  1104            C        	ELSEIF	REG2 < 0XA0
  1105            C        		BANK	3
  1106            C        		MOV	A, REG2 - 0X60
  1107            C        		FXOR	A,REG1
  1108            C        	ELSE
  1109            C        		MESSAGE "WARRING: OUT OF BANK !"
  1110            C        	ENDIF
  1111            C        	ENDM
  1112            C        
  1113            C        
    11                     include	"CONST.inc"
     1            C        
     2            C        ;第一个字母C大写;;;;
     3            C        ;---KEY---
     4       0029 C        	Ckey_0		equ	0x29
     5       0008 C        	Ckey_1		equ	0x08
     6       0010 C        	Ckey_2		equ	0x10
     7       0018 C        	Ckey_3		equ	0x18
     8       0020 C        	Ckey_4		equ	0x20
     9       0028 C        	Ckey_5		equ	0x28
    10       0030 C        	Ckey_6		equ	0x30
    11       0001 C        	Ckey_7		equ	0x01
    12       0011 C        	Ckey_8		equ	0x11
    13       0019 C        	Ckey_9		equ	0x19
    14       0021 C        	Ckey_e		equ	0x21	;'*'
    15       0031 C        	Ckey_f		equ	0x31	;'#'
    16            C        	
    17       0034 C        	Ckey_edit	equ	0x34
    18       0013 C        	Ckey_time	equ	0x13
    19       001C C        	Ckey_stop	equ	0x1c
    20       000A C        	Ckey_rep	equ	0x0a
    21            C        	
    22       0033 C        	Ckey_enter	equ	0x33
    23       0023 C        	Ckey_mute	equ	0x23
    24       0003 C        	Ckey_flash	equ	0x03
    25       0014 C        	Ckey_2way	equ	0x14
    26            C        	
    27       0032 C        	Ckey_speak	equ	0x32
    28       001A C        	Ckey_redial	equ	0x1a
    29       0004 C        	Ckey_menu	equ	0x04
    30       000C C        	Ckey_play	equ	0x0c
    31            C        	
    32       002A C        	Ckey_sub	equ	0x2a
    33       0022 C        	Ckey_add	equ	0x22
    34       002B C        	Ckey_del	equ	0x2b
    35       002C C        	Ckey_book	equ	0x2c
    36            C        ;----上述键值理论到0X3f,一共56个键。
    37       0040 C        	Cmsg_init	equ	0x40	;初始化
    38       0041 C        	Cmsg_exit	equ	0x41
    39            C        	
    40       0050 C        	Cmsg_hookup	equ	0x50	;提起
    41       0051 C        	Cmsg_hookdown	equ	0x51	;放下
    42            C        	
    43            C        ;-------
    44       0060 C        	Ctmr_sec	equ	0x60	;秒
    45       0061 C        	Ctmr_min	equ	0x61	;分
    46       0062 C        	Ctmr_day	equ	0x62	;天
    47       0063 C        	Ctmr_timer	equ	0x63	;定时器
    48            C        ;-------
    49       0064 C        	CMSG_TMR	equ	0x64	;定时器
    50       0065 C        	CMSG_BLINK	equ	0x65	;时钟闪烁
    51            C        	
    52            C        	
    53       0071 C        	Cmsg_dtmf	equ	0x71	;dtmf停止消息
    54       0072 C        	Cmsg_dtmf_end	equ	0x72
    55       0073 C        	Cmsg_fsk	equ	0x73
    56            C        ;-------------------------------------------------------------------------------
    12                     include "main.inc"
     1            C        
     2            C        /*****************寄存器定义*********************/
     3       0010 C        intbuf_acc	==	0x10	;acc
     4       0011 C        intbuf_status	==	0x11	;r3(Status)
     5       0012 C        intbuf_rsr	==	0x12	;r4(RAM Select Register)
     6       0013 C        intbuf_ppsr	==	0x13	;r5(Program Page Select Register)
     7            C        
     8       0014 C        int_temp0	==	0x14
     9       0015 C        int_temp1	==	0x15
    10            C        
    11       0016 C        temp0		==	0x16
    12       0017 C        temp1		==	0x17
    13       0018 C        temp2		==	0x18
    14       0019 C        temp3		==	0x19
    15            C        
    16       001A C        old_ram		==	0x1a
    17            C        
    18       001B C        offset_s	==	0X1b
    19       001C C        offset_d	==	0X1c
    20       001D C        base_s		==	0X1d
    21       001E C        base_d		==	0X1e                            
    22       001F C        count		==	0X1f
    23            C        
    24       001F C        temp4	==	0X1f	;???????????????????????????????????????????????????????
    25            C        ;-------------------------------------------------------------------------------
    26            C        /*****************BANK 0 *********************/
    27       0020 C        msg_queue	==	0X20
    28       0021 C        msg_queue_start	==	0X21	;0x21..0x28
    29       0029 C        pro_stack	==	0X29	;0x2A..0x2D	;
    30       002E C        msg		==	0X2E	;current system message
    31       002F C        pro_var		==	0X2F	;for system status
    32       0030 C        pro_var1	==	0X30	;for timer counter
    33       0031 C        event		==	0X31	;action flag for system
    34       0032 C        tone_queue_head	==	0X32	;队列头指针
    35       0033 C        tone_queue_tail	==	0X33	;队列尾指针
    36       0034 C        LCD_CONTRAST	==	0X34	;
    37            C        
    38            C        /*****************BANK 1 *********************/
    39       0020 C        intbuf_cidaddr	==	0x20
    40       0021 C        intbuf_cidbank	==	0x21
    41            C        
    42       0020 C        tmr_timer	==	0X20
    43       0021 C        tmr_timer_bak	==	0X21
    44            C        
    45       0022 C        SEC_REG		==	0X22
    46       0023 C        MIN_REG		==	0X23
    47       0024 C        HOUR_REG	==	0X24
    48       0025 C        DAY_REG		==	0X25
    49       0026 C        MON_REG		==	0X26
    50       0027 C        YEAR_REG	==	0X27
    51       0028 C        WEEK_REG	==	0X28
    52            C        
    53       0029 C        tmr_flash	==	0X29
    54       002A C        tmr_tone	==	0X2A
    55            C        
    56            C        /*****************BANK 2 *********************/
    57            C        
    58            C        /*****************BANK 3 *********************/
    59            C        
    60            C        
    61            C        /*****************常数定义***********************/
    62       0000 C        tone_queue_start	==	0
    63       0080 C        LCD_CTRL	==	128
    64       00AC C        VGA_ADDR	==	172
    65            C        
    66       0000 C        FSK_ADDR	==	0
    67       0000 C        DTMF_ADDR	==	0
    68       003C C        CID_ADDR	==	60
    69       005E C        EDIT_ADDR	==	94
    70            C        
    71       0084 C        DIAL_ADDR	==	132
    72            C        
    73       0099 C        TCP_ADDR	==	153
    74            C        
    75            C        /*****************标志位定义*********************/
    76            C        
    77            C        ; SYS_FG
    78       0000 C        LANGUAGE	==	0			; 语言标志
    79       0001 C        NEWCALL		==	1			; 
    80       0002 C        STAMP		==	2			; 印花被改变
    81       0003 C        SYS_CLOCK	==	3			; 第一行数字被改变
    82       0004 C        LEEP_YEAR	==	4
    83       0005 C        LOCK_TOPLINE	==	5
    84       0006 C        LOCK_STR	==	6
    85       0007 C        TIME		==	7			; 计时
    86            C        
    87            C        ; R1_SYS_FG
    88       0000 C        TIMEFORMAT	==	0			; 时间制式
    89       0001 C        HOOKSTATUS	==	1			; hook状态
    90            C        
    91            C        
    92            C        ; EVENT
    93       0007 C        TEST		==	7
    94            C        ; STAMP_FG
    95            C        ;.0		REPEAT
    96            C        ;.1		NEW
    97            C        ;.2		battery
    98            C        ;.3		MEMO
    99            C        ;.4		second
   100            C        ;.5		/
   101            C        ;.6		spk
   102            C        ;.7		CALL
   103       0000 C        STAMP_REPEAT	==	0
   104       0001 C        STAMP_NEW	==	1
   105       0002 C        STAMP_BAT	==	2
   106       0003 C        STAMP_MEMO	==	3
   107       0004 C        STAMP_SEC	==	4
   108       0005 C        STAMP_SLASH	==	5
   109       0006 C        STAMP_SPK	==	6
   110       0007 C        STAMP_CALL	==	7
   111            C        
   112            C        ; FSK_FG
   113            C        ;TCC_400U	==	0
   114       0000 C        FSK_VALID	==	0
   115       0001 C        FSK_SUC		==	1			; FSK接收完毕
   116       0002 C        FSK_ERR		==	2			; FSK接收错误
   117       0003 C        DTMF_START	==	3
   118       0004 C        DTMF_SUC	==	4			; DTMF接收完毕
   119       0005 C        ERR_NUM		==	5			; 号码错误
   120       0006 C        ERR_NAME	==	6			; 姓名错误
   121       0007 C        CALLIN		==	7			; 有来电
   122            C        
   123            C        
   124            C        /***************************************
   125            C        CID BANK 规划
   126            C        
   127            C        BANK0:
   128            C        0~127	LCD RAM映射
   129            C        LCD_CTRL == 128
   130            C        0	显示控制
   131            C        1	印花寄存器
   132            C        2~11	第一行数字寄存器
   133            C        12~27	第二行数字寄存器
   134            C        28~43	第三行字符寄存器
   135            C        VGA_ADDR == 172
   136            C        0	印花控制器			; 暂时不用
   137            C        1	显示数据印花缓冲器		; 不用
   138            C        2	第一行控制器			; 不用
   139            C        3~12	显示数据第一行数字缓冲器	; 不用
   140            C        13	第二行控制器
   141            C        14~45	显示数据第二行数字缓冲器	缓冲器大小设为32个，但显示前16个
   142            C        46	第三行控制器
   143            C        47~78	显示数据第三行字符缓冲器	缓冲器大小设为32个，但显示前16个
   144            C        ; ------------------------------------------------
   145            C        BANK1:
   146            C        FSK_ADDR == 0
   147            C        0~59	FSK 接收数据区。（消息类型-消息长度-消息字/消息类型-消息长度-参数类型-参数长度-参数字）
   148            C        DTMF_ADDR == 0
   149            C        0~19	DTMF 接收数据区。
   150            C        
   151            C        CID_ADDR == 60
   152            C        从交换机接收到的信息解码之后得到的信息：
   153            C        从93L111接收到的号码信息：
   154            C        预发送给93L111的号码信息：
   155            C        0	CID_CTRL
   156            C        	.7	是否要屏蔽第一行
   157            C        	.6~.5	显示模式
   158            C        1	信息标志位
   159            C        	.7	备用（0）
   160            C        	.1	是否新来电
   161            C        	.0	是否REPEAT
   162            C        2	号码长度 1~16;0x00未解码/没有号码;0x43('C')投币电话呼叫;0x49('I')不带号码的国际呼叫;0x4F('O')不带号码;0x50('P')私密;0xFF解码错误;祈
   163            C        3~10	电话号码，一个字节存放两位，不够部分为F。
   164            C        11	姓名长度 1~16;0x00未解码/没有号码;0x4F('O')不带姓名;0x50('P')私密;0xFF解码错误;其它保留。
   165            C        12~27	姓名，不够部分为FF。
   166            C        28	时间长度 4;0X00/0XFF没有时间信息。
   167            C        29~32	时间信息（月日时分）
   168            C        33	OGM号/序号。
   169            C        
   170            C        COMMAND_ADDR == 94
   171            C        0	控制器
   172            C        1~20	提供20个接收处理命令区。
   173            C        
   174            C        EDIT_ADDR == 94
   175            C        编辑区
   176            C        0	印花
   177            C        1~5	第一行
   178            C        6~21	第二行
   179            C        22~37	第三行
   180            C        
   181            C        DIAL_ADDR == 132
   182            C        0	拨号控制器
   183            C        .7	1
   184            C        .6	0/1	START/CONTINUE
   185            C        .5	0/1	PAUSE/DIAL
   186            C        .4~.0	->
   187            C        1~20	号码缓冲区
   188            C        
   189            C        TCP_ADDR == 153
   190            C        0	TCP控制器
   191            C        .7	0
   192            C        
   193            C        1~70
   194            C        153由发送 和接收 共用缓冲区。
   195            C        
   196            C        224~255	通讯使用
   197            C        ****************************************/
   198            C        
    13                     
    14                     ORG	0X0000
    15 00000 1514          	JMP	MAIN
    16 00001 0000          	NOP
    17 00002 0000          	NOP
    18 00003 0000          	NOP
    19 00004 0000          	NOP
    20 00005 0000          	NOP
    21 00006 0000          	NOP
    22 00007 0000          	NOP
    23                     
    24                     ORG	0X0008
    25 00008               INT_BEGIN:
    26 00008 0011          	DISI
    27 00009 0050          	MOV	intbuf_acc,A
    28 0000A 0750          	SWAP	intbuf_acc
    29                   M 	MOV	intbuf_status,_STATUS
       0000B 0403     1     MOV A, _STATUS 
       0000C 0051     1     MOV  INTBUF_STATUS ,A
    30                   M 	MOV	intbuf_rsr,_RSR
       0000D 0404     1     MOV A, _RSR 
       0000E 0052     1     MOV  INTBUF_RSR ,A
    31                   M 	MOV	intbuf_ppsr,_PPSR
       0000F 0405     1     MOV A, _PPSR 
       00010 0053     1     MOV  INTBUF_PPSR ,A
    32                     ;---
    33                   M 	BANK	1
       00011 0B84     1     BS  _RSR , 6 
       00012 09C4     1     BC  _RSR , 7 
    34                   M 	MOV	intbuf_cidaddr,_RC
       00013 040C     1     MOV A, _RC 
       00014 0060     1     MOV  INTBUF_CIDADDR ,A
    35 00015 040B          	MOV	A,_RB			; 保存CID体
    36 00016 1A05          	AND	A,@0X05
    37 00017 0061          	MOV	intbuf_cidbank,A
    38                     	
    39 00018 1E80          	PAGE	0
    40                     
    41                     ;-------------------------------
    42                   M 	JPB	_ISR,6,INT_FSK
       00019 0D8F     1     JBC  _ISR , 6 
       0001A 143A     1     JMP  INT_FSK ,
    43                   M 	JPB	_ISR,0,INT_TCC
       0001B 0C0F     1     JBC  _ISR , 0 
       0001C 143D     1     JMP  INT_TCC ,
    44                   M 	JPB	_ISR,1,INT_0
       0001D 0C4F     1     JBC  _ISR , 1 
       0001E 1440     1     JMP  INT_0 ,
    45                   M 	JPB	_ISR,2,INT_1
       0001F 0C8F     1     JBC  _ISR , 2 
       00020 1443     1     JMP  INT_1 ,
    46                   M 	JPB	_ISR,3,INT_2
       00021 0CCF     1     JBC  _ISR , 3 
       00022 1446     1     JMP  INT_2 ,
    47                   M 	JPB	_ISR,4,INT_CNT1
       00023 0D0F     1     JBC  _ISR , 4 
       00024 1449     1     JMP  INT_CNT1 ,
    48                   M 	JPB	_ISR,5,INT_CNT2
       00025 0D4F     1     JBC  _ISR , 5 
       00026 1468     1     JMP  INT_CNT2 ,
    49                   M 	JPB	_ISR,7,INT_STD
       00027 0DCF     1     JBC  _ISR , 7 
       00028 1475     1     JMP  INT_STD ,
    50 00029 1478          	JMP	INT_ERR
    51                     ;-------------------------------
    52 0002A               INT_END:
    53                   M 	BANK	1
       0002A 0B84     1     BS  _RSR , 6 
       0002B 09C4     1     BC  _RSR , 7 
    54                     ;---
    55 0002C 040B          	MOV	A,_RB
    56 0002D 1AFA          	AND	A,@0XFA
    57 0002E 03A1          	ADD	A,intbuf_cidbank
    58 0002F 004B          	MOV	_RB,A
    59                   M 	MOV	_RC,intbuf_cidaddr
       00030 0420     1     MOV A, INTBUF_CIDADDR 
       00031 004C     1     MOV  _RC ,A
    60                     ;---
    61                   M 	MOV	_PPSR,intbuf_ppsr
       00032 0413     1     MOV A, INTBUF_PPSR 
       00033 0045     1     MOV  _PPSR ,A
    62                   M 	MOV	_RSR,intbuf_rsr
       00034 0412     1     MOV A, INTBUF_RSR 
       00035 0044     1     MOV  _RSR ,A
    63                   M 	MOV	_STATUS,intbuf_status
       00036 0411     1     MOV A, INTBUF_STATUS 
       00037 0043     1     MOV  _STATUS ,A
    64 00038 0710          	SWAPA	intbuf_acc
    65 00039 0013          	RETI
    66                     /*****************************FSK接收******************************/
    67                     
    68 0003A               INT_FSK:
    69                     	;MOV	_ISR,@0XBE
    70                   M 	MOV	_ISR,@(~((1<<6)|(1)))
       0003A 18BE     1     MOV A,@((~(( 1 << 6 )| 1 )))
       0003B 004F     1     MOV  _ISR ,A
    71                     	
    72 0003C 142A          	JMP	INT_END
    73                     
    74                     /******************************************************************/
    75 0003D               INT_TCC:
    76                     	;MOV	_ISR,@0XFE
    77                   M 	MOV	_ISR,@(~1)
       0003D 18FE     1     MOV A,@((~ 1 ))
       0003E 004F     1     MOV  _ISR ,A
    78                     	;CRAM	_ISR,0
    79                     	
    80 0003F 142A          	JMP	INT_END
    81                     /******************************************************************/
    82 00040               INT_0:
    83                     	;MOV	_ISR,@0XFD
    84                   M 	MOV	_ISR,@(~(1<<1))
       00040 18FD     1     MOV A,@((~( 1 << 1 )))
       00041 004F     1     MOV  _ISR ,A
    85                     	;CRAM	_ISR,1
    86 00042 142A          	JMP	INT_END
    87                     /******************************************************************/
    88 00043               INT_1:
    89                     	;MOV	_ISR,@0XFB
    90                   M 	MOV	_ISR,@(~(1<<2))
       00043 18FB     1     MOV A,@((~( 1 << 2 )))
       00044 004F     1     MOV  _ISR ,A
    91                     	;CRAM	_ISR,2
    92 00045 142A          	JMP	INT_END
    93                     /******************************************************************/
    94 00046               INT_2:
    95                     	;MOV	_ISR,@0XF7
    96                   M 	MOV	_ISR,@(~(1<<3))
       00046 18F7     1     MOV A,@((~( 1 << 3 )))
       00047 004F     1     MOV  _ISR ,A
    97                     	;CRAM	_ISR,3
    98 00048 142A          	JMP	INT_END
    99                     /******************************************************************/
   100 00049               INT_CNT1:			; 0.5S
   101                     	;MOV	_ISR,@0XEF
   102                   M 	MOV	_ISR,@(~(1<<4))
       00049 18EF     1     MOV A,@((~( 1 << 4 )))
       0004A 004F     1     MOV  _ISR ,A
   103                     ;---	
   104                   M 	BANK	1
       0004B 0B84     1     BS  _RSR , 6 
       0004C 09C4     1     BC  _RSR , 7 
   105                     	
   106 0004D 0562          	INC	SEC_REG
   107 0004E 0803          	BC	_STATUS,C
   108 0004F 0622          	RRCA	SEC_REG
   109 00050 1D3C          	SUB	A,@60
   110                   M 	JPNZ	INT_CNT1_1
       00051 0E83     1     JBS  _STATUS , Z 
       00052 1467     1     JMP  INT_CNT1_1 ,
   111 00053 00E2          	CLR	SEC_REG
   112 00054 0563          	INC	MIN_REG
   113                   M 	SUBA	MIN_REG,@60
       00055 183C     1     MOV A,@( 60 )
       00056 0123     1     SUB A, MIN_REG 
   114                   M 	JPNZ	INT_CNT1_1
       00057 0E83     1     JBS  _STATUS , Z 
       00058 1467     1     JMP  INT_CNT1_1 ,
   115 00059 00E3          	CLR	MIN_REG
   116 0005A 0564          	INC	HOUR_REG
   117                   M 	SUBA	HOUR_REG,@24
       0005B 1818     1     MOV A,@( 24 )
       0005C 0124     1     SUB A, HOUR_REG 
   118                   M 	JPNZ	INT_CNT1_1
       0005D 0E83     1     JBS  _STATUS , Z 
       0005E 1467     1     JMP  INT_CNT1_1 ,
   119 0005F 00E4          	CLR	HOUR_REG
   120 00060 0565          	INC	DAY_REG
   121 00061 0568          	INC	WEEK_REG
   122                   M 	SUBA	WEEK_REG,@7
       00062 1807     1     MOV A,@( 7 )
       00063 0128     1     SUB A, WEEK_REG 
   123                   M 	JPNZ	INT_CNT1_1
       00064 0E83     1     JBS  _STATUS , Z 
       00065 1467     1     JMP  INT_CNT1_1 ,
   124 00066 00E8          	CLR	WEEK_REG
   125 00067               INT_CNT1_1:
   126                     
   127 00067 142A          	JMP	INT_END
   128                     /******************************************************************/
   129 00068               INT_CNT2:	;8ms
   130                     	;CRAM	_ISR,5
   131                   M 	MOV	_ISR,@(~(1<<5))
       00068 18DF     1     MOV A,@((~( 1 << 5 )))
       00069 004F     1     MOV  _ISR ,A
   132                     ;---
   133 0006A 0560          	INC	TMR_TIMER
   134                     	
   135 0006B 0420          	MOV	A,TMR_TIMER
   136                   M 	JPNZ	INT_CNT2_END
       0006C 0E83     1     JBS  _STATUS , Z 
       0006D 1474     1     JMP  INT_CNT2_END ,
   137                     
   138                   M 	MOV	TMR_TIMER,@(0XFF-64)
       0006E 18BF     1     MOV A,@(( 255 - 64 ))
       0006F 0060     1     MOV  TMR_TIMER ,A
   139                     
   140                   M 	BANK	0
       00070 0984     1     BC  _RSR , 6 
       00071 09C4     1     BC  _RSR , 7 
   141 00072 1865          	mov	a,@CMSG_BLINK
   142 00073 1138          	call	stor_int_msg
   143 00074               INT_CNT2_END:
   144                     		
   145 00074 142A          	JMP	INT_END
   146                     
   147                     ;-------------------------------------------------------------------------------
   148 00075               INT_STD:
   149                     	;MOV	_ISR,@0X7F
   150                   M 	MOV	_ISR,@(~(1<<7))
       00075 187F     1     MOV A,@((~( 1 << 7 )))
       00076 004F     1     MOV  _ISR ,A
   151                     	
   152 00077 142A          	JMP	INT_END
   153                     ;-------------------------------------------------------------------------------
   154 00078               INT_ERR:
   155 00078 142A          	JMP	INT_END
   156                     ;-------------------------------------------------------------------------------
   157                     /*
   158                     int_key:
   159                     ;---Set port7(3..0) as an input
   160                     	IOR	_IOC7
   161                     	OR	A,@0X0F
   162                     	IOW	_IOC7
   163                     ;---Enable internal pull-high-port7(3..0)
   164                     
   165                     	PAGEIO	1
   166                     	IOR	_IOCD
   167                     	OR	A,@0X0F
   168                     	IOW	_IOCD
   169                     
   170                     ;---Enable scan key signal
   171                     	IOR	_IOCA
   172                     	OR	A,@0X01
   173                     	IOW	_IOCA
   174                     	
   175                     	NOP
   176                     	NOP
   177                     	NOP
   178                     	NOP
   179                     ;---Blank LCD
   180                     	MOV	A,_RE
   181                     	AND	A,@0XF9
   182                     	OR	A,@0X02
   183                     	MOV	_RE,A
   184                     ;---Disable scan key signal
   185                     	IOR	_IOCA
   186                     	AND	A,@(~1)
   187                     	IOW	_IOCA
   188                     ;---Set P6S=0
   189                     	IOR	_IOCA
   190                     	AND	A,@(~(1<<6))
   191                     	IOW	_IOCA
   192                     ;---Read p7
   193                     	MOV	A,_P7
   194                     ;---Set P6S=1
   195                     	IOR	_IOCA
   196                     	OR	A,@(1<<6)
   197                     	IOW	_IOCA
   198                     ;---Enable LCD
   199                     	MOV	A,_RE
   200                     	AND	A,@0XF9
   201                     	OR	A,@0X02
   202                     	MOV	_RE,A
   203                     
   204                     	ret
   205                     */
   206                     ;---------------------------------------
   207 00079               KEY_SCAN:
   208                   M 	AND	_RE,@(0xfb)			; blank LCD
       00079 18FB     1     MOV A,@( 251 )
       0007A 02CE     1     AND  _RE ,A
   209 0007B 001E          	IOR	_IOCE
   210 0007C 1ADF          	AND	A,@(0xdf)
   211 0007D 000E          	IOW	_IOCE
   212                     	
   213 0007E 0B88          	BS	_P8,6
   214                     	
   215 0007F 0803          	BC	_STATUS,C
   216                     /*
   217                     	MOV	r0_int_ax,@(0xff)
   218                     	ANDA	r0_tmr,@(0x07)
   219                     	TBL
   220                     	RRC	r0_int_ax
   221                     	RRC	r0_int_ax
   222                     	RRC	r0_int_ax
   223                     	RRC	r0_int_ax
   224                     	RRC	r0_int_ax
   225                     	RRC	r0_int_ax
   226                     	RRC	r0_int_ax
   227                     	RRCA	r0_int_ax
   228                     	IOW	_IOC6
   229                     	MOV	_R6,A
   230                     	RET
   231                     */
   232                     ;-------------------------------------------------------------------------------
   233                     /***************************************
   234                     副程序区
   235                     ***************************************/
   236                     
   237                     ; PAGE 0
   238                     include		"initial.asm"
     1            C        
     2 00080      C        INITIAL:
     3            C        
     4            C      M 	MOV	_FSR,@0X70			; 3.5826MHz
       00080 1870     1     MOV A,@( 112 )
       00081 004A     1     MOV  _FSR ,A
     5 00082 0011 C        	DISI
     6 00083 0004 C        	WDTC
     7            C      M 	PAGEIO	0
       00084 09C3     1     BC  _STATUS , 7 
     8            C      M 	BANK	0
       00085 0984     1     BC  _RSR , 6 
       00086 09C4     1     BC  _RSR , 7 
     9            C        	
    10            C      M 	MOV	_RE,@0X01			; set lcd 1/8 duty 1/4 bias
       00087 1801     1     MOV A,@( 1 )
       00088 004E     1     MOV  _RE ,A
    11            C      M 	MOV	_RE,@0X06			; set lcd display enable
       00089 1806     1     MOV A,@( 6 )
       0008A 004E     1     MOV  _RE ,A
    12            C        ;---Clear CALLID RAM
    13            C      M 	CIDBANK	0
       0008B 080B     1     BC  _RB , 0 
       0008C 088B     1     BC  _RB , 2 
    14 0008D 10DF C        	CALL	CLR_LCD_RAM
    15            C      M 	CIDBANK	1
       0008E 0A0B     1     BS  _RB , 0 
       0008F 088B     1     BC  _RB , 2 
    16 00090 10DF C        	CALL	CLR_LCD_RAM
    17            C      M 	CIDBANK	2
       00091 080B     1     BC  _RB , 0 
       00092 0A8B     1     BS  _RB , 2 
    18 00093 10DF C        	CALL	CLR_LCD_RAM
    19            C      M 	CIDBANK	3
       00094 0A0B     1     BS  _RB , 0 
       00095 0A8B     1     BS  _RB , 2 
    20 00096 10DF C        	CALL	CLR_LCD_RAM
    21            C        ;---Clear DATA RAM
    22            C      M 	BANK	0
       00097 0984     1     BC  _RSR , 6 
       00098 09C4     1     BC  _RSR , 7 
    23 00099 10EC C        	CALL	CLR_REG
    24            C      M 	BANK	1
       0009A 0B84     1     BS  _RSR , 6 
       0009B 09C4     1     BC  _RSR , 7 
    25 0009C 10EC C        	CALL	CLR_REG
    26            C      M 	BANK	2
       0009D 0984     1     BC  _RSR , 6 
       0009E 0BC4     1     BS  _RSR , 7 
    27 0009F 10EC C        	CALL	CLR_REG
    28            C      M 	BANK	3
       000A0 0B84     1     BS  _RSR , 6 
       000A1 0BC4     1     BS  _RSR , 7 
    29 000A2 10EC C        	CALL	CLR_REG
    30            C      M 	BANK	0
       000A3 0984     1     BC  _RSR , 6 
       000A4 09C4     1     BC  _RSR , 7 
    31            C        ; --------------------
    32            C        	
    33            C      M 	IOW	_IOC5,@0X0F
       000A5 180F     1     MOV A,@( 15 )
       000A6 0005     1     IOW  _IOC5 ,
    34 000A7 1800 C        	MOV	A,@(0X00)
    35 000A8 0006 C        	IOW	_IOC6
    36 000A9 0008 C        	IOW	_IOC8
    37 000AA 0009 C        	IOW	_IOC9
    38            C        ;	
    39            C        	;IOW	_IOCA,@0XF0			; port7 as normal port, set p5,p6,p9 for lcd
    40            C      M 	IOW	_IOCA,@0XFA
       000AB 18FA     1     MOV A,@( 250 )
       000AC 000A     1     IOW  _IOCA ,
    41 000AD 0B8B C        	BS	_RB,6
    42 000AE 0BCB C        	BS	_RB,7				; set p8 for lcd
    43            C        	
    44            C      M 	IOW	_IOC7,@0XF9
       000AF 18F9     1     MOV A,@( 249 )
       000B0 0007     1     IOW  _IOC7 ,
    45            C      M 	MOV	_R7,@0XFF			; p7.5 = 1
       000B1 18FF     1     MOV A,@( 255 )
       000B2 0047     1     MOV  _R7 ,A
    46            C        	
    47 000B3 0ACE C        	BS	_RE,3				; set /WURING enable
    48            C        	
    49            C      M 	PAGEIO	1
       000B4 0BC3     1     BS  _STATUS , 7 
    50            C      M 	IOW	_IOCE,@0X0E			; counter1 prescaler 1:64
       000B5 180E     1     MOV A,@( 14 )
       000B6 000E     1     IOW  _IOCE ,
    51            C      M 	IOW	_IOCB,@0X80			; count1(0.5s) <==> 2^15/(0xff-0x80+1)/64=2^
       000B7 1880     1     MOV A,@( 128 )
       000B8 000B     1     IOW  _IOCB ,
    52            C      M 	IOW	_IOCC,@0X0			; count2(0.5ms)<==> 2^15/(0xff+1)=.2^7
       000B9 1800     1     MOV A,@( 0 )
       000BA 000C     1     IOW  _IOCC ,
    53            C        	;IOW	_IOCD,@0XFF
    54            C      M 	PAGEIO	0
       000BB 09C3     1     BC  _STATUS , 7 
    55            C        
    56            C        ; ---------- dtmf open -----------
    57 000BC 0AC5 C        	BS	_PPSR,3				; open the PWDN to receive the dtmf data
    58 000BD 090B C        	BC	_RB,4
    59 000BE 094B C        	BC	_RB,5				; tone detection present time 5ms
    60            C        	
    61 000BF 0943 C        	BC	_STATUS,5			; close the tone genarater1
    62 000C0 0983 C        	BC	_STATUS,6			; close the tone genarater2
    63            C        ; ---------- fsk open ------------
    64 000C1 0ACA C        	BS	_FSR,3				; /FSKPWR = 1
    65            C        	
    66            C      M 	IOW	_IOCF,@0XB0			; DTMF,CONT2,CONT1  ENABLE. fsk disable
       000C2 18B0     1     MOV A,@( 176 )
       000C3 000F     1     IOW  _IOCF ,
    67 000C4 00CF C        	CLR	_ISR
    68            C        	;CLR	FSK_FG
    69            C        	;CLR	SYS_FG
    70            C        	;CLR	STAMP_FG
    71            C        	
    72 000C5 1802 C        	MOV	A,@2
    73 000C6 0002 C        	CONTW
    74            C        ; ---------- INFO INIT ------------
    75            C      M 	BANK	0
       000C7 0984     1     BC  _RSR , 6 
       000C8 09C4     1     BC  _RSR , 7 
    76            C        ;---Set contrast
    77            C      M 	MOV	LCD_CONTRAST,@0X03		; LCD对比度3，
       000C9 1803     1     MOV A,@( 3 )
       000CA 0074     1     MOV  LCD_CONTRAST ,A
    78 000CB 0434 C        	MOV	A,LCD_CONTRAST
    79 000CC 110A C        	CALL	LCD_CONTRAST_APPLY
    80            C        
    81            C        ; ---------- time init ------------
    82            C      M 	BANK	1
       000CD 0B84     1     BS  _RSR , 6 
       000CE 09C4     1     BC  _RSR , 7 
    83 000CF 00E2 C        	CLR	SEC_REG
    84 000D0 00E3 C        	CLR	MIN_REG
    85 000D1 00E4 C        	CLR	HOUR_REG
    86 000D2 00E8 C        	CLR	WEEK_REG
    87            C      M 	MOV	DAY_REG,@1
       000D3 1801     1     MOV A,@( 1 )
       000D4 0065     1     MOV  DAY_REG ,A
    88            C      M 	MOV	MON_REG,@1
       000D5 1801     1     MOV A,@( 1 )
       000D6 0066     1     MOV  MON_REG ,A
    89 000D7 00E7 C        	CLR	YEAR_REG
    90            C        
    91            C      M 	CALL	#BLANK_LCD
       000D8 10F8     1     CALL ( BLANK_LCD % 1024 ),
    92            C        
    93            C      M 	CIDBANK	0
       000D9 080B     1     BC  _RB , 0 
       000DA 088B     1     BC  _RB , 2 
    94            C        	;MOV	_RC,@LCD_CTRL
    95            C        	;MOV	_RD,@0X80
    96            C        	;PAGE	#VGA_STAMP
    97            C        	
    98            C        	;CALL	CLR_STAMP
    99            C        	;CALL	CLR_NUM1
   100            C        	;CALL	CLR_NUM2
   101            C        	;CALL	CLR_STR
   102            C        	
   103            C        	
   104            C        	
   105            C        	
   106            C        	
   107            C        	
   108            C        	
   109            C        	
   110            C        	;PAGE	#($)
   111            C        	;CALL	#VIEW_STR
   112            C        	
   113            C        	;BS	STAMP_FG,STAMP_SLASH		; 日期之间的斜杠，固定亮。
   114            C        	;BS	SYS_FG,STAMP
   115            C        	;BS	SYS_FG,SYS_CLOCK
   116            C        	;BC	SYS_FG,LOCK_TOPLINE
   117            C        	
   118 000DB 0010 C        	ENI
   119            C        	;MOV	TMR_DELAY,@250
   120            C        	;CALL	WAIT_FLASH
   121            C        	
   122            C        	
   123            C      M 	BANK	1
       000DC 0B84     1     BS  _RSR , 6 
       000DD 09C4     1     BC  _RSR , 7 
   124            C        
   125 000DE 0012 C        	RET
   126            C        ;-------------------------------------------------------------------------------
   127 000DF      C        CLR_LCD_RAM:
   128 000DF 00D6 C        	CLR	TEMP0
   129 000E0      C        CLR_LCD_RAM_LOOP:
   130            C      M 	MOV	_RC,TEMP0
       000E0 0416     1     MOV A, TEMP0 
       000E1 004C     1     MOV  _RC ,A
   131 000E2 00CD C        	CLR	_RD
   132 000E3 0556 C        	INC	TEMP0
   133            C      M 	SUBA	TEMP0,@0XFF
       000E4 18FF     1     MOV A,@( 255 )
       000E5 0116     1     SUB A, TEMP0 
   134            C      M 	JPNZ	CLR_LCD_RAM_LOOP
       000E6 0E83     1     JBS  _STATUS , Z 
       000E7 14E0     1     JMP  CLR_LCD_RAM_LOOP ,
   135            C      M 	MOV	_RC,TEMP0
       000E8 0416     1     MOV A, TEMP0 
       000E9 004C     1     MOV  _RC ,A
   136 000EA 00CD C        	CLR	_RD
   137 000EB 0012 C        	RET
   138            C        ;-------------------------------------------------------------------------------
   139 000EC      C        CLR_REG:
   140            C      M 	AND	_RSR,@0XC0
       000EC 18C0     1     MOV A,@( 192 )
       000ED 02C4     1     AND  _RSR ,A
   141            C      M 	ADD	_RSR,@0X0F	;Note! You clear register from 0x10 to 0x3f
       000EE 180F     1     MOV A,@( 15 )
       000EF 03C4     1     ADD  _RSR ,A
   142 000F0      C        CLR_REG_LOOP:
   143 000F0 0544 C        	INC	_RSR
   144 000F1 00C0 C        	CLR	_R0
   145            C      M 	ANDA	_RSR,@0X3F
       000F2 183F     1     MOV A,@( 63 )
       000F3 0284     1     AND A, _RSR 
   146 000F4 1D3F C        	SUB	A,@0X3F
   147            C      M 	JPNZ	CLR_REG_LOOP
       000F5 0E83     1     JBS  _STATUS , Z 
       000F6 14F0     1     JMP  CLR_REG_LOOP ,
   148 000F7 0012 C        	RET
   149            C        ;-------------------------------------------------------------------------------
   150 000F8      C        BLANK_LCD:
   151            C      M 	MOV	TEMP0,@0
       000F8 1800     1     MOV A,@( 0 )
       000F9 0056     1     MOV  TEMP0 ,A
   152 000FA      C        BLANK_LCD_LOOP:
   153 000FA 0416 C        	MOV	A,TEMP0
   154 000FB 000B C        	IOW	_IOCB
   155 000FC 1800 C        	MOV	A,@0
   156 000FD 000C C        	IOW	_IOCC
   157 000FE 0556 C        	INC	TEMP0
   158            C      M 	SUBA	TEMP0,@0X28
       000FF 1828     1     MOV A,@( 40 )
       00100 0116     1     SUB A, TEMP0 
   159            C      M 	JPNZ	BLANK_LCD_LOOP1
       00101 0E83     1     JBS  _STATUS , Z 
       00102 1505     1     JMP  BLANK_LCD_LOOP1 ,
   160            C      M 	MOV	TEMP0,@0X40
       00103 1840     1     MOV A,@( 64 )
       00104 0056     1     MOV  TEMP0 ,A
   161 00105      C        BLANK_LCD_LOOP1:
   162            C      M 	SUBA	TEMP0,@0X68
       00105 1868     1     MOV A,@( 104 )
       00106 0116     1     SUB A, TEMP0 
   163            C      M 	JPNZ	BLANK_LCD_LOOP
       00107 0E83     1     JBS  _STATUS , Z 
       00108 14FA     1     JMP  BLANK_LCD_LOOP ,
   164            C        	
   165 00109 0012 C        	RET
   166            C        
   167            C        ;-------------------------------------------------------------------------------
   168            C        ;LCD对比度
   169            C        ;-------------------------------------------------------------------------------
   170 0010A      C        LCD_CONTRAST_APPLY:
   171            C        	
   172 0010A 1A0F C        	AND	A,@0X0F
   173            C        ;	ADD	A,@2				; OTP
   174 0010B 1FFF C        	ADD	A,@0XFF				; 仿真
   175 0010C 0056 C        	MOV	TEMP0,A
   176            C      M 	CLRC
       0010D 0803     1     BC  _STATUS , C 
   177 0010E 06D6 C        	RLC	TEMP0
   178 0010F 001A C        	IOR	_IOCA
   179 00110 1AF1 C        	AND	A,@0XF1
   180 00111 0396 C        	ADD	A,TEMP0
   181 00112 000A C        	IOW	_IOCA
   182            C        	
   183 00113 0012 C        	RET
   184            C        
   185            C        ;-------------------------------------------------------------------------------
   239                     include		"main.asm"
     1            C        ;-------------------------------------------------------------------------------
     2 00114      C        MAIN:
     3            C      M 	CALL	#INITIAL		;initial
       00114 1080     1     CALL ( INITIAL % 1024 ),
     4 00115 0000 C        	NOP
     5 00116      C        MAIN_LOOP:
     6            C      M 	BANK	0
       00116 0984     1     BC  _RSR , 6 
       00117 09C4     1     BC  _RSR , 7 
     7 00118 115A C        	CALL 	get_msg
     8            C      M 	JPZ	MAIN_LOOP
       00119 0C83     1     JBC  _STATUS , Z 
       0011A 1516     1     JMP  MAIN_LOOP ,
     9 0011B 006E C        	MOV	msg,a
    10            C        	
    11 0011C 1200 C        	CALL	sys_msg
    12 0011D 0000 C        	nop
    13 0011E 0000 C        	nop
    14            C      M 	JPZ	MAIN_LOOP
       0011F 0C83     1     JBC  _STATUS , Z 
       00120 1516     1     JMP  MAIN_LOOP ,
    15 00121 0000 C        	nop
    16 00122 0000 C        	nop
    17 00123 1524 C        	jmp 	goto_func		;do func
    18            C        ;-------------------------------------------------------------------------------
    19 00124      C        goto_func:
    20 00124 11A1 C        	call get_pro
    21 00125 0020 C        	tbl
    22 00126 1537 C        	jmp pro_main			;0
    23 00127 1537 C        	jmp goto_call_num		;1
    24 00128 1537 C        	jmp goto_call_out		;2
    25 00129 1537 C        	jmp goto_menu			;3
    26 0012A 1537 C        	jmp Goto_Lcd_Contarst		;4 lcd contrast
    27 0012B 1537 C        	jmp Goto_Set_Language		;5 select language
    28 0012C 1537 C        	jmp Goto_Set_Area_Code		;6 set area code
    29 0012D 1537 C        	jmp Goto_Set_Week		;7 enter week
    30 0012E 1537 C        	jmp Goto_Set_Time		;8 enter time
    31 0012F 1537 C        	jmp Goto_Set_Date		;9 enter date
    32 00130 1537 C        	jmp Goto_Set_Lcode		;a set long code
    33 00131 1537 C        	jmp Goto_Data_Mode		;b data bank mode
    34 00132 1537 C        	jmp Goto_Ogm_Rec		;c ogm rec
    35 00133 1537 C        	jmp Goto_Ogm_Playback		;d ogm playback
    36 00134 1537 C        	jmp Goto_Vol_Adj		;e vol adj
    37 00135 1537 C        	jmp Goto_Edit			;f 编辑
    38            C        	
    39 00136 1537 C        	jmp Goto_Book			;10 电话本
    40            C        ;-------------------------------------------------------------------------------
    41            C        ;-------程序指针宏----------
    42       0001 C        	Cgoto_call_num		equ	0x01
    43       0002 C        	Cgoto_call_out		equ	0x02
    44       0003 C        	Cgoto_menu		equ	0x03
    45       0004 C        	Cgoto_Lcd_Contarst	equ	0x04
    46       0005 C        	Cgoto_Set_Language	equ	0x05
    47       0006 C        	Cgoto_Set_Area_Code	equ	0x06
    48       0007 C        	Cgoto_Set_Week		equ	0x07
    49       0008 C        	Cgoto_Set_Time		equ	0x08
    50       0009 C        	Cgoto_Set_Date		equ	0x09
    51       000A C        	Cgoto_Set_Lcode		equ	0x0a
    52       000B C        	Cgoto_Data_Mode		equ	0x0b
    53       000C C        	Cgoto_Ogm_Rec		equ	0x0c
    54       000D C        	Cgoto_Ogm_Playback	equ	0x0d
    55       000E C        	Cgoto_Vol_Adj		equ	0x0e
    56       000F C        	Cgoto_Edit		equ	0x0f
    57            C        	
    58       0010 C        	Cgoto_Book		equ	0x10
    59            C        ;-------------------------------------------------------------------------------	
    60 00137      C        pro_main:
    61 00137      C        goto_call_num:
    62 00137      C        goto_call_out:
    63 00137      C        goto_menu:
    64 00137      C        Goto_Lcd_Contarst:
    65 00137      C        Goto_Set_Language:
    66 00137      C        Goto_Set_Area_Code:
    67 00137      C        Goto_Set_Week:
    68 00137      C        Goto_Set_Time:
    69 00137      C        Goto_Set_Date:
    70 00137      C        Goto_Set_Lcode:
    71 00137      C        Goto_Data_Mode:
    72 00137      C        Goto_Ogm_Rec:
    73 00137      C        Goto_Ogm_Playback:
    74 00137      C        Goto_Vol_Adj:
    75 00137      C        Goto_Edit:
    76 00137      C        Goto_Book:
    77 00137 1516 C        	jmp 	MAIN_LOOP	
    78            C        ;-------------------------------------------------------------------------------
    79            C        
    80            C        ;-------------------------------------------------------------------------------
   240                     include		"gui.asm"
     1            C        ;-------------------------------------------------------------------------------
     2            C        ;	约定中继程序用BANK 1
     3            C        ;-------------------------------------------------------------------------------
     4 00138      C        stor_int_msg:
     5 00138 0054 C        	mov 	int_temp0,a
     6            C        	
     7            C      M 	BANK	0
       00139 0984     1     BC  _RSR , 6 
       0013A 09C4     1     BC  _RSR , 7 
     8 0013B 0420 C        	mov 	a,msg_queue
     9 0013C 1A07 C        	and 	a,@0x07
    10 0013D 1F21 C        	add 	a,@msg_queue_start
    11 0013E 0044 C        	mov 	_R4,a
    12 0013F 0414 C        	mov 	a,int_temp0
    13 00140 0040 C        	mov 	_R0,a
    14            C        ;---整理msg_queue	
    15 00141 0520 C        	inca 	msg_queue
    16 00142 1A77 C        	and 	a,@0x77
    17 00143 0060 C        	mov 	msg_queue,a
    18            C        	
    19            C      M 	BANK	1
       00144 0B84     1     BS  _RSR , 6 
       00145 09C4     1     BC  _RSR , 7 
    20            C        
    21 00146 0012 C        	ret
    22            C        ;-------------------------------------------------------------------------------
    23 00147      C        stor_msg:
    24 00147 0011 C        	disi
    25            C        ;---
    26 00148 0056 C        	mov 	temp0,a
    27 00149 0404 C        	mov 	a,_R4
    28 0014A 005A C        	mov 	old_ram,a	;push _R4
    29            C      M 	BANK	0
       0014B 0984     1     BC  _RSR , 6 
       0014C 09C4     1     BC  _RSR , 7 
    30            C        	
    31 0014D 0420 C        	mov 	a,msg_queue
    32 0014E 1A07 C        	and 	a,@0x07
    33 0014F 1F21 C        	add 	a,@msg_queue_start
    34 00150 0044 C        	mov 	_R4,a
    35 00151 0416 C        	mov 	a,temp0
    36 00152 0040 C        	mov 	_R0,a
    37            C        ;---整理msg_queue	
    38 00153 0520 C        	inca 	msg_queue
    39 00154 1A77 C        	and 	a,@0x77
    40 00155 0060 C        	mov 	msg_queue,a
    41 00156 041A C        	mov 	a,old_ram
    42 00157 0044 C        	mov 	_R4,a	;pop _R4
    43            C        ;---
    44 00158 0010 C        	eni
    45 00159 0012 C        	ret
    46            C        ;-------------------------------------------------------------------------------
    47 0015A      C        get_msg:
    48 0015A 0011 C        	disi
    49            C        	
    50 0015B 0404 C        	mov 	a,_R4
    51 0015C 005A C        	mov 	old_ram,a	;push _R4
    52            C        
    53            C      M 	BANK	0
       0015D 0984     1     BC  _RSR , 6 
       0015E 09C4     1     BC  _RSR , 7 
    54            C        ;---
    55 0015F 0720 C        	swapa 	msg_queue
    56 00160 1A07 C        	and 	a,@0x07
    57 00161 0056 C        	mov 	temp0,a		;get address
    58 00162 0420 C        	mov 	a,msg_queue
    59 00163 1A07 C        	and 	a,@0x07
    60 00164 0116 C        	sub 	a,temp0
    61 00165 0C83 C        	jbc 	_STATUS,z
    62 00166 1575 C        	jmp 	get_msg_empty
    63            C        ;---整理msg_queue	
    64 00167 0420 C        	mov 	a,msg_queue
    65 00168 1F10 C        	add 	a,@0x10
    66 00169 1A77 C        	and 	a,@0x77
    67 0016A 0060 C        	mov 	msg_queue,a
    68            C        	
    69 0016B 0416 C        	mov 	a,temp0		;get data in specific address
    70 0016C 1F21 C        	add 	a,@msg_queue_start
    71 0016D 0044 C        	mov 	_R4,a
    72 0016E 0400 C        	mov 	a,_R0
    73 0016F 0056 C        	mov 	temp0,a		;Save the data
    74 00170      C        get_msg_end:
    75 00170 041A C        	mov 	a,old_ram
    76 00171 0044 C        	mov 	_R4,a	;pop _R4
    77            C        	
    78 00172 0416 C        	mov	a, temp0
    79            C        ;---
    80 00173 0010 C        	eni
    81 00174 0012 C        	ret
    82 00175      C        get_msg_empty:
    83 00175 00D6 C        	clr	temp0	
    84 00176 1570 C        	jmp	get_msg_end
    85            C        	
    86            C        ;-------------------------------------------------------------------------------
    87 00177      C        push_pro:
    88 00177 0056 C        	mov temp0,a
    89            C        
    90 00178 0404 C        	mov a,_R4
    91 00179 005A C        	mov old_ram,a		;push _R4
    92            C        
    93            C      M 	BANK	0
       0017A 0984     1     BC  _RSR , 6 
       0017B 09C4     1     BC  _RSR , 7 
    94 0017C 0529 C        	inca pro_stack
    95 0017D 1A07 C        	and a,@0x07		;整理
    96 0017E 0069 C        	mov pro_stack,a
    97            C        	
    98 0017F 1F29 C        	add a,@pro_stack
    99 00180 0044 C        	mov _R4,a
   100 00181 0416 C        	mov a,temp0
   101 00182 0040 C        	mov _R0,a
   102            C        	
   103 00183 041A C        	mov a,old_ram
   104 00184 0044 C        	mov _R4,a		;pop _R4
   105            C        	
   106 00185 0012 C        	ret
   107            C        ;---------------------------------------
   108 00186      C        clr_pro_stack:
   109 00186 0404 C        	mov a,_R4
   110 00187 005A C        	mov old_ram,a	;push _R4
   111            C        
   112            C      M 	BANK	0
       00188 0984     1     BC  _RSR , 6 
       00189 09C4     1     BC  _RSR , 7 
   113 0018A 00E9 C        	clr pro_stack
   114            C        	
   115 0018B 041A C        	mov a,old_ram
   116 0018C 0044 C        	mov _R4,a	;pop _R4
   117 0018D 0012 C        	ret
   118            C        ;---------------------------------------
   119 0018E      C        pop_pro:
   120 0018E 0404 C        	mov a,_R4
   121 0018F 005A C        	mov old_ram,a	;push _R4
   122            C        	
   123            C      M 	BANK	0
       00190 0984     1     BC  _RSR , 6 
       00191 09C4     1     BC  _RSR , 7 
   124 00192 0429 C        	mov a,pro_stack
   125 00193 0C83 C        	jbc _STATUS,z
   126 00194 159D C        	jmp pro_stack_end
   127 00195 01E9 C        	dec pro_stack
   128            C        
   129 00196 0429 C        	mov a,pro_stack
   130 00197 0C83 C        	jbc _STATUS,z
   131 00198 159D C        	jmp pro_stack_end
   132            C        	
   133 00199 1F29 C        	add a,@pro_stack
   134 0019A 0044 C        	mov _R4,a
   135 0019B 0400 C        	mov a,_R0
   136 0019C 0056 C        	mov temp0,a
   137 0019D      C        pro_stack_end:
   138            C        
   139 0019D 041A C        	mov a,old_ram
   140 0019E 0044 C        	mov _R4,a	;pop _R4
   141            C        	
   142 0019F 0416 C        	mov a,temp0
   143            C        
   144 001A0 0012 C        	ret
   145            C        ;---------------------------------------
   146 001A1      C        get_pro:
   147 001A1 0404 C        	mov a,_R4
   148 001A2 005A C        	mov old_ram,a	;push _R4
   149            C        	
   150            C      M 	BANK	0
       001A3 0984     1     BC  _RSR , 6 
       001A4 09C4     1     BC  _RSR , 7 
   151 001A5 0429 C        	mov a,pro_stack
   152 001A6 0C83 C        	jbc _STATUS,z
   153 001A7 15AB C        	jmp get_pro_end
   154 001A8 1F29 C        	add a,@pro_stack
   155 001A9 0044 C        	mov _R4,a
   156 001AA 0400 C        	mov a,_R0
   157 001AB      C        get_pro_end:
   158 001AB 0056 C        	mov temp0,a
   159            C        	
   160 001AC 041A C        	mov a,old_ram
   161 001AD 0044 C        	mov _R4,a	;pop _R4
   162            C        
   163 001AE 0416 C        	mov a,temp0
   164 001AF 0012 C        	ret
   165            C        ;-------------------------------------------------------------------------------
   166 001B0      C        set_timer:
   167 001B0 0056 C        	mov temp0,a
   168            C        
   169 001B1 0404 C        	mov a,_R4
   170 001B2 005A C        	mov old_ram,a	;push _R4
   171            C        
   172            C      M 	BANK	1
       001B3 0B84     1     BS  _RSR , 6 
       001B4 09C4     1     BC  _RSR , 7 
   173            C        	
   174 001B5 0416 C        	mov a,temp0
   175 001B6 0060 C        	mov tmr_timer,a
   176 001B7 0061 C        	mov tmr_timer_bak,a	;打开定时器 A=1/256秒
   177            C        	
   178 001B8 041A C        	mov a,old_ram
   179 001B9 0044 C        	mov _R4,a
   180            C        
   181 001BA 0012 C        	ret
   182 001BB      C        clr_timer:
   183 001BB 0404 C        	mov a,_R4
   184 001BC 005A C        	mov old_ram,a	;push _R4
   185            C        ;---	
   186            C      M 	BANK	1
       001BD 0B84     1     BS  _RSR , 6 
       001BE 09C4     1     BC  _RSR , 7 
   187 001BF 00E0 C        	clr tmr_timer
   188 001C0 00E1 C        	clr tmr_timer_bak	;关闭定时器
   189            C        ;---	
   190 001C1 041A C        	mov a,old_ram
   191 001C2 0044 C        	mov _R4,a
   192 001C3 0012 C        	ret
   193            C        ;-------------------------------------------------------------------------------
   194            C        ;	Function : get_dat	
   195            C        ;	从以base_s为基地址以offset_s偏移地址的数据取出
   196            C        ;	INPUT : offset_s = the offset you will get data from
   197            C        ;		base_s = the BASE you will get data from
   198            C        ;	output: acc = the data you want
   199            C        ;-------------------------------------------------------------------------------
   200 001C4      C        get_dat:
   201            C        	;mov	a,_R4
   202            C        	;mov	old_ram,a	;push _R4
   203            C        ;---
   204            C        	;BANK	0
   205 001C4 041D C        	mov	a,base_s
   206 001C5 039B C        	add 	a,offset_s
   207 001C6 0044 C        	mov 	_R4,a
   208 001C7 0400 C        	mov 	a,_R0
   209 001C8 0056 C        	mov 	temp0,a
   210            C        	
   211 001C9 055B C        	inc	offset_s
   212            C        
   213            C        	;mov 	a,old_ram
   214            C        	;mov 	_R4,a
   215            C        	
   216 001CA 0416 C        	mov	a,temp0
   217            C        
   218 001CB 0012 C        	RET
   219            C        ;-------------------------------------------------------------------------
   220            C        ;	Function : stor_dat	
   221            C        ;	将数据存在以base_d为基地址以offset_d偏移地址的空间(一个字节)
   222            C        ;	INPUT : ACCH = the data you will stor
   223            C        ;		offset_d = the offset you will stor data
   224            C        ;		base_d = the BASE you will stor data
   225            C        ;	output: no
   226            C        ;-------------------------------------------------------------------------
   227 001CC      C        stor_dat:
   228 001CC 0056 C        	mov	temp0,a
   229            C        
   230            C        	;mov	a,_R4
   231            C        	;mov	old_ram,a	;push _R4
   232            C        ;---
   233            C        	;BANK	0
   234 001CD 041E C        	mov	a,base_d
   235 001CE 039C C        	add 	a,offset_d
   236 001CF 0044 C        	mov 	_R4,a
   237 001D0 0416 C        	mov 	a,temp0
   238 001D1 0040 C        	mov 	_R0,a
   239            C        
   240 001D2 055C C        	inc	offset_d
   241            C        
   242            C        	;mov 	a,old_ram
   243            C        	;mov 	_R4,a
   244            C        
   245 001D3 0012 C        	ret
   246            C        ;-------------------------------------------------------------------------------
   247            C        ;	Function : move_ltoh
   248            C        ;	从以base_s为基址,offset_s为起始偏移,长度为count的数据移动
   249            C        ;	到以base_d为基址,offset_d为起始偏移的地方
   250            C        ;	INPUT : count = 要移动的数据的长度byte
   251            C        ;		offset_s = the souce offset
   252            C        ;		offset_d = the dest offset
   253            C        ;		base_s = BASE address
   254            C        ;		base_d = BASE address
   255            C        ;	OUTPUT: no
   256            C        ;NOTE : move high address data first(ADDR_S+OFFSET_S/2 < ADDR_D+OFFSET_D/2)
   257            C        ;-------------------------------------------------------------------------------
   258 001D4      C        move_ltoh:
   259 001D4 041B C        	mov	a,offset_s
   260 001D5 039F C        	add 	a,count
   261 001D6 005B C        	mov	offset_s,a
   262 001D7 01DB C        	dec	offset_s
   263            C        	
   264 001D8 041C C        	mov	a,offset_d
   265 001D9 039F C        	add 	a,count
   266 001DA 005C C        	mov	offset_d,a
   267 001DB 01DC C        	dec	offset_d
   268 001DC      C        move_ltoh_loop:
   269 001DC 11C4 C        	CALL	get_dat
   270 001DD 11CC C        	CALL	stor_dat
   271            C        	
   272 001DE 01DC C        	dec	offset_d
   273 001DF 01DC C        	dec	offset_d
   274            C        	
   275 001E0 01DB C        	dec	offset_s
   276 001E1 01DB C        	dec	offset_s
   277            C        
   278 001E2 01DF C        	dec	count
   279 001E3 041F C        	mov 	a,count
   280 001E4 0E83 C        	jbs 	_STATUS,z
   281 001E5 15DC C        	jmp 	move_ltoh_loop
   282            C        	
   283 001E6      C        move_ltoh_end:	
   284 001E6 0012 C        	RET
   285            C        ;-------------------------------------------------------------------------------
   286            C        ;	Function : move_htol
   287            C        ;	从以base_s为基址,offset_s为起始偏移,长度为count的数据移动
   288            C        ;	到以base_d为基址,offset_d为起始偏移的地方
   289            C        ;	INPUT : count = 要移动的数据的长度byte
   290            C        ;		offset_s = the souce offset
   291            C        ;		offset_d = the dest offset
   292            C        ;		base_s = BASE address
   293            C        ;		base_d = BASE address
   294            C        ;	OUTPUT: no
   295            C        ;NOTE : move low address data first(ADDR_S+OFFSET_S/2 > ADDR_D+OFFSET_D/2)
   296            C        ;-------------------------------------------------------------------------------
   297 001E7      C        move_htol:
   298            C        
   299 001E7 11C4 C        	CALL	get_dat
   300 001E8 11CC C        	CALL	stor_dat
   301            C        	
   302 001E9 01DF C        	dec	count
   303 001EA 041F C        	mov 	a,count
   304 001EB 0E83 C        	jbs 	_STATUS,z
   305 001EC 15E7 C        	jmp 	move_htol
   306 001ED      C        move_htol_end:
   307            C        	
   308 001ED 0012 C        	RET
   309            C        ;-------------------------------------------------------------------------------
   310            C        ;	Function : ram_stor
   311            C        ;	将base_d为基址,offset_d为起始偏移,长度为count的地方,填充数据
   312            C        ;	INPUT : ACCH = 要填充的数据
   313            C        ;		count = 要填充的数据的长度byte
   314            C        ;		offset_d = the offset
   315            C        ;		base_d = BASE address
   316            C        ;	OUTPUT: no
   317            C        ;NOTE : move low address data first(ADDR_S+OFFSET_S/2 > ADDR_D+OFFSET_D/2)
   318            C        ;-------------------------------------------------------------------------------
   319 001EE      C        ram_stor:
   320 001EE 0056 C        	mov	temp0,a
   321            C        	
   322 001EF 0404 C        	mov	a,_R4
   323 001F0 005A C        	mov	old_ram,a	;push _R4
   324            C        ;---
   325            C      M 	BANK	0
       001F1 0984     1     BC  _RSR , 6 
       001F2 09C4     1     BC  _RSR , 7 
   326 001F3      C        ram_stor_loop:
   327 001F3 041E C        	mov	a,base_d
   328 001F4 039C C        	add 	a,offset_d
   329 001F5 0044 C        	mov 	_R4,a
   330 001F6 0416 C        	mov 	a,temp0
   331 001F7 0040 C        	mov 	_R0,a
   332            C        
   333 001F8 055C C        	inc	offset_d
   334            C        
   335 001F9 01DF C        	dec	count
   336 001FA 041F C        	mov 	a,count
   337 001FB 0E83 C        	jbs 	_STATUS,z
   338 001FC 15F3 C        	jmp 	ram_stor_loop
   339            C        ;---
   340 001FD 041A C        	mov 	a,old_ram
   341 001FE 0044 C        	mov 	_R4,a
   342            C        
   343 001FF 0012 C        	RET
   344            C        ;-------------------------------------------------------------------------------
   241                     include		"sys_pro.asm"
     1            C        ;-------------------------------------------------------------------------------
     2 00200      C        sys_msg:
     3 00200 1841 C        	mov 	a,@Cmsg_exit	;处理exit
     4 00201 012E C        	sub 	a,msg
     5            C      M 	jpnz 	sys_msg_1
       00202 0E83     1     JBS  _STATUS , Z 
       00203 1605     1     JMP  SYS_MSG_1 ,
     6            C        	;///
     7 00204 161D C        	JMP	sys_msg_use
     8 00205      C        sys_msg_1:
     9 00205 1865 C        	mov 	a,@CMSG_BLINK	;处理exit
    10 00206 012E C        	sub 	a,msg
    11            C      M 	JPNZ 	sys_msg_2
       00207 0E83     1     JBS  _STATUS , Z 
       00208 161C     1     JMP  SYS_MSG_2 ,
    12            C        
    13            C        	;MOV	A,_RE
    14            C        	;XOR	A,@6
    15            C        	;MOV	_RE,A
    16            C        
    17            C      M 	call	#VIEW_STR
                      2  M  LCALL  VIEW_STR 
                      3  M  PAGE #( VIEW_STR ),
       00209 1E87     3     PAGE ( VIEW_STR / 1024 ),
       0020A 129D     2     CALL ( VIEW_STR % 1024 ),
                      3  M  PAGE #( $ ),
       0020B 1E80     3     PAGE ( $ / 1024 ),
    18            C      M 	call	#VIEW_NUM2
                      2  M  LCALL  VIEW_NUM2 
                      3  M  PAGE #( VIEW_NUM2 ),
       0020C 1E87     3     PAGE ( VIEW_NUM2 / 1024 ),
       0020D 1213     2     CALL ( VIEW_NUM2 % 1024 ),
                      3  M  PAGE #( $ ),
       0020E 1E80     3     PAGE ( $ / 1024 ),
    19            C        	
    20 0020F 189C C        	MOV	A,@(LCD_CTRL+28)
    21 00210 004C C        	MOV	_RC,A
    22 00211 0430 C        	MOV	A,pro_var1
    23 00212 1F01 C        	add	a,@0x01
    24 00213 1A1F C        	and	a,@0x1f
    25 00214 0070 C        	MOV	pro_var1,A
    26 00215 004D C        	MOV	_RD,A
    27            C        	
    28 00216 188C C        	MOV	A,@(LCD_CTRL+12)
    29 00217 004C C        	MOV	_RC,A
    30 00218 0430 C        	MOV	A,pro_var1
    31 00219 1A0F C        	and	A,@0x0f
    32 0021A 004D C        	MOV	_RD,A
    33            C        
    34 0021B 161D C        	JMP	sys_msg_use
    35 0021C      C        sys_msg_2:
    36 0021C 161E C        	JMP 	sys_msg_end
    37 0021D      C        sys_msg_use:
    38 0021D 0080 C        	clra
    39 0021E      C        sys_msg_end:
    40 0021E 0012 C        	ret
    41            C        ;-------------------------------------------------------------------------------
    42            C        ;	Tone Generator
    43            C        ;-------------------------------------------------------------------------------
    44 0021F      C        sys_tone:
    45            C        	
    46            C      M 	JPB	event,0,sys_ToneGenerating
       0021F 0C31     1     JBC  EVENT , 0 
       00220 1625     1     JMP  SYS_TONEGENERATING ,
    47 00221 124A C        	call	get_tone
    48            C      M 	JPNZ	sys_tone_start
       00222 0E83     1     JBS  _STATUS , Z 
       00223 1626     1     JMP  SYS_TONE_START ,
    49 00224      C        sys_NoTone:	
    50 00224 0012 C        	ret
    51 00225      C        sys_ToneGenerating:
    52 00225 0012 C        	ret
    53            C        ;-------------------
    54 00226      C        sys_tone_start:
    55 00226 0056 C        	mov 	temp0,a
    56 00227 1A03 C        	and	a,@0x03
    57            C      M 	CALL	#ToneTimeTable
       00228 1264     1     CALL ( TONETIMETABLE % 1024 ),
    58 00229 006A C        	mov	tmr_tone,a	;时间长度(可暂不考虑)
    59            C        	
    60 0022A 0656 C        	rrc	temp0
    61 0022B 0656 C        	rrc	temp0
    62            C      M 	and	temp0,0x0f	;拔出号码的序号
       0022C 040F     1     MOV A, 15 
       0022D 02D6     1     AND  TEMP0 ,A
    63            C        ;---tone-1
    64 0022E 0416 C        	mov	a,temp0
    65            C      M 	CALL	#ToneIndexTableH
       0022F 1269     1     CALL ( TONEINDEXTABLEH % 1024 ),
    66 00230 000D C        	IOW	_IOCD
    67            C        ;---tone-2
    68 00231 0416 C        	mov	a,temp0
    69            C      M 	CALL	#ToneIndexTableL
       00232 127A     1     CALL ( TONEINDEXTABLEL % 1024 ),
    70 00233 000E C        	IOW	_IOCE
    71 00234 0B43 C        	BS	_STATUS,5	;Enable TONE1
    72 00235 0B83 C        	BS	_STATUS,6	;Enable TONE2
    73            C        
    74 00236 0A31 C        	BS	event,0
    75            C        	
    76 00237 0012 C        	ret
    77            C        ;-------------------------------------------------------------------------------
    78            C        ;	Stor tone data to the tail of tone-queue
    79            C        ;	input : acc
    80            C        ;	output: no
    81            C        ;-------------------------------------------------------------------------------
    82 00238      C        stor_tone:
    83 00238 0056 C        	mov 	temp0,a
    84            C        ;---
    85 00239 0404 C        	mov 	a,_R4
    86 0023A 005A C        	mov 	old_ram,a	;push _R4
    87            C        
    88            C      M 	BANK	0
       0023B 0984     1     BC  _RSR , 6 
       0023C 09C4     1     BC  _RSR , 7 
    89            C      M 	CIDBANK	0
       0023D 080B     1     BC  _RB , 0 
       0023E 088B     1     BC  _RB , 2 
    90            C        	
    91 0023F 0433 C        	mov 	a,tone_queue_tail
    92 00240 1F00 C        	add 	a,@tone_queue_start
    93 00241 004C C        	mov 	_RC,a
    94 00242 0416 C        	mov 	a,temp0
    95 00243 004D C        	mov 	_RD,a
    96            C        ;---整理tone_queue	
    97 00244 0533 C        	inca 	tone_queue_tail
    98 00245 1A3F C        	and 	a,@0x3f
    99 00246 0073 C        	mov 	tone_queue_tail,a
   100            C        	
   101 00247 041A C        	mov 	a,old_ram
   102 00248 0044 C        	mov 	_R4,a	;pop _R4
   103            C        ;---
   104 00249 0012 C        	ret
   105            C        ;-------------------------------------------------------------------------------
   106            C        ;	Get tone data from head of tone-queue
   107            C        ;	input : no
   108            C        ;	output: acc=0/~0 ==> no tone/
   109            C        ;-------------------------------------------------------------------------------
   110 0024A      C        get_tone:
   111 0024A 0404 C        	mov 	a,_R4
   112 0024B 005A C        	mov 	old_ram,a	;push _R4
   113            C        
   114            C      M 	BANK	0
       0024C 0984     1     BC  _RSR , 6 
       0024D 09C4     1     BC  _RSR , 7 
   115            C      M 	CIDBANK	0
       0024E 080B     1     BC  _RB , 0 
       0024F 088B     1     BC  _RB , 2 
   116            C        ;---
   117 00250 0432 C        	mov	a,tone_queue_head
   118 00251 0133 C        	sub 	a,tone_queue_tail
   119            C      M 	JPZ	get_tone_empty
       00252 0C83     1     JBC  _STATUS , Z 
       00253 1662     1     JMP  GET_TONE_EMPTY ,
   120            C        ;---整理tone_queue	
   121 00254 0432 C        	mov 	a,tone_queue_head
   122 00255 0056 C        	mov 	temp0,a		;Save it 
   123 00256 1F01 C        	add 	a,@0x01
   124 00257 1A3F C        	and 	a,@0x3f		;MAX.= 63
   125 00258 0072 C        	mov 	tone_queue_head,a
   126            C        	
   127 00259 0416 C        	mov 	a,temp0		;get data in specific address
   128 0025A 1F00 C        	add 	a,@tone_queue_start
   129 0025B 004C C        	mov 	_RC,a
   130 0025C 040D C        	mov 	a,_RD
   131 0025D 0056 C        	mov 	temp0,a		;Save the data
   132 0025E      C        get_tone_end:
   133 0025E 041A C        	mov 	a,old_ram
   134 0025F 0044 C        	mov 	_R4,a		;pop _R4
   135            C        	
   136 00260 0416 C        	mov	a, temp0
   137            C        ;---
   138 00261 0012 C        	ret
   139 00262      C        get_tone_empty:
   140 00262 00D6 C        	clr	temp0	
   141 00263 165E C        	jmp	get_tone_end
   142            C        	
   143            C        ;-------------------------------------------------------------------------------
   144 00264      C        ToneTimeTable:
   145 00264 0020 C        	tbl
   146 00265 1C00 C        	RETL	@0	; 0
   147 00266 1C01 C        	RETL	@1	; 1
   148 00267 1C02 C        	RETL	@2	; 2
   149 00268 1C03 C        	RETL	@3	; 3
   150 00269      C        ToneIndexTableH:	;DTMF-H
   151 00269 0020 C        	TBL
   152 0026A 1C77 C        	RETL	0X77	; 0
   153 0026B 1CA0 C        	RETL	0XA0	; 1
   154 0026C 1CA0 C        	RETL	0XA0	; 2
   155 0026D 1CA0 C        	RETL	0XA0	; 3
   156 0026E 1C91 C        	RETL	0X91	; 4
   157 0026F 1C91 C        	RETL	0X91	; 5
   158 00270 1C91 C        	RETL	0X91	; 6
   159 00271 1C83 C        	RETL	0X83	; 7
   160 00272 1C83 C        	RETL	0X83	; 8
   161 00273 1C83 C        	RETL	0X83	; 9
   162 00274 1CA0 C        	RETL	0XA0	; A
   163 00275 1C91 C        	RETL	0X91	; B
   164 00276 1C83 C        	RETL	0X83	; C
   165 00277 1C77 C        	RETL	0X77	; D
   166 00278 1C77 C        	RETL	0X77	; *
   167 00279 1C77 C        	RETL	0X77	; #
   168            C        
   169 0027A      C        ToneIndexTableL:
   170 0027A 0020 C        	TBL
   171 0027B 1C54 C        	RETL	0X54	; 0
   172 0027C 1C5D C        	RETL	0X5D	; 1
   173 0027D 1C54 C        	RETL	0X54	; 2
   174 0027E 1C4C C        	RETL	0X4C	; 3
   175 0027F 1C5D C        	RETL	0X5D	; 4
   176 00280 1C54 C        	RETL	0X54	; 5
   177 00281 1C4C C        	RETL	0X4C	; 6
   178 00282 1C5D C        	RETL	0X5D	; 7
   179 00283 1C54 C        	RETL	0X54	; 8
   180 00284 1C4C C        	RETL	0X4C	; 9
   181 00285 1C44 C        	RETL	0X44	; A
   182 00286 1C44 C        	RETL	0X44	; B
   183 00287 1C44 C        	RETL	0X44	; C
   184 00288 1C44 C        	RETL	0X44	; D
   185 00289 1C5D C        	RETL	0X5D	; *
   186 0028A 1C4C C        	RETL	0X4C	; #
   187            C        ;-------------------------------------------------------------------------------
   188            C        
   189            C        
   190            C        
   242                     include		"lcddrv.asm"
     1            C        
     2            C        
     3            C        org 0x1C00
     4            C        
     5            C        /***************************************
     6            C           a
     7            C         f   b
     8            C           g
     9            C         e   c
    10            C           d
    11            C        ***************************************/
    12            C        
    13 01C00      C        second_line_tab:	;second line 0cbdgaef
    14 01C00 0020 C        	tbl
    15 01C01 1C77 C        	RETL	@0X77		; 0
    16 01C02 1C60 C        	RETL	@0X60		; 1
    17 01C03 1C3E C        	RETL	@0X3E		; 2
    18 01C04 1C7C C        	RETL	@0X7C		; 3
    19 01C05 1C69 C        	RETL	@0X69		; 4
    20 01C06 1C5D C        	RETL	@0X5D		; 5
    21 01C07 1C5F C        	RETL	@0X5F		; 6
    22 01C08 1C64 C        	RETL	@0X64		; 7
    23 01C09 1C7F C        	RETL	@0X7F		; 8
    24 01C0A 1C7D C        	RETL	@0X7D		; 9
    25            C        ;--------------------------------------------------------------
    26 01C0B 1C6F C        	RETL	@0X6F		; A
    27 01C0C 1C5B C        	RETL	@0X5B		; b
    28 01C0D 1C17 C        	RETL	@0X17		; C
    29 01C0E 1C7A C        	RETL	@0X7A		; d
    30 01C0F 1C1F C        	RETL	@0X1F		; E
    31 01C10 1C0F C        	RETL	@0X0F		; F
    32 01C11 1C00 C        	RETL	@0X0		; BLANK
    33 01C12 1C08 C        	RETL	@0X08		; -
    34 01C13 1C1B C        	RETL	@0X1B		; T
    35            C        
    36            C        ;ORG	0X1F00
    37 01C14      C        third_line_taba: 
    38 01C14 0020 C        	TBL
    39 01C15 1C70 C                RETL	@0b01110000	; 0
    40 01C16 1C00 C        	RETL	@0b00000000	; 1
    41 01C17 1CC0 C        	RETL	@0b11000000	; 2
    42 01C18 1C88 C        	RETL	@0b10001000	; 3
    43 01C19 1C60 C        	RETL	@0b01100000	; 4
    44 01C1A 1CB8 C        	RETL	@0b10111000	; 5
    45 01C1B 1C70 C        	RETL	@0b01110000	; 6
    46 01C1C 1C08 C        	RETL	@0b00001000	; 7
    47 01C1D 1C50 C        	RETL	@0b01010000	; 8
    48 01C1E 1C10 C        	RETL	@0b00010000	; 9
    49            C        	
    50 01C1F 1CF0 C        	RETL	@0b11110000	; A
    51 01C20 1CF8 C        	RETL	@0b11111000	; B
    52 01C21 1C70 C        	RETL	@0b01110000	; C
    53 01C22 1CF8 C        	RETL	@0b11111000	; D
    54 01C23 1CF8 C        	RETL	@0b11111000	; E
    55 01C24 1CF8 C        	RETL	@0b11111000	; F
    56 01C25 1C70 C        	RETL	@0b01110000	; G
    57 01C26 1CF8 C        	RETL	@0b11111000	; H
    58 01C27 1C00 C        	RETL	@0b00000000	; I
    59 01C28 1C40 C        	RETL	@0b01000000	; J
    60 01C29 1CF8 C        	RETL	@0b11111000	; K
    61 01C2A 1C00 C        	RETL	@0		; L
    62 01C2B 1CF8 C        	RETL	@0xf8		; M
    63 01C2C 1CF8 C        	RETL	@0b11111000	; N
    64 01C2D 1C70 C        	RETL	@0b01110000	; O
    65 01C2E 1CF8 C        	RETL	@0b11111000	; P
    66 01C2F 1C70 C        	RETL	@0b01110000	; Q
    67 01C30 1CF8 C        	RETL	@0b11111000	; R
    68 01C31 1C90 C        	RETL	@0b10010000	; S
    69 01C32 1C08 C        	RETL	@0b00001000	; T
    70 01C33 1C78 C        	RETL	@0b01111000	; U
    71 01C34 1C38 C        	RETL	@0b00111000	; V
    72 01C35 1C78 C        	RETL	@0b01111000	; W
    73 01C36 1C88 C        	RETL	@0b10001000	; X
    74 01C37 1C08 C        	RETL	@0b00001000	; Y
    75 01C38 1C88 C        	RETL	@0b10001000	; Z
    76            C        	
    77 01C39 1C00 C                RETL	@0		; BLANK
    78            C                
    79 01C3A 1CF8 C        	RETL	@0B11111000	; ■
    80            C        	
    81 01C3B 1C10 C        	RETL	@0b00010000	; ?
    82 01C3C 1C00 C        	RETL	@0b0		; !
    83 01C3D 1C00 C        	RETL	@0b0		; :
    84 01C3E 1C00 C        	RETL	@0B00000000	; .
    85            C        	
    86 01C3F 1CF8 C        	RETL	@0B11111000	; START
    87 01C40 1CF8 C        	RETL	@0B11111000	; PAUSE
    88 01C41 1C88 C        	RETL	@0B10001000	; DEL
    89 01C42 1C80 C        	RETL	@0B10000000	; /
    90 01C43 1C08 C        	RETL	@0B00001000	; \
    91 01C44 1C80 C        	RETL	@0B10000000	; _
    92            C        
    93            C        
    94 01C45      C        third_line_tabb:
    95 01C45 0020 C        	TBL
    96 01C46 1CC8 C        	RETL	@0b11001000	; 0
    97 01C47 1C90 C        	RETL	@0b10010000	; 1
    98 01C48 1CA8 C        	RETL	@0b10101000	; 2
    99 01C49 1CA8 C        	RETL	@0b10101000	; 3
   100 01C4A 1C50 C        	RETL	@0b01010000	; 4
   101 01C4B 1CA8 C        	RETL	@0b10101000	; 5
   102 01C4C 1CA8 C        	RETL	@0b10101000	; 6
   103 01C4D 1C08 C        	RETL	@0b00001000	; 7
   104 01C4E 1CA8 C        	RETL	@0b10101000	; 8
   105 01C4F 1CA8 C        	RETL	@0b10101000	; 9
   106            C        	
   107 01C50 1C28 C        	RETL	@0b00101000	; A
   108 01C51 1CA8 C        	RETL	@0b10101000	; B
   109 01C52 1C88 C        	RETL	@0b10001000	; C
   110 01C53 1C88 C        	RETL	@0b10001000	; D
   111 01C54 1CA8 C        	RETL	@0b10101000	; E
   112 01C55 1C28 C        	RETL	@0b00101000	; F
   113 01C56 1C88 C        	RETL	@0b10001000	; G
   114 01C57 1C20 C        	RETL	@0b00100000	; H
   115 01C58 1C88 C        	RETL	@0b10001000	; I
   116 01C59 1C80 C        	RETL	@0b10000000	; J
   117 01C5A 1C20 C        	RETL	@0b00100000	; K
   118 01C5B 1CF8 C        	RETL	@0xf8		; L
   119 01C5C 1C10 C        	RETL	@0x10		; M
   120 01C5D 1C10 C        	RETL	@0b00010000	; N
   121 01C5E 1C88 C        	RETL	@0b10001000	; O
   122 01C5F 1C28 C        	RETL	@0b00101000	; P
   123 01C60 1C88 C        	RETL	@0b10001000	; Q
   124 01C61 1C28 C        	RETL	@0b00101000	; R
   125 01C62 1CA8 C        	RETL	@0b10101000	; S
   126 01C63 1C08 C        	RETL	@0b00001000	; T
   127 01C64 1C80 C        	RETL	@0b10000000	; U
   128 01C65 1C40 C        	RETL	@0b01000000	; V
   129 01C66 1C80 C        	RETL	@0b10000000	; W
   130 01C67 1C50 C        	RETL	@0b01010000	; X
   131 01C68 1C10 C        	RETL	@0b00010000	; Y
   132 01C69 1CC8 C        	RETL	@0b11001000	; Z
   133            C        	
   134 01C6A 1C00 C        	RETL	@0		; BLANK
   135            C        	
   136 01C6B 1CF8 C        	RETL	@0B11111000	; ■
   137            C        	
   138 01C6C 1C08 C        	RETL	@0b00001000	; ?
   139 01C6D 1C00 C        	RETL	@0b0		; !
   140 01C6E 1C00 C        	RETL	@0b0		; :
   141 01C6F 1C00 C        	RETL	@0B00000000	; .
   142            C        	
   143 01C70 1CF8 C        	RETL	@0B11111000	; START
   144 01C71 1CF8 C        	RETL	@0B11111000	; PAUSE
   145 01C72 1C88 C        	RETL	@0B10001000	; DEL
   146 01C73 1C40 C        	RETL	@0B01000000	; /
   147 01C74 1C10 C        	RETL	@0B00010000	; \
   148 01C75 1C80 C        	RETL	@0B10000000	; _
   149            C        
   150            C        	
   151 01C76      C        third_line_tabc:
   152 01C76 0020 C        	TBL
   153 01C77 1CA8 C        	RETL	@0b10101000	; 0
   154 01C78 1CF8 C         	RETL	@0b11111000	; 1
   155 01C79 1CA8 C         	RETL	@0b10101000	; 2
   156 01C7A 1CA8 C         	RETL	@0b10101000	; 3
   157 01C7B 1C48 C         	RETL	@0b01001000	; 4
   158 01C7C 1CA8 C         	RETL	@0b10101000	; 5
   159 01C7D 1CA8 C         	RETL	@0b10101000	; 6
   160 01C7E 1CC8 C         	RETL	@0b11001000	; 7
   161 01C7F 1CA8 C         	RETL	@0b10101000	; 8
   162 01C80 1CA8 C         	RETL	@0b10101000	; 9
   163            C        	
   164 01C81 1C28 C        	RETL	@0b00101000	; A
   165 01C82 1CA8 C         	RETL	@0b10101000	; B
   166 01C83 1C88 C         	RETL	@0b10001000	; C
   167 01C84 1C88 C         	RETL	@0b10001000	; D
   168 01C85 1CA8 C         	RETL	@0b10101000	; E
   169 01C86 1C28 C         	RETL	@0b00101000	; F
   170 01C87 1C88 C         	RETL	@0b10001000	; G
   171 01C88 1C20 C         	RETL	@0b00100000	; H
   172 01C89 1CF8 C         	RETL	@0b11111000	; I
   173 01C8A 1C88 C         	RETL	@0b10001000	; J
   174 01C8B 1C20 C         	RETL	@0b00100000	; K
   175 01C8C 1C80 C                RETL	@0b10000000	; L
   176 01C8D 1C60 C        	RETL	@0x60		; M
   177 01C8E 1C20 C        	RETL	@0b00100000	; N
   178 01C8F 1C88 C        	RETL	@0b10001000	; O
   179 01C90 1C28 C        	RETL	@0b00101000	; P
   180 01C91 1CA8 C        	RETL	@0b10101000	; Q
   181 01C92 1C28 C        	RETL	@0b00101000	; R
   182 01C93 1CA8 C        	RETL	@0b10101000	; S        
   183 01C94 1CF8 C        	RETL	@0b11111000	; T
   184 01C95 1C80 C        	RETL	@0b10000000	; U
   185 01C96 1C80 C        	RETL	@0b10000000	; V
   186 01C97 1C60 C        	RETL	@0b01100000	; W
   187 01C98 1C20 C        	RETL	@0b00100000	; X
   188 01C99 1CE0 C        	RETL	@0b11100000	; Y
   189 01C9A 1CA8 C        	RETL	@0b10101000	; Z
   190            C        	
   191 01C9B 1C00 C        	RETL	@0		; BLANK
   192            C        	
   193 01C9C 1CF8 C        	RETL	@0B11111000	; ■
   194            C        	
   195 01C9D 1CC8 C        	RETL	@0b11001000	; ?
   196 01C9E 1CB8 C        	RETL	@0b10111000	; !
   197 01C9F 1C50 C        	RETL	@0b01010000	; :
   198 01CA0 1C00 C        	RETL	@0B00000000	; .
   199            C        	
   200 01CA1 1C70 C        	RETL	@0B01110000	; START
   201 01CA2 1C00 C        	RETL	@0B00000000	; PAUSE
   202 01CA3 1C50 C        	RETL	@0B01010000	; DEL
   203 01CA4 1C20 C        	RETL	@0B00100000	; /
   204 01CA5 1C20 C        	RETL	@0B00100000	; \
   205 01CA6 1C80 C        	RETL	@0B10000000	; _
   206            C        
   207            C        
   208 01CA7      C        third_line_tabd:
   209 01CA7 0020 C        	TBL
   210 01CA8 1C98 C         	RETL	@0b10011000	; 0
   211 01CA9 1C80 C        	RETL	@0b10000000	; 1
   212 01CAA 1CA8 C        	RETL	@0b10101000	; 2
   213 01CAB 1CA8 C        	RETL	@0b10101000	; 3
   214 01CAC 1CF8 C        	RETL	@0b11111000	; 4
   215 01CAD 1CA8 C        	RETL	@0b10101000	; 5
   216 01CAE 1CA8 C        	RETL	@0b10101000	; 6
   217 01CAF 1C28 C        	RETL	@0b00101000	; 7
   218 01CB0 1CA8 C        	RETL	@0b10101000	; 8
   219 01CB1 1CA8 C        	RETL	@0b10101000	; 9
   220            C        	
   221 01CB2 1C28 C        	RETL	@0b00101000	; A
   222 01CB3 1CA8 C        	RETL	@0b10101000	; B
   223 01CB4 1C88 C        	RETL	@0b10001000	; C
   224 01CB5 1C88 C        	RETL	@0b10001000	; D
   225 01CB6 1CA8 C        	RETL	@0b10101000	; E
   226 01CB7 1C28 C        	RETL	@0b00101000	; F
   227 01CB8 1CA8 C        	RETL	@0b10101000	; G
   228 01CB9 1C20 C        	RETL	@0b00100000	; H
   229 01CBA 1C88 C        	RETL	@0b10001000	; I
   230 01CBB 1C78 C        	RETL	@0b01111000	; J
   231 01CBC 1C50 C        	RETL	@0b01010000	; K
   232 01CBD 1C80 C                RETL	@0b10000000	; L              
   233 01CBE 1C10 C         	RETL	@0b00010000	; M       
   234 01CBF 1C40 C         	RETL	@0b01000000	; N        
   235 01CC0 1C88 C         	RETL	@0b10001000	; O          
   236 01CC1 1C28 C         	RETL	@0b00101000	; P          
   237 01CC2 1C48 C         	RETL	@0b01001000	; Q          
   238 01CC3 1C68 C         	RETL	@0b01101000	; R          
   239 01CC4 1CA8 C         	RETL	@0b10101000	; S          
   240 01CC5 1C08 C         	RETL	@0b00001000	; T          
   241 01CC6 1C80 C         	RETL	@0b10000000	; U          
   242 01CC7 1C40 C         	RETL	@0b01000000	; V          
   243 01CC8 1C80 C         	RETL	@0b10000000	; W          
   244 01CC9 1C50 C         	RETL	@0b01010000	; X          
   245 01CCA 1C10 C         	RETL	@0b00010000	; Y          
   246 01CCB 1C98 C         	RETL	@0b10011000	; Z
   247            C        	
   248 01CCC 1C00 C        	RETL	@0		; BLANK
   249            C        	
   250 01CCD 1CF8 C        	RETL	@0B11111000	; ■
   251            C         	
   252 01CCE 1C28 C        	RETL	@0b00101000	; ?
   253 01CCF 1C00 C        	RETL	@0b0		; !                             
   254 01CD0 1C00 C        	RETL	@0b0		; :
   255 01CD1 1C40 C        	RETL	@0B01000000	; .
   256            C        	
   257 01CD2 1C70 C        	RETL	@0B01110000	; START
   258 01CD3 1CF8 C        	RETL	@0B11111000	; PAUSE
   259 01CD4 1C20 C        	RETL	@0B00100000	; DEL
   260 01CD5 1C10 C        	RETL	@0B00010000	; /
   261 01CD6 1C40 C        	RETL	@0B01000000	; \
   262 01CD7 1C80 C        	RETL	@0B10000000	; _
   263            C        
   264            C        
   265            C        ORG	0X1D00
   266 01D00      C        third_line_tabe:
   267 01D00 0020 C        	TBL
   268 01D01 1C70 C        	RETL	@0b01110000	; 0
   269 01D02 1C00 C        	RETL	@0b00000000	; 1
   270 01D03 1C90 C        	RETL	@0b10010000	; 2
   271 01D04 1C50 C        	RETL	@0b01010000	; 3
   272 01D05 1C40 C        	RETL	@0b01000000	; 4
   273 01D06 1C40 C        	RETL	@0b01000000	; 5
   274 01D07 1C40 C        	RETL	@0b01000000	; 6
   275 01D08 1C18 C        	RETL	@0b00011000	; 7
   276 01D09 1C50 C        	RETL	@0b01010000	; 8
   277 01D0A 1C70 C        	RETL	@0b01110000	; 9
   278            C        
   279 01D0B 1CF0 C        	RETL	@0b11110000	; A
   280 01D0C 1C50 C        	RETL	@0b01010000	; B
   281 01D0D 1C88 C        	RETL	@0b10001000	; C
   282 01D0E 1C70 C        	RETL	@0b01110000	; D
   283 01D0F 1C88 C        	RETL	@0b10001000	; E
   284 01D10 1C08 C        	RETL	@0b00001000	; F
   285 01D11 1CE8 C        	RETL	@0b11101000	; G
   286 01D12 1CF8 C        	RETL	@0b11111000	; H
   287 01D13 1C00 C        	RETL	@0b00000000	; I
   288 01D14 1C08 C        	RETL	@0b00001000	; J
   289 01D15 1C88 C        	RETL	@0b10001000	; K
   290 01D16 1C80 C        	RETL	@0b10000000	; L
   291 01D17 1CF8 C        	RETL	@0xf8		; M
   292 01D18 1CF8 C        	RETL	@0b11111000	; N
   293 01D19 1C70 C        	RETL	@0b01110000	; O
   294 01D1A 1C10 C        	RETL	@0b00010000	; P
   295 01D1B 1CB0 C        	RETL	@0b10110000	; Q
   296 01D1C 1C90 C        	RETL	@0b10010000	; R
   297 01D1D 1C48 C        	RETL	@0b01001000	; S
   298 01D1E 1C08 C                RETL	@0b00001000	; T
   299 01D1F 1C78 C        	RETL	@0b01111000	; U
   300 01D20 1C38 C        	RETL	@0b00111000	; V
   301 01D21 1C78 C        	RETL	@0b01111000	; W
   302 01D22 1C88 C        	RETL	@0b10001000	; X
   303 01D23 1C08 C        	RETL	@0b00001000	; Y
   304 01D24 1C88 C        	RETL	@0b10001000	; Z
   305            C        	
   306 01D25 1C00 C        	RETL	@0		; BLANK
   307            C        
   308 01D26 1CF8 C        	RETL	@0B11111000	; ■
   309            C        
   310 01D27 1C10 C        	RETL	@0b00010000	; ?
   311 01D28 1C00 C        	RETL	@0b0		; !
   312 01D29 1C00 C        	RETL	@0b0		; :
   313 01D2A 1C00 C        	RETL	@0B00000000	; .
   314            C        	
   315 01D2B 1C20 C        	RETL	@0B00100000	; START
   316 01D2C 1CF8 C        	RETL	@0B11111000	; PAUSE
   317 01D2D 1CD8 C        	RETL	@0B11011000	; DEL
   318 01D2E 1C08 C        	RETL	@0B00001000	; /
   319 01D2F 1C80 C        	RETL	@0B10000000	; \
   320 01D30 1C80 C        	RETL	@0B10000000	; _
   321            C        
   322            C        
   323            C        
   324            C        
   325            C        ;ORG	0X1A44
   326            C        ;---对数字(0..0X12)进行合法性检查超出范围的视同空数字
   327 01D31      C        NUM_VERIFY:
   328 01D31 0011 C        	DISI
   329 01D32 0054 C        	MOV	INT_TEMP0,A
   330 01D33 1D12 C        	SUB	A,@0X12
   331            C      M 	JPC	NUM_VERIFY_RET
       01D34 0C03     1     JBC  _STATUS , C 
       01D35 1538     1     JMP  NUM_VERIFY_RET ,
   332            C      M 	MOV	INT_TEMP0,@NUM_BLANK
       01D36 1810     1     MOV A,@( NUM_BLANK )
       01D37 0054     1     MOV  INT_TEMP0 ,A
   333 01D38      C        NUM_VERIFY_RET:
   334 01D38 0414 C        	MOV	A,INT_TEMP0
   335 01D39 0010 C        	ENI
   336 01D3A 0012 C        	RET
   337            C        ;---对字符(0..0X2F)进行合法性检查超出范围的视同空字符
   338 01D3B      C        STR_VERIFY:
   339 01D3B 0011 C        	DISI
   340 01D3C 0054 C        	MOV	INT_TEMP0,A
   341 01D3D 1D2F C        	SUB	A,@0X2F
   342            C      M 	JPC	STR_VERIFY_RET
       01D3E 0C03     1     JBC  _STATUS , C 
       01D3F 1542     1     JMP  STR_VERIFY_RET ,
   343            C      M 	MOV	INT_TEMP0,@CH_BLANK
       01D40 1824     1     MOV A,@( CH_BLANK )
       01D41 0054     1     MOV  INT_TEMP0 ,A
   344 01D42      C        STR_VERIFY_RET:
   345 01D42 0414 C        	MOV	A,INT_TEMP0
   346 01D43 0010 C        	ENI
   347 01D44 0012 C        	RET
   348            C        
   349            C        /***************************************
   350            C        显示第一行标志
   351            C        用一个寄存器标示8个标志
   352            C        .0		REPEAT
   353            C        .1		NEW
   354            C        .2		battery
   355            C        .3		MEMO
   356            C        .4		sencond
   357            C        .5		/
   358            C        .6		spk
   359            C        .7		CALL
   360            C        ***************************************/
   361 01D45      C        VIEW_STAMP:
   362            C        	;MOV	_RC,@LCD_CTRL
   363            C        	;CRAM	_RD,3
   364            C      M 	MOV	_RC,@(LCD_CTRL+1)
       01D45 1881     1     MOV A,@(( LCD_CTRL + 1 ))
       01D46 004C     1     MOV  _RC ,A
   365            C        	;NOP
   366            C      M 	MOV	TEMP0,_RD
       01D47 040D     1     MOV A, _RD 
       01D48 0056     1     MOV  TEMP0 ,A
   367            C        	
   368            C      M 	WR_STAMP	TEMP0,7,@(2+0X40),0,TEMP1
                      2  M  IOW  _IOCB ,@(( 2 + 64 ))
       01D49 1842     2     MOV A,@(( 2 + 64 ))
       01D4A 000B     2     IOW  _IOCB ,
                      2  M  MOV  _RC ,@(( 2 + 64 ))
       01D4B 1842     2     MOV A,@(( 2 + 64 ))
       01D4C 004C     2     MOV  _RC ,A
                      2  M  MOV  TEMP1 , _RD 
       01D4D 040D     2     MOV A, _RD 
       01D4E 0057     2     MOV  TEMP1 ,A
                      2  M  CRAM  TEMP1 , 0 
       01D4F 0817     2     BC  TEMP1 , 0 
                      2  M  JPNB  TEMP0 , 7 ,( $ + 2 )
       01D50 0FD6     2     JBS  TEMP0 , 7 
       01D51 1553     2     JMP ( $ + 2 ),
                      2  M  SRAM  TEMP1 , 0 
       01D52 0A17     2     BS  TEMP1 , 0 
                      2  M  IOW  _IOCC , TEMP1 
       01D53 0417     2     MOV A, TEMP1 
       01D54 000C     2     IOW  _IOCC ,
                      2  M  MOV  _RD , TEMP1 
       01D55 0417     2     MOV A, TEMP1 
       01D56 004D     2     MOV  _RD ,A
   369            C      M 	WR_STAMP	TEMP0,6,@(6+0X40),1,TEMP1
                      2  M  IOW  _IOCB ,@(( 6 + 64 ))
       01D57 1846     2     MOV A,@(( 6 + 64 ))
       01D58 000B     2     IOW  _IOCB ,
                      2  M  MOV  _RC ,@(( 6 + 64 ))
       01D59 1846     2     MOV A,@(( 6 + 64 ))
       01D5A 004C     2     MOV  _RC ,A
                      2  M  MOV  TEMP1 , _RD 
       01D5B 040D     2     MOV A, _RD 
       01D5C 0057     2     MOV  TEMP1 ,A
                      2  M  CRAM  TEMP1 , 1 
       01D5D 0857     2     BC  TEMP1 , 1 
                      2  M  JPNB  TEMP0 , 6 ,( $ + 2 )
       01D5E 0F96     2     JBS  TEMP0 , 6 
       01D5F 1561     2     JMP ( $ + 2 ),
                      2  M  SRAM  TEMP1 , 1 
       01D60 0A57     2     BS  TEMP1 , 1 
                      2  M  IOW  _IOCC , TEMP1 
       01D61 0417     2     MOV A, TEMP1 
       01D62 000C     2     IOW  _IOCC ,
                      2  M  MOV  _RD , TEMP1 
       01D63 0417     2     MOV A, TEMP1 
       01D64 004D     2     MOV  _RD ,A
   370            C      M 	WR_STAMP	TEMP0,5,@(11+0X40),0,TEMP1
                      2  M  IOW  _IOCB ,@(( 11 + 64 ))
       01D65 184B     2     MOV A,@(( 11 + 64 ))
       01D66 000B     2     IOW  _IOCB ,
                      2  M  MOV  _RC ,@(( 11 + 64 ))
       01D67 184B     2     MOV A,@(( 11 + 64 ))
       01D68 004C     2     MOV  _RC ,A
                      2  M  MOV  TEMP1 , _RD 
       01D69 040D     2     MOV A, _RD 
       01D6A 0057     2     MOV  TEMP1 ,A
                      2  M  CRAM  TEMP1 , 0 
       01D6B 0817     2     BC  TEMP1 , 0 
                      2  M  JPNB  TEMP0 , 5 ,( $ + 2 )
       01D6C 0F56     2     JBS  TEMP0 , 5 
       01D6D 156F     2     JMP ( $ + 2 ),
                      2  M  SRAM  TEMP1 , 0 
       01D6E 0A17     2     BS  TEMP1 , 0 
                      2  M  IOW  _IOCC , TEMP1 
       01D6F 0417     2     MOV A, TEMP1 
       01D70 000C     2     IOW  _IOCC ,
                      2  M  MOV  _RD , TEMP1 
       01D71 0417     2     MOV A, TEMP1 
       01D72 004D     2     MOV  _RD ,A
   371            C      M 	WR_STAMP	TEMP0,4,@(28+0X40),0,TEMP1
                      2  M  IOW  _IOCB ,@(( 28 + 64 ))
       01D73 185C     2     MOV A,@(( 28 + 64 ))
       01D74 000B     2     IOW  _IOCB ,
                      2  M  MOV  _RC ,@(( 28 + 64 ))
       01D75 185C     2     MOV A,@(( 28 + 64 ))
       01D76 004C     2     MOV  _RC ,A
                      2  M  MOV  TEMP1 , _RD 
       01D77 040D     2     MOV A, _RD 
       01D78 0057     2     MOV  TEMP1 ,A
                      2  M  CRAM  TEMP1 , 0 
       01D79 0817     2     BC  TEMP1 , 0 
                      2  M  JPNB  TEMP0 , 4 ,( $ + 2 )
       01D7A 0F16     2     JBS  TEMP0 , 4 
       01D7B 157D     2     JMP ( $ + 2 ),
                      2  M  SRAM  TEMP1 , 0 
       01D7C 0A17     2     BS  TEMP1 , 0 
                      2  M  IOW  _IOCC , TEMP1 
       01D7D 0417     2     MOV A, TEMP1 
       01D7E 000C     2     IOW  _IOCC ,
                      2  M  MOV  _RD , TEMP1 
       01D7F 0417     2     MOV A, TEMP1 
       01D80 004D     2     MOV  _RD ,A
   372            C      M 	WR_STAMP	TEMP0,3,@(35+0X40),2,TEMP1
                      2  M  IOW  _IOCB ,@(( 35 + 64 ))
       01D81 1863     2     MOV A,@(( 35 + 64 ))
       01D82 000B     2     IOW  _IOCB ,
                      2  M  MOV  _RC ,@(( 35 + 64 ))
       01D83 1863     2     MOV A,@(( 35 + 64 ))
       01D84 004C     2     MOV  _RC ,A
                      2  M  MOV  TEMP1 , _RD 
       01D85 040D     2     MOV A, _RD 
       01D86 0057     2     MOV  TEMP1 ,A
                      2  M  CRAM  TEMP1 , 2 
       01D87 0897     2     BC  TEMP1 , 2 
                      2  M  JPNB  TEMP0 , 3 ,( $ + 2 )
       01D88 0ED6     2     JBS  TEMP0 , 3 
       01D89 158B     2     JMP ( $ + 2 ),
                      2  M  SRAM  TEMP1 , 2 
       01D8A 0A97     2     BS  TEMP1 , 2 
                      2  M  IOW  _IOCC , TEMP1 
       01D8B 0417     2     MOV A, TEMP1 
       01D8C 000C     2     IOW  _IOCC ,
                      2  M  MOV  _RD , TEMP1 
       01D8D 0417     2     MOV A, TEMP1 
       01D8E 004D     2     MOV  _RD ,A
   373            C      M 	WR_STAMP	TEMP0,2,@(35+0X40),1,TEMP1
                      2  M  IOW  _IOCB ,@(( 35 + 64 ))
       01D8F 1863     2     MOV A,@(( 35 + 64 ))
       01D90 000B     2     IOW  _IOCB ,
                      2  M  MOV  _RC ,@(( 35 + 64 ))
       01D91 1863     2     MOV A,@(( 35 + 64 ))
       01D92 004C     2     MOV  _RC ,A
                      2  M  MOV  TEMP1 , _RD 
       01D93 040D     2     MOV A, _RD 
       01D94 0057     2     MOV  TEMP1 ,A
                      2  M  CRAM  TEMP1 , 1 
       01D95 0857     2     BC  TEMP1 , 1 
                      2  M  JPNB  TEMP0 , 2 ,( $ + 2 )
       01D96 0E96     2     JBS  TEMP0 , 2 
       01D97 1599     2     JMP ( $ + 2 ),
                      2  M  SRAM  TEMP1 , 1 
       01D98 0A57     2     BS  TEMP1 , 1 
                      2  M  IOW  _IOCC , TEMP1 
       01D99 0417     2     MOV A, TEMP1 
       01D9A 000C     2     IOW  _IOCC ,
                      2  M  MOV  _RD , TEMP1 
       01D9B 0417     2     MOV A, TEMP1 
       01D9C 004D     2     MOV  _RD ,A
   374            C      M 	WR_STAMP	TEMP0,1,@(36+0X40),1,TEMP1
                      2  M  IOW  _IOCB ,@(( 36 + 64 ))
       01D9D 1864     2     MOV A,@(( 36 + 64 ))
       01D9E 000B     2     IOW  _IOCB ,
                      2  M  MOV  _RC ,@(( 36 + 64 ))
       01D9F 1864     2     MOV A,@(( 36 + 64 ))
       01DA0 004C     2     MOV  _RC ,A
                      2  M  MOV  TEMP1 , _RD 
       01DA1 040D     2     MOV A, _RD 
       01DA2 0057     2     MOV  TEMP1 ,A
                      2  M  CRAM  TEMP1 , 1 
       01DA3 0857     2     BC  TEMP1 , 1 
                      2  M  JPNB  TEMP0 , 1 ,( $ + 2 )
       01DA4 0E56     2     JBS  TEMP0 , 1 
       01DA5 15A7     2     JMP ( $ + 2 ),
                      2  M  SRAM  TEMP1 , 1 
       01DA6 0A57     2     BS  TEMP1 , 1 
                      2  M  IOW  _IOCC , TEMP1 
       01DA7 0417     2     MOV A, TEMP1 
       01DA8 000C     2     IOW  _IOCC ,
                      2  M  MOV  _RD , TEMP1 
       01DA9 0417     2     MOV A, TEMP1 
       01DAA 004D     2     MOV  _RD ,A
   375            C      M 	WR_STAMP	TEMP0,0,@(37+0X40),1,TEMP1
                      2  M  IOW  _IOCB ,@(( 37 + 64 ))
       01DAB 1865     2     MOV A,@(( 37 + 64 ))
       01DAC 000B     2     IOW  _IOCB ,
                      2  M  MOV  _RC ,@(( 37 + 64 ))
       01DAD 1865     2     MOV A,@(( 37 + 64 ))
       01DAE 004C     2     MOV  _RC ,A
                      2  M  MOV  TEMP1 , _RD 
       01DAF 040D     2     MOV A, _RD 
       01DB0 0057     2     MOV  TEMP1 ,A
                      2  M  CRAM  TEMP1 , 1 
       01DB1 0857     2     BC  TEMP1 , 1 
                      2  M  JPNB  TEMP0 , 0 ,( $ + 2 )
       01DB2 0E16     2     JBS  TEMP0 , 0 
       01DB3 15B5     2     JMP ( $ + 2 ),
                      2  M  SRAM  TEMP1 , 1 
       01DB4 0A57     2     BS  TEMP1 , 1 
                      2  M  IOW  _IOCC , TEMP1 
       01DB5 0417     2     MOV A, TEMP1 
       01DB6 000C     2     IOW  _IOCC ,
                      2  M  MOV  _RD , TEMP1 
       01DB7 0417     2     MOV A, TEMP1 
       01DB8 004D     2     MOV  _RD ,A
   376 01DB9 0012 C        	RET
   377            C        	
   378            C        
   379            C        WR_STAMP	MACRO	STAMP_REG,STAMP_BIT,@LCD_ADDR,LCD_BIT,STAMP_TEMP
   380            C        	IOW	_IOCB,@LCD_ADDR
   381            C        	MOV	_RC,@LCD_ADDR
   382            C        	;NOP
   383            C        	MOV	STAMP_TEMP,_RD
   384            C        	;IOR	STAMP_TEMP,_IOCC
   385            C        	CRAM	STAMP_TEMP,LCD_BIT
   386            C        	JPNB	STAMP_REG,STAMP_BIT,$+2
   387            C        	SRAM	STAMP_TEMP,LCD_BIT
   388            C        	IOW	_IOCC,STAMP_TEMP
   389            C        	MOV	_RD,STAMP_TEMP
   390            C        	ENDM
   391            C        	
   392            C        /***************************************
   393            C        显示第一行的数字
   394            C        数字信息按顺序列在10个数字寄存器中
   395            C        ***************************************/
   396 01DBA      C        VIEW_NUM1:
   397            C        	;MOV	_RC,@LCD_CTRL
   398            C        	;CRAM	_RD,4
   399 01DBA 00D6 C        	CLR	TEMP0				; 显示的位数
   400 01DBB      C        VIEW_NUM1_LOOP:
   401 01DBB 00D7 C        	CLR	TEMP1				; 显示的地址
   402 01DBC 00D8 C        	CLR	TEMP2				; 显示的列
   403 01DBD 0416 C        	MOV	A,TEMP0
   404 01DBE 1D09 C        	SUB	A,@9
   405 01DBF 1F82 C        	ADD	A,@(LCD_CTRL+2)
   406 01DC0 004C C        	MOV	_RC,A
   407            C      M 	MOV	TEMP3,_RD			; 得到需要显示的字符
       01DC1 040D     1     MOV A, _RD 
       01DC2 0059     1     MOV  TEMP3 ,A
   408            C      M 	JPNB	TEMP3,7,VIEW_NUM1_NOTFLASH
       01DC3 0FD9     1     JBS  TEMP3 , 7 
       01DC4 15CB     1     JMP  VIEW_NUM1_NOTFLASH ,
   409            C      M 	MOV	_RC,@LCD_CTRL
       01DC5 1880     1     MOV A,@( LCD_CTRL )
       01DC6 004C     1     MOV  _RC ,A
   410            C      M 	JPNB	_RD,6,VIEW_NUM1_NOTFLASH
       01DC7 0F8D     1     JBS  _RD , 6 
       01DC8 15CB     1     JMP  VIEW_NUM1_NOTFLASH ,
   411            C      M 	MOV	TEMP3,@NUM_BLANK
       01DC9 1810     1     MOV A,@( NUM_BLANK )
       01DCA 0059     1     MOV  TEMP3 ,A
   412 01DCB      C        VIEW_NUM1_NOTFLASH:
   413            C      M 	ANDA	TEMP3,@0X7F
       01DCB 187F     1     MOV A,@( 127 )
       01DCC 0299     1     AND A, TEMP3 
   414 01DCD 1131 C        	CALL	NUM_VERIFY
   415            C      M 	CALL	#second_line_tab
       01DCE 1000     1     CALL ( SECOND_LINE_TAB % 1024 ),
   416 01DCF 0059 C        	MOV	TEMP3,A				; 查表得到字符对应的段码
   417            C      M 	ADD	TEMP1,@0X40			; 字符在COM8~COM15，需要+40H的偏移地址
       01DD0 1840     1     MOV A,@( 64 )
       01DD1 03D7     1     ADD  TEMP1 ,A
   418 01DD2 0416 C        	MOV	A,TEMP0
   419 01DD3 12EF C        	CALL	VIEW_NUM1_ROW
   420 01DD4 03D7 C        	ADD	TEMP1,A
   421 01DD5      C        VIEW_NUM1_LOOP_1:
   422            C      M 	MOV	TEMP4,TEMP3
       01DD5 0419     1     MOV A, TEMP3 
       01DD6 005F     1     MOV  TEMP4 ,A
   423            C      M 	ADDA	TEMP1,TEMP2			; 再+列 得到实际地址
       01DD7 0418     1     MOV A, TEMP2 
       01DD8 0397     1     ADD A, TEMP1 
   424 01DD9 000B C        	IOW	_IOCB
   425 01DDA 004C C        	MOV	_RC,A
   426            C        	
   427 01DDB 0418 C        	MOV	A,TEMP2
   428            C      M 	JPZ	VIEW_NUM1_LOOP1
       01DDC 0C83     1     JBC  _STATUS , Z 
       01DDD 15E6     1     JMP  VIEW_NUM1_LOOP1 ,
   429            C      M 	SUBA	TEMP2,@1
       01DDE 1801     1     MOV A,@( 1 )
       01DDF 0118     1     SUB A, TEMP2 
   430            C      M 	JPZ	VIEW_NUM1_LOOP2
       01DE0 0C83     1     JBC  _STATUS , Z 
       01DE1 15F0     1     JMP  VIEW_NUM1_LOOP2 ,
   431            C      M 	SUBA	TEMP2,@2
       01DE2 1802     1     MOV A,@( 2 )
       01DE3 0118     1     SUB A, TEMP2 
   432            C      M 	JPZ	VIEW_NUM1_LOOP3
       01DE4 0C83     1     JBC  _STATUS , Z 
       01DE5 15F8     1     JMP  VIEW_NUM1_LOOP3 ,
   433            C        	;JMP	SHOW_ERR
   434 01DE6      C        VIEW_NUM1_LOOP1:
   435 01DE6 065F C        	RRC	TEMP4
   436 01DE7 065F C        	RRC	TEMP4
   437 01DE8 065F C        	RRC	TEMP4
   438 01DE9 065F C        	RRC	TEMP4
   439            C      M 	AND	TEMP4,@6
       01DEA 1806     1     MOV A,@( 6 )
       01DEB 02DF     1     AND  TEMP4 ,A
   440 01DEC 040D C        	MOV	A,_RD
   441 01DED 1AF9 C        	AND	A,@0XF9
   442 01DEE 021F C        	OR	A,TEMP4
   443 01DEF 15FF C        	JMP	VIEW_NUM1_LOOP_2
   444 01DF0      C        VIEW_NUM1_LOOP2:
   445 01DF0 065F C        	RRC	TEMP4
   446 01DF1 065F C        	RRC	TEMP4
   447            C      M 	AND	TEMP4,@7
       01DF2 1807     1     MOV A,@( 7 )
       01DF3 02DF     1     AND  TEMP4 ,A
   448 01DF4 040D C        	MOV	A,_RD
   449 01DF5 1AF8 C        	AND	A,@0XF8
   450 01DF6 021F C        	OR	A,TEMP4
   451 01DF7 15FF C        	JMP	VIEW_NUM1_LOOP_2
   452 01DF8      C        VIEW_NUM1_LOOP3:
   453 01DF8 06DF C        	RLC	TEMP4
   454            C      M 	AND	TEMP4,@6
       01DF9 1806     1     MOV A,@( 6 )
       01DFA 02DF     1     AND  TEMP4 ,A
   455 01DFB 040D C        	MOV	A,_RD
   456 01DFC 1AF9 C        	AND	A,@0XF9
   457 01DFD 021F C        	OR	A,TEMP4
   458 01DFE 15FF C        	JMP	VIEW_NUM1_LOOP_2
   459            C        	
   460 01DFF      C        VIEW_NUM1_LOOP_2:
   461 01DFF 004D C        	MOV	_RD,A
   462 01E00 000C C        	IOW	_IOCC
   463            C      M 	SUBA	TEMP0,@3
       01E01 1803     1     MOV A,@( 3 )
       01E02 0116     1     SUB A, TEMP0 
   464            C      M 	JPNZ	VIEW_NUM1_LOOP_21
       01E03 0E83     1     JBS  _STATUS , Z 
       01E04 1608     1     JMP  VIEW_NUM1_LOOP_21 ,
   465 01E05 0418 C        	MOV	A,TEMP2
   466            C      M 	JPZ	VIEW_NUM1_LOOP_22
       01E06 0C83     1     JBC  _STATUS , Z 
       01E07 160D     1     JMP  VIEW_NUM1_LOOP_22 ,
   467 01E08      C        VIEW_NUM1_LOOP_21:
   468 01E08 0558 C        	INC	TEMP2
   469            C      M 	SUBA	TEMP2,@3
       01E09 1803     1     MOV A,@( 3 )
       01E0A 0118     1     SUB A, TEMP2 
   470            C      M 	JPNZ	VIEW_NUM1_LOOP_1
       01E0B 0E83     1     JBS  _STATUS , Z 
       01E0C 15D5     1     JMP  VIEW_NUM1_LOOP_1 ,
   471 01E0D      C        VIEW_NUM1_LOOP_22:
   472 01E0D 0556 C        	INC	TEMP0
   473            C      M 	SUBA	TEMP0,@10
       01E0E 180A     1     MOV A,@( 10 )
       01E0F 0116     1     SUB A, TEMP0 
   474            C      M 	JPNZ	VIEW_NUM1_LOOP
       01E10 0E83     1     JBS  _STATUS , Z 
       01E11 15BB     1     JMP  VIEW_NUM1_LOOP ,
   475            C        	
   476 01E12 0012 C        	RET
   477            C        
   478            C        
   479            C        /***************************************
   480            C        显示第二行的数字
   481            C        数字信息按顺序列在以(LCD_CTRL+12)开始的16个数字寄存器中
   482            C        ***************************************/
   483 01E13      C        VIEW_NUM2:
   484            C        	;MOV	_RC,@LCD_CTRL
   485            C        	;CRAM	_RD,5
   486 01E13 00D6 C        	CLR	TEMP0				; 显示的位数
   487 01E14      C        VIEW_NUM2_LOOP:
   488 01E14 00D7 C        	CLR	TEMP1				; 显示地址
   489 01E15 00D8 C        	CLR	TEMP2				; 显示的列
   490 01E16 0416 C        	MOV	A,TEMP0
   491 01E17 1D0F C        	SUB	A,@15
   492 01E18 1F8C C        	ADD	A,@(LCD_CTRL+12)
   493 01E19 004C C        	MOV	_RC,A
   494            C      M 	MOV	TEMP3,_RD			; 得到需要显示的字符
       01E1A 040D     1     MOV A, _RD 
       01E1B 0059     1     MOV  TEMP3 ,A
   495            C      M 	JPNB	TEMP3,7,VIEW_NUM2_NOTFLASH
       01E1C 0FD9     1     JBS  TEMP3 , 7 
       01E1D 1624     1     JMP  VIEW_NUM2_NOTFLASH ,
   496            C      M 	MOV	_RC,@LCD_CTRL
       01E1E 1880     1     MOV A,@( LCD_CTRL )
       01E1F 004C     1     MOV  _RC ,A
   497            C      M 	JPNB	_RD,6,VIEW_NUM2_NOTFLASH
       01E20 0F8D     1     JBS  _RD , 6 
       01E21 1624     1     JMP  VIEW_NUM2_NOTFLASH ,
   498            C      M 	MOV	TEMP3,@NUM_BLANK
       01E22 1810     1     MOV A,@( NUM_BLANK )
       01E23 0059     1     MOV  TEMP3 ,A
   499 01E24      C        VIEW_NUM2_NOTFLASH:
   500            C      M 	ANDA	TEMP3,@0X7F			; 得到需要显示的数字
       01E24 187F     1     MOV A,@( 127 )
       01E25 0299     1     AND A, TEMP3 
   501 01E26 1131 C        	CALL	NUM_VERIFY
   502            C      M 	CALL	#second_line_tab
       01E27 1000     1     CALL ( SECOND_LINE_TAB % 1024 ),
   503 01E28 0059 C        	MOV	TEMP3,A				; 查表得到字符对应的段码
   504            C        	
   505            C      M 	CLRC
       01E29 0803     1     BC  _STATUS , C 
   506 01E2A 0616 C        	RRCA	TEMP0
   507 01E2B 005F C        	MOV	TEMP4,A
   508 01E2C 039F C        	ADD	A,TEMP4
   509 01E2D 039F C        	ADD	A,TEMP4
   510 01E2E 039F C        	ADD	A,TEMP4
   511 01E2F 039F C        	ADD	A,TEMP4				; (TEMP0>>1)*5
   512 01E30 03D7 C        	ADD	TEMP1,A
   513 01E31      C        VIEW_NUM2_LOOP_1:
   514            C      M 	MOV	TEMP4,TEMP3
       01E31 0419     1     MOV A, TEMP3 
       01E32 005F     1     MOV  TEMP4 ,A
   515            C      M 	JPB	TEMP0,0,VIEW_NUM2_LOOP_ODD
       01E33 0C16     1     JBC  TEMP0 , 0 
       01E34 165D     1     JMP  VIEW_NUM2_LOOP_ODD ,
   516 01E35      C        VIEW_NUM2_LOOP_EVEN:				; 显示偶数位的数字
   517            C        ; 偶数位排列同第一行的数字：232型排列: 0cbdgaef	cb0 dga ef0
   518            C      M 	ADDA	TEMP1,TEMP2
       01E35 0418     1     MOV A, TEMP2 
       01E36 0397     1     ADD A, TEMP1 
   519 01E37 000B C        	IOW	_IOCB
   520 01E38 004C C        	MOV	_RC,A
   521            C        	
   522 01E39 0418 C        	MOV	A,TEMP2
   523            C      M 	JPZ	VIEW_NUM2_LOOP_EVEN_1
       01E3A 0C83     1     JBC  _STATUS , Z 
       01E3B 1644     1     JMP  VIEW_NUM2_LOOP_EVEN_1 ,
   524            C      M 	SUBA	TEMP2,@1
       01E3C 1801     1     MOV A,@( 1 )
       01E3D 0118     1     SUB A, TEMP2 
   525            C      M 	JPZ	VIEW_NUM2_LOOP_EVEN_2
       01E3E 0C83     1     JBC  _STATUS , Z 
       01E3F 164E     1     JMP  VIEW_NUM2_LOOP_EVEN_2 ,
   526            C      M 	SUBA	TEMP2,@2
       01E40 1802     1     MOV A,@( 2 )
       01E41 0118     1     SUB A, TEMP2 
   527            C      M 	JPZ	VIEW_NUM2_LOOP_EVEN_3
       01E42 0C83     1     JBC  _STATUS , Z 
       01E43 1656     1     JMP  VIEW_NUM2_LOOP_EVEN_3 ,
   528            C        	;JMP	VIEW_ERR
   529 01E44      C        VIEW_NUM2_LOOP_EVEN_1:
   530 01E44 065F C        	RRC	TEMP4
   531 01E45 065F C        	RRC	TEMP4
   532 01E46 065F C        	RRC	TEMP4
   533 01E47 065F C        	RRC	TEMP4
   534            C      M 	AND	TEMP4,@6
       01E48 1806     1     MOV A,@( 6 )
       01E49 02DF     1     AND  TEMP4 ,A
   535 01E4A 040D C        	MOV	A,_RD
   536 01E4B 1AF9 C        	AND	A,@0XF9
   537 01E4C 021F C        	OR	A,TEMP4
   538 01E4D 1690 C        	JMP	VIEW_NUM2_LOOP_2
   539 01E4E      C        VIEW_NUM2_LOOP_EVEN_2:
   540 01E4E 065F C        	RRC	TEMP4
   541 01E4F 065F C        	RRC	TEMP4
   542            C      M 	AND	TEMP4,@7
       01E50 1807     1     MOV A,@( 7 )
       01E51 02DF     1     AND  TEMP4 ,A
   543 01E52 040D C        	MOV	A,_RD
   544 01E53 1AF8 C        	AND	A,@0XF8
   545 01E54 021F C        	OR	A,TEMP4
   546 01E55 1690 C        	JMP	VIEW_NUM2_LOOP_2
   547 01E56      C        VIEW_NUM2_LOOP_EVEN_3:
   548 01E56 06DF C        	RLC	TEMP4
   549            C      M 	AND	TEMP4,@6
       01E57 1806     1     MOV A,@( 6 )
       01E58 02DF     1     AND  TEMP4 ,A
   550 01E59 040D C        	MOV	A,_RD
   551 01E5A 1AF9 C        	AND	A,@0XF9
   552 01E5B 021F C        	OR	A,TEMP4
   553 01E5C 1690 C        	JMP	VIEW_NUM2_LOOP_2
   554            C        
   555 01E5D      C        VIEW_NUM2_LOOP_ODD:
   556            C        ; 奇数位排列规则为：133型排列: 0cbdgaef 00b cga def
   557            C      M 	ADDA	TEMP1,TEMP2
       01E5D 0418     1     MOV A, TEMP2 
       01E5E 0397     1     ADD A, TEMP1 
   558 01E5F 1F02 C        	ADD	A,@2				; +2
   559 01E60 000B C        	IOW	_IOCB
   560 01E61 004C C        	MOV	_RC,A
   561            C        	
   562 01E62 0418 C        	MOV	A,TEMP2
   563            C      M 	JPZ	VIEW_NUM2_LOOP_ODD_1
       01E63 0C83     1     JBC  _STATUS , Z 
       01E64 166D     1     JMP  VIEW_NUM2_LOOP_ODD_1 ,
   564            C      M 	SUBA	TEMP2,@1
       01E65 1801     1     MOV A,@( 1 )
       01E66 0118     1     SUB A, TEMP2 
   565            C      M 	JPZ	VIEW_NUM2_LOOP_ODD_2
       01E67 0C83     1     JBC  _STATUS , Z 
       01E68 1678     1     JMP  VIEW_NUM2_LOOP_ODD_2 ,
   566            C      M 	SUBA	TEMP2,@2
       01E69 1802     1     MOV A,@( 2 )
       01E6A 0118     1     SUB A, TEMP2 
   567            C      M 	JPZ	VIEW_NUM2_LOOP_ODD_3
       01E6B 0C83     1     JBC  _STATUS , Z 
       01E6C 1685     1     JMP  VIEW_NUM2_LOOP_ODD_3 ,
   568            C        	;JMP	VIEW_ERR
   569 01E6D      C        VIEW_NUM2_LOOP_ODD_1:
   570 01E6D 065F C        	RRC	TEMP4
   571 01E6E 065F C        	RRC	TEMP4
   572 01E6F 065F C        	RRC	TEMP4
   573 01E70 065F C        	RRC	TEMP4
   574 01E71 065F C        	RRC	TEMP4
   575            C      M 	AND	TEMP4,@1
       01E72 1801     1     MOV A,@( 1 )
       01E73 02DF     1     AND  TEMP4 ,A
   576 01E74 040D C        	MOV	A,_RD
   577 01E75 1AFE C        	AND	A,@0XFE
   578 01E76 021F C        	OR	A,TEMP4
   579 01E77 1690 C        	JMP	VIEW_NUM2_LOOP_2
   580 01E78      C        VIEW_NUM2_LOOP_ODD_2:
   581            C      M 	AND	_RD,@0XF8
       01E78 18F8     1     MOV A,@( 248 )
       01E79 02CD     1     AND  _RD ,A
   582 01E7A 065F C        	RRC	TEMP4
   583 01E7B 065F C        	RRC	TEMP4
   584 01E7C 041F C        	MOV	A,TEMP4
   585 01E7D 1A03 C        	AND	A,@3
   586 01E7E 024D C        	OR	_RD,A
   587 01E7F 065F C        	RRC	TEMP4
   588 01E80 065F C        	RRC	TEMP4
   589 01E81 041F C        	MOV	A,TEMP4
   590 01E82 1A04 C        	AND	A,@4
   591 01E83 020D C        	OR	A,_RD
   592 01E84 1690 C        	JMP	VIEW_NUM2_LOOP_2
   593 01E85      C        VIEW_NUM2_LOOP_ODD_3:
   594            C      M 	AND	_RD,@0XF8
       01E85 18F8     1     MOV A,@( 248 )
       01E86 02CD     1     AND  _RD ,A
   595 01E87 041F C        	MOV	A,TEMP4
   596 01E88 1A03 C        	AND	A,@3
   597 01E89 024D C        	OR	_RD,A
   598 01E8A 065F C        	RRC	TEMP4
   599 01E8B 065F C        	RRC	TEMP4
   600 01E8C 041F C        	MOV	A,TEMP4
   601 01E8D 1A04 C        	AND	A,@4
   602 01E8E 020D C        	OR	A,_RD
   603 01E8F 1690 C        	JMP	VIEW_NUM2_LOOP_2
   604            C        	
   605 01E90      C        VIEW_NUM2_LOOP_2:
   606 01E90 004D C        	MOV	_RD,A
   607 01E91 000C C        	IOW	_IOCC
   608 01E92 0558 C        	INC	TEMP2
   609            C      M 	SUBA	TEMP2,@3
       01E93 1803     1     MOV A,@( 3 )
       01E94 0118     1     SUB A, TEMP2 
   610            C      M 	JPNZ	VIEW_NUM2_LOOP_1
       01E95 0E83     1     JBS  _STATUS , Z 
       01E96 1631     1     JMP  VIEW_NUM2_LOOP_1 ,
   611 01E97 0556 C        	INC	TEMP0
   612            C      M 	SUBA	TEMP0,@16
       01E98 1810     1     MOV A,@( 16 )
       01E99 0116     1     SUB A, TEMP0 
   613            C      M 	JPNZ	VIEW_NUM2_LOOP
       01E9A 0E83     1     JBS  _STATUS , Z 
       01E9B 1614     1     JMP  VIEW_NUM2_LOOP ,
   614            C        	
   615 01E9C 0012 C        	RET
   616            C        	
   617            C        
   618            C        /*******************************************************************************
   619            C        显示第三行的字符串
   620            C        字符串信息按顺序列在以(LCD_CTRL+28)开始的16个字符寄存器中
   621            C        *******************************************************************************/
   622 01E9D      C        VIEW_STR:
   623            C        	;MOV	_RC,@LCD_CTRL
   624            C        	;CRAM	_RD,6
   625 01E9D 00D6 C        	CLR	TEMP0				; 显示的位数序号(第三行有16位.从0开始,到15结束)
   626 01E9E      C        VIEW_STR_LOOP:
   627 01E9E 00D7 C        	CLR	TEMP1				; 显示地址
   628 01E9F 00D8 C        	CLR	TEMP2				; 显示的列
   629 01EA0 0416 C        	MOV	A,TEMP0
   630 01EA1 1D0F C        	SUB	A,@15
   631 01EA2 1F9C C        	ADD	A,@(LCD_CTRL+28)
   632 01EA3 004C C        	MOV	_RC,A
   633            C      M 	MOV	TEMP3,_RD			; 得到需要显示的字符
       01EA4 040D     1     MOV A, _RD 
       01EA5 0059     1     MOV  TEMP3 ,A
   634            C      M 	JPNB	TEMP3,7,VIEW_STR_NOTFLASH
       01EA6 0FD9     1     JBS  TEMP3 , 7 
       01EA7 16AE     1     JMP  VIEW_STR_NOTFLASH ,
   635            C      M 	MOV	_RC,@LCD_CTRL
       01EA8 1880     1     MOV A,@( LCD_CTRL )
       01EA9 004C     1     MOV  _RC ,A
   636            C      M 	JPNB	_RD,6,VIEW_STR_NOTFLASH
       01EAA 0F8D     1     JBS  _RD , 6 
       01EAB 16AE     1     JMP  VIEW_STR_NOTFLASH ,
   637            C      M 	MOV	TEMP3,@CH_BLANK
       01EAC 1824     1     MOV A,@( CH_BLANK )
       01EAD 0059     1     MOV  TEMP3 ,A
   638 01EAE      C        VIEW_STR_NOTFLASH:
   639            C      M 	AND	TEMP3,@0X7F
       01EAE 187F     1     MOV A,@( 127 )
       01EAF 02D9     1     AND  TEMP3 ,A
   640            C        	;MOV	TEMP3,_RD			; 得到需要显示的字符
   641            C      M 	JPB	TEMP0,0,VIEW_STR_LOOP_ODD
       01EB0 0C16     1     JBC  TEMP0 , 0 
       01EB1 16B4     1     JMP  VIEW_STR_LOOP_ODD ,
   642 01EB2      C        VIEW_STR_LOOP_EVEN:				; 0 2 4 6
   643            C      M 	ADD	TEMP1,@0X40			; +偏移
       01EB2 1840     1     MOV A,@( 64 )
       01EB3 03D7     1     ADD  TEMP1 ,A
   644 01EB4      C        VIEW_STR_LOOP_ODD:				; 1 3 5 7
   645            C      M 	CLRC
       01EB4 0803     1     BC  _STATUS , C 
   646 01EB5 0616 C        	RRCA	TEMP0
   647 01EB6 005F C        	MOV	TEMP4,A
   648 01EB7 039F C        	ADD	A,TEMP4
   649 01EB8 039F C        	ADD	A,TEMP4
   650 01EB9 039F C        	ADD	A,TEMP4
   651 01EBA 039F C        	ADD	A,TEMP4				; (TEMP0>>1)*5 得到需要显示的偏移地址
   652 01EBB 03D7 C        	ADD	TEMP1,A
   653 01EBC      C        VIEW_STR_LOOP_2:
   654 01EBC 0418 C        	MOV	A,TEMP2
   655            C      M 	JPB	TEMP0,0,VIEW_STR_LOOP_2_ODD
       01EBD 0C16     1     JBC  TEMP0 , 0 
       01EBE 16C0     1     JMP  VIEW_STR_LOOP_2_ODD ,
   656 01EBF      C        VIEW_STR_LOOP_2_EVEN:
   657 01EBF 1D04 C        	SUB	A,@4				; 偶数字符需要倒向
   658 01EC0      C        VIEW_STR_LOOP_2_ODD:
   659 01EC0 0397 C        	ADD	A,TEMP1				; 偏移+列 得到实际地址
   660            C        	;MOV	TEMP4,A
   661            C        	;IOW	_IOCB,TEMP4
   662            C        	;MOV	_RC,TEMP4
   663 01EC1 000B C        	IOW	_IOCB
   664 01EC2 004C C        	MOV	_RC,A
   665            C      M 	VIEW_STR_TAB	TEMP3,TEMP2		; 根据字符和列得到在该列该字符的显示值。
       01EC3 0418     1     MOV A, TEMP2 
       01EC4 0020     1     TBL 
       01EC5 16CA     1     JMP  VIEW_STR_1 ,
       01EC6 16CE     1     JMP  VIEW_STR_2 ,
       01EC7 16D2     1     JMP  VIEW_STR_3 ,
       01EC8 16D6     1     JMP  VIEW_STR_4 ,
       01EC9 16DA     1     JMP  VIEW_STR_5 ,
       01ECA          1    VIEW_STR_1:   
       01ECA 0419     1     MOV A, TEMP3 
       01ECB 113B     1     CALL  STR_VERIFY ,
                      2  M  CALL #( THIRD_LINE_TABA ),
       01ECC 1014     2     CALL ( THIRD_LINE_TABA % 1024 ),
       01ECD 16DE     1     JMP  VIEW_STR_TAB_RET ,
       01ECE          1    VIEW_STR_2:   
       01ECE 0419     1     MOV A, TEMP3 
       01ECF 113B     1     CALL  STR_VERIFY ,
                      2  M  CALL #( THIRD_LINE_TABB ),
       01ED0 1045     2     CALL ( THIRD_LINE_TABB % 1024 ),
       01ED1 16DE     1     JMP  VIEW_STR_TAB_RET ,
       01ED2          1    VIEW_STR_3:   
       01ED2 0419     1     MOV A, TEMP3 
       01ED3 113B     1     CALL  STR_VERIFY ,
                      2  M  CALL #( THIRD_LINE_TABC ),
       01ED4 1076     2     CALL ( THIRD_LINE_TABC % 1024 ),
       01ED5 16DE     1     JMP  VIEW_STR_TAB_RET ,
       01ED6          1    VIEW_STR_4:   
       01ED6 0419     1     MOV A, TEMP3 
       01ED7 113B     1     CALL  STR_VERIFY ,
                      2  M  CALL #( THIRD_LINE_TABD ),
       01ED8 10A7     2     CALL ( THIRD_LINE_TABD % 1024 ),
       01ED9 16DE     1     JMP  VIEW_STR_TAB_RET ,
       01EDA          1    VIEW_STR_5:   
       01EDA 0419     1     MOV A, TEMP3 
       01EDB 113B     1     CALL  STR_VERIFY ,
                      2  M  CALL #( THIRD_LINE_TABE ),
       01EDC 1100     2     CALL ( THIRD_LINE_TABE % 1024 ),
       01EDD 16DE     1     JMP  VIEW_STR_TAB_RET ,
       01EDE          1    VIEW_STR_TAB_RET:   
   666 01EDE 005F C        	MOV	TEMP4,A
   667            C        	;IOW	_IOCB,TEMP1
   668            C        	;NOP
   669 01EDF 040D C        	MOV	A,_RD
   670            C        	;IOR	_IOCC
   671 01EE0 1A07 C        	AND	A,@7
   672 01EE1 021F C        	OR	A,TEMP4
   673 01EE2 000C C        	IOW	_IOCC
   674 01EE3 004D C        	MOV	_RD,A
   675 01EE4 0558 C        	INC	TEMP2
   676            C      M 	SUBA	TEMP2,@5
       01EE5 1805     1     MOV A,@( 5 )
       01EE6 0118     1     SUB A, TEMP2 
   677            C      M 	JPNZ	VIEW_STR_LOOP_2
       01EE7 0E83     1     JBS  _STATUS , Z 
       01EE8 16BC     1     JMP  VIEW_STR_LOOP_2 ,
   678 01EE9 0556 C        	INC	TEMP0
   679            C      M 	SUBA	TEMP0,@16
       01EEA 1810     1     MOV A,@( 16 )
       01EEB 0116     1     SUB A, TEMP0 
   680            C      M 	JPNZ	VIEW_STR_LOOP
       01EEC 0E83     1     JBS  _STATUS , Z 
       01EED 169E     1     JMP  VIEW_STR_LOOP ,
   681            C        	
   682 01EEE 0012 C        	RET
   683            C        	
   684            C        VIEW_STR_TAB	MACRO	STR,STR_ROW
   685            C        	MOV	A,STR_ROW
   686            C        	TBL
   687            C        	JMP	VIEW_STR_1
   688            C        	JMP	VIEW_STR_2
   689            C        	JMP	VIEW_STR_3
   690            C        	JMP	VIEW_STR_4
   691            C        	JMP	VIEW_STR_5
   692            C        VIEW_STR_1:
   693            C        	MOV	A,STR
   694            C        	CALL	STR_VERIFY
   695            C        	CALL	#THIRD_LINE_TABA
   696            C        	JMP	VIEW_STR_TAB_RET
   697            C        VIEW_STR_2:
   698            C        	MOV	A,STR
   699            C        	CALL	STR_VERIFY
   700            C        	CALL	#THIRD_LINE_TABB
   701            C        	JMP	VIEW_STR_TAB_RET
   702            C        VIEW_STR_3:
   703            C        	MOV	A,STR
   704            C        	CALL	STR_VERIFY
   705            C        	CALL	#THIRD_LINE_TABC
   706            C        	JMP	VIEW_STR_TAB_RET
   707            C        VIEW_STR_4:
   708            C        	MOV	A,STR
   709            C        	CALL	STR_VERIFY
   710            C        	CALL	#THIRD_LINE_TABD
   711            C        	JMP	VIEW_STR_TAB_RET
   712            C        VIEW_STR_5:
   713            C        	MOV	A,STR
   714            C        	CALL	STR_VERIFY
   715            C        	CALL	#THIRD_LINE_TABE
   716            C        	JMP	VIEW_STR_TAB_RET
   717            C        VIEW_STR_TAB_RET:
   718            C        	ENDM
   719            C        
   720            C        ;-------------------------------------------------------------------------------
   721 01EEF      C        VIEW_NUM1_ROW:
   722 01EEF 0020 C        	TBL
   723 01EF0 1C00 C        	RETL	0
   724 01EF1 1C03 C        	RETL	3
   725 01EF2 1C07 C        	RETL	7
   726 01EF3 1C0A C        	RETL	10
   727 01EF4 1C0B C        	RETL	11
   728 01EF5 1C0E C        	RETL	14
   729 01EF6 1C17 C        	RETL	23
   730 01EF7 1C1A C        	RETL	26
   731 01EF8 1C1D C        	RETL	29
   732 01EF9 1C20 C        	RETL	32
   733            C        
   734            C        
   735            C        /***************************************
   736            C        外部可调用VIEW_LCD
   737            C        LCD显示
   738            C        LCD_CTRL	LCD显示控制器
   739            C        .0~.1		显示区块计数
   740            C        .2		闪烁
   741            C        .3		显示第一行标志控制		0/1 不需要显示/需要显示
   742            C        .4		显示第一行字符控制		0/1 不需要显示/需要显示
   743            C        .5		显示第二行字符控制		0/1 不需要显示/需要显示
   744            C        .6		显示第三行字符控制		0/1 不需要显示/需要显示
   745            C        .7		全局显示控制			0/1 全体不需要显示/全体需要显示
   746            C        全部使用CID RAM的BANK0
   747            C        0~127为LCD RAM的映射
   748            C        128为LCD显示控制器
   749            C        其后寄存器说明：
   750            C        128+1		第一行印花寄存器
   751            C        128+2~11	第一行数字寄存器
   752            C        128+12~27	第二行数字寄存器
   753            C        128+28~43	第三行字符寄存器
   754            C        ***************************************/
   755            C        ;ORG	0X1E80
   756 01EFA      C        LCD_VIEW:
   757            C      M 	CIDBANK	0
       01EFA 080B     1     BC  _RB , 0 
       01EFB 088B     1     BC  _RB , 2 
   758            C      M 	BANK	0
       01EFC 0984     1     BC  _RSR , 6 
       01EFD 09C4     1     BC  _RSR , 7 
   759            C      M 	MOV	_RC,@LCD_CTRL
       01EFE 1880     1     MOV A,@( LCD_CTRL )
       01EFF 004C     1     MOV  _RC ,A
   760            C        	;NOP
   761            C        	;MOV	TEMP0,_RD
   762 01F00 0429 C        	MOV	A,TMR_FLASH
   763            C      M 	JPNZ	$+8
       01F01 0E83     1     JBS  _STATUS , Z 
       01F02 170A     1     JMP ( $ + 8 ),
   764            C      M 	BINVRAM	_RD,6
                      2  M  JPB  _RD , 6 ,( $ + 3 )
       01F03 0D8D     2     JBC  _RD , 6 
       01F04 1707     2     JMP ( $ + 3 ),
       01F05 0B8D     1     BS  _RD , 6 
       01F06 1708     1     JMP ( $ + 2 ),
       01F07 098D     1     BC  _RD , 6 
   765            C      M 	MOV	TMR_FLASH,@50
       01F08 1832     1     MOV A,@( 50 )
       01F09 0069     1     MOV  TMR_FLASH ,A
   766            C        	
   767            C      M 	JPNB	_RD,7,LCD_VIEW_RET
       01F0A 0FCD     1     JBS  _RD , 7 
       01F0B 1729     1     JMP  LCD_VIEW_RET ,
   768 01F0C 040D C        	MOV	A,_RD
   769 01F0D 1F01 C        	ADD	A,@1
   770 01F0E 1A03 C        	AND	A,@3
   771 01F0F 0057 C        	MOV	TEMP1,A
   772            C      M 	ANDA	_RD,@0XFC
       01F10 18FC     1     MOV A,@( 252 )
       01F11 028D     1     AND A, _RD 
   773 01F12 0397 C        	ADD	A,TEMP1
   774 01F13 004D C        	MOV	_RD,A
   775            C        	
   776            C      M 	SUBA	TEMP1,@0
       01F14 1800     1     MOV A,@( 0 )
       01F15 0117     1     SUB A, TEMP1 
   777            C      M 	JPZ	LCD_VIEW_STAMP
       01F16 0C83     1     JBC  _STATUS , Z 
       01F17 1725     1     JMP  LCD_VIEW_STAMP ,
   778            C      M 	SUBA	TEMP1,@1
       01F18 1801     1     MOV A,@( 1 )
       01F19 0117     1     SUB A, TEMP1 
   779            C      M 	JPZ	LCD_VIEW_NUM1
       01F1A 0C83     1     JBC  _STATUS , Z 
       01F1B 1726     1     JMP  LCD_VIEW_NUM1 ,
   780            C      M 	SUBA	TEMP1,@2
       01F1C 1802     1     MOV A,@( 2 )
       01F1D 0117     1     SUB A, TEMP1 
   781            C      M 	JPZ	LCD_VIEW_NUM2
       01F1E 0C83     1     JBC  _STATUS , Z 
       01F1F 1727     1     JMP  LCD_VIEW_NUM2 ,
   782            C      M 	SUBA	TEMP1,@3
       01F20 1803     1     MOV A,@( 3 )
       01F21 0117     1     SUB A, TEMP1 
   783            C      M 	JPZ	LCD_VIEW_STR
       01F22 0C83     1     JBC  _STATUS , Z 
       01F23 1728     1     JMP  LCD_VIEW_STR ,
   784 01F24 1729 C        	JMP	LCD_VIEW_RET
   785 01F25      C        LCD_VIEW_STAMP:
   786            C        	;JPNB	TEMP0,3,LCD_VIEW_RET
   787            C      M 	JMP	#VIEW_STAMP
       01F25 1545     1     JMP ( VIEW_STAMP % 1024 ),
   788 01F26      C        LCD_VIEW_NUM1:
   789            C        	;JPNB	TEMP0,4,LCD_VIEW_RET
   790            C      M 	JMP	#VIEW_NUM1
       01F26 15BA     1     JMP ( VIEW_NUM1 % 1024 ),
   791 01F27      C        LCD_VIEW_NUM2:
   792            C        	;JPNB	TEMP0,5,LCD_VIEW_RET
   793            C      M 	JMP	#VIEW_NUM2
       01F27 1613     1     JMP ( VIEW_NUM2 % 1024 ),
   794 01F28      C        LCD_VIEW_STR:
   795            C        	;JPNB	TEMP0,6,LCD_VIEW_RET
   796            C      M 	JMP	#VIEW_STR
       01F28 169D     1     JMP ( VIEW_STR % 1024 ),
   797 01F29      C        LCD_VIEW_RET:
   798 01F29 0012 C        	RET
   799            C        
   800            C        
   801            C        ;-------------------------------------------------------------------------------	
   243                     include		"string.asm"
     1            C        
     2            C        
     3       0000 C        CH_0	==	0X0
     4       0001 C        CH_1	==	0X1
     5       0002 C        CH_2	==	0X2
     6       0003 C        CH_3	==	0X3
     7       0004 C        CH_4	==	0X4
     8       0005 C        CH_5	==	0X5
     9       0006 C        CH_6	==	0X6
    10       0007 C        CH_7	==	0X7
    11       0008 C        CH_8	==	0X8
    12       0009 C        CH_9	==	0X9
    13            C        
    14       000A C        CH_A	==	0XA
    15       000B C        CH_B	==	0XB
    16       000C C        CH_C	==	0XC
    17       000D C        CH_D	==	0XD
    18       000E C        CH_E	==	0XE
    19       000F C        CH_F	==	0XF
    20       0010 C        CH_G	==	0X10
    21       0011 C        CH_H	==	0X11
    22       0012 C        CH_I	==	0X12
    23       0013 C        CH_J	==	0X13
    24       0014 C        CH_K	==	0X14
    25       0015 C        CH_L	==	0X15
    26       0016 C        CH_M	==	0X16
    27       0017 C        CH_N	==	0X17
    28       0018 C        CH_O	==	0X18
    29       0019 C        CH_P	==	0X19
    30       001A C        CH_Q	==	0X1A
    31       001B C        CH_R	==	0X1B
    32       001C C        CH_S	==	0X1C
    33       001D C        CH_T	==	0X1D
    34       001E C        CH_U	==	0X1E
    35       001F C        CH_V	==	0X1F
    36       0020 C        CH_W	==	0X20
    37       0021 C        CH_X	==	0X21
    38       0022 C        CH_Y	==	0X22
    39       0023 C        CH_Z	==	0X23
    40            C        
    41       0024 C        CH_BLANK    ==	0X24
    42            C        
    43       0025 C        CH_BLACK    ==	0X25
    44            C        
    45       0026 C        CH_INTE	    ==	0X26	; ?
    46       0027 C        CH_EXC	    ==	0X27	; !
    47       0028 C        CH_COLON    ==	0X28	; :
    48       0029 C        CH_POINT    ==	0X29	; .
    49            C        
    50       002A C        CH_START ==	0X2A	; >>
    51       002B C        CH_PAUSE ==	0X2B	; ||
    52       0025 C        CH_STOP	==	0X25	; ■
    53       002C C        CH_DEL	==	0X2C	; ×
    54       002D C        CH_SCH1	==	0X2D	; /
    55       002E C        CH_SCH2	==	0X2E	; \
    56            C        
    57       002F C        CH__	==	0X2F	; _
    58            C        
    59       00FF C        CH_END	==	0XFF	; 结束标志符
    60            C        
    61       0000 C        NUM_0	==	0X0
    62       0001 C        NUM_1	==	0X1
    63       0002 C        NUM_2	==	0X2
    64       0003 C        NUM_3	==	0X3
    65       0004 C        NUM_4	==	0X4
    66       0005 C        NUM_5	==	0X5
    67       0006 C        NUM_6	==	0X6
    68       0007 C        NUM_7	==	0X7
    69       0008 C        NUM_8	==	0X8
    70       0009 C        NUM_9	==	0X9
    71       000A C        NUM_A	==	0XA
    72       000B C        NUM_B	==	0XB
    73       000C C        NUM_C	==	0XC
    74       000D C        NUM_D	==	0XD
    75       000E C        NUM_E	==	0XE
    76       000F C        NUM_F	==	0XF
    77       0010 C        NUM_BLANK	==	0X10
    78       0011 C        NUM_EX1	==	0X11
    79       0012 C        NUM_EX2	==	0X12
    80            C        
    81       0000 C        WD_NO_CALL	==	0
    82       0001 C        WD_ERROR	==	1
    83       0002 C        WD_TOTAL	==	2
    84       0003 C        WD_PRIVATE	==	3
    85       0004 C        WD_END_OF_LIST	==	4
    86       0005 C        WD_PLS_LIFT_HANDSET	== 5
    87       0006 C        WD_INITIAL	==	6
    88       0007 C        WD_ERASE	==	7
    89       0008 C        WD_ERASED	==	8
    90       0009 C        WD_ERASE_ALL	==	9
    91       000A C        WD_ERASED_ALL	==	10
    92       000B C        WD_MEMO_RECORDING	== 11
    93       000C C        WD_ICM_RECORDING	== 12
    94       000D C        WD_2WAY_RECORDING	== 13
    95       000E C        WD_NO_NUMBER	==	14
    96       000F C        WD_LONG_DISTANCE_CALL	== 15
    97       0010 C        WD_LCD_CONTRAST	==	16
    98       0011 C        WD_SET_RING	==	17
    99       0012 C        WD_SET_REMOTE_CODE	== 18
   100       0013 C        WD_SET_LONG_CODE	== 19
   101       0014 C        WD_OGM_RECORDING	== 20
   102       0015 C        WD_OGM_PLAYBACK	==	21
   103       0016 C        WD_IN_REMOTE	==	22
   104       0017 C        WD_SUNDAY	==	23
   105       0018 C        WD_MONDAY	==	24
   106       0019 C        WD_TUESDAY	==	25
   107       001A C        WD_WEDNSDAY	==	26
   108       001B C        WD_THURSDAY	==	27
   109       001C C        WD_FRIDAY	==	28
   110       001D C        WD_SATURDAY	==	29
   111       001E C        WD_MEMORY_FULL	==	30
   112       001F C        WD_NEW		==	31
   113       0020 C        WD_ENGLISH	==	32
   114       0021 C        WD_GERMAN	==	33
   115       0022 C        WD_EDIT		==	34
   116       0023 C        WD_SEARCH	==	35
   117       0024 C        WD_PLAY		==	36
   118       0025 C        WD_STOP		==	37
   119       0026 C        WD_PAUSE	==	38
   120       0027 C        WD_COPIED_INTO_BOOK	== 39
   121       0028 C        WD_OGM		==	40
   122       0029 C        WD_END_OF_NAMES_BOOK	== 41
   123       002A C        WD_OGM_		==	42
   124            C        
   125       0000 C        LANG_ENGLISH	==	0
   126       0001 C        LANG_GERMANY	==	1
   127            C        
   128            C        
   129       0000 C        STYLE_NORMAL	==	0X00	; 常规
   130       0020 C        STYLE_LEFT	==	0X20	; 左对齐
   131       0040 C        STYLE_RIGHT	==	0X40	; 右对齐
   132       0060 C        STYLE_CENTER	==	0X60	; 居中
   133            C        
   134            C        ;-------------------------------------------------------------------------------
   135            C        org 0x1800
   136            C        ;------page @6------ 
   137 01800      C        SHOW_NO_CALL_EN:
   138 01800 0020 C        	TBL
   139 01801 1C17 C        	RETL	CH_N
   140 01802 1C18 C        	RETL	CH_O
   141 01803 1C24 C        	RETL	CH_BLANK
   142 01804 1C0C C        	RETL	CH_C
   143 01805 1C0A C        	RETL	CH_A
   144 01806 1C15 C        	RETL	CH_L
   145 01807 1C15 C        	RETL	CH_L
   146 01808 1C1C C        	RETL	CH_S
   147 01809 1CFF C        	RETL	CH_END
   148            C        
   149 0180A      C        SHOW_ERROR_EN:
   150 0180A 0020 C        	TBL
   151 0180B 1C0E C        	RETL	CH_E
   152 0180C 1C1B C        	RETL	CH_R
   153 0180D 1C1B C        	RETL	CH_R
   154 0180E 1C18 C        	RETL	CH_O
   155 0180F 1C1B C        	RETL	CH_R
   156 01810 1CFF C        	RETL	CH_END
   157            C        
   158 01811      C        SHOW_PRIVATE_EN:
   159 01811 0020 C        	TBL
   160 01812 1C19 C        	RETL	CH_P
   161 01813 1C1B C        	RETL	CH_R
   162 01814 1C12 C        	RETL	CH_I
   163 01815 1C1F C        	RETL	CH_V
   164 01816 1C0A C        	RETL	CH_A
   165 01817 1C1D C        	RETL	CH_T
   166 01818 1C0E C        	RETL	CH_E
   167 01819 1CFF C        	RETL	CH_END
   168            C        
   169 0181A      C        SHOW_END_OF_LIST_EN:
   170 0181A 0020 C        	TBL
   171 0181B 1C0E C        	RETL	CH_E
   172 0181C 1C17 C        	RETL	CH_N
   173 0181D 1C0D C        	RETL	CH_D
   174 0181E 1C24 C        	RETL	CH_BLANK
   175 0181F 1C18 C        	RETL	CH_O
   176 01820 1C0F C        	RETL	CH_F
   177 01821 1C24 C        	RETL	CH_BLANK
   178 01822 1C15 C        	RETL	CH_L
   179 01823 1C12 C        	RETL	CH_I
   180 01824 1C1C C        	RETL	CH_S
   181 01825 1C1D C        	RETL	CH_T
   182 01826 1CFF C        	RETL	CH_END
   183            C        
   184 01827      C        SHOW_PLS_LIFT_HANDSET_EN:
   185 01827 0020 C        	TBL
   186 01828 1C19 C        	RETL	CH_P
   187 01829 1C15 C        	RETL	CH_L
   188 0182A 1C1C C        	RETL	CH_S
   189 0182B 1C24 C        	RETL	CH_BLANK
   190 0182C 1C15 C        	RETL	CH_L
   191 0182D 1C12 C        	RETL	CH_I
   192 0182E 1C0F C        	RETL	CH_F
   193 0182F 1C1D C        	RETL	CH_T
   194 01830 1C24 C        	RETL	CH_BLANK
   195 01831 1C11 C        	RETL	CH_H
   196 01832 1C0A C        	RETL	CH_A
   197 01833 1C17 C        	RETL	CH_N
   198 01834 1C0D C        	RETL	CH_D
   199 01835 1C1C C        	RETL	CH_S
   200 01836 1C0E C        	RETL	CH_E
   201 01837 1C1D C        	RETL	CH_T
   202 01838 1CFF C        	RETL	CH_END
   203            C        
   204 01839      C        SHOW_INITIAL_EN:
   205 01839 0020 C        	TBL
   206 0183A 1C12 C        	RETL	CH_I
   207 0183B 1C17 C        	RETL	CH_N
   208 0183C 1C12 C        	RETL	CH_I
   209 0183D 1C1D C        	RETL	CH_T
   210 0183E 1C12 C        	RETL	CH_I
   211 0183F 1C0A C        	RETL	CH_A
   212 01840 1C15 C        	RETL	CH_L
   213 01841 1CFF C        	RETL	CH_END
   214            C        
   215 01842      C        SHOW_ERASE_EN:
   216 01842 0020 C        	TBL
   217 01843 1C0E C        	RETL	CH_E
   218 01844 1C1B C        	RETL	CH_R
   219 01845 1C0A C        	RETL	CH_A
   220 01846 1C1C C        	RETL	CH_S
   221 01847 1C0E C        	RETL	CH_E
   222 01848 1C26 C        	RETL	CH_INTE
   223 01849 1CFF C        	RETL	CH_END
   224            C        
   225 0184A      C        SHOW_ERASE_ALL_EN:
   226 0184A 0020 C        	TBL
   227 0184B 1C0E C        	RETL	CH_E
   228 0184C 1C1B C        	RETL	CH_R
   229 0184D 1C0A C        	RETL	CH_A
   230 0184E 1C1C C        	RETL	CH_S
   231 0184F 1C0E C        	RETL	CH_E
   232 01850 1C24 C        	RETL	CH_BLANK
   233 01851 1C0A C        	RETL	CH_A
   234 01852 1C15 C        	RETL	CH_L
   235 01853 1C15 C        	RETL	CH_L
   236 01854 1C26 C        	RETL	CH_INTE
   237 01855 1CFF C        	RETL	CH_END
   238            C        
   239 01856      C        SHOW_MEMO_RECORDING_EN:
   240 01856 0020 C        	TBL
   241 01857 1C16 C        	RETL	CH_M
   242 01858 1C0E C        	RETL	CH_E
   243 01859 1C16 C        	RETL	CH_M
   244 0185A 1C18 C        	RETL	CH_O
   245 0185B 1C24 C        	RETL	CH_BLANK
   246 0185C 1C1B C        	RETL	CH_R
   247 0185D 1C0E C        	RETL	CH_E
   248 0185E 1C0C C        	RETL	CH_C
   249 0185F 1C18 C        	RETL	CH_O
   250 01860 1C1B C        	RETL	CH_R
   251 01861 1C0D C        	RETL	CH_D
   252 01862 1C12 C        	RETL	CH_I
   253 01863 1C17 C        	RETL	CH_N
   254 01864 1C10 C        	RETL	CH_G
   255 01865 1CFF C        	RETL	CH_END
   256            C        
   257 01866      C        SHOW_2WAY_RECORDING_EN:
   258 01866 0020 C        	TBL
   259 01867 1C02 C        	RETL	CH_2
   260 01868 1C20 C        	RETL	CH_W
   261 01869 1C0A C        	RETL	CH_A
   262 0186A 1C22 C        	RETL	CH_Y
   263 0186B 1C24 C        	RETL	CH_BLANK
   264 0186C 1C1B C        	RETL	CH_R
   265 0186D 1C0E C        	RETL	CH_E
   266 0186E 1C0C C        	RETL	CH_C
   267 0186F 1C18 C        	RETL	CH_O
   268 01870 1C1B C        	RETL	CH_R
   269 01871 1C0D C        	RETL	CH_D
   270 01872 1C12 C        	RETL	CH_I
   271 01873 1C17 C        	RETL	CH_N
   272 01874 1C10 C        	RETL	CH_G
   273 01875 1CFF C        	RETL	CH_END
   274            C        
   275 01876      C        SHOW_ICM_RECORDING_EN:
   276 01876 0020 C        	TBL
   277 01877 1C12 C        	RETL	CH_I
   278 01878 1C0C C        	RETL	CH_C
   279 01879 1C16 C        	RETL	CH_M
   280 0187A 1C24 C        	RETL	CH_BLANK
   281 0187B 1C1B C        	RETL	CH_R
   282 0187C 1C0E C        	RETL	CH_E
   283 0187D 1C0C C        	RETL	CH_C
   284 0187E 1C18 C        	RETL	CH_O
   285 0187F 1C1B C        	RETL	CH_R
   286 01880 1C0D C        	RETL	CH_D
   287 01881 1C12 C        	RETL	CH_I
   288 01882 1C17 C        	RETL	CH_N
   289 01883 1C10 C        	RETL	CH_G
   290 01884 1CFF C        	RETL	CH_END
   291            C        
   292 01885      C        SHOW_NO_NUMBER_EN:
   293 01885 0020 C        	TBL
   294 01886 1C17 C        	RETL	CH_N
   295 01887 1C18 C        	RETL	CH_O
   296 01888 1C24 C        	RETL	CH_BLANK
   297 01889 1C17 C        	RETL	CH_N
   298 0188A 1C1E C        	RETL	CH_U
   299 0188B 1C16 C        	RETL	CH_M
   300 0188C 1C0B C        	RETL	CH_B
   301 0188D 1C0E C        	RETL	CH_E
   302 0188E 1C1B C        	RETL	CH_R
   303 0188F 1CFF C        	RETL	CH_END
   304            C        
   305 01890      C        SHOW_LONG_DISTANCE_CALL_EN:
   306 01890 0020 C        	TBL
   307 01891 1C15 C        	RETL	CH_L
   308 01892 1C18 C        	RETL	CH_O
   309 01893 1C17 C        	RETL	CH_N
   310 01894 1C10 C        	RETL	CH_G
   311 01895 1C24 C        	RETL	CH_BLANK
   312 01896 1C0D C        	RETL	CH_D
   313 01897 1C12 C        	RETL	CH_I
   314 01898 1C1C C        	RETL	CH_S
   315 01899 1C1D C        	RETL	CH_T
   316 0189A 1C0A C        	RETL	CH_A
   317 0189B 1C17 C        	RETL	CH_N
   318 0189C 1C0C C        	RETL	CH_C
   319 0189D 1C0E C        	RETL	CH_E
   320 0189E 1C24 C        	RETL	CH_BLANK
   321 0189F 1C0C C        	RETL	CH_C
   322 018A0 1C0A C        	RETL	CH_A
   323 018A1 1C15 C        	RETL	CH_L
   324 018A2 1C15 C        	RETL	CH_L
   325 018A3 1CFF C        	RETL	CH_END
   326            C        
   327 018A4      C        SHOW_LCD_CONTRAST_EN:
   328 018A4 0020 C        	TBL
   329 018A5 1C15 C        	RETL	CH_L
   330 018A6 1C0C C        	RETL	CH_C
   331 018A7 1C0D C        	RETL	CH_D
   332 018A8 1C24 C        	RETL	CH_BLANK
   333 018A9 1C0C C        	RETL	CH_C
   334 018AA 1C18 C        	RETL	CH_O
   335 018AB 1C17 C        	RETL	CH_N
   336 018AC 1C1D C        	RETL	CH_T
   337 018AD 1C1B C        	RETL	CH_R
   338 018AE 1C0A C        	RETL	CH_A
   339 018AF 1C1C C        	RETL	CH_S
   340 018B0 1C1D C        	RETL	CH_T
   341 018B1 1CFF C        	RETL	CH_END
   342            C        
   343 018B2      C        SHOW_SET_REMOTE_CODE_EN:
   344 018B2 0020 C        	TBL
   345 018B3 1C1C C        	RETL	CH_S
   346 018B4 1C0E C        	RETL	CH_E
   347 018B5 1C1D C        	RETL	CH_T
   348 018B6 1C24 C        	RETL	CH_BLANK
   349 018B7 1C1B C        	RETL	CH_R
   350 018B8 1C0E C        	RETL	CH_E
   351 018B9 1C16 C        	RETL	CH_M
   352 018BA 1C18 C        	RETL	CH_O
   353 018BB 1C1D C        	RETL	CH_T
   354 018BC 1C0E C        	RETL	CH_E
   355 018BD 1C24 C        	RETL	CH_BLANK
   356 018BE 1C0C C        	RETL	CH_C
   357 018BF 1C18 C        	RETL	CH_O
   358 018C0 1C0D C        	RETL	CH_D
   359 018C1 1C0E C        	RETL	CH_E
   360 018C2 1CFF C        	RETL	CH_END
   361            C        
   362 018C3      C        SHOW_SET_LONG_CODE_EN:
   363 018C3 0020 C        	TBL
   364 018C4 1C1C C        	RETL	CH_S
   365 018C5 1C0E C        	RETL	CH_E
   366 018C6 1C1D C        	RETL	CH_T
   367 018C7 1C24 C        	RETL	CH_BLANK
   368 018C8 1C0A C        	RETL	CH_A
   369 018C9 1C1B C        	RETL	CH_R
   370 018CA 1C0E C        	RETL	CH_E
   371 018CB 1C0A C        	RETL	CH_A
   372 018CC 1C24 C        	RETL	CH_BLANK
   373 018CD 1C0C C        	RETL	CH_C
   374 018CE 1C18 C        	RETL	CH_O
   375 018CF 1C0D C        	RETL	CH_D
   376 018D0 1C0E C        	RETL	CH_E
   377 018D1 1CFF C        	RETL	CH_END
   378            C        
   379 018D2      C        SHOW_OGM_RECORDING_EN:
   380 018D2 0020 C        	TBL
   381 018D3 1C1B C        	RETL	CH_R
   382 018D4 1C0E C        	RETL	CH_E
   383 018D5 1C0C C        	RETL	CH_C
   384 018D6 1C18 C        	RETL	CH_O
   385 018D7 1C1B C        	RETL	CH_R
   386 018D8 1C0D C        	RETL	CH_D
   387 018D9 1C12 C        	RETL	CH_I
   388 018DA 1C17 C        	RETL	CH_N
   389 018DB 1C10 C        	RETL	CH_G
   390 018DC 1CFF C        	RETL	CH_END
   391            C        
   392 018DD      C        SHOW_ERASED_EN:
   393 018DD 0020 C        	TBL
   394 018DE 1C0E C        	RETL	CH_E
   395 018DF 1C1B C        	RETL	CH_R
   396 018E0 1C0A C        	RETL	CH_A
   397 018E1 1C1C C        	RETL	CH_S
   398 018E2 1C0E C        	RETL	CH_E
   399 018E3 1C0D C        	RETL	CH_D
   400 018E4 1CFF C        	RETL	CH_END
   401            C        
   402 018E5      C        SHOW_ERASED_ALL_EN:
   403 018E5 0020 C        	TBL
   404 018E6 1C0E C        	RETL	CH_E
   405 018E7 1C1B C        	RETL	CH_R
   406 018E8 1C0A C        	RETL	CH_A
   407 018E9 1C1C C        	RETL	CH_S
   408 018EA 1C0E C        	RETL	CH_E
   409 018EB 1C0D C        	RETL	CH_D
   410 018EC 1C24 C        	RETL	CH_BLANK
   411 018ED 1C0A C        	RETL	CH_A
   412 018EE 1C15 C        	RETL	CH_L
   413 018EF 1C15 C        	RETL	CH_L
   414 018F0 1CFF C        	RETL	CH_END
   415            C        
   416 018F1      C        SHOW_SET_BOOK_EN:
   417 018F1 0020 C        	TBL
   418 018F2 1C1C C        	RETL	CH_S
   419 018F3 1C0E C        	RETL	CH_E
   420 018F4 1C1D C        	RETL	CH_T
   421 018F5 1C24 C        	RETL	CH_BLANK
   422 018F6 1C0B C        	RETL	CH_B
   423 018F7 1C18 C        	RETL	CH_O
   424 018F8 1C18 C        	RETL	CH_O
   425 018F9 1C14 C        	RETL	CH_K
   426 018FA 1CFF C        	RETL	CH_END
   427            C        
   428            C        
   429            C        ORG	0X1900
   430 01900      C        SHOW_OGM_PLAYBACK_EN:
   431 01900 0020 C        	TBL
   432 01901 1C19 C        	RETL	CH_P
   433 01902 1C15 C        	RETL	CH_L
   434 01903 1C0A C        	RETL	CH_A
   435 01904 1C22 C        	RETL	CH_Y
   436 01905 1C0B C        	RETL	CH_B
   437 01906 1C0A C        	RETL	CH_A
   438 01907 1C0C C        	RETL	CH_C
   439 01908 1C14 C        	RETL	CH_K
   440 01909 1CFF C        	RETL	CH_END
   441            C        
   442 0190A      C        SHOW_SET_RING_EN:
   443 0190A 0020 C        	TBL
   444 0190B 1C1B C        	RETL	CH_R
   445 0190C 1C12 C        	RETL	CH_I
   446 0190D 1C17 C        	RETL	CH_N
   447 0190E 1C10 C        	RETL	CH_G
   448 0190F 1C24 C        	RETL	CH_BLANK
   449 01910 1C1D C        	RETL	CH_T
   450 01911 1C12 C        	RETL	CH_I
   451 01912 1C16 C        	RETL	CH_M
   452 01913 1C0E C        	RETL	CH_E
   453 01914 1C24 C        	RETL	CH_BLANK
   454 01915 1C1C C        	RETL	CH_S
   455 01916 1C0E C        	RETL	CH_E
   456 01917 1C1D C        	RETL	CH_T
   457 01918 1CFF C        	RETL	CH_END
   458            C        
   459 01919      C        SHOW_IN_REMOTE_EN:
   460 01919 0020 C        	TBL
   461 0191A 1C12 C        	RETL	CH_I
   462 0191B 1C17 C        	RETL	CH_N
   463 0191C 1C24 C        	RETL	CH_BLANK
   464 0191D 1C1B C        	RETL	CH_R
   465 0191E 1C0E C        	RETL	CH_E
   466 0191F 1C16 C        	RETL	CH_M
   467 01920 1C18 C        	RETL	CH_O
   468 01921 1C1D C        	RETL	CH_T
   469 01922 1C0E C        	RETL	CH_E
   470 01923 1CFF C        	RETL	CH_END
   471            C        
   472 01924      C        SHOW_SUNDAY_EN:
   473 01924 0020 C        	TBL
   474 01925 1C1C C        	RETL	CH_S
   475 01926 1C1E C        	RETL	CH_U
   476 01927 1C17 C        	RETL	CH_N
   477 01928 1C0D C        	RETL	CH_D
   478 01929 1C0A C        	RETL	CH_A
   479 0192A 1C22 C        	RETL	CH_Y
   480 0192B 1CFF C        	RETL	CH_END
   481            C        
   482 0192C      C        SHOW_MONDAY_EN:
   483 0192C 0020 C        	TBL
   484 0192D 1C16 C        	RETL	CH_M
   485 0192E 1C18 C        	RETL	CH_O
   486 0192F 1C17 C        	RETL	CH_N
   487 01930 1C0D C        	RETL	CH_D
   488 01931 1C0A C        	RETL	CH_A
   489 01932 1C22 C        	RETL	CH_Y
   490 01933 1CFF C        	RETL	CH_END
   491            C        
   492 01934      C        SHOW_TUESDAY_EN:
   493 01934 0020 C        	TBL
   494 01935 1C1D C        	RETL	CH_T
   495 01936 1C1E C        	RETL	CH_U
   496 01937 1C0E C        	RETL	CH_E
   497 01938 1C1C C        	RETL	CH_S
   498 01939 1C0D C        	RETL	CH_D
   499 0193A 1C0A C        	RETL	CH_A
   500 0193B 1C22 C        	RETL	CH_Y
   501 0193C 1CFF C        	RETL	CH_END
   502            C        
   503 0193D      C        SHOW_WEDNSDAY_EN:
   504 0193D 0020 C        	TBL
   505 0193E 1C20 C        	RETL	CH_W
   506 0193F 1C0E C        	RETL	CH_E
   507 01940 1C0D C        	RETL	CH_D
   508 01941 1C17 C        	RETL	CH_N
   509 01942 1C1C C        	RETL	CH_S
   510 01943 1C0D C        	RETL	CH_D
   511 01944 1C0A C        	RETL	CH_A
   512 01945 1C22 C        	RETL	CH_Y
   513 01946 1CFF C        	RETL	CH_END
   514            C        
   515 01947      C        SHOW_THURSDAY_EN:
   516 01947 0020 C        	TBL
   517 01948 1C1D C        	RETL	CH_T
   518 01949 1C11 C        	RETL	CH_H
   519 0194A 1C1E C        	RETL	CH_U
   520 0194B 1C1B C        	RETL	CH_R
   521 0194C 1C1C C        	RETL	CH_S
   522 0194D 1C0D C        	RETL	CH_D
   523 0194E 1C0A C        	RETL	CH_A
   524 0194F 1C22 C        	RETL	CH_Y
   525 01950 1CFF C        	RETL	CH_END
   526            C        
   527 01951      C        SHOW_FRIDAY_EN:
   528 01951 0020 C        	TBL
   529 01952 1C0F C        	RETL	CH_F
   530 01953 1C1B C        	RETL	CH_R
   531 01954 1C12 C        	RETL	CH_I
   532 01955 1C0D C        	RETL	CH_D
   533 01956 1C0A C        	RETL	CH_A
   534 01957 1C22 C        	RETL	CH_Y
   535 01958 1CFF C        	RETL	CH_END
   536            C        
   537 01959      C        SHOW_SATURDAY_EN:
   538 01959 0020 C        	TBL
   539 0195A 1C1C C        	RETL	CH_S
   540 0195B 1C0A C        	RETL	CH_A
   541 0195C 1C1D C        	RETL	CH_T
   542 0195D 1C1E C        	RETL	CH_U
   543 0195E 1C1B C        	RETL	CH_R
   544 0195F 1C0D C        	RETL	CH_D
   545 01960 1C0A C        	RETL	CH_A
   546 01961 1C22 C        	RETL	CH_Y
   547 01962 1CFF C        	RETL	CH_END
   548            C        
   549 01963      C        SHOW_MEMORY_FULL_EN:
   550 01963 0020 C        	TBL
   551 01964 1C16 C        	RETL	CH_M
   552 01965 1C0E C        	RETL	CH_E
   553 01966 1C16 C        	RETL	CH_M
   554 01967 1C18 C        	RETL	CH_O
   555 01968 1C1B C        	RETL	CH_R
   556 01969 1C22 C        	RETL	CH_Y
   557 0196A 1C24 C        	RETL	CH_BLANK
   558 0196B 1C0F C        	RETL	CH_F
   559 0196C 1C1E C        	RETL	CH_U
   560 0196D 1C15 C        	RETL	CH_L
   561 0196E 1C15 C        	RETL	CH_L
   562 0196F 1CFF C        	RETL	CH_END
   563            C        
   564 01970      C        SHOW_NEW_EN:
   565 01970 0020 C        	TBL
   566 01971 1C17 C        	RETL	CH_N
   567 01972 1C0E C        	RETL	CH_E
   568 01973 1C20 C        	RETL	CH_W
   569 01974 1CFF C        	RETL	CH_END
   570            C        
   571 01975      C        SHOW_TOTAL_EN:
   572 01975 0020 C        	TBL
   573 01976 1C1D C        	RETL	CH_T
   574 01977 1C18 C        	RETL	CH_O
   575 01978 1C1D C        	RETL	CH_T
   576 01979 1C0A C        	RETL	CH_A
   577 0197A 1C15 C        	RETL	CH_L
   578 0197B 1CFF C        	RETL	CH_END
   579            C        
   580 0197C      C        SHOW_LANGUAGE_EN:
   581 0197C 0020 C        	TBL
   582 0197D 1C15 C        	RETL	CH_L
   583 0197E 1C0A C        	RETL	CH_A
   584 0197F 1C17 C        	RETL	CH_N
   585 01980 1C10 C        	RETL	CH_G
   586 01981 1C1E C        	RETL	CH_U
   587 01982 1C0A C        	RETL	CH_A
   588 01983 1C10 C        	RETL	CH_G
   589 01984 1C0E C        	RETL	CH_E
   590 01985 1CFF C        	RETL	CH_END
   591            C        
   592 01986      C        SHOW_ENGLISH_EN:
   593 01986 0020 C        	TBL
   594 01987 1C0E C        	RETL	CH_E
   595 01988 1C17 C        	RETL	CH_N
   596 01989 1C10 C        	RETL	CH_G
   597 0198A 1C15 C        	RETL	CH_L
   598 0198B 1C12 C        	RETL	CH_I
   599 0198C 1C1C C        	RETL	CH_S
   600 0198D 1C11 C        	RETL	CH_H
   601 0198E 1CFF C        	RETL	CH_END
   602            C        
   603 0198F      C        SHOW_GERMAN_EN:
   604 0198F      C        SHOW_GERMAN_GE:
   605 0198F 0020 C        	TBL
   606 01990 1C10 C        	RETL	CH_G
   607 01991 1C0E C        	RETL	CH_E
   608 01992 1C1B C        	RETL	CH_R
   609 01993 1C16 C        	RETL	CH_M
   610 01994 1C0A C        	RETL	CH_A
   611 01995 1C17 C        	RETL	CH_N
   612 01996 1CFF C        	RETL	CH_END
   613            C        
   614 01997      C        SHOW_EDIT_EN:
   615 01997 0020 C        	TBL
   616 01998 1C0E C        	RETL	CH_E
   617 01999 1C0D C        	RETL	CH_D
   618 0199A 1C12 C        	RETL	CH_I
   619 0199B 1C1D C        	RETL	CH_T
   620 0199C 1CFF C        	RETL	CH_END
   621            C        
   622 0199D      C        SHOW_SEARCH_EN:
   623 0199D 0020 C        	TBL
   624 0199E 1C1C C        	RETL	CH_S
   625 0199F 1C0E C        	RETL	CH_E
   626 019A0 1C0A C        	RETL	CH_A
   627 019A1 1C1B C        	RETL	CH_R
   628 019A2 1C0C C        	RETL	CH_C
   629 019A3 1C11 C        	RETL	CH_H
   630 019A4 1CFF C        	RETL	CH_END
   631            C        
   632 019A5      C        SHOW_PLAY_EN:
   633 019A5 0020 C        	TBL
   634 019A6 1C19 C        	RETL	CH_P
   635 019A7 1C15 C        	RETL	CH_L
   636 019A8 1C0A C        	RETL	CH_A
   637 019A9 1C22 C        	RETL	CH_Y
   638 019AA 1CFF C        	RETL	CH_END
   639            C        
   640 019AB      C        SHOW_PLAY_GE:
   641 019AB 0020 C        	TBL
   642 019AC 1C17 C        	RETL	CH_N
   643 019AD 1C0A C        	RETL	CH_A
   644 019AE 1C0C C        	RETL	CH_C
   645 019AF 1C11 C        	RETL	CH_H
   646 019B0 1C1B C        	RETL	CH_R
   647 019B1 1C12 C        	RETL	CH_I
   648 019B2 1C0C C        	RETL	CH_C
   649 019B3 1C11 C        	RETL	CH_H
   650 019B4 1C1D C        	RETL	CH_T
   651 019B5 1CFF C        	RETL	CH_END
   652            C        
   653 019B6      C        SHOW_STOP_EN:
   654 019B6      C        SHOW_STOP_GE:
   655 019B6 0020 C        	TBL
   656 019B7 1C1C C        	RETL	CH_S
   657 019B8 1C1D C        	RETL	CH_T
   658 019B9 1C18 C        	RETL	CH_O
   659 019BA 1C19 C        	RETL	CH_P
   660 019BB 1CFF C        	RETL	CH_END
   661            C        
   662 019BC      C        SHOW_PAUSE_EN:
   663 019BC      C        SHOW_PAUSE_GE:
   664 019BC 0020 C        	TBL
   665 019BD 1C19 C        	RETL	CH_P
   666 019BE 1C0A C        	RETL	CH_A
   667 019BF 1C1E C        	RETL	CH_U
   668 019C0 1C1C C        	RETL	CH_S
   669 019C1 1C0E C        	RETL	CH_E
   670 019C2 1CFF C        	RETL	CH_END
   671            C        
   672            C        ; 德语部分：
   673 019C3      C        SHOW_NO_CALL_GE:
   674 019C3 0020 C        	TBL
   675 019C4 1C14 C        	RETL	CH_K
   676 019C5 1C0E C        	RETL	CH_E
   677 019C6 1C12 C        	RETL	CH_I
   678 019C7 1C17 C        	RETL	CH_N
   679 019C8 1C0E C        	RETL	CH_E
   680 019C9 1C24 C        	RETL	CH_BLANK
   681 019CA 1C0A C        	RETL	CH_A
   682 019CB 1C17 C        	RETL	CH_N
   683 019CC 1C1B C        	RETL	CH_R
   684 019CD 1C1E C        	RETL	CH_U
   685 019CE 1C0F C        	RETL	CH_F
   686 019CF 1C0E C        	RETL	CH_E
   687 019D0 1CFF C        	RETL	CH_END
   688            C        
   689 019D1      C        SHOW_INITIAL_GE:
   690 019D1 0020 C        	TBL
   691 019D2 1C0B C        	RETL	CH_B
   692 019D3 1C12 C        	RETL	CH_I
   693 019D4 1C1D C        	RETL	CH_T
   694 019D5 1C1D C        	RETL	CH_T
   695 019D6 1C0E C        	RETL	CH_E
   696 019D7 1C24 C        	RETL	CH_BLANK
   697 019D8 1C20 C        	RETL	CH_W
   698 019D9 1C0A C        	RETL	CH_A
   699 019DA 1C1B C        	RETL	CH_R
   700 019DB 1C1D C        	RETL	CH_T
   701 019DC 1C0E C        	RETL	CH_E
   702 019DD 1C17 C        	RETL	CH_N
   703 019DE 1CFF C        	RETL	CH_END
   704            C        
   705 019DF      C        SHOW_ERASE_ALL_GE:
   706 019DF 0020 C        	TBL
   707 019E0 1C0A C        	RETL	CH_A
   708 019E1 1C15 C        	RETL	CH_L
   709 019E2 1C15 C        	RETL	CH_L
   710 019E3 1C0E C        	RETL	CH_E
   711 019E4 1C1C C        	RETL	CH_S
   712 019E5 1C24 C        	RETL	CH_BLANK
   713 019E6 1C15 C        	RETL	CH_L
   714 019E7 1C18 C        	RETL	CH_O
   715 019E8 1C0E C        	RETL	CH_E
   716 019E9 1C1C C        	RETL	CH_S
   717 019EA 1C0C C        	RETL	CH_C
   718 019EB 1C11 C        	RETL	CH_H
   719 019EC 1C0E C        	RETL	CH_E
   720 019ED 1C17 C        	RETL	CH_N
   721 019EE 1C26 C        	RETL	CH_INTE
   722 019EF 1CFF C        	RETL	CH_END
   723            C        
   724 019F0      C        SHOW_ERROR_GE:
   725 019F0 0020 C        	TBL
   726 019F1 1C0F C        	RETL	CH_F
   727 019F2 1C0E C        	RETL	CH_E
   728 019F3 1C11 C        	RETL	CH_H
   729 019F4 1C15 C        	RETL	CH_L
   730 019F5 1C0E C        	RETL	CH_E
   731 019F6 1C1B C        	RETL	CH_R
   732 019F7 1CFF C        	RETL	CH_END
   733            C        
   734 019F8      C        SHOW_PRIVATE_GE:
   735 019F8 0020 C        	TBL
   736 019F9 1C19 C        	RETL	CH_P
   737 019FA 1C1B C        	RETL	CH_R
   738 019FB 1C12 C        	RETL	CH_I
   739 019FC 1C1F C        	RETL	CH_V
   740 019FD 1C0A C        	RETL	CH_A
   741 019FE 1C1D C        	RETL	CH_T
   742 019FF 1CFF C        	RETL	CH_END
   743            C        
   744            C        
   745            C        ORG	0X1A00
   746            C        
   747 01A00      C        SHOW_END_OF_LIST_GE:
   748 01A00 0020 C        	TBL
   749 01A01 1C15 C        	RETL	CH_L
   750 01A02 1C12 C        	RETL	CH_I
   751 01A03 1C1C C        	RETL	CH_S
   752 01A04 1C1D C        	RETL	CH_T
   753 01A05 1C0E C        	RETL	CH_E
   754 01A06 1C17 C        	RETL	CH_N
   755 01A07 1C0E C        	RETL	CH_E
   756 01A08 1C17 C        	RETL	CH_N
   757 01A09 1C0D C        	RETL	CH_D
   758 01A0A 1C0E C        	RETL	CH_E
   759 01A0B 1CFF C        	RETL	CH_END
   760            C        
   761 01A0C      C        SHOW_ERASE_GE:
   762 01A0C 0020 C        	TBL
   763 01A0D 1C15 C        	RETL	CH_L
   764 01A0E 1C18 C        	RETL	CH_O
   765 01A0F 1C0E C        	RETL	CH_E
   766 01A10 1C1C C        	RETL	CH_S
   767 01A11 1C0C C        	RETL	CH_C
   768 01A12 1C11 C        	RETL	CH_H
   769 01A13 1C0E C        	RETL	CH_E
   770 01A14 1C17 C        	RETL	CH_N
   771 01A15 1C26 C        	RETL	CH_INTE
   772 01A16 1CFF C        	RETL	CH_END
   773            C        
   774 01A17      C        SHOW_PLS_LIFT_HANDSET_GE:
   775 01A17 0020 C        	TBL
   776 01A18 1C11 C        	RETL	CH_H
   777 01A19 1C18 C        	RETL	CH_O
   778 01A1A 1C0E C        	RETL	CH_E
   779 01A1B 1C1B C        	RETL	CH_R
   780 01A1C 1C0E C        	RETL	CH_E
   781 01A1D 1C1B C        	RETL	CH_R
   782 01A1E 1C24 C        	RETL	CH_BLANK
   783 01A1F 1C0A C        	RETL	CH_A
   784 01A20 1C0B C        	RETL	CH_B
   785 01A21 1C11 C        	RETL	CH_H
   786 01A22 1C0E C        	RETL	CH_E
   787 01A23 1C0B C        	RETL	CH_B
   788 01A24 1C0E C        	RETL	CH_E
   789 01A25 1C17 C        	RETL	CH_N
   790 01A26 1CFF C        	RETL	CH_END
   791            C        
   792 01A27      C        SHOW_MEMO_RECORDING_GE:
   793 01A27 0020 C        	TBL
   794 01A28 1C16 C        	RETL	CH_M
   795 01A29 1C0E C        	RETL	CH_E
   796 01A2A 1C16 C        	RETL	CH_M
   797 01A2B 1C18 C        	RETL	CH_O
   798 01A2C 1C24 C        	RETL	CH_BLANK
   799 01A2D 1C0A C        	RETL	CH_A
   800 01A2E 1C1E C        	RETL	CH_U
   801 01A2F 1C0F C        	RETL	CH_F
   802 01A30 1C17 C        	RETL	CH_N
   803 01A31 1C0E C        	RETL	CH_E
   804 01A32 1C11 C        	RETL	CH_H
   805 01A33 1C16 C        	RETL	CH_M
   806 01A34 1C0E C        	RETL	CH_E
   807 01A35 1C17 C        	RETL	CH_N
   808 01A36 1CFF C        	RETL	CH_END
   809            C        
   810 01A37      C        SHOW_2WAY_RECORDING_GE:
   811 01A37 0020 C        	TBL
   812 01A38 1C16 C        	RETL	CH_M
   813 01A39 1C12 C        	RETL	CH_I
   814 01A3A 1C1D C        	RETL	CH_T
   815 01A3B 1C1C C        	RETL	CH_S
   816 01A3C 1C0C C        	RETL	CH_C
   817 01A3D 1C11 C        	RETL	CH_H
   818 01A3E 1C17 C        	RETL	CH_N
   819 01A3F 1C0E C        	RETL	CH_E
   820 01A40 1C12 C        	RETL	CH_I
   821 01A41 1C0D C        	RETL	CH_D
   822 01A42 1C0E C        	RETL	CH_E
   823 01A43 1C17 C        	RETL	CH_N
   824 01A44 1CFF C        	RETL	CH_END
   825            C        
   826 01A45      C        SHOW_ICM_RECORDING_GE:
   827 01A45 0020 C        	TBL
   828 01A46 1C0A C        	RETL	CH_A
   829 01A47 1C17 C        	RETL	CH_N
   830 01A48 1C1B C        	RETL	CH_R
   831 01A49 1C1E C        	RETL	CH_U
   832 01A4A 1C0F C        	RETL	CH_F
   833 01A4B 1C24 C        	RETL	CH_BLANK
   834 01A4C 1C0A C        	RETL	CH_A
   835 01A4D 1C1E C        	RETL	CH_U
   836 01A4E 1C0F C        	RETL	CH_F
   837 01A4F 1C17 C        	RETL	CH_N
   838 01A50 1C0E C        	RETL	CH_E
   839 01A51 1C11 C        	RETL	CH_H
   840 01A52 1C16 C        	RETL	CH_M
   841 01A53 1C0E C        	RETL	CH_E
   842 01A54 1C17 C        	RETL	CH_N
   843 01A55 1CFF C        	RETL	CH_END
   844            C        
   845 01A56      C        SHOW_NO_NUMBER_GE:
   846 01A56 0020 C        	TBL
   847 01A57 1C14 C        	RETL	CH_K
   848 01A58 1C0E C        	RETL	CH_E
   849 01A59 1C12 C        	RETL	CH_I
   850 01A5A 1C17 C        	RETL	CH_N
   851 01A5B 1C0E C        	RETL	CH_E
   852 01A5C 1C24 C        	RETL	CH_BLANK
   853 01A5D 1C17 C        	RETL	CH_N
   854 01A5E 1C1E C        	RETL	CH_U
   855 01A5F 1C16 C        	RETL	CH_M
   856 01A60 1C16 C        	RETL	CH_M
   857 01A61 1C0E C        	RETL	CH_E
   858 01A62 1C1B C        	RETL	CH_R
   859 01A63 1CFF C        	RETL	CH_END
   860            C        
   861 01A64      C        SHOW_LONG_DISTANCE_CALL_GE:
   862 01A64 0020 C        	TBL
   863 01A65 1C0F C        	RETL	CH_F
   864 01A66 1C0E C        	RETL	CH_E
   865 01A67 1C1B C        	RETL	CH_R
   866 01A68 1C17 C        	RETL	CH_N
   867 01A69 1C10 C        	RETL	CH_G
   868 01A6A 1C0E C        	RETL	CH_E
   869 01A6B 1C1C C        	RETL	CH_S
   870 01A6C 1C19 C        	RETL	CH_P
   871 01A6D 1C1B C        	RETL	CH_R
   872 01A6E 1C0A C        	RETL	CH_A
   873 01A6F 1C0E C        	RETL	CH_E
   874 01A70 1C0C C        	RETL	CH_C
   875 01A71 1C11 C        	RETL	CH_H
   876 01A72 1CFF C        	RETL	CH_END
   877            C        
   878 01A73      C        SHOW_LCD_CONTRAST_GE:
   879 01A73 0020 C        	TBL
   880 01A74 1C15 C        	RETL	CH_L
   881 01A75 1C0C C        	RETL	CH_C
   882 01A76 1C0D C        	RETL	CH_D
   883 01A77 1C24 C        	RETL	CH_BLANK
   884 01A78 1C14 C        	RETL	CH_K
   885 01A79 1C18 C        	RETL	CH_O
   886 01A7A 1C17 C        	RETL	CH_N
   887 01A7B 1C1D C        	RETL	CH_T
   888 01A7C 1C1B C        	RETL	CH_R
   889 01A7D 1C0A C        	RETL	CH_A
   890 01A7E 1C1C C        	RETL	CH_S
   891 01A7F 1C1D C        	RETL	CH_T
   892 01A80 1CFF C        	RETL	CH_END
   893            C        
   894 01A81      C        SHOW_SET_RING_GE:
   895 01A81 0020 C        	TBL
   896 01A82 1C0A C        	RETL	CH_A
   897 01A83 1C17 C        	RETL	CH_N
   898 01A84 1C23 C        	RETL	CH_Z
   899 01A85 1C29 C        	RETL	CH_POINT
   900 01A86 1C1B C        	RETL	CH_R
   901 01A87 1C1E C        	RETL	CH_U
   902 01A88 1C0F C        	RETL	CH_F
   903 01A89 1C0E C        	RETL	CH_E
   904 01A8A 1C24 C        	RETL	CH_BLANK
   905 01A8B 1C1C C        	RETL	CH_S
   906 01A8C 1C0E C        	RETL	CH_E
   907 01A8D 1C1D C        	RETL	CH_T
   908 01A8E 1C23 C        	RETL	CH_Z
   909 01A8F 1C0E C        	RETL	CH_E
   910 01A90 1C17 C        	RETL	CH_N
   911 01A91 1CFF C        	RETL	CH_END
   912            C        
   913 01A92      C        SHOW_SET_REMOTE_CODE_GE:
   914 01A92 0020 C        	TBL
   915 01A93 1C1C C        	RETL	CH_S
   916 01A94 1C0E C        	RETL	CH_E
   917 01A95 1C1D C        	RETL	CH_T
   918 01A96 1C23 C        	RETL	CH_Z
   919 01A97 1C0E C        	RETL	CH_E
   920 01A98 1C24 C        	RETL	CH_BLANK
   921 01A99 1C0F C        	RETL	CH_F
   922 01A9A 1C0E C        	RETL	CH_E
   923 01A9B 1C1B C        	RETL	CH_R
   924 01A9C 1C17 C        	RETL	CH_N
   925 01A9D 1C0A C        	RETL	CH_A
   926 01A9E 1C0B C        	RETL	CH_B
   927 01A9F 1C0F C        	RETL	CH_F
   928 01AA0 1C1B C        	RETL	CH_R
   929 01AA1 1CFF C        	RETL	CH_END
   930            C        
   931 01AA2      C        SHOW_SET_LONG_CODE_GE:
   932 01AA2 0020 C        	TBL
   933 01AA3 1C18 C        	RETL	CH_O
   934 01AA4 1C1B C        	RETL	CH_R
   935 01AA5 1C1D C        	RETL	CH_T
   936 01AA6 1C1C C        	RETL	CH_S
   937 01AA7 1C1F C        	RETL	CH_V
   938 01AA8 1C18 C        	RETL	CH_O
   939 01AA9 1C1B C        	RETL	CH_R
   940 01AAA 1C20 C        	RETL	CH_W
   941 01AAB 1C0A C        	RETL	CH_A
   942 01AAC 1C11 C        	RETL	CH_H
   943 01AAD 1C15 C        	RETL	CH_L
   944 01AAE 1CFF C        	RETL	CH_END
   945            C        
   946 01AAF      C        SHOW_SET_BOOK_GE:
   947 01AAF 0020 C        	TBL
   948 01AB0 1C1D C        	RETL	CH_T
   949 01AB1 1C0E C        	RETL	CH_E
   950 01AB2 1C15 C        	RETL	CH_L
   951 01AB3 1C0E C        	RETL	CH_E
   952 01AB4 1C0F C        	RETL	CH_F
   953 01AB5 1C18 C        	RETL	CH_O
   954 01AB6 1C17 C        	RETL	CH_N
   955 01AB7 1C0B C        	RETL	CH_B
   956 01AB8 1C1E C        	RETL	CH_U
   957 01AB9 1C0C C        	RETL	CH_C
   958 01ABA 1C11 C        	RETL	CH_H
   959 01ABB 1CFF C        	RETL	CH_END
   960            C        
   961 01ABC      C        SHOW_OGM_RECORDING_GE:
   962 01ABC 0020 C        	TBL
   963 01ABD 1C0A C        	RETL	CH_A
   964 01ABE 1C1E C        	RETL	CH_U
   965 01ABF 1C0F C        	RETL	CH_F
   966 01AC0 1C17 C        	RETL	CH_N
   967 01AC1 1C0E C        	RETL	CH_E
   968 01AC2 1C11 C        	RETL	CH_H
   969 01AC3 1C16 C        	RETL	CH_M
   970 01AC4 1C0E C        	RETL	CH_E
   971 01AC5 1C17 C        	RETL	CH_N
   972 01AC6 1CFF C        	RETL	CH_END
   973            C        
   974 01AC7      C        SHOW_OGM_PLAYBACK_GE:
   975 01AC7 0020 C        	TBL
   976 01AC8 1C0A C        	RETL	CH_A
   977 01AC9 1C0B C        	RETL	CH_B
   978 01ACA 1C1C C        	RETL	CH_S
   979 01ACB 1C19 C        	RETL	CH_P
   980 01ACC 1C12 C        	RETL	CH_I
   981 01ACD 1C0E C        	RETL	CH_E
   982 01ACE 1C15 C        	RETL	CH_L
   983 01ACF 1C0E C        	RETL	CH_E
   984 01AD0 1C17 C        	RETL	CH_N
   985 01AD1 1CFF C        	RETL	CH_END
   986            C        
   987 01AD2      C        SHOW_ERASED_GE:
   988 01AD2 0020 C        	TBL
   989 01AD3 1C10 C        	RETL	CH_G
   990 01AD4 1C0E C        	RETL	CH_E
   991 01AD5 1C15 C        	RETL	CH_L
   992 01AD6 1C18 C        	RETL	CH_O
   993 01AD7 1C0E C        	RETL	CH_E
   994 01AD8 1C1C C        	RETL	CH_S
   995 01AD9 1C0C C        	RETL	CH_C
   996 01ADA 1C11 C        	RETL	CH_H
   997 01ADB 1C1D C        	RETL	CH_T
   998 01ADC 1CFF C        	RETL	CH_END
   999            C        
  1000 01ADD      C        SHOW_ERASED_ALL_GE:
  1001 01ADD 0020 C        	TBL
  1002 01ADE 1C0A C        	RETL	CH_A
  1003 01ADF 1C15 C        	RETL	CH_L
  1004 01AE0 1C15 C        	RETL	CH_L
  1005 01AE1 1C0E C        	RETL	CH_E
  1006 01AE2 1C1C C        	RETL	CH_S
  1007 01AE3 1C24 C        	RETL	CH_BLANK
  1008 01AE4 1C10 C        	RETL	CH_G
  1009 01AE5 1C0E C        	RETL	CH_E
  1010 01AE6 1C15 C        	RETL	CH_L
  1011 01AE7 1C18 C        	RETL	CH_O
  1012 01AE8 1C0E C        	RETL	CH_E
  1013 01AE9 1C1C C        	RETL	CH_S
  1014 01AEA 1C0C C        	RETL	CH_C
  1015 01AEB 1C11 C        	RETL	CH_H
  1016 01AEC 1C1D C        	RETL	CH_T
  1017 01AED 1CFF C        	RETL	CH_END
  1018            C        
  1019 01AEE      C        SHOW_SUNDAY_GE:
  1020 01AEE 0020 C        	TBL
  1021 01AEF 1C1C C        	RETL	CH_S
  1022 01AF0 1C18 C        	RETL	CH_O
  1023 01AF1 1C17 C        	RETL	CH_N
  1024 01AF2 1C17 C        	RETL	CH_N
  1025 01AF3 1C1D C        	RETL	CH_T
  1026 01AF4 1C0A C        	RETL	CH_A
  1027 01AF5 1C10 C        	RETL	CH_G
  1028 01AF6 1CFF C        	RETL	CH_END
  1029            C        
  1030            C        
  1031            C        ORG	0X1B00
  1032            C        
  1033 01B00      C        SHOW_IN_REMOTE_GE:
  1034 01B00 0020 C        	TBL
  1035 01B01 1C0F C        	RETL	CH_F
  1036 01B02 1C0E C        	RETL	CH_E
  1037 01B03 1C1B C        	RETL	CH_R
  1038 01B04 1C17 C        	RETL	CH_N
  1039 01B05 1C0A C        	RETL	CH_A
  1040 01B06 1C0B C        	RETL	CH_B
  1041 01B07 1C0F C        	RETL	CH_F
  1042 01B08 1C1B C        	RETL	CH_R
  1043 01B09 1C0A C        	RETL	CH_A
  1044 01B0A 1C10 C        	RETL	CH_G
  1045 01B0B 1C0E C        	RETL	CH_E
  1046 01B0C 1CFF C        	RETL	CH_END
  1047            C        
  1048 01B0D      C        SHOW_MONDAY_GE:
  1049 01B0D 0020 C        	TBL
  1050 01B0E 1C16 C        	RETL	CH_M
  1051 01B0F 1C18 C        	RETL	CH_O
  1052 01B10 1C17 C        	RETL	CH_N
  1053 01B11 1C1D C        	RETL	CH_T
  1054 01B12 1C0A C        	RETL	CH_A
  1055 01B13 1C10 C        	RETL	CH_G
  1056 01B14 1CFF C        	RETL	CH_END
  1057            C        
  1058 01B15      C        SHOW_TUESDAY_GE:
  1059 01B15 0020 C        	TBL
  1060 01B16 1C0D C        	RETL	CH_D
  1061 01B17 1C12 C        	RETL	CH_I
  1062 01B18 1C0E C        	RETL	CH_E
  1063 01B19 1C17 C        	RETL	CH_N
  1064 01B1A 1C1C C        	RETL	CH_S
  1065 01B1B 1C1D C        	RETL	CH_T
  1066 01B1C 1C0A C        	RETL	CH_A
  1067 01B1D 1C10 C        	RETL	CH_G
  1068 01B1E 1CFF C        	RETL	CH_END
  1069            C        
  1070 01B1F      C        SHOW_WEDNSDAY_GE:
  1071 01B1F 0020 C        	TBL
  1072 01B20 1C16 C        	RETL	CH_M
  1073 01B21 1C12 C        	RETL	CH_I
  1074 01B22 1C1D C        	RETL	CH_T
  1075 01B23 1C1D C        	RETL	CH_T
  1076 01B24 1C20 C        	RETL	CH_W
  1077 01B25 1C18 C        	RETL	CH_O
  1078 01B26 1C0C C        	RETL	CH_C
  1079 01B27 1C11 C        	RETL	CH_H
  1080 01B28 1CFF C        	RETL	CH_END
  1081            C        
  1082 01B29      C        SHOW_THURSDAY_GE:
  1083 01B29 0020 C        	TBL
  1084 01B2A 1C0D C        	RETL	CH_D
  1085 01B2B 1C18 C        	RETL	CH_O
  1086 01B2C 1C17 C        	RETL	CH_N
  1087 01B2D 1C17 C        	RETL	CH_N
  1088 01B2E 1C0E C        	RETL	CH_E
  1089 01B2F 1C1B C        	RETL	CH_R
  1090 01B30 1C1C C        	RETL	CH_S
  1091 01B31 1C1D C        	RETL	CH_T
  1092 01B32 1C0A C        	RETL	CH_A
  1093 01B33 1C10 C        	RETL	CH_G
  1094 01B34 1CFF C        	RETL	CH_END
  1095            C        
  1096 01B35      C        SHOW_MEMORY_FULL_GE:
  1097 01B35 0020 C        	TBL
  1098 01B36 1C1D C        	RETL	CH_T
  1099 01B37 1C0E C        	RETL	CH_E
  1100 01B38 1C15 C        	RETL	CH_L
  1101 01B39 1C29 C        	RETL	CH_POINT
  1102 01B3A 1C0B C        	RETL	CH_B
  1103 01B3B 1C1E C        	RETL	CH_U
  1104 01B3C 1C0C C        	RETL	CH_C
  1105 01B3D 1C11 C        	RETL	CH_H
  1106 01B3E 1C24 C        	RETL	CH_BLANK
  1107 01B3F 1C1F C        	RETL	CH_V
  1108 01B40 1C18 C        	RETL	CH_O
  1109 01B41 1C15 C        	RETL	CH_L
  1110 01B42 1C15 C        	RETL	CH_L
  1111 01B43 1CFF C        	RETL	CH_END
  1112            C        
  1113 01B44      C        SHOW_NEW_GE:
  1114 01B44 0020 C        	TBL
  1115 01B45 1C17 C        	RETL	CH_N
  1116 01B46 1C0E C        	RETL	CH_E
  1117 01B47 1C1E C        	RETL	CH_U
  1118 01B48 1CFF C        	RETL	CH_END
  1119            C        
  1120 01B49      C        SHOW_FRIDAY_GE:
  1121 01B49 0020 C        	TBL
  1122 01B4A 1C0F C        	RETL	CH_F
  1123 01B4B 1C1B C        	RETL	CH_R
  1124 01B4C 1C0E C        	RETL	CH_E
  1125 01B4D 1C12 C        	RETL	CH_I
  1126 01B4E 1C1D C        	RETL	CH_T
  1127 01B4F 1C0A C        	RETL	CH_A
  1128 01B50 1C10 C        	RETL	CH_G
  1129 01B51 1CFF C        	RETL	CH_END
  1130            C        
  1131 01B52      C        SHOW_SATURDAY_GE:
  1132 01B52 0020 C        	TBL
  1133 01B53 1C1C C        	RETL	CH_S
  1134 01B54 1C0A C        	RETL	CH_A
  1135 01B55 1C16 C        	RETL	CH_M
  1136 01B56 1C1C C        	RETL	CH_S
  1137 01B57 1C1D C        	RETL	CH_T
  1138 01B58 1C0A C        	RETL	CH_A
  1139 01B59 1C10 C        	RETL	CH_G
  1140 01B5A 1CFF C        	RETL	CH_END
  1141            C        
  1142 01B5B      C        SHOW_TOTAL_GE:
  1143 01B5B 0020 C        	TBL
  1144 01B5C 1C1D C        	RETL	CH_T
  1145 01B5D 1C18 C        	RETL	CH_O
  1146 01B5E 1C1D C        	RETL	CH_T
  1147 01B5F 1C0A C        	RETL	CH_A
  1148 01B60 1C15 C        	RETL	CH_L
  1149 01B61 1CFF C        	RETL	CH_END
  1150            C        	
  1151 01B62      C        SHOW_LANGUAGE_GE:
  1152 01B62 0020 C        	TBL
  1153 01B63 1C15 C        	RETL	CH_L
  1154 01B64 1C0A C        	RETL	CH_A
  1155 01B65 1C17 C        	RETL	CH_N
  1156 01B66 1C10 C        	RETL	CH_G
  1157 01B67 1C1E C        	RETL	CH_U
  1158 01B68 1C0A C        	RETL	CH_A
  1159 01B69 1C10 C        	RETL	CH_G
  1160 01B6A 1C0E C        	RETL	CH_E
  1161 01B6B 1CFF C        	RETL	CH_END
  1162            C        	
  1163 01B6C      C        SHOW_ENGLISH_GE:
  1164 01B6C 0020 C        	TBL
  1165 01B6D 1C0E C        	RETL	CH_E
  1166 01B6E 1C17 C        	RETL	CH_N
  1167 01B6F 1C10 C        	RETL	CH_G
  1168 01B70 1C15 C        	RETL	CH_L
  1169 01B71 1C12 C        	RETL	CH_I
  1170 01B72 1C1C C        	RETL	CH_S
  1171 01B73 1C0C C        	RETL	CH_C
  1172 01B74 1C11 C        	RETL	CH_H
  1173 01B75 1CFF C        	RETL	CH_END
  1174            C        
  1175 01B76      C        SHOW_EDIT_GE:
  1176 01B76 0020 C        	TBL
  1177 01B77 1C0B C        	RETL	CH_B
  1178 01B78 1C0E C        	RETL	CH_E
  1179 01B79 1C0A C        	RETL	CH_A
  1180 01B7A 1C1B C        	RETL	CH_R
  1181 01B7B 1C0B C        	RETL	CH_B
  1182 01B7C 1C29 C        	RETL	CH_POINT
  1183 01B7D 1CFF C        	RETL	CH_END
  1184            C        
  1185 01B7E      C        SHOW_SEARCH_GE:
  1186 01B7E 0020 C        	TBL
  1187 01B7F 1C1C C        	RETL	CH_S
  1188 01B80 1C1E C        	RETL	CH_U
  1189 01B81 1C0C C        	RETL	CH_C
  1190 01B82 1C11 C        	RETL	CH_H
  1191 01B83 1C0E C        	RETL	CH_E
  1192 01B84 1C17 C        	RETL	CH_N
  1193 01B85 1CFF C        	RETL	CH_END
  1194            C        
  1195 01B86      C        SHOW_COPIED_INTO_BOOK_EN:
  1196 01B86 0020 C        	TBL
  1197 01B87 1C0C C        	RETL	CH_C
  1198 01B88 1C18 C        	RETL	CH_O
  1199 01B89 1C19 C        	RETL	CH_P
  1200 01B8A 1C12 C        	RETL	CH_I
  1201 01B8B 1C0E C        	RETL	CH_E
  1202 01B8C 1C0D C        	RETL	CH_D
  1203 01B8D 1C24 C        	RETL	CH_BLANK
  1204 01B8E 1C12 C        	RETL	CH_I
  1205 01B8F 1C17 C        	RETL	CH_N
  1206 01B90 1C1D C        	RETL	CH_T
  1207 01B91 1C18 C        	RETL	CH_O
  1208 01B92 1C24 C        	RETL	CH_BLANK
  1209 01B93 1C0B C        	RETL	CH_B
  1210 01B94 1C18 C        	RETL	CH_O
  1211 01B95 1C18 C        	RETL	CH_O
  1212 01B96 1C14 C        	RETL	CH_K
  1213 01B97 1CFF C        	RETL	CH_END
  1214            C        
  1215 01B98      C        SHOW_COPIED_INTO_BOOK_GE:
  1216 01B98 0020 C        	TBL
  1217 01B99 1C12 C        	RETL	CH_I
  1218 01B9A 1C17 C        	RETL	CH_N
  1219 01B9B 1C1C C        	RETL	CH_S
  1220 01B9C 1C24 C        	RETL	CH_BLANK
  1221 01B9D 1C1D C        	RETL	CH_T
  1222 01B9E 1C0E C        	RETL	CH_E
  1223 01B9F 1C15 C        	RETL	CH_L
  1224 01BA0 1C29 C        	RETL	CH_POINT
  1225 01BA1 1C0B C        	RETL	CH_B
  1226 01BA2 1C24 C        	RETL	CH_BLANK
  1227 01BA3 1C14 C        	RETL	CH_K
  1228 01BA4 1C18 C        	RETL	CH_O
  1229 01BA5 1C19 C        	RETL	CH_P
  1230 01BA6 1C12 C        	RETL	CH_I
  1231 01BA7 1C29 C        	RETL	CH_POINT
  1232 01BA8 1CFF C        	RETL	CH_END
  1233            C        
  1234 01BA9      C        SHOW_OGM_EN:
  1235 01BA9      C        SHOW_OGM__EN:
  1236 01BA9 0020 C        	TBL
  1237 01BAA 1C18 C        	RETL	CH_O
  1238 01BAB 1C10 C        	RETL	CH_G
  1239 01BAC 1C16 C        	RETL	CH_M
  1240 01BAD 1CFF C        	RETL	CH_END
  1241            C        
  1242 01BAE      C        SHOW_OGM_GE:
  1243 01BAE 0020 C        	TBL
  1244 01BAF 1C0A C        	RETL	CH_A
  1245 01BB0 1C17 C        	RETL	CH_N
  1246 01BB1 1C1C C        	RETL	CH_S
  1247 01BB2 1C0A C        	RETL	CH_A
  1248 01BB3 1C10 C        	RETL	CH_G
  1249 01BB4 1C0E C        	RETL	CH_E
  1250 01BB5 1CFF C        	RETL	CH_END
  1251            C        
  1252 01BB6      C        SHOW_OGM__GE:
  1253 01BB6 0020 C        	TBL
  1254 01BB7 1C0A C        	RETL	CH_A
  1255 01BB8 1C17 C        	RETL	CH_N
  1256 01BB9 1C1C C        	RETL	CH_S
  1257 01BBA 1C28 C        	RETL	CH_COLON
  1258 01BBB 1CFF C        	RETL	CH_END
  1259            C        
  1260 01BBC      C        SHOW_END_OF_NAMES_BOOK_EN:
  1261 01BBC 0020 C        	TBL
  1262 01BBD 1C0E C        	RETL	CH_E
  1263 01BBE 1C17 C        	RETL	CH_N
  1264 01BBF 1C0D C        	RETL	CH_D
  1265 01BC0 1C24 C        	RETL	CH_BLANK
  1266 01BC1 1C18 C        	RETL	CH_O
  1267 01BC2 1C0F C        	RETL	CH_F
  1268 01BC3 1C24 C        	RETL	CH_BLANK
  1269            C        	;RETL	CH_N
  1270            C        	;RETL	CH_A
  1271            C        	;RETL	CH_M
  1272            C        	;RETL	CH_E
  1273            C        	;RETL	CH_S
  1274            C        	;RETL	CH_BLANK
  1275 01BC4 1C0B C        	RETL	CH_B
  1276 01BC5 1C18 C        	RETL	CH_O
  1277 01BC6 1C18 C        	RETL	CH_O
  1278 01BC7 1C14 C        	RETL	CH_K
  1279 01BC8 1C1C C        	RETL	CH_S
  1280 01BC9 1CFF C        	RETL	CH_END
  1281            C        
  1282 01BCA      C        SHOW_END_OF_NAMES_BOOK_GE:
  1283 01BCA 0020 C        	TBL
  1284 01BCB 1C1D C        	RETL	CH_T
  1285 01BCC 1C0E C        	RETL	CH_E
  1286 01BCD 1C15 C        	RETL	CH_L
  1287 01BCE 1C29 C        	RETL	CH_POINT
  1288 01BCF 1C0B C        	RETL	CH_B
  1289 01BD0 1C1E C        	RETL	CH_U
  1290 01BD1 1C0C C        	RETL	CH_C
  1291 01BD2 1C11 C        	RETL	CH_H
  1292 01BD3 1C24 C        	RETL	CH_BLANK
  1293 01BD4 1C0E C        	RETL	CH_E
  1294 01BD5 1C17 C        	RETL	CH_N
  1295 01BD6 1C0D C        	RETL	CH_D
  1296 01BD7 1C0E C        	RETL	CH_E
  1297 01BD8 1CFF C        	RETL	CH_END
  1298            C        
  1299            C        ORG	0X1C00
  1300            C        
   244                     
   245                     ;include	"timer.asm"
   246                     ;include	"ASCII.asm"
   247                     ;include	"iic.asm"
   248                     
   249                     ;include	"CID.asm"		; 400
   250                     ;include	"stcp.asm"
   251                     
   252                     ;include	"math.asm"
   253                     ;以下占用1400~1FFF
   254                     ; 显示模块
   255                     ;include	"VGA.asm"
   256                     ; LCD驱动模块
   257                     ; 0X1800~0X1FD2
   258                     ;include	"lcddrv.asm"
   259                     
   260                     
  0 Error(s), 0 Warning(s), 0 User Message(s)
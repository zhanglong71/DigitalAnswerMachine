ORG	(9<<10)
;-------------------------------------------------------------------------------
MENU_FUNC:
	BANK	1
	
	MOV	A,B1_PRO_VAR
	AND	A,@0X0f
	MTBL
	JMP	MENU_FUNC_0	;0 - Enter
	JMP	MENU_FUNC_1	;1 - OPTIONS MENU
	JMP	MENU_FUNC_2	;2 - SET LANGUAGE
	JMP	MENU_FUNC_3	;3 - SET TIME/DATE
	JMP	MENU_FUNC_4	;4 - SET FLASH TIME
	JMP	MENU_FUNC_5	;5 - LCD CONTRAST
	JMP	MENU_FUNC_6	;6 - MESSAGE LENGTH
	JMP	MENU_FUNC_7	;7 - RINGS TO ANSWER
	JMP	MENU_FUNC_8	;8 - REMOTE ACCESS
	JMP	MENU_FUNC_9	;9 - TAM HD: ON/OFF
	JMP	MENU_FUNC_A	;10 - 
	JMP	MENU_FUNC_END	;11
	JMP	MENU_FUNC_END	;12
	JMP	MENU_FUNC_END	;13
	JMP	MENU_FUNC_END	;14
	JMP	MENU_FUNC_END	;15
	ENDT
;return
MENU_FUNC_END:	
	
	LJMP	MAIN_LOOP
;-------------------------------------------------------------------------------
;-------------------------------------------------------------------------------
;	上一年最后一天到上个月最后一天的天数,折算成变化的星期数(不算闰年)
;-------------------------------------------------------------------------------
DATE_TAB:
	MTBL
	RETL	@0	;1月 - 31
	RETL	@3	;2月 - 28
	RETL	@3	;3月 - 31
	RETL	@6	;4月 - 30
	RETL	@1	;5月 - 31
	RETL	@4	;6月 - 30
	RETL	@6	;7月 - 31
	RETL	@2	;8月 - 31
	RETL	@5	;9月 - 30
	RETL	@0	;10月 - 31
	RETL	@3	;11月 - 30
	RETL	@5	;12月 - 31
	ENDT
;-------------------------------------------------------------------------------
DATEMAX_TAB:
	MTBL
	RETL	@0	;0 - reserved
	RETL	@99	;1 - year
	RETL	@12	;2 - month
	RETL	@31	;3 - day
	RETL	@23	;4 - hour
	RETL	@59	;5 - minute
	RETL	@6	;6 - week
	RETL	@0	;0 - reserved
	ENDT
DATEMIN_TAB:
	MTBL
	RETL	@0	;0 - reserved
	RETL	@0	;1 - year
	RETL	@1	;2 - month
	RETL	@1	;3 - day
	RETL	@0	;4 - hour
	RETL	@0	;5 - minute
	RETL	@0	;6 - week
	RETL	@0	;0 - reserved
	ENDT
DATEDISPOFFSET_TAB:		;以第一行左起的偏移
	MTBL
	RETL	@0	;0 - reserved
	RETL	@17	;1 - year
	RETL	@6	;2 - month
	RETL	@4	;3 - day
	RETL	@0	;4 - hour
	RETL	@2	;5 - minute
	RETL	@0	;6 - week
	RETL	@0	;0 - reserved
	ENDT
DATEADDR_TAB:		;存取数据的地址
	MTBL
	RETL	@0		;0 - reserved
	RETL	@B1_YEAR_REG	;1 - year
	RETL	@B1_MON_REG	;2 - month
	RETL	@B1_DAY_REG	;3 - day
	RETL	@B1_HOUR_REG	;4 - hour
	RETL	@B1_MIN_REG	;5 - minute
	RETL	@B1_WEEK_REG	;6 - week
	RETL	@0		;0 - reserved
	ENDT
HD_TAB:		;HD on/off display string index
	MTBL
	RETL	@32	;0 - off
	RETL	@31	;1 - on
	ENDT
;-------------------------------------------------------------------------------
MENU_FUNC_0:		;idle
	LCALL	INIT_DAM_FUNC

	MOV	A,@CMSG_MENU
	SUB	A,B1_MSG
	JPZ	MENU_FUNC_0_MENU


	MOV	A,@CSEL_OGM
	SUB	A,B1_MSG
	JPZ	MENU_FUNC_0_SELOGM
	MOV	A,@CSEL_ONOFF
	SUB	A,B1_MSG
	JPZ	MENU_FUNC_0_SELONOFF

	MOV 	A,@CPOWER_ON
	SUB 	A,B1_MSG
	JPZ 	MENU_FUNC_0_POWERON
	
	JMP	MENU_FUNC_END
;---------------------------------------
MENU_FUNC_0_SELOGM:
	LJMP	MENU_0_SELOGM
;---------------------------------------
MENU_FUNC_0_SELONOFF:
	LJMP	MENU_0_SELONOFF
MENU_FUNC_0_POWERON:	
	LJMP	MENU_0_SELONOFF_1
;---------------------------------------
MENU_FUNC_0_MENU:
	
	MOV	A,@1		
	MOV	B1_PRO_VAR,A	;
	MOV	B1_MSG_N,A	;function value

	RTC_DISP_DISABLE	;Disable RTC display

	CLR	B1_PRO_VAR1
	MOV	A,@CTMR500MS
	LCALL	SET_TIMER
	
	PAGE	#(VGA)
	CALL	VGABLANKSTAMP
	CALL	VGABLANKNUM1
	CALL	VGABLANKNUM2
	CALL	VGABLANKCHAR
	MOV	A,@(STYLE_CENTER)
	CALL	VGACHAR
;-
	MOV	A,@14		;OPTIONS
	CALL	VGASTRING
	MOV	A,@(CH_BLANK)
	CALL	VGACHAR
	MOV	A,@23		;MENU
	CALL	VGASTRING
	MOV	A,@(CH_UP)	;UP
	CALL	VGACHAR
	MOV	A,@(CH_DOWN)	;DOWN
	CALL	VGACHAR
;-
	MOV	A,@(CH_END)
	CALL	VGACHAR
	CALL	VGADRAWCHAR
	PAGE	#($)

	JMP	MENU_FUNC_END
;-------------------------------------------------------------------------------
MENU_FUNC_1:
	
	MOV 	A,@CMSG_MKEY
	SUB 	A,B1_MSG
	JPZ 	MENU_FUNC_1_MKEY

	MOV 	A,@CMSG_TMR
	SUB 	A,B1_MSG
	JPZ 	MENU_FUNC_1_TMR		;500ms

	JMP	MENU_FUNC_END
;---------------------------------------
MENU_FUNC_1_MKEY:
	CLR	B1_PRO_VAR1
	
	MOV	A,@CKEY_MNU
	LCALL	KEY_CHK
	JPNC	MENU_FUNC_1_MKEY_MNU
	
	MOV	A,@CKEY_UP
	LCALL	KEY_CHK
	JPNC	MENU_FUNC_1_MKEY_UP
	MOV	A,@CKEY_DWN
	LCALL	KEY_CHK
	JPNC	MENU_FUNC_1_MKEY_DWN

	MOV	A,@CKEY_STP
	LCALL	KEY_CHK
	JPNC	MENU_FUNC_1_MKEY_STP
	
	JMP	MENU_FUNC_END
;---------------------------------------
MENU_FUNC_1_MKEY_MNU:
	MOV	A,B1_MSG_N
	SUB	A,@1
	JPZ	MENU_FUNC_1_MKEY_EXITMNU
	MOV	A,B1_MSG_N
	SUB	A,@10
	JPZ	MENU_FUNC_1_MKEY_EXITMNU
	
	MOV	A,B1_MSG_N
	MOV	B1_PRO_VAR,A

	MOV	A,@CMSG_INIT
	LCALL	STOR_MSG

	JMP	MENU_FUNC_END
;---------------------------------------
MENU_FUNC_1_MKEY_STP:
MENU_FUNC_2_MKEY_STP:
MENU_FUNC_3_MKEY_STP:
MENU_FUNC_4_MKEY_STP:
MENU_FUNC_5_MKEY_STP:
MENU_FUNC_6789_MKEY_STP:
;MENU_FUNC_6_MKEY_STP:
;MENU_FUNC_7_MKEY_STP:
;MENU_FUNC_8_MKEY_STP:
;MENU_FUNC_9_MKEY_STP:
MENU_FUNC_1_MKEY_EXITMNU:	;!!!!!!!
;!!!
	LCALL	CLR_PRO_STACK
	CLR	B1_PRO_VAR
	
	MOV	A,@CUPDT_MENU
	LCALL	STOR_MSG
;---
	JMP	MENU_FUNC_END
;---------------------------------------
MENU_FUNC_1_TMR:
MENU_FUNC_2_TMR:
MENU_FUNC_4_TMR:
MENU_FUNC_5_TMR:
MENU_FUNC_7_TMR:
	INC	B1_PRO_VAR1
	
	MOV	A,B1_PRO_VAR1
	SUB	A,@20
	JPNC	MENU_FUNC_1_MKEY_EXITMNU
	JMP	MENU_FUNC_END
;---------------------------------------
MENU_FUNC_1_MKEY_DWN:
	MOV	TEMP1,@1
	MOV	TEMP2,@10
	
	MOV	A,B1_MSG_N
	LCALL	VALUE_DEC
	MOV	B1_MSG_N,A
	
	JMP	MENU_FUNC_1_MKEY_SELMENU
;---------------------------------------
MENU_FUNC_1_MKEY_UP:
	MOV	TEMP1,@1	;min
	MOV	TEMP2,@10	;max
	
	MOV	A,B1_MSG_N
	LCALL	VALUE_INC
	MOV	B1_MSG_N,A

	;JMP	MENU_FUNC_1_MKEY_SELMENU
;---------------------------------------

MENU_FUNC_1_MKEY_SELMENU:

	PAGE	#(VGA)
	CALL	VGABLANKSTAMP
	CALL	VGABLANKNUM1
	CALL	VGABLANKNUM2
	CALL	VGABLANKCHAR
	MOV	A,@(STYLE_CENTER)
	CALL	VGACHAR
	PAGE	#($)

	;DECA	B1_MSG_N
	
	MOV	A,B1_MSG_N
	AND	A,@0X0F
	MTBL
	JMP	MENU_FUNC_END	;0 - Enter
	JMP	MENUSEL_1	;1 - OPTIONS MENU
	JMP	MENUSEL_2	;2 - SET LANGUAGE
	JMP	MENUSEL_3	;3 - SET TIME/DATE
	JMP	MENUSEL_4	;4 - SET FLASH TIME
	JMP	MENUSEL_5	;5 - LCD CONTRAST
	JMP	MENUSEL_6	;6 - MESSAGE LENGTH
	JMP	MENUSEL_7	;7 - RINGS TO ANSWER
	JMP	MENUSEL_8	;8 - REMOTE ACCESS
	JMP	MENUSEL_9	;9 - TAM HD: ON/OFF
	JMP	MENUSEL_10	;10 - EXIT OPTIONS
	JMP	MENU_FUNC_END	;0X0B
	JMP	MENU_FUNC_END	;0X0C
	JMP	MENU_FUNC_END	;0X0D
	JMP	MENU_FUNC_END	;0X0E
	JMP	MENU_FUNC_END	;0X0F
	ENDT
	
MENUSEL_1:

	PAGE	#(VGA)
	MOV	A,@14		;OPTIONS
	CALL	VGASTRING
	MOV	A,@(CH_BLANK)
	CALL	VGACHAR
	MOV	A,@23		;MENU
	CALL	VGASTRING
	MOV	A,@(CH_UP)	;UP
	CALL	VGACHAR
	MOV	A,@(CH_DOWN)	;DOWN
	CALL	VGACHAR
	PAGE	#($)

	JMP	MENU_FUNC_1_MKEY_SELMENU_DO
MENUSEL_2:
	
	PAGE	#(VGA)
	MOV	A,@19		;SET
	CALL	VGASTRING
	MOV	A,@(CH_BLANK)
	CALL	VGACHAR
	MOV	A,@7		;LANGUAGE
	CALL	VGASTRING
	PAGE	#($)
	
	JMP	MENU_FUNC_1_MKEY_SELMENU_DO
MENUSEL_3:
	
	PAGE	#(VGA)
	MOV	A,@19		;SET
	CALL	VGASTRING
	MOV	A,@(CH_BLANK)
	CALL	VGACHAR
	MOV	A,@20		;TIME
	CALL	VGASTRING
	nop
	MOV	A,@(CH_SCH1)	;/
	CALL	VGACHAR
	
	nop
	nop
	MOV	A,@24		;DATE
	CALL	VGASTRING
	PAGE	#($)

	JMP	MENU_FUNC_1_MKEY_SELMENU_DO
MENUSEL_4:

	PAGE	#(VGA)
	MOV	A,@19		;SET
	CALL	VGASTRING
	MOV	A,@(CH_BLANK)
	CALL	VGACHAR
	MOV	A,@6		;FLASH
	CALL	VGASTRING
	MOV	A,@(CH_BLANK)
	CALL	VGACHAR
	MOV	A,@20		;TIME
	CALL	VGASTRING
	PAGE	#($)

	JMP	MENU_FUNC_1_MKEY_SELMENU_DO
MENUSEL_5:

	PAGE	#(VGA)	
	MOV	A,@9		;LCD
	CALL	VGASTRING
	MOV	A,@(CH_BLANK)
	CALL	VGACHAR
	MOV	A,@3		;CONTRAST
	CALL	VGASTRING
	PAGE	#($)

	JMP	MENU_FUNC_1_MKEY_SELMENU_DO
MENUSEL_6:	

	PAGE	#(VGA)
	MOV	A,@25		;MESSAGE
	CALL	VGASTRING
	MOV	A,@(CH_BLANK)
	CALL	VGACHAR
	MOV	A,@8		;LENGTH
	CALL	VGASTRING
	PAGE	#($)

	JMP	MENU_FUNC_1_MKEY_SELMENU_DO
MENUSEL_7:
	PAGE	#(VGA)		
	MOV	A,@18		;RINGS
	CALL	VGASTRING
	MOV	A,@(CH_BLANK)
	CALL	VGACHAR
	MOV	A,@21		;TO
	CALL	VGASTRING
	MOV	A,@(CH_BLANK)
	CALL	VGACHAR
	MOV	A,@1		;ANSWER
	CALL	VGASTRING
	PAGE	#($)
	
	JMP	MENU_FUNC_1_MKEY_SELMENU_DO
MENUSEL_8:	
	
	PAGE	#(VGA)
	MOV	A,@17		;REMOTE
	CALL	VGASTRING
	MOV	A,@(CH_BLANK)
	CALL	VGACHAR
	MOV	A,@0		;ACCESS
	CALL	VGASTRING
	PAGE	#($)
	
	JMP	MENU_FUNC_1_MKEY_SELMENU_DO
MENUSEL_9:
	;SWAPA	SYS_FLAG
	;AND	A,@0X01
	
	MOV	A,@1
	JBS	SYS_FLAG,3
	MOV	A,@0
	CALL	HD_TAB
	MOV	B1_MSG_ID,A
	
	PAGE	#(VGA)
	MOV	A,@26		;TAM HD
	CALL	VGASTRING
	MOV	A,@(CH_COLON)
	CALL	VGACHAR
	MOV	A,@(CH_BLANK)
	CALL	VGACHAR
	MOV	A,B1_MSG_ID	;ID on/off
	CALL	VGASTRING
	PAGE	#($)
	
	JMP	MENU_FUNC_1_MKEY_SELMENU_DO
MENUSEL_10:
	PAGE	#(VGA)		
	MOV	A,@5		;EXIT
	CALL	VGASTRING
	MOV	A,@(CH_BLANK)
	CALL	VGACHAR
	MOV	A,@14		;OPTIONS
	CALL	VGASTRING
	PAGE	#($)	
	;JMP	MENU_FUNC_1_MKEY_SELMENU_DO
	
MENU_FUNC_1_MKEY_SELMENU_DO:
	
	PAGE	#(VGA)	
	MOV	A,@(CH_END)
	CALL	VGACHAR
	CALL	VGADRAWCHAR
	PAGE	#($)

	JMP	MENU_FUNC_END

;-------------------------------------------------------------------------------
MENU_FUNC_2:
	
	MOV	A,@CMSG_INIT
	SUB	A,B1_MSG
	JPZ	MENU_FUNC_2_INIT

	MOV 	A,@CMSG_MKEY
	SUB 	A,B1_MSG
	JPZ 	MENU_FUNC_2_MKEY

	MOV 	A,@CMSG_TMR
	SUB 	A,B1_MSG
	JPZ 	MENU_FUNC_2_TMR

	JMP	MENU_FUNC_END
;---------------------------------------
TAB_LANGUAGE:
	TBL
	RETL	28	;ENGLISH
	RETL	29	;FRANCAIS
	RETL	27	;DEUTSCH

MENU_FUNC_2_INIT:
	CLR	B1_PRO_VAR1
	
	MOV	A,B1_LANGUAGE
	MOV	B1_MSG_N,A
MENU_FUNC_2_MENU_LANGUAGE:	
	MOV	A,B1_MSG_N
	CALL	TAB_LANGUAGE
	MOV	B1_MSG_ID,A
	
	PAGE	#(VGA)
	CALL	VGABLANKCHAR
	MOV	A,@(STYLE_CENTER)
	CALL	VGACHAR
;-
	MOV	A,B1_MSG_ID	;DEUTSCH/ENGLISH/FRANCAIS
	CALL	VGASTRING
;-
	MOV	A,@(CH_END)
	CALL	VGACHAR
	CALL	VGADRAWCHAR
	PAGE	#($)

	JMP	MENU_FUNC_END
;---------------------------------------
MENU_FUNC_2_MKEY:
	CLR	B1_PRO_VAR1
	
	MOV	A,@CKEY_MNU
	LCALL	KEY_CHK
	JPNC	MENU_FUNC_2_MKEY_MNU
	
	MOV	A,@CKEY_UP
	LCALL	KEY_CHK
	JPNC	MENU_FUNC_2_MKEY_UP
	MOV	A,@CKEY_DWN
	LCALL	KEY_CHK
	JPNC	MENU_FUNC_2_MKEY_DWN

	MOV	A,@CKEY_STP
	LCALL	KEY_CHK
	JPNC	MENU_FUNC_2_MKEY_STP
	
	JMP	MENU_FUNC_END
;---------------------------------------
MENU_FUNC_2_MKEY_DWN:
	CLR	TEMP1
	MOV	TEMP2,@2
	
	MOV	A,B1_MSG_N
	LCALL	VALUE_DEC
	MOV	B1_MSG_N,A
	
	JMP	MENU_FUNC_2_MKEY_SELLANGUAGE
;---------------------------------------
MENU_FUNC_2_MKEY_UP:
	
	CLR	TEMP1		;min
	MOV	TEMP2,@2	;max
	
	MOV	A,B1_MSG_N
	LCALL	VALUE_INC
	MOV	B1_MSG_N,A

	;JMP	MENU_FUNC_2_MKEY_SELLANGUAGE
MENU_FUNC_2_MKEY_SELLANGUAGE:

	JMP	MENU_FUNC_2_MENU_LANGUAGE
;---------------------------------------
MENU_FUNC_2_MKEY_MNU:
	MOV	A,B1_MSG_N
	MOV	B1_LANGUAGE,A		;Save the value
	
	MOV	A,B1_PRO_VAR
	MOV	B1_MSG_N,A
	
	MOV	B1_PRO_VAR,@1

	JMP	MENU_FUNC_1_MKEY_SELMENU
;-------------------------------------------------------------------------------
MENU_FUNC_3:
	MOV	A,@CMSG_INIT
	SUB	A,B1_MSG
	JPZ	MENU_FUNC_3_INIT

	MOV 	A,@CMSG_MKEY
	SUB 	A,B1_MSG
	JPZ 	MENU_FUNC_3_MKEY
	
	MOV 	A,@CMSG_TMR
	SUB 	A,B1_MSG
	JPZ 	MENU_FUNC_3_TMR
	
	JMP	MENU_FUNC_END
;-----------------------------------------------------------
MENU_FUNC_3_TMR:	;blink
	INC	B1_PRO_VAR1
	
	MOV	A,B1_PRO_VAR1
	SUB	A,@20
	JPNC	MENU_FUNC_1_MKEY_EXITMNU	;Time out

	REFURBISH_1AND2L
	
	SWAPA	B1_PRO_VAR
	AND	A,@0X0F
	CALL	DATEDISPOFFSET_TAB
	MOV	TEMP0,A

	MOV	A,@(LCD_CTRL+OFFSETDATE)
	ADD	A,TEMP0
	MOV	_RC,A

	JPNB	B1_PRO_VAR1,0,MENU_FUNC_3_TMR_OFF

	MOV	A,B1_MSG_N
	LCALL	HEX_DGT
	MOV	TEMP0,A
	
	SWAPA	TEMP0
	AND	A,@0X0F
	ADD	A,@CNumDelta		;转换成机内码
	MOV	_RD,A
	
	INC	_RC
	MOV	A,TEMP0
	AND	A,@0X0F
	ADD	A,@CNumDelta		;转换成机内码
	MOV	_RD,A
	
	JMP	MENU_FUNC_END
MENU_FUNC_3_TMR_OFF:
	
	MOV	_RD,@NUM_BLANK
	INC	_RC
	MOV	_RD,@NUM_BLANK
		
	JMP	MENU_FUNC_END
;---------------------------------------
MENU_FUNC_3_INIT:
	CLR	B1_PRO_VAR1

	MOV	B1_PRO_VAR,@0X13	;year/menu

	PAGE	#(VGA)
	CALL	VGABLANKCHAR
;-the third line
	MOV	A,@(STYLE_CENTER)
	CALL	VGACHAR
	MOV	A,@30		;YEAR
	CALL	VGASTRING
	MOV	A,@(CH_SCH1)	;/
	CALL	VGACHAR
	MOV	A,@24		;DATE
	CALL	VGASTRING
	MOV	A,@(CH_SCH1)	;/
	CALL	VGACHAR
	MOV	A,@20		;TIME
	CALL	VGASTRING

	MOV	A,@(CH_END)
	CALL	VGACHAR
	CALL	VGADRAWCHAR
	;PAGE	#($)
;-
;-Get min/hour/day/month/year
	BANK	0
	MOV	TEMP0,B0_MIN_REG
	MOV	TEMP1,B0_HOUR_REG
	MOV	TEMP2,B0_DAY_REG
	MOV	TEMP3,B0_MON_REG
	MOV	TEMP4,B0_YEAR_REG
	BANK	1	
	MOV	B1_MIN_REG,TEMP0
	MOV	B1_HOUR_REG,TEMP1
	MOV	B1_DAY_REG,TEMP2
	MOV	B1_MON_REG,TEMP3
	MOV	B1_YEAR_REG,TEMP4
;-the icon
	;PAGE	#(VGA)
	
	MOV	A,@(1<<2|1<<5)
	CALL	VGASTAMP1
	CALL	VGADRAWSTAMP
;-the first line
	MOV	A,@(STYLE_LEFT+STYLE_TOBCD)	;!!!
	CALL	VGANUM1
	
	MOV	A,B1_HOUR_REG
	CALL	VGANUM1
	MOV	A,B1_MIN_REG
	CALL	VGANUM1
	MOV	A,B1_DAY_REG
	CALL	VGANUM1
	MOV	A,B1_MON_REG
	CALL	VGANUM1

	MOV	A,@(CH_END)
	CALL	VGANUM1
	CALL	VGADRAWNUM1
	;PAGE	#($)
;-the second line
	;PAGE	#(VGA)
	MOV	A,@(STYLE_CENTER+STYLE_TOBCD)	;!!!
	CALL	VGANUM2
	nop
	MOV	A,@20
	CALL	VGANUM2
	MOV	A,B1_YEAR_REG
	MOV	B1_MSG_N,A
	CALL	VGANUM2

	MOV	A,@(CH_END)
	CALL	VGANUM2
	CALL	VGADRAWNUM2
	PAGE	#($)
;-
	JMP	MENU_FUNC_END
;---------------------------------------
MENU_FUNC_3_MKEY:
	
	MOV	A,@CKEY_MNU
	LCALL	KEY_CHK
	JPNC	MENU_FUNC_3_MKEY_MNU
	
	MOV	A,@CKEY_UP
	LCALL	KEY_CHK
	JPNC	MENU_FUNC_3_MKEY_UP
	MOV	A,@CKEY_DWN
	LCALL	KEY_CHK
	JPNC	MENU_FUNC_3_MKEY_DWN

	MOV	A,@CKEY_STP
	LCALL	KEY_CHK
	JPNC	MENU_FUNC_3_MKEY_STP
		
	JMP	MENU_FUNC_END
;---------------------------------------
MENU_FUNC_3_MKEY_MNU:
;---
	REFURBISH_1AND2L
;-Get address	
	SWAPA	B1_PRO_VAR
	AND	A,@0X0F
	CALL	DATEDISPOFFSET_TAB
	MOV	TEMP0,A

	MOV	A,@(LCD_CTRL+OFFSETDATE)
	ADD	A,TEMP0
	MOV	_RC,A
;-Display confirm
	MOV	A,B1_MSG_N
	LCALL	HEX_DGT
	MOV	TEMP0,A
	
	SWAPA	TEMP0
	AND	A,@0X0F
	ADD	A,@CNumDelta		;转换成机内码
	MOV	_RD,A
	
	INC	_RC
	MOV	A,TEMP0
	AND	A,@0X0F
	ADD	A,@CNumDelta		;转换成机内码
	MOV	_RD,A
;---Save the data	
	SWAPA	B1_PRO_VAR
	AND	A,@0X0F
	CALL	DATEADDR_TAB
	ADD	A,@BANK1
	MOV	_RSR,A
	MOV	_R0,B1_MSG_N		;Save the value

	SWAPA	B1_PRO_VAR		;时间完了吗?
	AND	A,@0X07
	SUB	A,@5
	JPZ	MENU_FUNC_3_MKEY_MNU_1
;---the next adjust date/time data
	MOV	A,B1_PRO_VAR
	ADD	A,@0X10
	MOV	B1_PRO_VAR,A
;-Get data
	SWAPA	B1_PRO_VAR
	AND	A,@0X07
	CALL	DATEADDR_TAB
	ADD	A,@BANK1
	MOV	_RSR,A
	MOV	B1_MSG_N,_R0
		
	JMP	MENU_FUNC_END
;-----------------------------
MENU_FUNC_3_MKEY_MNU_1:		;Date/Time adjust over
	LCALL	INIT_DAM_FUNC
;---Set Date/Time	
	LCALL	CALC_WEEK
	JPNC	MENU_FUNC_3_MKEY_MNU_FAIL
	MOV	B1_WEEK_REG,A
	
;---Set MCU Date/Time
	CLR	B1_SEC_REG
	MOV	TEMP0,B1_MIN_REG
	MOV	TEMP1,B1_HOUR_REG
	MOV	TEMP2,B1_DAY_REG
	MOV	TEMP3,B1_MON_REG
	MOV	TEMP4,B1_YEAR_REG
	MOV	TEMP5,B1_WEEK_REG

	BANK	0
	CLR	B0_TMR
	CLR	B0_SEC_REG
	MOV	B0_MIN_REG,TEMP0
	MOV	B0_HOUR_REG,TEMP1
	MOV	B0_DAY_REG,TEMP2
	MOV	B0_MON_REG,TEMP3
	MOV	B0_YEAR_REG,TEMP4
	MOV	B0_WEEK_REG,TEMP5
	
	PAGE	#(SET_DSPRTC)
	CALL	SET_DSPRTC
	PAGE	#($)

	BANK	1	
;---
	MOV	A,B1_PRO_VAR
	AND	A,@0X0F
	MOV	B1_MSG_N,A

	MOV	B1_PRO_VAR,@1

	JMP	MENU_FUNC_1_MKEY_SELMENU
	
MENU_FUNC_3_MKEY_MNU_FAIL:
	MOV	A,@CMSG_INIT
	LCALL	STOR_MSG
	JMP	MENU_FUNC_END
;---------------------------------------
MENU_FUNC_3_MKEY_UP:
	SWAPA	B1_PRO_VAR
	AND	A,@0X0F
	CALL	DATEMAX_TAB
	MOV	TEMP2,A
	
	SWAPA	B1_PRO_VAR
	AND	A,@0X0F
	CALL	DATEMIN_TAB
	MOV	TEMP1,A
	
	MOV	A,B1_MSG_N
	LCALL	VALUE_INC
	MOV	B1_MSG_N,A
;---
MENU_FUNC_3_MKEY_ADJUST:
	CLR	B1_PRO_VAR1
	
	MOV	A,@CTMR500MS
	LCALL	SET_TIMER

	REFURBISH_1AND2L
	
	SWAPA	B1_PRO_VAR
	AND	A,@0X0F
	CALL	DATEDISPOFFSET_TAB
	MOV	TEMP0,A

	MOV	A,@(LCD_CTRL+OFFSETDATE)
	ADD	A,TEMP0
	MOV	_RC,A

	MOV	A,B1_MSG_N
	LCALL	HEX_DGT
	MOV	TEMP0,A
	
	SWAPA	TEMP0
	AND	A,@0X0F
	ADD	A,@CNumDelta		;转换成机内码	
	MOV	_RD,A
	
	INC	_RC
	MOV	A,TEMP0
	AND	A,@0X0F
	ADD	A,@CNumDelta		;转换成机内码
	MOV	_RD,A
	

	JMP	MENU_FUNC_END
;---------------------------------------
MENU_FUNC_3_MKEY_DWN:
	
	SWAPA	B1_PRO_VAR
	AND	A,@0X0F
	CALL	DATEMAX_TAB
	MOV	TEMP2,A
	
	SWAPA	B1_PRO_VAR
	AND	A,@0X0F
	CALL	DATEMIN_TAB
	MOV	TEMP1,A
	
	MOV	A,B1_MSG_N
	LCALL	VALUE_DEC
	MOV	B1_MSG_N,A
	
	JMP	MENU_FUNC_3_MKEY_ADJUST	
;-------------------------------------------------------------------------------
MENU_FUNC_4:
	
	MOV	A,@CMSG_INIT
	SUB	A,B1_MSG
	JPZ	MENU_FUNC_4_INIT

	MOV 	A,@CMSG_MKEY
	SUB 	A,B1_MSG
	JPZ 	MENU_FUNC_4_MKEY
	
	MOV 	A,@CMSG_TMR
	SUB 	A,B1_MSG
	JPZ 	MENU_FUNC_4_TMR
	
	JMP	MENU_FUNC_END
;---------------------------------------
MENU_FUNC_4_INIT:
	CLR	B1_PRO_VAR1

	MOV	A,B1_FLASH
	MOV	B1_MSG_N,A
MENU_FUNC_4_FLASH:
	PAGE	#(VGA)
	CALL	VGABLANKCHAR
;-the third line
	MOV	A,@(STYLE_CENTER)
	CALL	VGACHAR
	MOV	A,@6		;FLASH
	CALL	VGASTRING
	MOV	A,@(CH_BLANK)
	CALL	VGACHAR	
	PAGE	#($)
	
	MOV	A,B1_MSG_N
	AND	A,@0X03
	TBL
	JMP	MENU_FUNC_4_100MS
	JMP	MENU_FUNC_4_300MS
	JMP	MENU_FUNC_4_600MS
	JMP	MENU_FUNC_4_1000MS	

MENU_FUNC_4_100MS:
	PAGE	#(VGA)
	MOV	A,@(CH_1)
	CALL	VGACHAR	
	PAGE	#($)
	JMP	MENU_FUNC_4_INIT_1
MENU_FUNC_4_300MS:
	PAGE	#(VGA)
	MOV	A,@(CH_3)
	CALL	VGACHAR	
	PAGE	#($)
	JMP	MENU_FUNC_4_INIT_1
	
MENU_FUNC_4_600MS:
	PAGE	#(VGA)
	MOV	A,@(CH_6)
	CALL	VGACHAR	
	PAGE	#($)
	JMP	MENU_FUNC_4_INIT_1
MENU_FUNC_4_1000MS:
	PAGE	#(VGA)
	MOV	A,@(CH_1)
	CALL	VGACHAR	
	MOV	A,@(CH_0)
	CALL	VGACHAR	
	PAGE	#($)
	JMP	MENU_FUNC_4_INIT_1		
MENU_FUNC_4_INIT_1:
	PAGE	#(VGA)
	MOV	A,@(CH_0)
	CALL	VGACHAR	
	MOV	A,@(CH_0)
	CALL	VGACHAR
	MOV	A,@(CH_M)
	CALL	VGACHAR
	MOV	A,@(CH_S)
	CALL	VGACHAR
	MOV	A,@(CH_END)
	CALL	VGACHAR
	CALL	VGADRAWCHAR
	PAGE	#($)
	
	JMP	MENU_FUNC_END
;---------------------------------------
MENU_FUNC_4_MKEY:
		
	MOV	A,@CKEY_MNU
	LCALL	KEY_CHK
	JPNC	MENU_FUNC_4_MKEY_MNU
	
	MOV	A,@CKEY_UP
	LCALL	KEY_CHK
	JPNC	MENU_FUNC_4_MKEY_UP
	MOV	A,@CKEY_DWN
	LCALL	KEY_CHK
	JPNC	MENU_FUNC_4_MKEY_DWN

	MOV	A,@CKEY_STP
	LCALL	KEY_CHK
	JPNC	MENU_FUNC_4_MKEY_STP
		
	JMP	MENU_FUNC_END
;---------------------------------------
MENU_FUNC_4_MKEY_MNU:
	
	MOV	A,B1_MSG_N
	MOV	B1_FLASH,A		;Save the value
	
	MOV	A,B1_PRO_VAR
	MOV	B1_MSG_N,A
	
	MOV	B1_PRO_VAR,@1

	JMP	MENU_FUNC_1_MKEY_SELMENU
;---------------------------------------
MENU_FUNC_4_MKEY_UP:	
		
	CLR	TEMP1		;min
	MOV	TEMP2,@3	;max
	
	MOV	A,B1_MSG_N
	LCALL	VALUE_INC
	MOV	B1_MSG_N,A
	
	JMP	MENU_FUNC_4_FLASH
;---------------------------------------
MENU_FUNC_4_MKEY_DWN:	
	
	CLR	TEMP1
	MOV	TEMP2,@3
	
	MOV	A,B1_MSG_N
	LCALL	VALUE_DEC
	MOV	B1_MSG_N,A
		
	JMP	MENU_FUNC_4_FLASH
;---------------------------------------
;-------------------------------------------------------------------------------
MENU_FUNC_5:

	MOV	A,@CMSG_INIT
	SUB	A,B1_MSG
	JPZ	MENU_FUNC_5_INIT

	MOV 	A,@CMSG_MKEY
	SUB 	A,B1_MSG
	JPZ 	MENU_FUNC_5_MKEY
	
	MOV 	A,@CMSG_TMR
	SUB 	A,B1_MSG
	JPZ 	MENU_FUNC_5_TMR
	
	JMP	MENU_FUNC_END
;---------------------------------------
MENU_FUNC_5_INIT:

	MOV	A,B1_CONTRAST
	MOV	B1_MSG_N,A

	PAGE	#(VGA)
	CALL	VGABLANKCHAR
;-the third line
	MOV	A,@(STYLE_CENTER)
	CALL	VGACHAR
	MOV	A,@3		;CONTRAST
	CALL	VGASTRING
	MOV	A,@(CH_END)
	CALL	VGACHAR
	CALL	VGADRAWCHAR
	;PAGE	#($)
MENU_FUNC_5_CONTRAST:
	PAGE	#(VGA)
	CALL	VGABLANKNUM2

	MOV	A,@(STYLE_CENTER)
	CALL	VGANUM2
	
	MOV	A,B1_MSG_N
	ADD	A,@CNumDelta		;转换成机内码
	CALL	VGANUM2
	MOV	A,@(CH_END)
	CALL	VGANUM2
	CALL	VGADRAWNUM2

	MOV	A,B1_MSG_N
	PAGE	#(SETLCDCONTRAST)	
	CALL	SETLCDCONTRAST
	PAGE	#($)	
	
	JMP	MENU_FUNC_END
;---------------------------------------
MENU_FUNC_5_MKEY:

	MOV	A,@CKEY_MNU
	LCALL	KEY_CHK
	JPNC	MENU_FUNC_5_MKEY_MNU
	
	MOV	A,@CKEY_UP
	LCALL	KEY_CHK
	JPNC	MENU_FUNC_5_MKEY_UP
	MOV	A,@CKEY_DWN
	LCALL	KEY_CHK
	JPNC	MENU_FUNC_5_MKEY_DWN

	MOV	A,@CKEY_STP
	LCALL	KEY_CHK
	JPNC	MENU_FUNC_5_MKEY_TOSTP
		
	JMP	MENU_FUNC_END
;---------------------------------------
MENU_FUNC_5_MKEY_MNU:	

;-保存修改		
	MOV	A,B1_MSG_N
	MOV	B1_CONTRAST,A		;Save the value
	
	MOV	A,B1_PRO_VAR
	MOV	B1_MSG_N,A
	
	MOV	B1_PRO_VAR,@1
;-应用修改
	MOV	A,B1_CONTRAST
	PAGE	#(SETLCDCONTRAST)	
	CALL	SETLCDCONTRAST
	PAGE	#($)		
	JMP	MENU_FUNC_1_MKEY_SELMENU
;---------------------------------------
MENU_FUNC_5_MKEY_UP:
		
	MOV	TEMP1,@1	;min
	MOV	TEMP2,@5	;max

	MOV	A,B1_MSG_N
	LCALL	VALUE_INC
	MOV	B1_MSG_N,A
	
	JMP	MENU_FUNC_5_CONTRAST
;---------------------------------------
MENU_FUNC_5_MKEY_DWN:	

	MOV	TEMP1,@1	;min
	MOV	TEMP2,@5	;max
	
	MOV	A,B1_MSG_N
	LCALL	VALUE_DEC
	MOV	B1_MSG_N,A
			
	JMP	MENU_FUNC_5_CONTRAST
;---------------------------------------
MENU_FUNC_5_MKEY_TOSTP:
;-放弃修改
	MOV	A,B1_CONTRAST
	PAGE	#(SETLCDCONTRAST)	
	CALL	SETLCDCONTRAST
	PAGE	#($)	

	JMP	MENU_FUNC_5_MKEY_STP
;---------------------------------------
;-------------------------------------------------------------------------------
MENU_FUNC_6:
	LJMP	MENU_FUNC_6_FUNC
MENU_FUNC_7:
	LJMP	MENU_FUNC_7_FUNC
MENU_FUNC_8:
	LJMP	MENU_FUNC_8_FUNC
MENU_FUNC_9:
	LJMP	MENU_FUNC_9_FUNC
MENU_FUNC_A:
	LJMP	MENU_FUNC_A_FUNC
;-------------------------------------------------------------------------------
ORG	(10<<10)
;-------------------------------------------------------------------------------
MENU_FUNC_6_FUNC:	
	MOV	A,@CMSG_INIT
	SUB	A,B1_MSG
	JPZ	MENU_FUNC_6_INIT

	MOV 	A,@CMSG_MKEY
	SUB 	A,B1_MSG
	JPZ 	MENU_FUNC_6_MKEY
	
	MOV 	A,@CMSG_TMR
	SUB 	A,B1_MSG
	JPZ 	MENU_FUNC_6_TMR
	
MENU_FUNC_6_FUNC_END:
MENU_FUNC_7_FUNC_END:
MENU_FUNC_8_FUNC_END:
MENU_FUNC_9_FUNC_END:
MENU_FUNC_A_FUNC_END:
	LJMP	MAIN_LOOP
;---------------------------------------
MENU_FUNC_6_INIT:

	SWAPA	B1_RING_NUM
	AND	A,@0X0F
	MOV	B1_MSG_N,A

;	PAGE	#(VGA)
;	CALL	VGABLANKCHAR
;;-the third line
;	MOV	A,@(STYLE_CENTER)
;	CALL	VGACHAR
;	MOV	A,@25		;MESSAGE
;	CALL	VGASTRING
;	MOV	A,@(CH_BLANK)
;	CALL	VGACHAR
;	MOV	A,@7		;LENGTH
;	CALL	VGASTRING
;	MOV	A,@(CH_END)
;	CALL	VGACHAR
;	CALL	VGADRAWCHAR
	;PAGE	#($)
MENU_FUNC_6_MSGLEN:
	PAGE	#(VGA)
	CALL	VGABLANKNUM2

	MOV	A,@(STYLE_CENTER)
	CALL	VGANUM2
	
	MOV	A,B1_MSG_N
	ADD	A,@CNumDelta		;转换成机内码
	CALL	VGANUM2
	MOV	A,@(CH_END)
	CALL	VGANUM2
	CALL	VGADRAWNUM2
	PAGE	#($)

	JMP	MENU_FUNC_6_FUNC_END
;---------------------------------------
MENU_FUNC_6_MKEY:

	MOV	A,@CKEY_MNU
	LCALL	KEY_CHK
	JPNC	MENU_FUNC_6_MKEY_MNU
	
	MOV	A,@CKEY_UP
	LCALL	KEY_CHK
	JPNC	MENU_FUNC_6_MKEY_UP
	MOV	A,@CKEY_DWN
	LCALL	KEY_CHK
	JPNC	MENU_FUNC_6_MKEY_DWN

	MOV	A,@CKEY_STP
	LCALL	KEY_CHK
	JPNC	MENU_6_MKEY_STP
			
	JMP	MENU_FUNC_6_FUNC_END
;---------------------------------------
MENU_6_MKEY_STP:
MENU_7_MKEY_STP:
MENU_8_MKEY_STP:
MENU_9_MKEY_STP:
MENU_A_MKEY_STP:
MENU_EXITMNU:
	LJMP	MENU_FUNC_6789_MKEY_STP
;---------------------------------------
MENU_FUNC_6_MKEY_MNU:
;-保存修改	
	MOV	A,B1_RING_NUM
	AND	A,@0X0F
	MOV	B1_RING_NUM,A
		
	SWAPA	B1_MSG_N
	AND	A,@0XF0
	OR	A,B1_RING_NUM
	MOV	B1_RING_NUM,A		;Save the value
	
	MOV	A,B1_PRO_VAR
	MOV	B1_MSG_N,A
	
	MOV	B1_PRO_VAR,@1
			
	LJMP	MENU_FUNC_1_MKEY_SELMENU
;---------------------------------------
MENU_FUNC_6_MKEY_UP:
			
	MOV	TEMP1,@1	;min
	MOV	TEMP2,@2	;max

	MOV	A,B1_MSG_N
	LCALL	VALUE_INC
	MOV	B1_MSG_N,A
	
	JMP	MENU_FUNC_6_MSGLEN
MENU_FUNC_6_MKEY_DWN:
	
	MOV	TEMP1,@1	;min
	MOV	TEMP2,@2	;max
	
	MOV	A,B1_MSG_N
	LCALL	VALUE_DEC
	MOV	B1_MSG_N,A
			
	JMP	MENU_FUNC_6_MSGLEN
;---------------------------------------
MENU_FUNC_6_TMR:
	INC	B1_PRO_VAR1
	
	MOV	A,B1_PRO_VAR1
	SUB	A,@20
	JPNC	MENU_EXITMNU	;Time out

	REFURBISH_2NDL

	JPB	B1_PRO_VAR1,0,MENU_FUNC_6_MSGLEN
;MENU_FUNC_9_TMR_OFF:

	MOV	A,@(LCD_CTRL+OFFSET2NDL+7)
	MOV	_RC,A
	
	MOV	_RD,@NUM_BLANK
	INC	_RC
	
	JMP	MENU_FUNC_6_FUNC_END

;-------------------------------------------------------------------------------
MENU_FUNC_7_FUNC:	
	MOV	A,@CMSG_INIT
	SUB	A,B1_MSG
	JPZ	MENU_FUNC_7_INIT

	MOV 	A,@CMSG_MKEY
	SUB 	A,B1_MSG
	JPZ 	MENU_FUNC_7_MKEY
	
	MOV 	A,@CMSG_TMR
	SUB 	A,B1_MSG
	JPZ 	MENU_7_TMR
	
	JMP	MENU_FUNC_7_FUNC_END
;---------------------------------------
PSADDR_TAB:		;the address(temp memory,use to stor psword)
	TBL
	RETL	@0		;0 - reserved
	RETL	@B1_MIN_REG	;1 - ps1
	RETL	@B1_HOUR_REG	;2 - ps2
	RETL	@B1_DAY_REG	;3 - ps3
	RETL	@B1_MON_REG	;4 - ps4
PSOFFSET_TAB:		;以第二行左起的偏移(Display memoryr)
	TBL
	RETL	@0		;0 - reserved
	RETL	@6	;1 - year
	RETL	@7	;2 - month
	RETL	@8	;3 - day
;---------------------------------------
MENU_FUNC_7_INIT:
	
	MOV	A,B1_RING_NUM
	AND	A,@0X0F
	MOV	B1_MSG_N,A
MENU_FUNC_7_RINGS:

	PAGE	#(VGA)
	CALL	VGABLANKNUM2
	CALL	VGABLANKCHAR
	PAGE	#($)
	
	MOV	A,B1_MSG_N
	SUB	A,@1
	JPZ	MENU_FUNC_7_TOLLSAVE
;-the third line
	PAGE	#(VGA)
	MOV	A,@(STYLE_CENTER)
	CALL	VGACHAR
	MOV	A,@18		;RINGS
	CALL	VGASTRING
	MOV	A,@(CH_BLANK)
	CALL	VGACHAR
	MOV	A,@21		;TO
	CALL	VGASTRING
	MOV	A,@(CH_BLANK)
	CALL	VGACHAR
	MOV	A,@1		;ANSWER
	CALL	VGASTRING
	MOV	A,@(CH_END)
	CALL	VGACHAR
	CALL	VGADRAWCHAR
;-the second line
	MOV	A,@(STYLE_CENTER)
	CALL	VGANUM2
	
	MOV	A,B1_MSG_N
	ADD	A,@CNumDelta		;转换成机内码
	CALL	VGANUM2
	MOV	A,@(CH_END)
	CALL	VGANUM2
	CALL	VGADRAWNUM2
	PAGE	#($)

	JMP	MENU_FUNC_7_FUNC_END
MENU_FUNC_7_TOLLSAVE:
;-the third line
	PAGE	#(VGA)
	MOV	A,@(STYLE_CENTER)
	CALL	VGACHAR
	MOV	A,@45		;TOLL SAVE
	CALL	VGASTRING
	MOV	A,@(CH_END)
	CALL	VGACHAR
	CALL	VGADRAWCHAR
	PAGE	#($)

	JMP	MENU_FUNC_7_FUNC_END
;---------------------------------------
MENU_FUNC_7_MKEY:
	CLR	B1_PRO_VAR1
	
	MOV	A,@CKEY_MNU
	LCALL	KEY_CHK
	JPNC	MENU_FUNC_7_MKEY_MNU
	
	MOV	A,@CKEY_UP
	LCALL	KEY_CHK
	JPNC	MENU_FUNC_7_MKEY_UP
	MOV	A,@CKEY_DWN
	LCALL	KEY_CHK
	JPNC	MENU_FUNC_7_MKEY_DWN

	MOV	A,@CKEY_STP
	LCALL	KEY_CHK
	JPNC	MENU_7_MKEY_STP
	
	JMP	MENU_FUNC_7_FUNC_END
;---------------------------------------
;---------------------------------------
MENU_FUNC_7_MKEY_MNU:
;-保存修改	
	MOV	A,B1_RING_NUM
	AND	A,@0XF0
	MOV	B1_RING_NUM,A
		
	MOV	A,B1_MSG_N
	AND	A,@0X0F
	OR	A,B1_RING_NUM
	MOV	B1_RING_NUM,A		;Save the value
	
	MOV	A,B1_PRO_VAR
	MOV	B1_MSG_N,A
	
	MOV	B1_PRO_VAR,@1
			
	LJMP	MENU_FUNC_1_MKEY_SELMENU
;---------------------------------------
MENU_FUNC_7_MKEY_UP:
			
	MOV	TEMP1,@1	;min
	MOV	TEMP2,@9	;max

	MOV	A,B1_MSG_N
	LCALL	VALUE_INC
	MOV	B1_MSG_N,A
	
	JMP	MENU_FUNC_7_RINGS
MENU_FUNC_7_MKEY_DWN:
	
	MOV	TEMP1,@1	;min
	MOV	TEMP2,@9	;max

	MOV	A,B1_MSG_N
	LCALL	VALUE_DEC
	MOV	B1_MSG_N,A
				
	JMP	MENU_FUNC_7_RINGS	
;---------------------------------------
MENU_7_TMR:
	LJMP	MENU_FUNC_7_TMR
;-------------------------------------------------------------------------------
MENU_FUNC_8_FUNC:
	
	MOV	A,@CMSG_INIT
	SUB	A,B1_MSG
	JPZ	MENU_FUNC_8_INIT

	MOV 	A,@CMSG_MKEY
	SUB 	A,B1_MSG
	JPZ 	MENU_FUNC_8_MKEY
	
	MOV 	A,@CMSG_TMR
	SUB 	A,B1_MSG
	JPZ 	MENU_FUNC_8_TMR

	JMP	MENU_FUNC_8_FUNC_END
;---------------------------------------
MENU_FUNC_8_INIT:

	MOV	B1_PRO_VAR,@0X18	;PSWORD/ps1
MENU_FUNC_8_PSWORD:

	SWAPA	B1_PRO_VAR
	AND	A,@0X0F
	CALL	PSOFFSET_TAB
	MOV	TEMP0,A
;-the second line
	MOV	A,@(LCD_CTRL+OFFSET2NDL)
	ADD	A,TEMP0
	MOV	_RC,A
	
	SWAPA	B1_12PSWORD
	AND	A,@0X0F
	ADD	A,@CNumDelta		;转换成机内码
	MOV	_RD,A
	MOV	B1_MIN_REG,A
	MOV	B1_MSG_N,A
	INC	_RC

	MOV	A,B1_12PSWORD
	AND	A,@0X0F
	ADD	A,@CNumDelta		;转换成机内码
	MOV	_RD,A
	MOV	B1_HOUR_REG,A
	INC	_RC
	
	SWAPA	B1_34PSWORD
	AND	A,@0X0F
	ADD	A,@CNumDelta		;转换成机内码
	MOV	_RD,A
	MOV	B1_DAY_REG,A
	INC	_RC

	REFURBISH_2NDL
;-	
	JMP	MENU_FUNC_8_FUNC_END
;---------------------------------------
MENU_FUNC_8_TMR:
	INC	B1_PRO_VAR1
	
	MOV	A,B1_PRO_VAR1
	SUB	A,@20
	JPNC	MENU_EXITMNU	;Time out
	
	REFURBISH_2NDL
;-Get address(offset)	
	SWAPA	B1_PRO_VAR
	AND	A,@0X0F
	CALL	PSOFFSET_TAB
	ADD	A,@(LCD_CTRL+OFFSET2NDL)
	MOV	_RC,A

	JPNB	B1_PRO_VAR1,0,MENU_FUNC_8_TMR_OFF

	MOV	A,B1_MSG_N
	AND	A,@0X0F
	ADD	A,@CNumDelta		;转换成机内码
	MOV	_RD,A
	
	JMP	MENU_FUNC_8_FUNC_END
MENU_FUNC_8_TMR_OFF:
	MOV	_RD,@NUM_BLANK

	JMP	MENU_FUNC_8_FUNC_END
;---------------------------------------
MENU_FUNC_8_MKEY:
		
	MOV	A,@CKEY_MNU
	LCALL	KEY_CHK
	JPNC	MENU_FUNC_8_MKEY_MNU
	
	MOV	A,@CKEY_UP
	LCALL	KEY_CHK
	JPNC	MENU_FUNC_8_MKEY_UP
	MOV	A,@CKEY_DWN
	LCALL	KEY_CHK
	JPNC	MENU_FUNC_8_MKEY_DWN

	MOV	A,@CKEY_STP
	LCALL	KEY_CHK
	JPNC	MENU_8_MKEY_STP
		
	JMP	MENU_FUNC_8_FUNC_END
;---------------------------------------
;---------------------------------------
MENU_FUNC_8_MKEY_MNU:
;---
	REFURBISH_2NDL
;---Display conform	
	SWAPA	B1_PRO_VAR
	AND	A,@0X0F
	CALL	PSOFFSET_TAB
	ADD	A,@(LCD_CTRL+OFFSET2NDL)
	MOV	_RC,A

	MOV	A,B1_MSG_N
	ADD	A,@CNumDelta		;转换成机内码
	MOV	_RD,A
;---Save the data	
	SWAPA	B1_PRO_VAR
	AND	A,@0X0F
	CALL	PSADDR_TAB
	ADD	A,@BANK1
	MOV	_RSR,A
	MOV	_R0,B1_MSG_N		;Save the value

	SWAPA	B1_PRO_VAR		;PS adjust over?
	AND	A,@0X03
	SUB	A,@3
	JPZ	MENU_FUNC_8_MKEY_MNU_1
;---the next adjust psword data
	MOV	A,B1_PRO_VAR
	ADD	A,@0x10
	MOV	B1_PRO_VAR,A
;-Get data
	SWAPA	B1_PRO_VAR
	AND	A,@0X03
	CALL	PSADDR_TAB
	ADD	A,@BANK1
	MOV	_RSR,A
	MOV	B1_MSG_N,_R0
		
	JMP	MENU_FUNC_8_FUNC_END
;-----------------------------
MENU_FUNC_8_MKEY_MNU_1:		;PSWORD adjust over
;---conform adjust data	

	SWAPA	B1_MIN_REG	;ps1
	AND	A,@0XF0
	MOV	B1_12PSWORD,A
	
	MOV	A,B1_HOUR_REG	;ps2
	OR	A,B1_12PSWORD
	MOV	B1_12PSWORD,A

	SWAPA	B1_DAY_REG	;ps3
	AND	A,@0XF0
	MOV	B1_34PSWORD,A
	
	MOV	A,B1_MON_REG	;ps4
	OR	A,B1_34PSWORD
	MOV	B1_34PSWORD,A	
;---
	MOV	A,B1_PRO_VAR
	AND	A,@0X0F
	MOV	B1_MSG_N,A

	MOV	B1_PRO_VAR,@1

	LJMP	MENU_FUNC_1_MKEY_SELMENU
;---------------------------------------
MENU_FUNC_8_MKEY_UP:
	MOV	TEMP1,@0	;min
	MOV	TEMP2,@9	;max
	
	MOV	A,B1_MSG_N
	LCALL	VALUE_INC
	MOV	B1_MSG_N,A
;---
MENU_FUNC_8_MKEY_ADJUST:
	CLR	B1_PRO_VAR1
	
	MOV	A,@CTMR500MS
	LCALL	SET_TIMER

	REFURBISH_2NDL
	
	SWAPA	B1_PRO_VAR
	AND	A,@0X0F
	CALL	PSOFFSET_TAB
	MOV	TEMP0,A

	MOV	A,@(LCD_CTRL+OFFSET2NDL)
	ADD	A,TEMP0
	MOV	_RC,A

	MOV	A,B1_MSG_N
	ADD	A,@CNumDelta		;转换成机内码
	MOV	_RD,A

	JMP	MENU_FUNC_8_FUNC_END
;---------------------------------------
MENU_FUNC_8_MKEY_DWN:
	
	MOV	TEMP1,@0	;min
	MOV	TEMP2,@9	;max
	
	MOV	A,B1_MSG_N
	LCALL	VALUE_DEC
	MOV	B1_MSG_N,A
	
	JMP	MENU_FUNC_8_MKEY_ADJUST
;-------------------------------------------------------------------------------
MENU_FUNC_9_FUNC:
	MOV	A,@CMSG_INIT
	SUB	A,B1_MSG
	JPZ	MENU_FUNC_9_INIT

	MOV 	A,@CMSG_MKEY
	SUB 	A,B1_MSG
	JPZ 	MENU_FUNC_9_MKEY
	
	MOV 	A,@CMSG_TMR
	SUB 	A,B1_MSG
	JPZ 	MENU_FUNC_9_TMR
	
	JMP	MENU_FUNC_9_FUNC_END
;---------------------------------------
MENU_FUNC_9_INIT:
	MOV	A,@1
	JBS	SYS_FLAG,3
	MOV	A,@0
	MOV	B1_MSG_N,A
MENU_FUNC_9_HD:	
	CLR	B1_PRO_VAR1
	
	MOV	A,@CTMR500MS
	LCALL	SET_TIMER
MENU_FUNC_9_HD_1:	
	MOV	A,B1_MSG_N
	LCALL	HD_TAB
	MOV	B1_MSG_ID,A
;-the third line
	PAGE	#(VGA)
	CALL	VGABLANKCHAR

	MOV	A,@(STYLE_CENTER)
	CALL	VGACHAR
	MOV	A,@26		;TAM HD
	CALL	VGASTRING
	MOV	A,@(CH_COLON)
	CALL	VGACHAR
	MOV	A,@(CH_BLANK)
	CALL	VGACHAR
	MOV	A,B1_MSG_ID	;ID on/off
	CALL	VGASTRING
	MOV	A,@(CH_END)
	CALL	VGACHAR
	CALL	VGADRAWCHAR
	PAGE	#($)

	JMP	MENU_FUNC_9_FUNC_END
;---------------------------------------
MENU_FUNC_9_TMR:
	INC	B1_PRO_VAR1
	
	REFURBISH_3RDL

	JPB	B1_PRO_VAR1,0,MENU_FUNC_9_HD_1
;MENU_FUNC_9_TMR_OFF:

	MOV	A,@(LCD_CTRL+OFFSET3RDL+10)
	MOV	_RC,A

	MOV	_RD,@CH_BLANK
	INC	_RC
	MOV	_RD,@CH_BLANK
	INC	_RC
	MOV	_RD,@CH_BLANK
	INC	_RC
	
	JMP	MENU_FUNC_9_FUNC_END
;---------------------------------------
MENU_FUNC_9_MKEY:
		
	MOV	A,@CKEY_MNU
	LCALL	KEY_CHK
	JPNC	MENU_FUNC_9_MKEY_MNU
	
	MOV	A,@CKEY_UP
	LCALL	KEY_CHK
	JPNC	MENU_FUNC_9_MKEY_UP
	MOV	A,@CKEY_DWN
	LCALL	KEY_CHK
	JPNC	MENU_FUNC_9_MKEY_DWN

	MOV	A,@CKEY_STP
	LCALL	KEY_CHK
	JPNC	MENU_9_MKEY_STP
		
	JMP	MENU_FUNC_9_FUNC_END
;---------------------------------------
MENU_FUNC_9_MKEY_MNU:
;-保存修改	
	BC	SYS_FLAG,3
	JBC	B1_MSG_N,0
	BS	SYS_FLAG,3		;Save the value
	
	LCALL	INIT_ENABLEDAC
	
	MOV	A,B1_PRO_VAR
	MOV	B1_MSG_N,A
	
	MOV	B1_PRO_VAR,@1
			
	LJMP	MENU_FUNC_1_MKEY_SELMENU
;---------------------------------------
MENU_FUNC_9_MKEY_UP:
				
	MOV	TEMP1,@0	;min
	MOV	TEMP2,@1	;max

	MOV	A,B1_MSG_N
	LCALL	VALUE_INC
	MOV	B1_MSG_N,A
	
	JMP	MENU_FUNC_9_HD
;---------------------------------------
MENU_FUNC_9_MKEY_DWN:
	
	MOV	TEMP1,@0	;min
	MOV	TEMP2,@1	;max

	MOV	A,B1_MSG_N
	LCALL	VALUE_DEC
	MOV	B1_MSG_N,A
				
	JMP	MENU_FUNC_9_HD
;-------------------------------------------------------------------------------
MENU_FUNC_A_FUNC:
	
	MOV	A,@CVP_END
	SUB	A,B1_MSG
	JPZ	MENU_FUNC_A_FUNC_OVER

	MOV	A,@CMSG_MKEY
	SUB	A,B1_MSG
	JPZ	MENU_FUNC_A_FUNC_MKEY

	JMP	MENU_FUNC_A_FUNC_END
;---------------------------------------
MENU_FUNC_A_FUNC_OVER:
	CLR	B1_PRO_VAR	
	PAGE	#(KCLR_PRO_STACK)	
	CALL	KCLR_PRO_STACK
	MOV	A,@CUPDT_MENU
	CALL	KSTOR_MSG
	PAGE	#($)
	
	DAM_SPK_DISABLE

	JMP	MENU_FUNC_A_FUNC_END
;---------------------------------------
MENU_FUNC_A_FUNC_MKEY:
	
	MOV	A,B1_MSG
	PAGE	#(KSTOR_MSG)
	CALL	KSTOR_MSG
	CALL	KCLR_PRO_STACK
	PAGE	#($)
	
	CLR	B1_PRO_VAR
	DAM_SPK_DISABLE
				
	JMP	MENU_FUNC_A_FUNC_END	
;---------------------------------------
MENU_0_SELOGM:
	SELOGM_COM
	
	MOV	A,@2
	JBS	DAM_FLAG,3
	MOV	A,@1
	MOV	B1_MSG_N,A
;-
	PAGE	#(VGA)
	CALL	VGABLANKNUM2
	CALL	VGABLANKCHAR
	
	MOV	A,@(STYLE_CENTER)
	CALL	VGACHAR
	MOV	A,@1		;ANSWER
	CALL	VGASTRING
	MOV	A,@(CH_BLANK)
	CALL	VGACHAR
	MOV	A,@(CH_A)
	CALL	VGACHAR
	MOV	A,B1_MSG_N	;1/2
	ADD	A,@CNumDelta		;转换成机内码
	CALL	VGACHAR
	MOV	A,@(CH_END)
	CALL	VGACHAR
	CALL	VGADRAWCHAR
	;PAGE	#($)

;-VP into queue
	MOV	A,@VOPID_ANNOUNCEMENT
	PAGE	#(VOP_STOR_VP)
	CALL	VOP_STOR_VP

	MOV	TEMP0,@ID_VOP
	MOV	A,B1_MSG_N
	ADD	A,@1
	MOV	TEMP1,A
	CALL	STOR_VP
	;PAGE	#($)
;-DA0ToSpk
	LCALL	DAA_SPK
	DAM_SPK_ENABLE
	MOV	B1_PRO_VAR,@0X0A	

	JMP	MENU_FUNC_A_FUNC_END
;---------------------------------------
MENU_0_SELONOFF:
	DAM_COM
;-
	MOV	A,@32
	JBS	DAM_FLAG,2
	MOV	A,@31
	MOV	B1_MSG_N,A

	PAGE	#(VGA)
	CALL	VGABLANKNUM2
	CALL	VGABLANKCHAR
	
	MOV	A,@(STYLE_CENTER)
	CALL	VGACHAR
	MOV	A,@1		;ANSWER
	CALL	VGASTRING
	MOV	A,@(CH_BLANK)
	CALL	VGACHAR
	MOV	A,B1_MSG_N	;ON/OFF
	CALL	VGASTRING
	
	MOV	A,@(CH_END)
	CALL	VGACHAR
	CALL	VGADRAWCHAR
	PAGE	#($)
	
	SEL_OGM1
MENU_0_SELONOFF_1:
	LCALL	DAA_SPK
	DAM_SPK_ENABLE

	MOV	B1_PRO_VAR,@0X0A	
	
;-VP into queue
	MOV	A,@VOPID_ANSMACHINE
	LCALL	VOP_STOR_VP
	
	JPB	DAM_FLAG,2,MENU_FUNC_0_SELOFF
	
	MOV	A,@VOPID_ON
	LCALL	VOP_STOR_VP
;---	
	MOV	A,@VOPID_TWO
	JBS	DAM_FLAG,3	;Announcement one/two
	MOV	A,@VOPID_ONE
	MOV	B1_MSG_ID,A

	MOV	A,@VOPID_ANNOUNCEMENT
	PAGE	#(VOP_STOR_VP)
	CALL	VOP_STOR_VP
	MOV	A,B1_MSG_ID
	CALL	VOP_STOR_VP
	PAGE	#($)

	JMP	MENU_FUNC_A_FUNC_END
;-----------------------------
MENU_FUNC_0_SELOFF:

	MOV	A,@VOPID_OFF
	LCALL	VOP_STOR_VP

	JMP	MENU_FUNC_A_FUNC_END
;-------------------------------------------------------------------------------
;	SET_DSPRTC
;	
;	input : 
;	output: 
;
;Note : set bank 0 before invoke this subroutine
;
;-------------------------------------------------------------------------------
SET_DSPRTC:
	;BANK	0
	MOV	A,B0_SEC_REG
	JPNZ	SET_DSPRTC_END	;The condition 
	
	PAGE	#(SET_SEC)
	CLRA
	CALL	SET_SEC		;clear the second
	MOV	A,B0_YEAR_REG
	CALL	SET_YEAR
	MOV	A,B0_MON_REG
	CALL	SET_MON
	MOV	A,B0_DAY_REG
	CALL	SET_DAY
	MOV	A,B0_WEEK_REG
	CALL	SET_WEEK
	MOV	A,B0_HOUR_REG
	CALL	SET_HOUR
	MOV	A,B0_MIN_REG
	CALL	SET_MIN
	PAGE	#($)	;???????????????????????????????????????????????????????
	
SET_DSPRTC_END:	
	RET
;-------------------------------------------------------------------------------	

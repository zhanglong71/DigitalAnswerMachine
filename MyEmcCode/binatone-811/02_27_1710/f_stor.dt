;-------------------------------------------------------------------------------
STOR_FUNC:
	MOV	A,B1_PRO_VAR
	AND	A,@0X03
	MTBL
	JMP	STOR_FUNC_0	;0 - idle
	JMP	STOR_FUNC_1	;1 - Store
	JMP	STOR_FUNC_2	;2 - lookup
	JMP	STOR_FUNC_END	;3 - 
	ENDT
STOR_FUNC_END:
	LJMP	MAIN_LOOP
;-------------------------------------------------------------------------------
STOR_FUNC_0:
	MOV	A,@CSTOR_NUM
	SUB	A,B1_MSG
	JPZ	STOR_FUNC_0_STORNUM_INIT
	
	MOV	A,@CLOOK_NUM
	SUB	A,B1_MSG
	JPZ	STOR_FUNC_0_LOOKNUM_INIT
	
	JMP	STOR_FUNC_END
;---------------------------------------
STOR_FUNC_0_STORNUM_INIT:
	PAGE	#(VGA)
	CALL	VGABLANKNUM2
	CALL	VGABLANKCHAR
	
	MOV	A,@(STYLE_CENTER)
	CALL	VGACHAR
	MOV	A,@40		;STORE
	CALL	VGASTRING
	MOV	A,@(CH_BLANK) 	;
	CALL	VGACHAR
	MOV	A,@41		;NUMBER
	CALL	VGASTRING
;-
	MOV	A,@(CH_END)
	CALL	VGACHAR
	CALL	VGADRAWCHAR
	PAGE	#($)
;---Clean the edit zone	
	BLOCK	1
	MOV	_RC,@DATA_ZONE_START	;起点
	MOV	COUNT,@(DATA_ZONE_END-DATA_ZONE_START)	;长度
	MOV	A,@0			;填充值
	LCALL	STOR_DATA

	;CLR	CURSOR
	CLR	B1_PRO_VAR1
	CLR	B1_CID_T	;初始长度为0
	
	MOV	B1_PRO_VAR,@1
	
	JMP	STOR_FUNC_END
;---------------------------------------
STOR_FUNC_0_LOOKNUM_INIT:
	BLOCK	1
;---num-length		
	MOV	_RC,@NUM_FLAG
	CLR	_RD
;---name-length	
	MOV	_RC,@NAME_FLAG
	CLR	_RD
;---set Group
	MOV	A,@GROUP_M
	ADD	A,B1_MSG_N
	LCALL	SET_GROUP
	LCALL	GET_TELT
	
	MOV	A,TEMP0
	MOV	B1_CID_T,A	;Total tel record
	JPZ	STOR_FUNC_0_READNUM_END
;---读出数据	
	MOV	OFFSET_D,@DATA_ZONE_START
STOR_FUNC_0_READNUM_LOOP:
	MOV	A,B1_CID_T
	LCALL	DAT_READ
	
	MOV	_RC,OFFSET_D	;the address will be store
	MOV	_RD,TEMP0	;the data
	
	INC	OFFSET_D	;next address
	
	MOV	A,TEMP1		;Error code
	JPZ	STOR_FUNC_0_READNUM_LOOP

	LCALL	DAT_READ_STOP
STOR_FUNC_0_READNUM_END:
	MOV	_RC,@NUM_FLAG
	MOV	A,_RD
	AND	A,@0X3F
	MOV	B1_CID_T,A
;---LCD	blank	
	PAGE	#(VGA)
	CALL	VGABLANKNUM2
	CALL	VGABLANKCHAR
	PAGE	#($)
	
	MOV	BASE_ADDR,@0X10	
	MOV	OFFSET_S,@NUM_START	;source address
	MOV	OFFSET_D,@LCD_2NDLINE	;destination address
	MOV	COUNT,B1_CID_T		;length
	LCALL	COPY_DATA	
	
	PAGE	#(VGA)
	MOV	A,@(STYLE_RIGHT)
	CALL	VGACHAR	
	MOV	A,@(CH_M)
	CALL	VGACHAR
	MOV	A,B1_MSG_N
	ADD	A,@CNumDelta		;转换成机内码
	CALL	VGACHAR
	MOV	A,@(CH_END)
	CALL	VGACHAR
	CALL	VGADRAWCHAR
	PAGE	#($)
;-------------------
	MOV	A,@CTMR10S
	LCALL	SET_TIMER
	
	;LCALL	CLR_PRO_STACK
	MOV	A,@2
	MOV	B1_PRO_VAR,A

	JMP	STOR_FUNC_END
;-------------------------------------------------------------------------------
STOR_FUNC_1:

	MOV 	A,@CMSG_MKEY
	SUB 	A,B1_MSG
	JPZ 	STOR_FUNC_1_MKEY
	
	MOV 	A,@CMSG_TMR
	SUB 	A,B1_MSG
	JPZ 	STOR_FUNC_1_TMR

	JMP	STOR_FUNC_END
;---------------------------------------
STOR_FUNC_1_MKEY:
	CLR	B1_PRO_VAR1
	
	MOV	A,@CKEY_DEL
	LCALL	KEY_CHK
	JPNC	STOR_FUNC_1_MKEY_DEL
	MOV	A,@CKEY_RP
	LCALL	KEY_CHK
	JPNC	STOR_FUNC_1_MKEY_RP
	MOV	A,@CKEY_STP
	LCALL	KEY_CHK
	JPNC	STOR_FUNC_1_MKEY_STP
	MOV	A,@CKEY_SPK
	LCALL	KEY_CHK
	JPNC	STOR_FUNC_1_MKEY_SPK

	MOV	A,@CKEY_1M
	LCALL	KEY_CHK
	JPNC	STOR_FUNC_1_MKEY_M1
	MOV	A,@CKEY_2M
	LCALL	KEY_CHK
	JPNC	STOR_FUNC_1_MKEY_M2
	MOV	A,@CKEY_3M
	LCALL	KEY_CHK
	JPNC	STOR_FUNC_1_MKEY_M3

	LCALL	DIALKEY_CHK
	JPC	STOR_FUNC_1_MKEY_NUM	;Num 

	JMP	STOR_FUNC_END
;-----------------------------------------------------------
STOR_FUNC_1_MKEY_STP:
	LCALL	CLR_PRO_STACK
	CLR	B1_PRO_VAR
	
	MOV	A,@CMSG_INIT
	LCALL	STOR_MSG

	JMP	STOR_FUNC_END
;-----------------------------------------------------------
STOR_FUNC_1_MKEY_RP:
	MOV	A,@NUM_P
	;JMP	STOR_FUNC_1_MKEY_NUM
;-----------------------------
STOR_FUNC_1_MKEY_NUM:
	MOV	B1_MSG_N,A
;-length adjust	
	MOV	A,B1_CID_T
	SUB	A,@24
	JPZ	STOR_FUNC_END	
;-Save data
	BLOCK	1
	MOV	A,@NUM_START	;起点
	;ADD	A,CURSOR	;偏移
	ADD	A,B1_CID_T	;偏移
	MOV	_RC,A
	MOV	_RD,B1_MSG_N

	;INC	CURSOR
	INC	B1_CID_T
;-----------------------------
STOR_FUNC_NUM_DISP:
	PAGE	#(VGA)
	CALL	VGABLANKNUM2
	CALL	VGABLANKCHAR
	;PAGE	#($)
	
	MOV	BASE_ADDR,@0X10	
	MOV	OFFSET_S,@NUM_START	;source address
	MOV	OFFSET_D,@LCD_2NDLINE	;destination address
	MOV	COUNT,B1_CID_T		;length
	LCALL	COPY_DATA	
	
	JMP	STOR_FUNC_END
;---------------------------------------
STOR_FUNC_1_MKEY_DEL:
;-length adjust	
	MOV	A,B1_CID_T
	JPZ	STOR_FUNC_END	

	;DEC	CURSOR
	DEC	B1_CID_T
	
	JMP	STOR_FUNC_NUM_DISP
;---------------------------------------
STOR_FUNC_1_MKEY_M1:
	MOV	B1_MSG_N,@1
	JMP	STOR_FUNC_1_MKEY_M_STORE
STOR_FUNC_1_MKEY_M2:
	MOV	B1_MSG_N,@2
	JMP	STOR_FUNC_1_MKEY_M_STORE
STOR_FUNC_1_MKEY_M3:
	MOV	B1_MSG_N,@3
	;JMP	STOR_FUNC_1_MKEY_M_STORE

STOR_FUNC_1_MKEY_M_STORE:
	LCALL	CLR_TIMER	
;---num-length	
	BLOCK	1
	MOV	_RC,@NUM_FLAG
	MOV	A,B1_CID_T
	;OR	A,@0X80
	MOV	_RD,A
;---name-length	
	MOV	_RC,@NAME_FLAG
	CLR	_RD
;---set Group
	MOV	A,@GROUP_M
	ADD	A,B1_MSG_N
	LCALL	SET_GROUP
	
	MOV	OFFSET_S,@DATA_ZONE_START		;start address
	MOV	COUNT,@(DATA_ZONE_END-DATA_ZONE_START)	;length(55bytes)
STOR_FUNC_1_STORE_INTOFLASH:
	BLOCK	1
	
	MOV	_RC,OFFSET_S
	MOV	A,_RD
	LCALL	DAT_WRITE
	
	INC	OFFSET_S
	
	DEC	COUNT
	MOV	A,COUNT
	JPNZ	STOR_FUNC_1_STORE_INTOFLASH
	
STOR_FUNC_1_STORE_INTOFLASH_END:
	LCALL	DAT_WRITE_STOP
STOR_FUNC_1_STORE_DELOLD:		;Delete the old one
	LCALL	GET_TELT
	MOV	A,TEMP0
	SUB	A,@1
	JPC	STOR_FUNC_1_STORE_DELOLD_END
	MOV	A,@1
	LCALL	DEL_TEL
	LCALL	TEL_GC_CHK
	JMP	STOR_FUNC_1_STORE_DELOLD

STOR_FUNC_1_STORE_DELOLD_END:	
;---Display
	PAGE	#(VGA)
	MOV	A,@(STYLE_RIGHT)
	CALL	VGACHAR
	
	MOV	A,@(CH_M)
	CALL	VGACHAR
	MOV	A,B1_MSG_N
	ADD	A,@CNumDelta		;转换成机内码
	CALL	VGACHAR
;-
	MOV	A,@(CH_END)
	CALL	VGACHAR
	CALL	VGADRAWCHAR
	PAGE	#($)
;!!!!!!
	MOV	A,@CTMR2S
	LCALL	SET_TIMER

	LCALL	CLR_PRO_STACK
	CLR	B1_PRO_VAR

	JMP	STOR_FUNC_END
;-------------------------------------------------------------------------------
STOR_FUNC_1_TMR:	
	JMP	STOR_FUNC_END
;-------------------------------------------------------------------------------
STOR_FUNC_2:
	MOV 	A,@CMSG_MKEY
	SUB 	A,B1_MSG
	JPZ 	STOR_FUNC_2_MKEY
	
	MOV 	A,@CMSG_TMR
	SUB 	A,B1_MSG
	JPZ 	STOR_FUNC_2_TMR

	JMP	STOR_FUNC_END
;---------------------------------------
STOR_FUNC_2_MKEY:
	CLR	B1_PRO_VAR1
	
	MOV	A,@CKEY_DEL
	LCALL	KEY_CHK
	JPNC	STOR_FUNC_2_MKEY_DEL
	MOV	A,@CKEY_RP
	LCALL	KEY_CHK
	JPNC	STOR_FUNC_2_MKEY_RP
	MOV	A,@CKEY_STP
	LCALL	KEY_CHK
	JPNC	STOR_FUNC_2_MKEY_STP
	MOV	A,@CKEY_SPK
	LCALL	KEY_CHK
	JPNC	STOR_FUNC_2_MKEY_SPK


	MOV	A,@CKEY_1M
	LCALL	KEY_CHK
	JPNC	STOR_FUNC_2_MKEY_1M
	MOV	A,@CKEY_2M
	LCALL	KEY_CHK
	JPNC	STOR_FUNC_2_MKEY_2M
	MOV	A,@CKEY_3M
	LCALL	KEY_CHK
	JPNC	STOR_FUNC_2_MKEY_3M

	LCALL	DIALKEY_CHK
	JPC	STOR_FUNC_2_MKEY_NUM	;Num 

	JMP	STOR_FUNC_END
;---------------------------------------
STOR_FUNC_2_MKEY_SPK:

	RTC_DISP_ENABLE
	
	MOV	A,@CDIAL_OUT
	LCALL	STOR_MSG

	LCALL	CLR_PRO_STACK
	CLR	B1_PRO_VAR
	
	JMP	STOR_FUNC_END	
;---------------------------------------
STOR_FUNC_2_MKEY_NUM:
;---------------------------------------
STOR_FUNC_2_MKEY_RP:
STOR_FUNC_2_MKEY_STP:
STOR_FUNC_2_MKEY_1M:
STOR_FUNC_2_MKEY_2M:
STOR_FUNC_2_MKEY_3M:
;---------------------------------------

STOR_FUNC_1_MKEY_SPK:	
	MOV	A,B1_MSG
	LCALL	STOR_MSG
STOR_FUNC_EXIT:	
	LCALL	CLR_PRO_STACK
	CLR	B1_PRO_VAR
	
	JMP	STOR_FUNC_END
;---------------------------------------
STOR_FUNC_2_TMR:
STOR_FUNC_2_MKEY_DEL:
	JMP	STOR_FUNC_1_MKEY_STP

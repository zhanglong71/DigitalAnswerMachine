     1                     
     2                     /*************************************************
     3                     	main.asm
     4                     
     5                     Creator:	范学明 (mail.fxming@163.com)
     6                     Date:		2007.9.19
     7                     
     8                     *************************************************/
     9                     
    10                     INCLUDE	"emc78811.inc"
     1            C        /*************************************************
     2            C        	filename:	emc78811.inc
     3            C        	creator:	范学明 2007.8.31
     4            C        
     5            C        说明：
     6            C        1.  本文件用于emc78911芯片
     7            C        2.  本文件主要包含定义部分和指令部分
     8            C        3.  定义部分为一些主要寄存器的定义和主要常数定义
     9            C        4.  指令部分为宏汇编编写指令，扩展了基本指令，
    10            C            分为寻址指令、位操作指令、数据操作指令、算术运算和逻辑运算指令。
    11            C        *************************************************/
    12            C        
    13            C        
    14            C        
    15            C        ; 寄存器定义
    16            C        
    17       0000 C        _IAR	==	0
    18       0001 C        _TCC	==	1
    19       0002 C        _PC	==	2
    20       0003 C        _STATUS	==	3
    21       0004 C        _RAM	==	4
    22       0004 C        _RSR	==	4
    23       0005 C        _PAGE	==	5
    24       0005 C        _PPSR	==	5
    25       0006 C        _P6	==	6
    26       0007 C        _P7	==	7
    27       0008 C        _P8	==	8
    28       0009 C        _P9	==	9
    29       000A C        _FSK	==	10
    30       000A C        _FSR	==	10
    31       000B C        _DTMF	==	11
    32       000C C        _ADDR	==	12
    33       000D C        _DATA	==	13
    34       000E C        _LCD	==	14
    35       000E C        _WDT	==	14
    36       000F C        _ISR	==	15
    37            C        
    38       0000 C        _R0	==	0
    39       0001 C        _R1	==	1
    40       0002 C        _R2	==	2
    41       0003 C        _R3	==	3
    42       0004 C        _R4	==	4
    43       0005 C        _R5	==	5
    44       0006 C        _R6	==	6
    45       0007 C        _R7	==	7
    46       0008 C        _R8	==	8
    47       0009 C        _R9	==	9
    48       000A C        _RA	==	10
    49       000B C        _RB	==	11
    50       000C C        _RC	==	12
    51       000D C        _RD	==	13
    52       000E C        _RE	==	14
    53       000F C        _RF	==	15
    54            C        
    55       0000 C        R0	==	0
    56       0001 C        R1	==	1
    57       0002 C        R2	==	2
    58       0003 C        R3	==	3
    59       0004 C        R4	==	4
    60       0005 C        R5	==	5
    61       0006 C        R6	==	6
    62       0007 C        R7	==	7
    63       0008 C        R8	==	8
    64       0009 C        R9	==	9
    65       000A C        RA	==	10
    66       000B C        RB	==	11
    67       000C C        RC	==	12
    68       000D C        RD	==	13
    69       000E C        RE	==	14
    70       000F C        RF	==	15
    71            C        
    72       0005 C        _IOC5	==	5
    73       0006 C        _IOC6	==	6
    74       0007 C        _IOC7	==	7
    75       0008 C        _IOC8	==	8
    76       0009 C        _IOC9	==	9
    77       000A C        _IOCA	==	10
    78       000B C        _IOCB	==	11
    79       000C C        _IOCC	==	12
    80       000D C        _IOCD	==	13
    81       000E C        _IOCE	==	14
    82       000F C        _IOCF	==	15
    83            C        
    84            C        
    85            C        ; 位定义
    86       0000 C        C	==	0
    87       0001 C        DC	==	1
    88       0002 C        Z	==	2
    89       0003 C        P	==	3
    90       0004 C        T	==	4
    91       0006 C        PG	==	6
    92            C        
    93            C        
    94            C        ; 常数定义
    95       0000 C        NULL	==	0
    96       0000 C        FALSE	==	0
    97       0001 C        TRUE	==	1
    98            C        
    99            C        
   100            C        
   101            C        /*************************************************
   102            C        扩展指令
   103            C        利用宏汇编编写的指令，后面注释有指令的运行周期
   104            C        *************************************************/
   105            C        
   106            C        ; 数据指令
   107            C        DB	MACRO	DATA1
   108            C        	RETL	@DATA1
   109            C        	ENDM
   110            C        
   111            C        DB	MACRO	DATA1,DATA2
   112            C        	RETL	@DATA1
   113            C        	RETL	@DATA2
   114            C        	ENDM
   115            C        
   116            C        DB	MACRO	DATA1,DATA2,DATA3
   117            C        	RETL	@DATA1
   118            C        	RETL	@DATA2
   119            C        	RETL	@DATA3
   120            C        	ENDM
   121            C        
   122            C        DB	MACRO	DATA1,DATA2,DATA3,DATA4
   123            C        	RETL	@DATA1
   124            C        	RETL	@DATA2
   125            C        	RETL	@DATA3
   126            C        	RETL	@DATA4
   127            C        	ENDM
   128            C        
   129            C        DB	MACRO	DATA1,DATA2,DATA3,DATA4,DATA5
   130            C        	RETL	@DATA1
   131            C        	RETL	@DATA2
   132            C        	RETL	@DATA3
   133            C        	RETL	@DATA4
   134            C        	RETL	@DATA5
   135            C        	ENDM
   136            C        
   137            C        DB	MACRO	DATA1,DATA2,DATA3,DATA4,DATA5,DATA6
   138            C        	RETL	@DATA1
   139            C        	RETL	@DATA2
   140            C        	RETL	@DATA3
   141            C        	RETL	@DATA4
   142            C        	RETL	@DATA5
   143            C        	RETL	@DATA6
   144            C        	ENDM
   145            C        
   146            C        MTBL	MACRO
   147            C        	TBL
   148            C        	MESSAGE	"ATTENTION(MTBL): Please check the address!"
   149            C        	ENDM
   150            C        
   151            C        
   152            C        ; 寻址指令
   153            C        
   154            C        PAGE	MACRO	#ADDR			; C1
   155            C        	IF	ADDR < 0x4000
   156            C        		PAGE	(ADDR/0x400)
   157            C        	ELSE
   158            C        		MESSAGE	"WARRING(PAGE): Out of program memory!"
   159            C        	ENDIF
   160            C        	ENDM
   161            C        
   162            C        BANK	MACRO	NUM			; C2
   163            C        	IF	NUM == 0
   164            C        		BC	_RAM,6
   165            C        		BC	_RAM,7
   166            C        	ELSEIF	NUM == 1
   167            C        		BS	_RAM,6
   168            C        		BC	_RAM,7
   169            C        	ELSEIF	NUM == 2
   170            C        		BC	_RAM,6
   171            C        		BS	_RAM,7
   172            C        	ELSEIF	NUM == 3
   173            C        		BS	_RAM,6
   174            C        		BS	_RAM,7
   175            C        	ELSE
   176            C        		MESSAGE	"WARRING(BANK): Don't have specify bank!"
   177            C        	ENDIF
   178            C        	ENDM
   179            C        
   180            C        
   181            C        BLOCK	MACRO	NUM			; C2
   182            C        	IFDEF	VALUE_IOCA
   183            C        		IF	NUM < 10
   184            C        			MOV	A,@((NUM<<1)+VALUE_IOCA)
   185            C        			IOW	_IOCA
   186            C        		ELSE
   187            C        			MESSAGE	"WARRING(BLOCK): Don't have specify bank!"
   188            C        		ENDIF
   189            C        	ELSE
   190            C        		MESSAGE	"WARRING(BLOCK): 'VALUE_IOCA' not define!"
   191            C        	ENDIF
   192            C        	ENDM
   193            C        
   194            C        LCALL	MACRO	ADDR			; C3
   195            C        	IF	ADDR < 0x4000
   196            C        		PAGE	#ADDR
   197            C        		CALL	(ADDR%0x400)
   198            C        		PAGE	#($)
   199            C        	ELSE
   200            C        		MESSAGE	"WARRING(LCALL): Out of program memory!"
   201            C        	ENDIF
   202            C        	ENDM
   203            C        
   204            C        ;CALL	MACRO	#ADDR			; C1/C3
   205            C        ;	IF	ADDR < 0x4000
   206            C        ;		IF	($/0x400) == (ADDR/0x400)
   207            C        ;			CALL	(ADDR%0x400)
   208            C        ;		ELSE
   209            C        ;			LCALL	ADDR
   210            C        ;		ENDIF
   211            C        ;	ELSE
   212            C        ;		MESSAGE	"WARRING(CALL): Out of program memory!"
   213            C        ;	ENDIF
   214            C        ;	ENDM
   215            C        
   216            C        LJMP	MACRO	ADDR			; C2
   217            C        	IF	ADDR < 0x4000
   218            C        		PAGE	#ADDR
   219            C        		JMP	(ADDR%0x400)
   220            C        	ELSE
   221            C        		MESSAGE	"WARRING(LJMP): Out of program memory!"
   222            C        	ENDIF
   223            C        	ENDM
   224            C        
   225            C        ;JMP	MACRO	#ADDR			; C1/C2
   226            C        ;	IF	ADDR < 0x4000
   227            C        ;		IF	($/0x400) == (ADDR/0x400)
   228            C        ;			JMP	(ADDR%0x400)
   229            C        ;		ELSE
   230            C        ;			LJMP	ADDR
   231            C        ;		ENDIF
   232            C        ;	ELSE
   233            C        ;		MESSAGE "WARRING(JMP): Out of program memory!"
   234            C        ;	ENDIF
   235            C        ;	ENDM
   236            C        
   237            C        JPZ	MACRO	ADDR			; C2
   238            C        	IF	ADDR < 0x4000
   239            C        		JBC	_STATUS,Z
   240            C        		JMP	ADDR
   241            C        	ELSE
   242            C        		MESSAGE	"WARRING(JPZ): Out of program memory!"
   243            C        	ENDIF
   244            C        	ENDM
   245            C        
   246            C        LJPZ	MACRO	ADDR			; C4
   247            C        	IF	ADDR< 0x4000
   248            C        		JBS	_STATUS,Z
   249            C        		JMP	$+3
   250            C        		LJMP	ADDR
   251            C        	ELSE
   252            C        		MESSAGE	"WARRING(LJPZ): Out of program memory!"
   253            C        	ENDIF
   254            C        	ENDM
   255            C        
   256            C        JPZ	MACRO	#ADDR			; C2/C4
   257            C        	IF	ADDR < 0x4000
   258            C        		IF	($/0x400) == (ADDR/0x400)
   259            C        			JPZ	ADDR
   260            C        		ELSE
   261            C        			LJPZ	ADDR
   262            C        		ENDIF
   263            C        	ELSE
   264            C        		MESSAGE	"WARRING(JPZ): Out of program memory!"
   265            C        	ENDIF
   266            C        	ENDM
   267            C        
   268            C        JPNZ	MACRO	ADDR			; C2
   269            C        	IF	ADDR < 0x4000
   270            C        		JBS	_STATUS,Z
   271            C        		JMP	ADDR
   272            C        	ELSE
   273            C        		MESSAGE	"WARRING(JPNZ): Out of program memory!"
   274            C        	ENDIF
   275            C        	ENDM
   276            C        
   277            C        LJPNZ	MACRO	ADDR			; C4
   278            C        	IF	ADDR< 0x4000
   279            C        		JBC	_STATUS,Z
   280            C        		JMP	$+3
   281            C        		LJMP	ADDR
   282            C        	ELSE
   283            C        		MESSAGE	"WARRING(LJPNZ): Out of program memory!"
   284            C        	ENDIF
   285            C        	ENDM
   286            C        
   287            C        JPNZ	MACRO	#ADDR			; C2/C4
   288            C        	IF	ADDR < 0x4000
   289            C        		IF	($/0x400) == (ADDR/0x400)
   290            C        			JPNZ	ADDR
   291            C        		ELSE
   292            C        			LJPNZ	ADDR
   293            C        		ENDIF
   294            C        	ELSE
   295            C        		MESSAGE	"WARRING(JPNZ): Out of program memory!"
   296            C        	ENDIF
   297            C        	ENDM
   298            C        
   299            C        JPC	MACRO	ADDR			; C2
   300            C        	IF	ADDR < 0x4000
   301            C        		JBC	_STATUS,C
   302            C        		JMP	ADDR
   303            C        	ELSE
   304            C        		MESSAGE	"WARRING(JPC): Out of program memory!"
   305            C        	ENDIF
   306            C        	ENDM
   307            C        
   308            C        LJPC	MACRO	ADDR			; C4
   309            C        	IF	ADDR< 0x4000
   310            C        		JBS	_STATUS,C
   311            C        		JMP	$+3
   312            C        		LJMP	ADDR
   313            C        	ELSE
   314            C        		MESSAGE	"WARRING(LJPC): Out of program memory!"
   315            C        	ENDIF
   316            C        	ENDM
   317            C        
   318            C        JPC	MACRO	#ADDR			; C2/C4
   319            C        	IF	ADDR < 0x4000
   320            C        		IF	($/0x400) == (ADDR/0x400)
   321            C        			JPC	ADDR
   322            C        		ELSE
   323            C        			LJPC	ADDR
   324            C        		ENDIF
   325            C        	ELSE
   326            C        		MESSAGE	"WARRING(JPC): Out of program memory!"
   327            C        	ENDIF
   328            C        	ENDM
   329            C        
   330            C        JPNC	MACRO	ADDR			; C2
   331            C        	IF	ADDR < 0x4000
   332            C        		JBS	_STATUS,C
   333            C        		JMP	ADDR
   334            C        	ELSE
   335            C        		MESSAGE	"WARRING(JPNC): Out of program memory!"
   336            C        	ENDIF
   337            C        	ENDM
   338            C        
   339            C        LJPNC	MACRO	ADDR			; C4
   340            C        	IF	ADDR< 0x4000
   341            C        		JBC	_STATUS,C
   342            C        		JMP	$+3
   343            C        		LJMP	ADDR
   344            C        	ELSE
   345            C        		MESSAGE	"WARRING(LJPNC): Out of program memory!"
   346            C        	ENDIF
   347            C        	ENDM
   348            C        
   349            C        JPNC	MACRO	#ADDR			; C2/C4
   350            C        	IF	ADDR < 0x4000
   351            C        		IF	($/0x400) == (ADDR/0x400)
   352            C        			JPNC	ADDR
   353            C        		ELSE
   354            C        			LJPNC	ADDR
   355            C        		ENDIF
   356            C        	ELSE
   357            C        		MESSAGE	"WARRING(JPNC): Out of program memory!"
   358            C        	ENDIF
   359            C        	ENDM
   360            C        
   361            C        JPB	MACRO	REG,BIT,ADDR		; C2
   362            C        	IF	ADDR< 0x4000
   363            C        		JBC	REG,BIT
   364            C        		JMP	ADDR
   365            C        	ELSE
   366            C        		MESSAGE	"WARRING(JPB): Out of program memory!"
   367            C        	ENDIF
   368            C        	ENDM
   369            C        
   370            C        LJPB	MACRO	REG,BIT,ADDR		; C4
   371            C        	IF	ADDR< 0x4000
   372            C        		JBS	REG,BIT
   373            C        		JMP	$+3
   374            C        		LJMP	ADDR
   375            C        	ELSE
   376            C        		MESSAGE	"WARRING(LJPB): Out of program memory!"
   377            C        	ENDIF
   378            C        	ENDM
   379            C        
   380            C        JPB	MACRO	REG,BIT,#ADDR		; C2/C4
   381            C        	IF	ADDR < 0x4000
   382            C        		IF	($/0x400) == (ADDR/0x400)
   383            C        			JPB	REG,BIT,ADDR
   384            C        		ELSE
   385            C        			LJPB	REG,BIT,ADDR
   386            C        		ENDIF
   387            C        	ELSE
   388            C        		MESSAGE	"WARRING(JPB): Out of program memory!"
   389            C        	ENDIF
   390            C        	ENDM
   391            C        
   392            C        JPNB	MACRO	REG,BIT,ADDR		; C2
   393            C        	IF	ADDR< 0x4000
   394            C        		JBS	REG,BIT
   395            C        		JMP	ADDR
   396            C        	ELSE
   397            C        		MESSAGE	"WARRING(JPNB): Out of program memory!"
   398            C        	ENDIF
   399            C        	ENDM
   400            C        
   401            C        LJPNB	MACRO	REG,BIT,ADDR		; C4
   402            C        	IF	ADDR< 0x4000
   403            C        		JBC	REG,BIT
   404            C        		JMP	$+3
   405            C        		LJMP	ADDR
   406            C        	ELSE
   407            C        		MESSAGE	"WARRING(LJPNB): Out of program memory!"
   408            C        	ENDIF
   409            C        	ENDM
   410            C        
   411            C        JPNB	MACRO	REG,BIT,#ADDR		; C2/C4
   412            C        	IF	ADDR < 0x4000
   413            C        		IF	($/0x400) == (ADDR/0x400)
   414            C        			JPNB	REG,BIT,ADDR
   415            C        		ELSE
   416            C        			LJPNB	REG,BIT,ADDR
   417            C        		ENDIF
   418            C        	ELSE
   419            C        		MESSAGE	"WARRING(JPNB): Out of program memory!"
   420            C        	ENDIF
   421            C        	ENDM
   422            C        
   423            C        JPS	MACRO	REG1,REG2,ADDR		;	if REG1 < REG2, than jump to ADDR
   424            C        	SUBA	REG1,REG2
   425            C        	JPNC	ADDR
   426            C        	ENDM
   427            C        
   428            C        JPS	MACRO	REG1,REG2,#ADDR
   429            C        	SUBA	REG1,REG2
   430            C        	JPNC	#ADDR
   431            C        	ENDM
   432            C        
   433            C        JPNS	MACRO	REG1,REG2,ADDR
   434            C        	SUBA	REG1,REG2
   435            C        	JPC	ADDR
   436            C        	ENDM
   437            C        
   438            C        JPNS	MACRO	REG1,REG2,#ADDR
   439            C        	SUBA	REG1,REG2
   440            C        	JPC	#ADDR
   441            C        	ENDM
   442            C        
   443            C        
   444            C        
   445            C        ; ------------------------------------------------
   446            C        
   447            C        ; 位操作指令
   448            C        
   449            C        SETB	MACRO	BIT			; C1
   450            C        	IF	BIT < 8
   451            C        		OR	A,@(1<<BIT)
   452            C        	ELSE
   453            C        		MESSAGE	"WARRING(SETB): Out of bit!"
   454            C        	ENDIF
   455            C        	ENDM
   456            C        
   457            C        CLRB	MACRO	BIT			; C1
   458            C        	IF	BIT < 8
   459            C        		AND	A,@(~(1<<BIT))
   460            C        	ELSE
   461            C        		MESSAGE	"WARRING(CLRB): Out of bit!"
   462            C        	ENDIF
   463            C        	ENDM
   464            C        
   465            C        INVB	MACRO	BIT			; C1
   466            C        	IF	BIT < 8
   467            C        		XOR	A,@(1<<BIT)
   468            C        	ELSE
   469            C        		MESSAGE	"WARRING(INVB): Out of bit!"
   470            C        	ENDIF
   471            C        	ENDM
   472            C        
   473            C        GETB	MACRO	BIT			; C1
   474            C        	IF	BIT < 8
   475            C        		AND	A,@(1<<BIT)
   476            C        	ELSE
   477            C        		MESSAGE	"WARRING(INVB): Out of bit!"
   478            C        	ENDIF
   479            C        	ENDM
   480            C        
   481            C        SETB	MACRO	REG,BIT			; C1
   482            C        	IF	BIT < 8
   483            C        		BS	REG,BIT
   484            C        	ELSE
   485            C        		MESSAGE	"WARRING(SETB): Out of bit!"
   486            C        	ENDIF
   487            C        	ENDM
   488            C        
   489            C        CLRB	MACRO	REG,BIT			; C1
   490            C        	IF	BIT < 8
   491            C        		BC	REG,BIT
   492            C        	ELSE
   493            C        		MESSAGE	"WARRING(CLRB): Out of bit!"
   494            C        	ENDIF
   495            C        	ENDM
   496            C        
   497            C        INVB	MACRO	REG,BIT			; C2
   498            C        	IF	BIT < 8
   499            C        		XOR	REG,@(1<<BIT)
   500            C        	ELSE
   501            C        		MESSAGE	"WARRING(INVB): Out of bit!"
   502            C        	ENDIF
   503            C        	ENDM
   504            C        
   505            C        GETB	MACRO	REG,BIT			; C2
   506            C        	IF	BIT < 8
   507            C        		ANDA	REG,@(1<<BIT)
   508            C        	ELSE
   509            C        		MESSAGE	"WARRING(GETB): Out of bit!"
   510            C        	ENDIF
   511            C        	ENDM
   512            C        
   513            C        CLRC	MACRO				; C1
   514            C        	BC	_STATUS,C
   515            C        	ENDM
   516            C        
   517            C        SETC	MACRO				; C1
   518            C        	BS	_STATUS,C
   519            C        	ENDM
   520            C        
   521            C        CLRZ	MACRO				; C1
   522            C        	BC	_STATUS,Z
   523            C        	ENDM
   524            C        
   525            C        SETZ	MACRO				; C1
   526            C        	BS	_STATUS,Z
   527            C        	ENDM
   528            C        
   529            C        
   530            C        ; ------------------------------------------------
   531            C        
   532            C        ; 数据移动指令
   533            C        
   534            C        MOV	MACRO	REG,@VALUE		; C2
   535            C        	MOV	A,@VALUE
   536            C        	MOV	REG,A
   537            C        	ENDM
   538            C        
   539            C        MOV	MACRO	REG1,REG2		; C2
   540            C        	MOV	A,REG2
   541            C        	MOV	REG1,A
   542            C        	ENDM
   543            C        
   544            C        IOR	MACRO	REG,IO_REG		; C2
   545            C        	IOR	IO_REG
   546            C        	MOV	REG,A
   547            C        	ENDM
   548            C        
   549            C        IOW	MACRO	IO_REG,@VALUE		; C2
   550            C        	MOV	A,@VALUE
   551            C        	IOW	IO_REG
   552            C        	ENDM
   553            C        
   554            C        IOW	MACRO	IO_REG,REG		; C2
   555            C        	MOV	A,REG
   556            C        	IOW	IO_REG
   557            C        	ENDM
   558            C        
   559            C        
   560            C        ; ------------------------------------------------
   561            C        
   562            C        ; 算术运算指令
   563            C        
   564            C        ADD	MACRO	REG,@VALUE		; C2
   565            C        	MOV	A,@VALUE
   566            C        	ADD	REG,A
   567            C        	ENDM
   568            C        
   569            C        ADD	MACRO	REG1,REG2		; C2
   570            C        	MOV	A,REG2
   571            C        	ADD	REG1,A
   572            C        	ENDM
   573            C        
   574            C        ADDA	MACRO	REG,@VALUE		; C2
   575            C        	MOV	A,@VALUE
   576            C        	ADD	A,REG
   577            C        	ENDM
   578            C        
   579            C        ADDA	MACRO	REG1,REG2		; C2
   580            C        	MOV	A,REG2
   581            C        	ADD	A,REG1
   582            C        	ENDM
   583            C        
   584            C        SUB	MACRO	REG,@VALUE		; C2
   585            C        	MOV	A,@VALUE
   586            C        	SUB	REG,A
   587            C        	ENDM
   588            C        
   589            C        SUB	MACRO	REG1,REG2		; C2
   590            C        	MOV	A,REG2
   591            C        	SUB	REG1,A
   592            C        	ENDM
   593            C        
   594            C        SUBA	MACRO	REG,@VALUE		; C2
   595            C        	MOV	A,@VALUE
   596            C        	SUB	A,REG
   597            C        	ENDM
   598            C        
   599            C        SUBA	MACRO	@VALUE,REG		; C2
   600            C        	MOV	A,REG
   601            C        	SUB	A,@VALUE
   602            C        	ENDM
   603            C        
   604            C        SUBA	MACRO	REG1,REG2		; C2
   605            C        	MOV	A,REG2
   606            C        	SUB	A,REG1
   607            C        	ENDM
   608            C        
   609            C        DECZ	MACRO	REG			; C3
   610            C        	MOV	A,REG
   611            C        	JPZ	$+2
   612            C        	DEC	REG
   613            C        	ENDM
   614            C        
   615            C        INCZ	MACRO	REG			; C3
   616            C        	MOV	A,REG
   617            C        	JPZ	$+2
   618            C        	INC	REG
   619            C        	ENDM
   620            C        
   621            C        
   622            C        ; ------------------------------------------------
   623            C        
   624            C        ; 逻辑运算指令
   625            C        
   626            C        AND	MACRO	REG,@VALUE		; C2
   627            C        	MOV	A,@VALUE
   628            C        	AND	REG,A
   629            C        	ENDM
   630            C        
   631            C        AND	MACRO	REG1,REG2		; C2
   632            C        	MOV	A,REG2
   633            C        	AND	REG1,A
   634            C        	ENDM
   635            C        
   636            C        ANDA	MACRO	REG,@VALUE		; C2
   637            C        	MOV	A,@VALUE
   638            C        	AND	A,REG
   639            C        	ENDM
   640            C        
   641            C        ANDA	MACRO	REG1,REG2		; C2
   642            C        	MOV	A,REG2
   643            C        	AND	A,REG1
   644            C        	ENDM
   645            C        
   646            C        OR	MACRO	REG,@VALUE		; C2
   647            C        	MOV	A,@VALUE
   648            C        	OR	REG,A
   649            C        	ENDM
   650            C        
   651            C        OR	MACRO	REG1,REG2		; C2
   652            C        	MOV	A,REG2
   653            C        	OR	REG1,A
   654            C        	ENDM
   655            C        
   656            C        ORA	MACRO	REG,@VALUE		; C2
   657            C        	MOV	A,@VALUE
   658            C        	OR	A,REG
   659            C        	ENDM
   660            C        
   661            C        ORA	MACRO	REG1,REG2		; C2
   662            C        	MOV	A,REG2
   663            C        	OR	A,REG1
   664            C        	ENDM
   665            C        
   666            C        XOR	MACRO	REG,@VALUE		; C2
   667            C        	MOV	A,@VALUE
   668            C        	XOR	REG,A
   669            C        	ENDM
   670            C        
   671            C        XOR	MACRO	REG1,REG2		; C2
   672            C        	MOV	A,REG2
   673            C        	XOR	REG1,A
   674            C        	ENDM
   675            C        
   676            C        XORA	MACRO	REG,@VALUE		; C2
   677            C        	MOV	A,@VALUE
   678            C        	XOR	A,REG
   679            C        	ENDM
   680            C        
   681            C        XORA	MACRO	REG1,REG2		; C2
   682            C        	MOV	A,REG2
   683            C        	XOR	A,REG1
   684            C        	ENDM
   685            C        
   686            C        
    11                     INCLUDE	"main.inc"
     1            C        
     2            C        
     3            C        /************************寄存器定义*************************/
     4            C        ; 公共
     5       0010 C        int_acc		==	0x10
     6       0011 C        int_status	==	0x11
     7       0012 C        int_rsr		==	0x12
     8            C        
     9       0013 C        ax		==	0x13
    10       0014 C        exa		==	0x14
    11       0015 C        cnt		==	0x15
    12       0016 C        bx		==	0x16
    13       0017 C        exb		==	0x17
    14            C        
    15       0018 C        program		==	0x18
    16            C        
    17       0019 C        cursor		==	0x19
    18       001A C        tmr_cursor	==	0x1a
    19            C        
    20       001B C        sys_msg		==	0x1b
    21       001C C        sys_data	==	0x1c
    22       001D C        sys_flag	==	0x1d
    23       001E C        sys_flagext	==	0x1e
    24       001F C        hardware	==	0x1f
    25            C        
    26       0020 C        r_ax		==	0x20
    27       0021 C        r_exa		==	0x21
    28       0022 C        r_cnt		==	0x22
    29       0023 C        r_bx		==	0x23
    30       0024 C        r_exb		==	0x24
    31            C        ; 独立
    32            C        ; bank 0
    33       0020 C        r0_ax		==	0x20
    34       0021 C        r0_exa		==	0x21
    35       0022 C        r0_cnt		==	0x22
    36       0023 C        r0_bx		==	0x23
    37       0024 C        r0_exb		==	0x24
    38            C        
    39       0025 C        r0_int_ppsr	==	0x25
    40       0026 C        r0_int_addr	==	0x26
    41       0027 C        r0_int_block	==	0x27
    42            C        
    43       0028 C        r0_key1		==	0x28
    44       0029 C        r0_key2		==	0x29
    45       002A C        r0_key3		==	0x2a
    46       002B C        r0_key4		==	0x2b
    47       002C C        r0_key1_get	==	0x2c
    48       002D C        r0_key2_get	==	0x2d
    49       002E C        r0_key3_get	==	0x2e
    50       002F C        r0_key4_get	==	0x2f
    51       0030 C        r0_key1_bak	==	0x30
    52       0031 C        r0_key2_bak	==	0x31
    53       0032 C        r0_key3_bak	==	0x32
    54       0033 C        r0_key4_bak	==	0x33
    55       0034 C        r0_key1_dealed	==	0x34
    56       0035 C        r0_key2_dealed	==	0x35
    57       0036 C        r0_key3_dealed	==	0x36
    58       0037 C        r0_key4_dealed	==	0x37
    59       0038 C        r0_tmr_key	==	0x38
    60            C        
    61       0039 C        r0_tmr_timer	==	0x39
    62       003A C        r0_tmr_unit	==	0x3a
    63            C        
    64       003B C        r0_tmr		==	0x3b
    65       003C C        r0_tmr_idle	==	0x3c
    66            C        
    67       003D C        r0_int_ax	==	0x3d
    68            C        
    69            C        ; bank 1
    70       0020 C        r1_ax		==	0x20
    71       0021 C        r1_exa		==	0x21
    72       0022 C        r1_cnt		==	0x22
    73       0023 C        r1_bx		==	0x23
    74       0024 C        r1_exb		==	0x24
    75            C        
    76       0025 C        r1_rtc_tmr	==	0x25
    77       0026 C        r1_rtc_second	==	0x26
    78       0027 C        r1_rtc_minute	==	0x27
    79       0028 C        r1_rtc_hour	==	0x28
    80       0029 C        r1_rtc_week	==	0x29
    81       002A C        r1_rtc_day	==	0x2a
    82       002B C        r1_rtc_month	==	0x2b
    83       002C C        r1_rtc_year	==	0x2c
    84       002D C        r1_rtc_century	==	0x2d
    85       002E C        r1_rtc_flag	==	0x2e		; 0 -- second update, 用作最小显示秒的时间更新标志, 设置时间时更新秒
    86            C        					; 1 -- minute update, 用作最小显示分的时间更新标志, 时钟的显示
    87            C        					; 2 -- hour update
    88            C        					; 3 -- day update, 每过一天，同步时钟。
    89            C        					; 4 -- month update
    90            C        					; 5 -- year update
    91            C        					; 7 -- 中断更新
    92       002F C        r1_time_flag	==	0x2f		; 0 -- second update
    93            C        					; 1 -- minute update
    94            C        					; 2 -- hour update
    95            C        					; 3 -- day update
    96            C        					; 4 -- month update
    97            C        					; 5 -- year update
    98       0030 C        r1_msecond	==	0x30
    99       0031 C        r1_second	==	0x31
   100       0032 C        r1_minute	==	0x32
   101       0033 C        r1_hour		==	0x33
   102       0034 C        r1_week		==	0x34
   103       0035 C        r1_day		==	0x35
   104       0036 C        r1_month	==	0x36
   105       0037 C        r1_year		==	0x37
   106       0038 C        r1_century	==	0x38
   107       0039 C        r1_int_second	==	0x39
   108       003A C        r1_rtc_temp	==	0x3a
   109            C        
   110       003E C        r1_id		==	0x3e
   111       003F C        r1_flag		==	0x3f
   112            C        
   113            C        
   114            C        ; bank 2
   115       0020 C        r2_ax		==	0x20
   116       0021 C        r2_exa		==	0x21
   117       0022 C        r2_cnt		==	0x22
   118       0023 C        r2_bx		==	0x23
   119       0024 C        r2_exb		==	0x24
   120            C        
   121       0028 C        r2_tmr_blight	==	0x28
   122       0029 C        r2_tmr_blight1	==	0x29
   123       002A C        r2_tmr_dial	==	0x2a		; unit: 4ms
   124       002B C        r2_tmr_dial1	==	0x2b		; unit: 1s
   125            C        
   126       002C C        r2_msec		==	0x2c		; 拨号计时
   127       002D C        r2_second	==	0x2d
   128       002E C        r2_minute	==	0x2e
   129       002F C        r2_hour		==	0x2f
   130            C        
   131       0030 C        r2_msec_bak	==	0x30
   132       0031 C        r2_second_bak	==	0x31
   133       0032 C        r2_minute_bak	==	0x32
   134       0033 C        r2_hour_bak	==	0x33
   135            C        
   136       0034 C        r2_stamp1	==	0x34
   137       0035 C        r2_stamp2	==	0x35
   138       0036 C        r2_stamp3	==	0x36
   139            C        
   140       0037 C        r2_tmr_newcall	==	0x37
   141       0038 C        r2_led_newcall	==	0x38
   142            C        
   143       003E C        r2_id		==	0x3e
   144       003F C        r2_flag		==	0x3f
   145            C        
   146            C        ; bank 3
   147       0020 C        r3_ax		==	0x20
   148       0021 C        r3_exa		==	0x21
   149       0022 C        r3_cnt		==	0x22
   150       0023 C        r3_bx		==	0x23
   151       0024 C        r3_exb		==	0x24
   152            C        
   153       0025 C        r3_display	==	0x25			; 待机时的更新要求
   154            C        						; 0 -- stamp1
   155            C        						; 1 -- stamp2
   156            C        						; 2 -- stamp3
   157            C        						; 3 -- number1
   158            C        						; 4 -- number2
   159            C        						; 5 -- char
   160            C        
   161       0026 C        r3_newmsg	==	0x26
   162       0027 C        r3_totalmsg	==	0x27
   163            C        
   164       0028 C        r3_newcall	==	0x28
   165       0029 C        r3_totalcall	==	0x29
   166       002A C        r3_dialedcall	==	0x2a
   167       002B C        r3_book		==	0x2b
   168            C        
   169       0030 C        r3_remotecode1	==	0x30
   170       0031 C        r3_remotecode2	==	0x31
   171       0032 C        r3_areacode1	==	0x32
   172       0033 C        r3_areacode2	==	0x33
   173       0034 C        r3_contrast	==	0x34
   174       0035 C        r3_language	==	0x35
   175       0036 C        r3_ringmelody	==	0x36
   176       0037 C        r3_ringvolume	==	0x37
   177       0038 C        r3_ringdelay	==	0x38
   178       0039 C        r3_rate		==	0x39
   179       003A C        r3_flashtime	==	0x3a
   180       003B C        r3_pausetime	==	0x3b
   181       003C C        r3_ogm		==	0x3c
   182            C        
   183            C        
   184       003D C        r3_callmenu	==	0x3d			
   185            C        						; 0 -- erase current
   186            C        						; 1 -- erase all
   187       003E C        r3_id		==	0x3e
   188       003F C        r3_flag		==	0x3f
   189            C        
   190            C        ; bit
   191            C        
   192            C        ; sys_flag
   193       0000 C        LCDFLASHSTATUS	==	0		; Lcd flash状态位 0-on; 1-off
   194       0001 C        TIMEFORMAT	==	1		; 时间制式 0-12小时; 1-24小时
   195       0002 C        HOOKSTATUS	==	2		; HOOK状态位 0-on; 1-off
   196       0003 C        PROGRAMINIT	==	3		; 程序第一次初始化
   197       0004 C        PROGRAMREIN	==	4		; 程序重新进入
   198       0005 C        DIALTYPE	==	5		; 拨号类型，0-tone, 1-pulse
   199       0006 C        SPKPHONE	==	6		; spkphone, 0-off, 1-on
   200       0007 C        STAMP		==	7		; 印花更新
   201            C        
   202            C        ; sys_flagext
   203       0000 C        DSPSTATUS	==	0
   204            C        
   205            C        ;hardware
   206       0000 C        DTAMPOWER	==	0		; DTAM状态，0-off,1-on
   207       0001 C        SYNCCLOCK	==	1		; 同步时钟
   208       0002 C        SYNCSETTING	==	2		; 同步设置
   209       0006 C        POWERSTATUS	==	6		; power状态，0-down, 1-on
   210       0007 C        HANDSET		==	7		; 手柄状态， 0-摘机，1-挂机
   211            C        
   212       0040 C        VALUE_IOCA	==	0x40
   213       000A C        TIME_UNIT	==	10
   214            C        
   215       0080 C        STYLE_NORMAL	==	(0x00+0x80)
   216       0081 C        STYLE_LEFT	==	(0x01+0x80)	; 靠左
   217       0082 C        STYLE_RIGHT	==	(0x02+0x80)	; 靠右
   218       0083 C        STYLE_CENTER	==	(0x03+0x80)	; 居中
   219            C        /*
   220            C        CAPS_NORMAL	==	0x00
   221            C        CAPS_ALL	==	0x10		; 全部大写
   222            C        CAPS_WORD	==	0x20		; 每个单词的首字母大写，空格之后的第一个字符大写
   223            C        CAPS_CHAR	==	0x30		; 短语的第一个字符大写
   224            C        CAPS_LETTER	==	0x40		; 短语的第一个字母大写
   225            C        CAPS_LOWER	==	0x50		; 短语的第一个小写字母大写
   226            C        */
   227            C        
   228       0000 C        CAPS_OFF	==	0x00
   229       0040 C        CAPS_ON		==	0x40
   230            C        
   231       0000 C        INITIAL_OFF	==	0x00
   232       0020 C        INITIAL_ON	==	0x20
   233            C        
   234       0000 C        CH_END		==	0
   235            C        
   236            C        ; message
   237            C        
   238       0000 C        WM_NONE		==	0x00
   239       0001 C        WM_KEYPRESS	==	0x01
   240       0002 C        WM_KEYREPRESS	==	0x02
   241       0003 C        WM_KEYRELEASE	==	0x03
   242       0004 C        WM_TIME		==	0x04
   243       0005 C        WM_POWER	==	0x05
   244       0006 C        WM_HANDSET	==	0x06
   245       0007 C        WM_COMMAND	==	0x07
   246            C        
   247       0000 C        KEY_1		==	0x00
   248       0004 C        KEY_2		==	0x04
   249       0010 C        KEY_3		==	0x10
   250       0001 C        KEY_4		==	0x01
   251       0005 C        KEY_5		==	0x05
   252       0011 C        KEY_6		==	0x11
   253       0002 C        KEY_7		==	0x02
   254       0006 C        KEY_8		==	0x06
   255       0012 C        KEY_9		==	0x12
   256       0003 C        KEY_STAR	==	0x03
   257       0007 C        KEY_0		==	0x07
   258       0013 C        KEY_HASH	==	0x13
   259       0020 C        KEY_PLAY	==	0x20
   260       0021 C        KEY_OGM		==	0x21
   261       0022 C        KEY_MEMO	==	0x22
   262       0023 C        KEY_ONOFF	==	0x23
   263       0024 C        KEY_VOLA	==	0x24
   264       0025 C        KEY_VOLS	==	0x25
   265       0016 C        KEY_STOP	==	0x16
   266       0030 C        KEY_MENU	==	0x30
   267       0017 C        KEY_SPK		==	0x17
   268       0026 C        KEY_LEFT	==	0x26
   269       0015 C        KEY_REDIAL	==	0x15
   270       0014 C        KEY_FLASH	==	0x14
   271       0027 C        KEY_RIGHT	==	0x27
   272            C        
   273       0020 C        KEY_PAUSE	==	KEY_PLAY
   274       0020 C        KEY_DIAL	==	KEY_PLAY
   275       0023 C        KEY_ERASE	==	KEY_ONOFF
   276       0023 C        KEY_MUTE	==	KEY_ONOFF
   277       0014 C        KEY_M1		==	KEY_FLASH
   278       0014 C        KEY_BACK	==	KEY_FLASH
   279       0015 C        KEY_M2		==	KEY_REDIAL
   280       0016 C        KEY_M3		==	KEY_STOP
   281       0016 C        KEY_EXIT	==	KEY_STOP
   282       0024 C        KEY_UP		==	KEY_VOLA
   283       0025 C        KEY_DOWN	==	KEY_VOLS
   284       0026 C        KEY_PBOOK	==	KEY_LEFT
   285       0027 C        KEY_CID		==	KEY_RIGHT
   286       0030 C        KEY_OK		==	KEY_MENU
   287       0030 C        KEY_ENTER	==	KEY_MENU
   288       0025 C        KEY_LCD		==	KEY_VOLS
   289       0024 C        KEY_PROGRAM	==	KEY_VOLA
   290            C        
   291       0000 C        POWER_ON	==	0x00
   292       0001 C        POWER_DOWN	==	0x01
   293       0000 C        HANDSET_ON	==	0x00			; (手柄挂机)
   294       0001 C        HANDSET_OFF	==	0x01			; (手柄摘机)
   295            C        
   296            C        
   297            C        /*************************************************
   298            C        光标说明：
   299            C        cursor	.7~.4 = y坐标; .3~.0 = x坐标
   300            C        tmr_cursor	光标的计时器
   301            C        
   302            C        *************************************************/
   303            C        
   304            C        
   305            C        
   306            C        
   307            C        /*************************************************
   308            C        DATA RAM
   309            C        
   310            C        BLOCK 0:
   311            C        本区专供LCD driver
   312            C        0~127		LCD 显示映射区
   313            C        30~3f		temp
   314            C        70~7f		空
   315            C        
   316            C        0x70		闪烁更新标志位
   317            C        0x71~0x73	印花闪烁标志位
   318            C        0x74~0x75	第一行数字闪烁标志位
   319            C        0x76~0x77	第二行数字闪烁标志位
   320            C        0x78~0x79	第三行字符闪烁标志位
   321            C        0x7a		字符串的ID
   322            C        0x7b		字符串的计数器。
   323            C        
   324            C        128		LCD 显示控制
   325            C        128+1~3		3个印花				; 印花直接输入到这里
   326            C        128+4~13	第一行10个数字
   327            C        128+14~29	第二行16个数字
   328            C        128+30~45	第三行16个字符
   329            C        
   330            C        128+48		第一行控制器
   331            C        128+49		第一行计数器
   332            C        128+50~59	第一行数字缓冲区
   333            C        128+60		第二行控制器
   334            C        128+61		第二行计数器
   335            C        128+62~93	第二行数字缓冲区
   336            C        128+94		第三行控制器
   337            C        128+95		第三行计数器
   338            C        128+96~127	第三行字符缓冲区
   339            C        
   340            C        
   341            C        BLOCK 1:
   342            C        本区专供FSK接受区
   343            C        0~7		clock package
   344            C        8~71		cid package
   345            C        
   346            C        128		M1	=1(=0表示没有)
   347            C        129~144		M1 number(16位号码)
   348            C        145~160		M1 name(16位人名)
   349            C        161		M1 ring(1位铃声编号)
   350            C        
   351            C        162		M2	=2(=0表示没有)
   352            C        163~178		M2 number
   353            C        179~194		M2 name
   354            C        195		M2 ring
   355            C        
   356            C        196		M3	=3(=0表示没有)
   357            C        197~212		M3 number
   358            C        213~228		M3 name
   359            C        229		M3 ring
   360            C        
   361            C        
   362            C        BLOCK 2:
   363            C        本区专供FSK解码显示区
   364            C        
   365            C        BLOCK 3:
   366            C        本区专供拨号区。
   367            C        0		当前拨号状态寄存器
   368            C        		.7	=0 没有拨过任何号码，=1 拨过号码
   369            C        		.6	=1 当前按键持续中，并且等于最后一次存入的号码键。
   370            C        		.5	=0 tone, =1 pulse
   371            C        		.4	=1 mute, =0 normal
   372            C        		.3~.0	拨号的状态
   373            C        			0 -- idle和delay
   374            C        			1 -- 拨号前的mute(20ms)
   375            C        			2 -- 拨一个号码(100ms)
   376            C        			3 -- 拨号后的mute(20ms)
   377            C        			4 -- flash前的mute(20ms)
   378            C        			5 -- flash(100ms~900ms)
   379            C        			6 -- flash后的mute(20ms)
   380            C        			r2_tmr_dial, r2_tmr_dial1拨号时的计时器，单位:10ms,s，只要计时器未到0，拨号状态不会改变。
   381            C        			拨号之间delay同idle
   382            C        		
   383            C        		。
   384            C        1		当前拨号缓冲区指针
   385            C        2~65		共64个号码缓冲区，号码为ASCII码。
   386            C        
   387            C        66		最后一次拨号可用于重拨的号码长度，
   388            C        67~98		32个号码缓冲区，本号码可用于重拨。
   389            C        
   390            C        99~130		32个重拨号码区，固定长度，0之前的为有效号码
   391            C        
   392            C        131		号码编辑区的有效长度，1~32。
   393            C        132~163		32个号码编辑区，本区可以编辑。
   394            C        164		人名编辑区的有效长度，1~32
   395            C        165~196		32个人名编辑区，本区可以编辑。
   396            C        197		铃声编辑。
   397            C        198		编辑区属性
   398            C        		0- phonebook; 1~3- M1~M3;
   399            C        
   400            C        200		来电的长度
   401            C        201~232		来电号码，最大32位。
   402            C        233~236		遥控密码设置时临时存储位置
   403            C        BLOCK 4:
   404            C        本区专供IIC发送接收区
   405            C        0		从机地址
   406            C        1		IIC状态
   407            C        		.7	=0 idle; =1 sending/receiving
   408            C        		.6	=0 idle; =1 slave busy (cannot send)
   409            C        2		发送指针
   410            C        3~62		send data (60bytes)
   411            C        
   412            C        63~122		one command (60bytes)
   413            C        
   414            C        128		接收指针
   415            C        129~255		接收区，最大127个
   416            C        *************************************************/
   417            C        
   418            C        
   419            C        
    12                     INCLUDE	"application.inc"
     1       0001 C        PRO_AppIdle		==	1
     2       0002 C        PRO_AppDialingPhone	==	2
     3       0003 C        PRO_AppDialingExit	==	3
     4       0004 C        PRO_AppPreDial		==	4
     5       0005 C        PRO_AppNewCall		==	5
     6       0007 C        PRO_AppNoContent	==	7
     7       0008 C        PRO_AppMenuMain		==	8
     8       0009 C        PRO_AppCallList		==	9
     9       000A C        PRO_AppMenuPhoneBook	==	10
    10       000B C        PRO_AppMenuPhone	==	11
    11       000C C        PRO_AppMenuSystemSetting ==	12
    12       000D C        PRO_AppMenuDAM		==	13
    13       000E C        PRO_AppMenuPhoneSetting	==	14
    14       000F C        PRO_AppMenuRecord	==	15
    15            C        ;PRO_AppMenuDamSetting	==	16
    16       0011 C        PRO_AppMenuRecorderOn	==	17
    17            C        ;PRO_AppAlarmRemind	==	18
    18            C        ;PRO_AppMissCall	==	19
    19            C        ;PRO_AppAnsweredCall	==	20
    20            C        ;PRO_AppDialedCall	==	21
    21            C        ;PRO_AppLastCall	==	22
    22       0017 C        PRO_AppBrowsePbook	==	23
    23       0018 C        PRO_AppNewBook		==	24
    24       0019 C        PRO_AppDeleteBook	==	25
    25            C        ;PRO_AppCalendar	==	26
    26            C        ;PRO_AppCalculator	==	27
    27       001C C        PRO_AppSetClock		==	28
    28       001D C        PRO_AppRestoreDefault	==	29
    29       001E C        PRO_AppSetRingMelody	==	30
    30       001F C        PRO_AppSetRingVolume	==	31
    31       0020 C        PRO_AppSetAreaCode	==	32
    32       0021 C        PRO_AppSetFlashTime	==	33
    33       0022 C        PRO_AppSetPauseTime	==	34
    34       0023 C        PRO_AppSetLcdContrast	==	35
    35       0024 C        PRO_AppNoMessage	==	36
    36       0025 C        PRO_AppPlay		==	37
    37       0026 C        PRO_AppDeleteAllMsg	==	38
    38       0027 C        PRO_AppMemoRecord	==	39
    39       0028 C        PRO_AppOgm1Record	==	40
    40       0029 C        PRO_AppOgm2Record	==	41
    41       002A C        PRO_AppOgmSelect	==	42
    42       002B C        PRO_AppOgm1Play		==	43
    43       002C C        PRO_AppOgm2Play		==	44
    44       002D C        PRO_AppMemoPlay		==	45
    45       002E C        PRO_AppOnoffSelect	==	46
    46       002F C        PRO_AppMemory1		==	47
    47       0030 C        PRO_AppMemory2		==	48
    48       0031 C        PRO_AppMemory3		==	49
    49       0032 C        PRO_AppProgram		==	50
    50       0033 C        PRO_AppEditBook		==	51
    51       0034 C        PRO_AppSetDate		==	52
    52       0035 C        PRO_AppSetDam		==	53
    53       0036 C        PRO_AppSetRingDelay	==	54
    54       0037 C        PRO_AppSetRemoteCode	==	55
    55       0038 C        PRO_AppSetRecordTime	==	56
    56       0039 C        PRO_AppSuccessfull	==	57
    57            C        
    58            C        
    59            C        
    60            C        
    13                     INCLUDE	"string.inc"
     1       0000 C        STR_NoContent		==	0
     2       0001 C        STR_CallList		==	1
     3       0002 C        STR_PhoneBook		==	2
     4       0003 C        STR_PleaseInput		==	3
     5            C        ;STR_Tools		==	4
     6       0005 C        STR_SystemSetting	==	5
     7       0006 C        STR_DAM			==	6
     8       0007 C        STR_TwoWay		==	7
     9       0008 C        STR_HighQuality		==	8
    10       0009 C        STR_LowQuality		==	9
    11       000A C        STR_Delete		==	10
    12       000B C        STR_BrowsePhonebook	==	11
    13       000C C        STR_InputNumber		==	12
    14       000D C        STR_InputName		==	13
    15       000E C        STR_EditPhonebook	==	14
    16       000F C        STR_Deleteall		==	15
    17       0010 C        STR_Input		==	16
    18       0011 C        STR_Again		==	17
    19       0012 C        STR_ClockSetting	==	18
    20       0013 C        STR_PhoneSetting	==	19
    21       0014 C        STR_RestoreDefault	==	20
    22       0015 C        STR_Play		==	21
    23       0016 C        STR_Record		==	22
    24       0017 C        STR_Ringmelody		==	23
    25       0018 C        STR_Ringvolume		==	24
    26       0019 C        STR_Areacode		==	25
    27       001A C        STR_Flashtime		==	26
    28       001B C        STR_Pausetime		==	27
    29       001C C        STR_LCDcontrast		==	28
    30       001D C        STR_HFDialing		==	29
    31       001E C        STR_Memorecord		==	30
    32       001F C        STR_OGM1record		==	31
    33       0020 C        STR_OGM2record		==	32
    34       0021 C        STR_PreHFdial		==	33
    35       0022 C        STR_MUTE		==	34
    36       0023 C        STR_BLANK		==	35	; 8个空格
    37       0024 C        STR_Jingle		==	36
    38       0025 C        STR_BabyElephant	==	37
    39       0026 C        STR_Bonanza		==	38
    40       0027 C        STR_Choopeta		==	39
    41       0028 C        STR_ForElise		==	40
    42       0029 C        STR_MarcheTurque	==	41
    43       002A C        STR_ALittleNight	==	42
    44       002B C        STR_SmokeOnWater	==	43
    45       002C C        STR_TheEntertainer	==	44
    46       002D C        STR_FinalCountdown	==	45
    47       002E C        STR_TwinPeaks		==	46
    48       002F C        STR_ZorbaLeGrec		==	47
    49       0030 C        STR_OFF			==	48
    50       0031 C        STR_NoMessage		==	49
    51       0032 C        STR_Pause		==	50
    52       0033 C        STR_OGM			==	51
    53       0034 C        STR_Memo		==	52
    54       0035 C        STR_SelectRingTone	==	53
    55       0036 C        STR_DateSetting		==	54
    56       0037 C        STR_DAMSetting		==	55
    57       0038 C        STR_RecorderON		==	56
    58       0039 C        STR_RecorderOFF		==	57
    59       003A C        STR_Setringdelay	==	58
    60       003B C        STR_Setremotecode	==	59
    61       003C C        STR_Setrecordtime	==	60
    62       003D C        STR_SetOGM		==	61
    63       003E C        STR_Sun			==	62
    64       003F C        STR_Mon			==	63
    65       0040 C        STR_Tue			==	64
    66       0041 C        STR_Wed			==	65
    67       0042 C        STR_Thu			==	66
    68       0043 C        STR_Fri			==	67
    69       0044 C        STR_Sat			==	68
    70       0045 C        STR_memoryset		==	69
    71       0046 C        STR_Successful		==	70
    72       0047 C        STR_NewCall		==	71
    73       0048 C        STR_ICM			==	72
    74       0049 C        STR_Remote		==	73
    75       004A C        STR_Answered		==	74
    76       004B C        STR_RingTimes		==	75
    77       004C C        STR_ToPhonebook		==	76
    78       004D C        STR_Total		==	77
    79       004E C        STR_New			==	78
    80       004F C        STR_EndOfList		==	79
    81       0050 C        STR_Private		==	80
    82       0051 C        STR_WrongMessage	==	81
    83       0052 C        STR_Unavallable		==	82
    84            C        
    85            C        
    86            C        
    14                     INCLUDE	"config.inc"
     1            C        
     2            C        
     3       0001 C        OTP		==	1
     4            C        
     5       0014 C        DEFAULT_century	==	20
     6       0008 C        DEFAULT_year	==	08
     7       0001 C        DEFAULT_month	==	1
     8       0001 C        DEFAULT_day	==	1
     9       0000 C        DEFAULT_hour	==	0
    10       0000 C        DEFAULT_minute	==	0
    11            C        
    12       0001 C        DEFAULT_ringmelody	==	1 ; (jingle)
    13       0002 C        DEFAULT_ringvolume	==	2 ;(level 2)
    14       0001 C        DEFAULT_flashtime	==	1 ;(100ms)
    15       0003 C        DEFAULT_pausetime	==	3 ;(3s)
    16       0005 C        DEFAULT_contrast	==	5 ;(50%)
    17       0081 C        DEFAULT_ogm		==	0x81 ;(ogm1, ANS off)
    18       0002 C        DEFAULT_ringdelay	==	2
    19       0001 C        DEFAULT_remotecode1	==	0x01
    20       0023 C        DEFAULT_remotecode2	==	0x23
    21       00FF C        DEFAULT_areacode1	==	0xff
    22       00FF C        DEFAULT_areacode2	==	0xff
    23       0001 C        DEFAULT_rate		==	1
    24       0000 C        DEFAULT_language	==	0
    25            C        
    26            C        
    27            C        
    28            C        
    15                     
    16                     
    17                     ORG	0x0000
    18 00000 148F          	JMP	main
    19                     
    20                     ORG	0x0008
    21                     
    22 00008               IntBegin:
    23 00008 0011          	DISI
    24 00009 0050          	MOV	int_acc,A
    25 0000A 0750          	SWAP	int_acc
    26                   M 	MOV	int_status,_STATUS
       0000B 0403     1     MOV A, _STATUS 
       0000C 0051     1     MOV  INT_STATUS ,A
    27                   M 	MOV	int_rsr,_RSR
       0000D 0404     1     MOV A, _RSR 
       0000E 0052     1     MOV  INT_RSR ,A
    28 0000F 00C3          	CLR	_STATUS
    29 00010 00C4          	CLR	_RSR				; set bank0, and indirect address=0
    30                   M 	MOV	r0_int_ppsr,_PPSR
       00011 0405     1     MOV A, _PPSR 
       00012 0065     1     MOV  R0_INT_PPSR ,A
    31                   M 	MOV	r0_int_addr,_ADDR
       00013 040C     1     MOV A, _ADDR 
       00014 0066     1     MOV  R0_INT_ADDR ,A
    32 00015 001A          	IOR	_IOCA
    33 00016 1A1E          	AND	A,@(0x1e)
    34 00017 0067          	MOV	r0_int_block,A
    35                     	
    36 00018 1E80          	PAGE	0
    37                     	
    38                   M 	JPB	_ISR,1,Int_0
       00019 0C4F     1     JBC  _ISR , 1 
       0001A 1439     1     JMP  INT_0 ,
    39                   M 	JPB	_ISR,2,Int_1
       0001B 0C8F     1     JBC  _ISR , 2 
       0001C 143B     1     JMP  INT_1 ,
    40                   M 	JPB	_ISR,3,Int_2
       0001D 0CCF     1     JBC  _ISR , 3 
       0001E 143D     1     JMP  INT_2 ,
    41                   M 	JPB	_ISR,7,Int_3
       0001F 0DCF     1     JBC  _ISR , 7 
       00020 143F     1     JMP  INT_3 ,
    42                   M 	JPB	_ISR,6,IntFsk
       00021 0D8F     1     JBC  _ISR , 6 
       00022 148D     1     JMP  INTFSK ,
    43                   M 	JPB	_ISR,0,IntTcc
       00023 0C0F     1     JBC  _ISR , 0 
       00024 1441     1     JMP  INTTCC ,
    44                   M 	JPB	_ISR,5,IntCnt2			; 1ms
       00025 0D4F     1     JBC  _ISR , 5 
       00026 1456     1     JMP  INTCNT2 ,
    45                   M 	JPB	_ISR,4,IntCnt1			; 用作时钟计时
       00027 0D0F     1     JBC  _ISR , 4 
       00028 1443     1     JMP  INTCNT1 ,
    46                     
    47 00029               IntEnd:
    48                   M 	BANK	0
       00029 0984     1     BC  _RAM , 6 
       0002A 09C4     1     BC  _RAM , 7 
    49 0002B 001A          	IOR	_IOCA
    50 0002C 1AE1          	AND	A,@(0xe1)
    51 0002D 0227          	OR	A,r0_int_block
    52 0002E 000A          	IOW	_IOCA
    53                   M 	MOV	_ADDR,r0_int_addr
       0002F 0426     1     MOV A, R0_INT_ADDR 
       00030 004C     1     MOV  _ADDR ,A
    54                   M 	MOV	_PPSR,r0_int_ppsr
       00031 0425     1     MOV A, R0_INT_PPSR 
       00032 0045     1     MOV  _PPSR ,A
    55                   M 	MOV	_RSR,int_rsr
       00033 0412     1     MOV A, INT_RSR 
       00034 0044     1     MOV  _RSR ,A
    56                   M 	MOV	_STATUS,int_status
       00035 0411     1     MOV A, INT_STATUS 
       00036 0043     1     MOV  _STATUS ,A
    57 00037 0710          	SWAPA	int_acc
    58 00038 0013          	RETI
    59                     
    60 00039               Int_0:
    61 00039 084F          	BC	_ISR,1
    62 0003A 1429          	JMP	IntEnd
    63                     
    64 0003B               Int_1:
    65 0003B 088F          	BC	_ISR,2
    66 0003C 1429          	JMP	IntEnd
    67                     
    68 0003D               Int_2:
    69 0003D 08CF          	BC	_ISR,3
    70 0003E 1429          	JMP	IntEnd
    71                     
    72 0003F               Int_3:
    73 0003F 09CF          	BC	_ISR,7
    74 00040 1429          	JMP	IntEnd
    75                     
    76                     
    77                     
    78 00041               IntTcc:
    79 00041 080F          	BC	_ISR,0
    80 00042 1429          	JMP	IntEnd
    81                     
    82 00043               IntCnt1:			; (1/16s)
    83 00043 090F          	BC	_ISR,4
    84                   M 	BANK	1
       00044 0B84     1     BS  _RAM , 6 
       00045 09C4     1     BC  _RAM , 7 
    85 00046 0565          	INC	r1_rtc_tmr
    86 00047               IntFlash:
    87                   M 	ANDA	r1_rtc_tmr,@(0x07)
       00047 1807     1     MOV A,@( 7 )
       00048 02A5     1     AND A, R1_RTC_TMR 
    88                   M 	JPNZ	IntFlash_ret
       00049 0E83     1     JBS  _STATUS , Z 
       0004A 1450     1     JMP  INTFLASH_RET ,
    89                   M 	BLOCK	0
       0004B 1840     1     MOV A,@((( 0 << 1 )+ VALUE_IOCA ))
       0004C 000A     1     IOW  _IOCA ,
    90                   M 	MOV	_RC,@(128)
       0004D 1880     1     MOV A,@( 128 )
       0004E 004C     1     MOV  _RC ,A
    91 0004F 0ACD          	BS	_RD,3
    92 00050               IntFlash_ret:
    93 00050               IntClock:
    94                   M 	ANDA	r1_rtc_tmr,@(0x0f)
       00050 180F     1     MOV A,@( 15 )
       00051 02A5     1     AND A, R1_RTC_TMR 
    95                   M 	JPNZ	IntEnd
       00052 0E83     1     JBS  _STATUS , Z 
       00053 1429     1     JMP  INTEND ,
    96 00054 0BEE          	BS	r1_rtc_flag,7
    97 00055 1429          	JMP	IntEnd
    98                     
    99 00056               IntCnt2:			; (1ms)
   100 00056 094F          	BC	_ISR,5
   101                     	
   102 00057 0B83          	BS	_STATUS,PG
   103                   M 	IOW	_IOCC,@(0xdf)
       00058 18DF     1     MOV A,@( 223 )
       00059 000C     1     IOW  _IOCC ,
   104 0005A 0983          	BC	_STATUS,PG
   105                     	
   106 0005B 057B          	INC	r0_tmr
   107                     
   108                   M 	PAGE	#(SerIntKeyScan)
       0005C 1E84     1     PAGE ( SERINTKEYSCAN / 1024 ),
   109 0005D 10CD          	CALL	SerIntKeyScan
   110 0005E 1104          	CALL	SerIntKeyProtect
   111 0005F 1133          	CALL	SerIntTimer
   112 00060 10E4          	CALL	SerIntKeyRead
   113                   M 	PAGE	#($)
       00061 1E80     1     PAGE ( $ / 1024 ),
   114                     
   115                   M 	ANDA	r0_tmr,@(0x03)
       00062 1803     1     MOV A,@( 3 )
       00063 02BB     1     AND A, R0_TMR 
   116                   M 	JPNZ	IntCnt2_4ms_end
       00064 0E83     1     JBS  _STATUS , Z 
       00065 148C     1     JMP  INTCNT2_4MS_END ,
   117 00066               IntCnt2_4ms:
   118 00066 041A          	MOV	A,tmr_cursor
   119                   M 	JPZ	$+2
       00067 0C83     1     JBC  _STATUS , Z 
       00068 146A     1     JMP ( $ + 2 ),
   120 00069 01DA          	DEC	tmr_cursor
   121                     	
   122                   M 	BANK	2
       0006A 0984     1     BC  _RAM , 6 
       0006B 0BC4     1     BS  _RAM , 7 
   123 0006C 042A          	MOV	A,r2_tmr_dial
   124                   M 	JPNZ	$+5
       0006D 0E83     1     JBS  _STATUS , Z 
       0006E 1473     1     JMP ( $ + 5 ),
   125 0006F 042B          	MOV	A,r2_tmr_dial1
   126                   M 	JPZ	$+3
       00070 0C83     1     JBC  _STATUS , Z 
       00071 1474     1     JMP ( $ + 3 ),
   127 00072 01EB          	DEC	r2_tmr_dial1
   128 00073 01EA          	DEC	r2_tmr_dial
   129                     
   130 00074               IntCnt2_newcall:
   131                   M 	JPNB	r2_led_newcall,6,IntCnt2_newcall_1
       00074 0FB8     1     JBS  R2_LED_NEWCALL , 6 
       00075 1478     1     JMP  INTCNT2_NEWCALL_1 ,
   132 00076 09B8          	BC	r2_led_newcall,6
   133 00077 1483          	JMP	IntCnt2_newcall_off
   134 00078               IntCnt2_newcall_1:
   135                   M 	JPNB	r2_led_newcall,7,IntCnt2_newcall_end
       00078 0FF8     1     JBS  R2_LED_NEWCALL , 7 
       00079 148C     1     JMP  INTCNT2_NEWCALL_END ,
   136 0007A 01F7          	DEC	r2_tmr_newcall
   137                   M 	JPNZ	IntCnt2_newcall_end
       0007B 0E83     1     JBS  _STATUS , Z 
       0007C 148C     1     JMP  INTCNT2_NEWCALL_END ,
   138 0007D 0578          	INC	r2_led_newcall
   139                   M 	ANDA	r2_led_newcall,@(0x0f)
       0007E 180F     1     MOV A,@( 15 )
       0007F 02B8     1     AND A, R2_LED_NEWCALL 
   140 00080 1D03          	SUB	A,@(3)
   141                   M 	JPNC	IntCnt2_newcall_on
       00081 0E03     1     JBS  _STATUS , C 
       00082 1487     1     JMP  INTCNT2_NEWCALL_ON ,
   142                     
   143 00083               IntCnt2_newcall_off:
   144 00083 0A49          	BS	_P9,1
   145                   M 	MOV	r2_tmr_newcall,@(250)
       00084 18FA     1     MOV A,@( 250 )
       00085 0077     1     MOV  R2_TMR_NEWCALL ,A
   146 00086 148C          	JMP	IntCnt2_newcall_end
   147 00087               IntCnt2_newcall_on:
   148 00087 0849          	BC	_P9,1
   149                   M 	MOV	r2_tmr_newcall,@(75)		; 300ms
       00088 184B     1     MOV A,@( 75 )
       00089 0077     1     MOV  R2_TMR_NEWCALL ,A
   150                   M 	AND	r2_led_newcall,@(0xf0)
       0008A 18F0     1     MOV A,@( 240 )
       0008B 02F8     1     AND  R2_LED_NEWCALL ,A
   151                     	
   152 0008C               IntCnt2_newcall_end:
   153                     
   154 0008C               IntCnt2_4ms_end:
   155                     
   156 0008C 1429          	JMP	IntEnd
   157                     
   158 0008D               IntFsk:
   159 0008D 098F          	BC	_ISR,6
   160 0008E 1429          	JMP	IntEnd
   161                     
   162                     
   163 0008F               Main:
   164 0008F 0000          	NOP
   165 00090 1188          	CALL	Initial
   166                     	;CALL	Main_test
   167                     
   168 00091 1801          	MOV	A,@(PRO_AppIdle)
   169                   M 	LCALL	LibPushProgram
                      2  M  PAGE #( LIBPUSHPROGRAM ),
       00092 1E81     2     PAGE ( LIBPUSHPROGRAM / 1024 ),
       00093 1000     1     CALL ( LIBPUSHPROGRAM % 1024 ),
                      2  M  PAGE #( $ ),
       00094 1E80     2     PAGE ( $ / 1024 ),
   170                     	
   171                     
   172 00095               Main_loop:
   173                     	
   174                   M 	PAGE	#SerClock
       00095 1E84     1     PAGE ( SERCLOCK / 1024 ),
   175 00096 113C          	CALL	SerClock
   176                     	
   177                   M 	PAGE	#(SerProtocol)
       00097 1E80     1     PAGE ( SERPROTOCOL / 1024 ),
   178 00098 10B3          	CALL	SerProtocol
   179                     	
   180                   M 	PAGE	#(LcdDriver)
       00099 1E82     1     PAGE ( LCDDRIVER / 1024 ),
   181 0009A 1026          	CALL	LcdDriver
   182                     	
   183                   M 	PAGE	#(SerCursor)
       0009B 1E82     1     PAGE ( SERCURSOR / 1024 ),
   184 0009C 1000          	CALL	SerCursor
   185                     	
   186                   M 	PAGE	#SerMessager
       0009D 1E84     1     PAGE ( SERMESSAGER / 1024 ),
   187 0009E 1000          	CALL	SerMessager
   188 0009F 1197          	CALL	SerServer
   189                     	
   190                   M 	PAGE	#(Application)
       000A0 1E85     1     PAGE ( APPLICATION / 1024 ),
   191 000A1 1052          	CALL	Application
   192                   M 	PAGE	#($)
       000A2 1E80     1     PAGE ( $ / 1024 ),
   193 000A3 1F00          	ADD	A,@(0)
   194                   M 	JPNZ	Main_loop
       000A4 0E83     1     JBS  _STATUS , Z 
       000A5 1495     1     JMP  MAIN_LOOP ,
   195 000A6 00DB          	CLR	sys_msg
   196 000A7 1495          	JMP	Main_loop
   197                     
   198                     
   199                     
   200                     INCLUDE	"iic.asm"
     1            C        /*************************************************
     2            C        IIC标准协议
     3            C        *************************************************/
     4       0004 C        SDA	==	4
     5       0005 C        SCL	==	5
     6       0007 C        DSP	==	7
     7            C        
     8 000A8      C        IIC:
     9            C        
    10 000A8      C        IicSendData:
    11 000A8 0053 C        	MOV	ax,A
    12            C      M 	BLOCK	4
       000A9 1848     1     MOV A,@((( 4 << 1 )+ VALUE_IOCA ))
       000AA 000A     1     IOW  _IOCA ,
    13            C      M 	MOV	_RC,@(2)
       000AB 1802     1     MOV A,@( 2 )
       000AC 004C     1     MOV  _RC ,A
    14 000AD 054D C        	INC	_RD
    15            C      M 	ADD	_RC,_RD
       000AE 040D     1     MOV A, _RD 
       000AF 03CC     1     ADD  _RC ,A
    16            C      M 	MOV	_RD,ax
       000B0 0413     1     MOV A, AX 
       000B1 004D     1     MOV  _RD ,A
    17 000B2 0012 C        	RET
    18            C        
    19            C        
    20            C        
    21 000B3      C        SerProtocol:
    22            C        
    23 000B3      C        IicSer:
    24            C      M 	JPNB	hardware,POWERSTATUS,IicSer_ret
       000B3 0F9F     1     JBS  HARDWARE , POWERSTATUS 
       000B4 14BF     1     JMP  IICSER_RET ,
    25            C      M 	BLOCK	4
       000B5 1848     1     MOV A,@((( 4 << 1 )+ VALUE_IOCA ))
       000B6 000A     1     IOW  _IOCA ,
    26 000B7      C        IicSer_loop:
    27 000B7 0011 C        	DISI
    28            C      M 	JPNB	_P8,DSP,IicSer_receive
       000B8 0FC8     1     JBS  _P8 , DSP 
       000B9 14CE     1     JMP  IICSER_RECEIVE ,
    29            C      M 	MOV	_RC,@(2)
       000BA 1802     1     MOV A,@( 2 )
       000BB 004C     1     MOV  _RC ,A
    30 000BC 040D C        	MOV	A,_RD
    31            C      M 	JPNZ	IicSer_send
       000BD 0E83     1     JBS  _STATUS , Z 
       000BE 14E9     1     JMP  IICSER_SEND ,
    32 000BF      C        IicSer_ret:
    33 000BF 0013 C        	RETI
    34            C        
    35 000C0      C        IicSer_fail:
    36 000C0 110E C        	CALL	IicStop
    37            C        
    38 000C1      C        IicSer_restart:
    39 000C1 0010 C        	ENI
    40 000C2 0000 C        	NOP
    41            C      M 	JPB	_P7,POWERSTATUS,IicSer_loop
       000C3 0D87     1     JBC  _P7 , POWERSTATUS 
       000C4 14B7     1     JMP  IICSER_LOOP ,
    42 000C5      C        IicSer_powdown:
    43            C      M 	MOV	_RC,@(1)
       000C5 1801     1     MOV A,@( 1 )
       000C6 004C     1     MOV  _RC ,A
    44            C      M 	MOV	cnt,@(255)
       000C7 18FF     1     MOV A,@( 255 )
       000C8 0055     1     MOV  CNT ,A
    45 000C9 00D3 C        	CLR	ax
    46            C      M 	LCALL	LibClearRam
                      2  M  PAGE #( LIBCLEARRAM ),
       000CA 1E81     2     PAGE ( LIBCLEARRAM / 1024 ),
       000CB 111D     1     CALL ( LIBCLEARRAM % 1024 ),
                      2  M  PAGE #( $ ),
       000CC 1E80     2     PAGE ( $ / 1024 ),
    47 000CD 1C00 C        	RETL	@(0)
    48            C        	
    49            C        
    50 000CE      C        IicSer_receive:
    51 000CE 1109 C        	CALL	IicStart			; 产生一个起始条件
    52 000CF 00CC C        	CLR	_RC
    53 000D0 068D C        	RLCA	_RD				; 从机地址
    54 000D1 1901 C        	OR	A,@(0x01)			; 读状态
    55 000D2 111C C        	CALL	IicSendByte			; 发送地址和读状态
    56 000D3 114C C        	CALL	IicGetAck			; 收ACK
    57            C      M 	JPNZ	IicSer_fail
       000D4 0E83     1     JBS  _STATUS , Z 
       000D5 14C0     1     JMP  IICSER_FAIL ,
    58 000D6 112F C        	CALL	IicGetByte			; 第一个字节为数据长度
    59            C      M 	JPZ	IicSer_fail			; "0"阻塞信号
       000D7 0C83     1     JBC  _STATUS , Z 
       000D8 14C0     1     JMP  IICSER_FAIL ,
    60 000D9 0056 C        	MOV	bx,A				; 长度保存在bx中
    61 000DA 1169 C        	CALL	IicStoreData
    62 000DB 0416 C        	MOV	A,bx
    63 000DC 1177 C        	CALL	IicCommandLength
    64 000DD 0056 C        	MOV	bx,A
    65 000DE 14E1 C        	JMP	IicSer_receive_loop_1
    66 000DF      C        IicSer_receive_loop:
    67 000DF 112F C        	CALL	IicGetByte
    68 000E0 1169 C        	CALL	IicStoreData
    69 000E1      C        IicSer_receive_loop_1:
    70 000E1 05D6 C        	DJZ	bx
    71 000E2 14E5 C        	JMP	$+3
    72 000E3 1143 C        	CALL	IicSendNoAck			; 最后一个字节发送NOACK
    73 000E4 14E7 C        	JMP	IicSer_receive_stop		; 停止
    74 000E5 1141 C        	CALL	IicSendAck
    75 000E6 14DF C        	JMP	IicSer_receive_loop
    76 000E7      C        IicSer_receive_stop:
    77 000E7 110E C        	CALL	IicStop
    78 000E8 14C1 C        	JMP	IicSer_restart
    79            C        
    80 000E9      C        IicSer_send:
    81 000E9 0056 C        	MOV	bx,A				; 发送的长度
    82            C      M 	MOV	_RC,@(1)
       000EA 1801     1     MOV A,@( 1 )
       000EB 004C     1     MOV  _RC ,A
    83            C      M 	JPB	_RD,6,IicSer_restart		; 从机忙，不能发送
       000EC 0D8D     1     JBC  _RD , 6 
       000ED 14C1     1     JMP  IICSER_RESTART ,
    84 000EE 00D7 C        	CLR	exb
    85 000EF 1109 C        	CALL	IicStart			; 产生一个起始条件
    86 000F0 00CC C        	CLR	_RC
    87 000F1 068D C        	RLCA	_RD				; 从机地址
    88 000F2 1AFE C        	AND	A,@(0xfe)			; 写状态
    89 000F3 111C C        	CALL	IicSendByte			; 发送地址和写状态
    90 000F4 114C C        	CALL	IicGetAck			; 得到从机的ACK
    91            C      M 	JPNZ	IicSer_fail			; 没有得到ACK，fail
       000F5 0E83     1     JBS  _STATUS , Z 
       000F6 14C0     1     JMP  IICSER_FAIL ,
    92            C        	;CALL	IicWaitDsp
    93            C        	;JPZ	IicSer_fail
    94 000F7      C        IicSer_send_loop:
    95 000F7 0557 C        	INC	exb
    96            C      M 	ADDA	exb,@(2)
       000F8 1802     1     MOV A,@( 2 )
       000F9 0397     1     ADD A, EXB 
    97 000FA 004C C        	MOV	_RC,A
    98 000FB 040D C        	MOV	A,_RD				; 得到要发送的数据
    99 000FC 111C C        	CALL	IicSendByte			; 发送数据
   100 000FD 114C C        	CALL	IicGetAck
   101            C      M 	JPNZ	IicSer_fail
       000FE 0E83     1     JBS  _STATUS , Z 
       000FF 14C0     1     JMP  IICSER_FAIL ,
   102            C      M 	SUBA	exb,bx
       00100 0416     1     MOV A, BX 
       00101 0117     1     SUB A, EXB 
   103            C      M 	JPNZ	IicSer_send_loop
       00102 0E83     1     JBS  _STATUS , Z 
       00103 14F7     1     JMP  IICSER_SEND_LOOP ,
   104 00104 110E C        	CALL	IicStop				; 发送完毕，停止
   105            C        	;MOV	_RC,@(1)
   106            C        	;BS	_RD,6
   107            C        	;BS	_RD,5
   108            C      M 	MOV	_RC,@(2)
       00105 1802     1     MOV A,@( 2 )
       00106 004C     1     MOV  _RC ,A
   109 00107 00CD C        	CLR	_RD
   110            C        	;SUB	_RD,bx
   111            C        	;MOV	cnt,bx
   112            C        	;ADD	A,@(3)
   113            C        	;MOV	ax,A
   114            C        	;MOV	bx,@(3)
   115            C        	;LCALL	LibCopyRam			; 移动发送缓冲区
   116 00108 14C1 C        	JMP	IicSer_restart
   117            C        	
   118            C        	
   119            C        
   120 00109      C        IicStart:
   121 00109 0907 C        	BC	_P7,SDA				; 拉低SDA线，产生一个start条件
   122 0010A 1158 C        	CALL	IicDelay			; 延时5us
   123 0010B 0947 C        	BC	_P7,SCL				; SCL变低
   124 0010C 1158 C        	CALL	IicDelay
   125 0010D 0012 C        	RET
   126            C        
   127 0010E      C        IicStop:
   128 0010E 0947 C        	BC	_P7,SCL
   129 0010F 0017 C        	IOR	_IOC7
   130 00110 1AEF C        	AND	A,@((1<<SDA)^0xff)		; 将SDA改为输出状态
   131 00111 0007 C        	IOW	_IOC7
   132 00112 0907 C        	BC	_P7,SDA				; SDA输出低
   133 00113 1158 C        	CALL	IicDelay
   134 00114 115F C        	CALL	IicHighScl
   135 00115 1158 C        	CALL	IicDelay
   136 00116 0B07 C        	BS	_P7,SDA				; SDA输出高
   137 00117 1158 C        	CALL	IicDelay
   138 00118 1158 C        	CALL	IicDelay
   139 00119 1158 C        	CALL	IicDelay
   140 0011A 1158 C        	CALL	IicDelay
   141 0011B 0012 C        	RET
   142            C        	
   143            C        
   144 0011C      C        IicSendByte:
   145 0011C 0053 C        	MOV	ax,A
   146            C      M 	MOV	cnt,@(8)			; 一次发送8位
       0011D 1808     1     MOV A,@( 8 )
       0011E 0055     1     MOV  CNT ,A
   147 0011F      C        IicSendByte_loop:
   148            C      M 	JPB	ax,7,$+3			; 数据从最高位开始发送
       0011F 0DD3     1     JBC  AX , 7 
       00120 1523     1     JMP ( $ + 3 ),
   149 00121 0907 C        	BC	_P7,SDA				; 改变SDA线的状态
   150 00122 1524 C        	JMP	$+2
   151 00123 0B07 C        	BS	_P7,SDA				; 改变SDA线的状态
   152 00124 0017 C        	IOR	_IOC7
   153 00125 1AEF C        	AND	A,@((1<<SDA)^0xff)		; 将SDA线改为输出
   154 00126 0007 C        	IOW	_IOC7
   155 00127 06D3 C        	RLC	ax
   156 00128 1158 C        	CALL	IicDelay			; 延时5us
   157 00129 115F C        	CALL	IicHighScl			; 拉高SCL线
   158 0012A 1158 C        	CALL	IicDelay			; 延时5us
   159 0012B 0947 C        	BC	_P7,SCL				; 拉低SCL线
   160 0012C 05D5 C        	DJZ	cnt
   161 0012D 151F C        	JMP	IicSendByte_loop
   162 0012E 0012 C        	RET
   163            C        
   164            C        
   165 0012F      C        IicGetByte:
   166 0012F 0017 C        	IOR	_IOC7
   167 00130 1910 C        	OR	A,@(1<<SDA)			; 将SDA线改为输入状态
   168 00131 0007 C        	IOW	_IOC7
   169            C      M 	MOV	cnt,@(8)
       00132 1808     1     MOV A,@( 8 )
       00133 0055     1     MOV  CNT ,A
   170 00134 00D3 C        	CLR	ax
   171 00135      C        IicGetByte_loop:
   172 00135 1158 C        	CALL	IicDelay			; 低SCL延时
   173 00136 115F C        	CALL	IicHighScl			; 等待SCL变高
   174 00137 1158 C        	CALL	IicDelay			; 延时
   175 00138 0803 C        	BC	_STATUS,C
   176 00139 0D07 C        	JBC	_P7,SDA				; 读SDA的状态
   177 0013A 0A03 C        	BS	_STATUS,C
   178 0013B 06D3 C        	RLC	ax				; 保存在ax中
   179 0013C 0947 C        	BC	_P7,SCL				; SCL变低
   180 0013D 05D5 C        	DJZ	cnt
   181 0013E 1535 C        	JMP	IicGetByte_loop
   182 0013F 0413 C        	MOV	A,ax
   183 00140 0012 C        	RET
   184            C        	
   185            C        
   186 00141      C        IicSendAck:
   187 00141 0907 C        	BC	_P7,SDA				; ACK = 0
   188 00142 1544 C        	JMP	IicAck
   189            C        
   190 00143      C        IicSendNoAck:
   191 00143 0B07 C        	BS	_P7,SDA				; ACK = 1
   192 00144      C        IicAck:
   193 00144 0017 C        	IOR	_IOC7
   194 00145 1AEF C        	AND	A,@((1<<SDA)^0xff)		; 将SDA线改为输出
   195 00146 0007 C        	IOW	_IOC7
   196 00147 1158 C        	CALL	IicDelay			; 延时
   197 00148 115F C        	CALL	IicHighScl
   198 00149 1158 C        	CALL	IicDelay
   199 0014A 0947 C        	BC	_P7,SCL
   200 0014B 0012 C        	RET
   201            C        
   202 0014C      C        IicGetAck:
   203 0014C 0017 C        	IOR	_IOC7
   204 0014D 1910 C        	OR	A,@(1<<SDA)			; 将SDA线改为输入状态
   205 0014E 0007 C        	IOW	_IOC7
   206 0014F 1158 C        	CALL	IicDelay			; 延时5us
   207 00150 1158 C        	CALL	IicDelay			; 延时5us
   208 00151 115F C        	CALL	IicHighScl			; 拉高SCL线
   209 00152 1158 C        	CALL	IicDelay
   210 00153 1158 C        	CALL	IicDelay			; 延时5us
   211            C      M 	ANDA	_P7,@(1<<SDA)			; 得到ACK状态,(z)
       00154 1810     1     MOV A,@(( 1 << SDA ))
       00155 0287     1     AND A, _P7 
   212 00156 0947 C        	BC	_P7,SCL				; 拉低SCL线
   213 00157 0012 C        	RET
   214            C        	
   215            C        	
   216            C        
   217            C        ; 每条单周期指令0.6us
   218            C        ; 延时7*0.6us=4.2us，再加上调用时0.6us，共4.8us。
   219 00158      C        IicDelay:
   220 00158 0000 C        	NOP
   221 00159 0000 C        	NOP
   222 0015A 0000 C        	NOP
   223 0015B 0000 C        	NOP
   224 0015C 0000 C        	NOP
   225 0015D 0000 C        	NOP
   226 0015E 0012 C        	RET
   227            C        
   228            C        ; 将SCL线拉高，拉高之前必须检查SCL线是否为低，为低时则需要等待其变高。
   229 0015F      C        IicHighScl:
   230 0015F 0017 C        	IOR	_IOC7
   231 00160 1920 C        	OR	A,@(1<<SCL)			; 将SCL改为输入状态
   232 00161 0007 C        	IOW	_IOC7
   233 00162 0F47 C        	JBS	_P7,SCL
   234 00163 1562 C        	JMP	$-1				; 等待SCL线变高
   235 00164 0B47 C        	BS	_P7,SCL				; 拉高SCL线
   236 00165 0017 C        	IOR	_IOC7
   237 00166 1ADF C        	AND	A,@((1<<SCL)^0xff)		; 将SCL改为输出状态
   238 00167 0007 C        	IOW	_IOC7
   239 00168 0012 C        	RET
   240            C        
   241            C        
   242 00169      C        IicStoreData:
   243 00169 0053 C        	MOV	ax,A
   244            C      M 	MOV	_RC,@(128)
       0016A 1880     1     MOV A,@( 128 )
       0016B 004C     1     MOV  _RC ,A
   245            C      M 	SUBA	_RD,@(0x7f)
       0016C 187F     1     MOV A,@( 127 )
       0016D 010D     1     SUB A, _RD 
   246            C      M 	JPNC	$+2
       0016E 0E03     1     JBS  _STATUS , C 
       0016F 1571     1     JMP ( $ + 2 ),
   247 00170 00CD C        	CLR	_RD
   248 00171 054D C        	INC	_RD
   249            C      M 	ADD	_RC,_RD
       00172 040D     1     MOV A, _RD 
       00173 03CC     1     ADD  _RC ,A
   250            C      M 	MOV	_RD,ax
       00174 0413     1     MOV A, AX 
       00175 004D     1     MOV  _RD ,A
   251 00176 0012 C        	RET
   252            C        
   253 00177      C        IicCommandLength:
   254 00177 1F00 C        	ADD	A,@(0)
   255            C      M 	JPZ	IicCommandLength_0
       00178 0C83     1     JBC  _STATUS , Z 
       00179 1584     1     JMP  IICCOMMANDLENGTH_0 ,
   256 0017A 1F80 C        	ADD	A,@(0x100-0x80)
   257            C      M 	JPZ	IicCommandLength_80
       0017B 0C83     1     JBC  _STATUS , Z 
       0017C 1587     1     JMP  IICCOMMANDLENGTH_80 ,
   258 0017D 1F01 C        	ADD	A,@(0x80-0x7f)
   259            C      M 	JPZ	IicCommandLength_7f
       0017E 0C83     1     JBC  _STATUS , Z 
       0017F 1586     1     JMP  IICCOMMANDLENGTH_7F ,
   260 00180 1F3F C        	ADD	A,@(0x7f-0x40)
   261            C      M 	JPZ	IicCommandLength_40
       00181 0C83     1     JBC  _STATUS , Z 
       00182 1585     1     JMP  IICCOMMANDLENGTH_40 ,
   262 00183 1C02 C        	RETL	@(2)
   263 00184      C        IicCommandLength_0:
   264 00184 1C01 C        	RETL	@(1)
   265 00185      C        IicCommandLength_40:
   266 00185 1C09 C        	RETL	@(9)
   267 00186      C        IicCommandLength_7f:
   268 00186 1C0E C        	RETL	@(14)
   269 00187      C        IicCommandLength_80:
   270 00187 1C3A C        	RETL	@(58)
   271            C        
   272            C        
   273            C        
   201                     INCLUDE	"initial.asm"
     1            C        
     2 00188      C        Initial:
     3            C      M 	MOV	_FSR,@(0x70)
       00188 1870     1     MOV A,@( 112 )
       00189 004A     1     MOV  _FSR ,A
     4 0018A 0011 C        	DISI
     5 0018B 0004 C        	WDTC
     6 0018C 00C3 C        	CLR	_STATUS
     7 0018D 00C4 C        	CLR	_RSR
     8            C        	
     9 0018E 11A9 C        	CALL	InitReg
    10 0018F 1197 C        	CALL	InitRam
    11 00190 11BE C        	CALL	InitPort
    12 00191 11D3 C        	CALL	InitIntermit
    13 00192 11E2 C        	CALL	InitData
    14 00193 1204 C        	CALL	InitLcd
    15            C        	
    16            C      M 	MOV	_RF,@(0x00)
       00194 1800     1     MOV A,@( 0 )
       00195 004F     1     MOV  _RF ,A
    17 00196 0013 C        	RETI
    18            C        
    19 00197      C        InitRam:
    20 00197 00D5 C        	CLR	cnt
    21 00198      C        InitRam_loop:
    22 00198 0695 C        	RLCA	cnt
    23 00199 1A1E C        	AND	A,@(0x1e)
    24 0019A 1F40 C        	ADD	A,@(VALUE_IOCA)
    25 0019B 000A C        	IOW	_IOCA
    26 0019C 00CC C        	CLR	_RC
    27 0019D      C        InitRam_loop1:
    28 0019D 00CD C        	CLR	_RD
    29 0019E 01CC C        	DEC	_RC
    30            C      M 	JPNZ	InitRam_loop1
       0019F 0E83     1     JBS  _STATUS , Z 
       001A0 159D     1     JMP  INITRAM_LOOP1 ,
    31 001A1 0555 C        	INC	cnt
    32            C      M 	SUBA	cnt,@(10)
       001A2 180A     1     MOV A,@( 10 )
       001A3 0115     1     SUB A, CNT 
    33            C      M 	JPNZ	InitRam_loop
       001A4 0E83     1     JBS  _STATUS , Z 
       001A5 1598     1     JMP  INITRAM_LOOP ,
    34            C      M 	BLOCK	0
       001A6 1840     1     MOV A,@((( 0 << 1 )+ VALUE_IOCA ))
       001A7 000A     1     IOW  _IOCA ,
    35 001A8 0012 C        	RET
    36            C        
    37 001A9      C        InitReg:
    38            C      M 	MOV	_RSR,@(0x10)
       001A9 1810     1     MOV A,@( 16 )
       001AA 0044     1     MOV  _RSR ,A
    39 001AB      C        InitReg_loop:
    40 001AB 00C0 C        	CLR	_R0
    41 001AC 0544 C        	INC	_RSR
    42            C      M 	SUBA	_RSR,@(0x20)
       001AD 1820     1     MOV A,@( 32 )
       001AE 0104     1     SUB A, _RSR 
    43            C      M 	JPNZ	InitReg_loop
       001AF 0E83     1     JBS  _STATUS , Z 
       001B0 15AB     1     JMP  INITREG_LOOP ,
    44 001B1      C        InitReg_loop1:
    45 001B1 00C0 C        	CLR	_R0
    46 001B2 0544 C        	INC	_RSR
    47            C      M 	ANDA	_RSR,@(0x1f)
       001B3 181F     1     MOV A,@( 31 )
       001B4 0284     1     AND A, _RSR 
    48            C      M 	JPNZ	InitReg_loop1
       001B5 0E83     1     JBS  _STATUS , Z 
       001B6 15B1     1     JMP  INITREG_LOOP1 ,
    49 001B7 0404 C        	MOV	A,_RSR
    50            C      M 	JPZ	InitReg_ret
       001B8 0C83     1     JBC  _STATUS , Z 
       001B9 15BD     1     JMP  INITREG_RET ,
    51            C      M 	ADD	_RSR,@(0x20)
       001BA 1820     1     MOV A,@( 32 )
       001BB 03C4     1     ADD  _RSR ,A
    52 001BC 15B1 C        	JMP	InitReg_loop1
    53 001BD      C        InitReg_ret:
    54 001BD 0012 C        	RET
    55            C        
    56 001BE      C        InitPort:
    57            C      M 	IOW	_IOCA,@(0x40)		; p8L for segment prot, p8H for normal IO port, block 0
       001BE 1840     1     MOV A,@( 64 )
       001BF 000A     1     IOW  _IOCA ,
    58            C      M 	IOW	_IOCE,@(0x3c)		; p9 for normal IO prot, P6 for common port, Lcd contrast
       001C0 183C     1     MOV A,@( 60 )
       001C1 000E     1     IOW  _IOCE ,
    59            C      M 	IOW	_IOC6,@(0xff)		; p6 for input
       001C2 18FF     1     MOV A,@( 255 )
       001C3 0006     1     IOW  _IOC6 ,
    60            C      M 	IOW	_IOC7,@(0xcf)
       001C4 18CF     1     MOV A,@( 207 )
       001C5 0007     1     IOW  _IOC7 ,
    61            C      M 	IOW	_IOC8,@(0xb0)
       001C6 18B0     1     MOV A,@( 176 )
       001C7 0008     1     IOW  _IOC8 ,
    62            C      M 	IOW	_IOC9,@(0x00)
       001C8 1800     1     MOV A,@( 0 )
       001C9 0009     1     IOW  _IOC9 ,
    63            C      M 	MOV	_P7,@(0xff)
       001CA 18FF     1     MOV A,@( 255 )
       001CB 0047     1     MOV  _P7 ,A
    64            C      M 	MOV	_P8,@(0x00)
       001CC 1800     1     MOV A,@( 0 )
       001CD 0048     1     MOV  _P8 ,A
    65            C      M 	MOV	_P9,@(0x02)
       001CE 1802     1     MOV A,@( 2 )
       001CF 0049     1     MOV  _P9 ,A
    66            C      M 	IOW	_IOCD,@(0x00)
       001D0 1800     1     MOV A,@( 0 )
       001D1 000D     1     IOW  _IOCD ,
    67 001D2 0012 C        	RET
    68            C        
    69 001D3      C        InitIntermit:
    70 001D3 0B83 C        	BS	_STATUS,PG
    71            C      M 	IOW	_IOCB,@(0x00)
       001D4 1800     1     MOV A,@( 0 )
       001D5 000B     1     IOW  _IOCB ,
    72            C      M 	IOW	_IOCC,@(0xdf)
       001D6 18DF     1     MOV A,@( 223 )
       001D7 000C     1     IOW  _IOCC ,
    73            C      M 	IOW	_IOCE,@(0x0C)
       001D8 180C     1     MOV A,@( 12 )
       001D9 000E     1     IOW  _IOCE ,
    74 001DA 0983 C        	BC	_STATUS,PG
    75 001DB 1825 C        	MOV	A,@(0x25)
    76 001DC 0002 C        	CONTW
    77            C      M 	MOV	_TCC,@(0x00)
       001DD 1800     1     MOV A,@( 0 )
       001DE 0041     1     MOV  _TCC ,A
    78            C      M 	IOW	_IOCF,@(0x71)
       001DF 1871     1     MOV A,@( 113 )
       001E0 000F     1     IOW  _IOCF ,
    79 001E1 0012 C        	RET
    80            C        
    81 001E2      C        InitData:
    82            C      M 	MOV	hardware,@(0x80)
       001E2 1880     1     MOV A,@( 128 )
       001E3 005F     1     MOV  HARDWARE ,A
    83            C      M 	BANK	1
       001E4 0B84     1     BS  _RAM , 6 
       001E5 09C4     1     BC  _RAM , 7 
    84 001E6 00E6 C        	CLR	r1_rtc_second
    85            C      M 	MOV	r1_rtc_minute,@(DEFAULT_minute)
       001E7 1800     1     MOV A,@( DEFAULT_MINUTE )
       001E8 0067     1     MOV  R1_RTC_MINUTE ,A
    86            C      M 	MOV	r1_rtc_hour,@(DEFAULT_hour)
       001E9 1800     1     MOV A,@( DEFAULT_HOUR )
       001EA 0068     1     MOV  R1_RTC_HOUR ,A
    87            C      M 	MOV	r1_rtc_day,@(DEFAULT_day)
       001EB 1801     1     MOV A,@( DEFAULT_DAY )
       001EC 006A     1     MOV  R1_RTC_DAY ,A
    88 001ED 0075 C        	MOV	r1_day,A
    89            C      M 	MOV	r1_rtc_month,@(DEFAULT_month)
       001EE 1801     1     MOV A,@( DEFAULT_MONTH )
       001EF 006B     1     MOV  R1_RTC_MONTH ,A
    90 001F0 0076 C        	MOV	r1_month,A
    91            C      M 	MOV	r1_rtc_year,@(DEFAULT_year)
       001F1 1808     1     MOV A,@( DEFAULT_YEAR )
       001F2 006C     1     MOV  R1_RTC_YEAR ,A
    92 001F3 0077 C        	MOV	r1_year,A
    93            C      M 	MOV	r1_rtc_century,@(DEFAULT_century)
       001F4 1814     1     MOV A,@( DEFAULT_CENTURY )
       001F5 006D     1     MOV  R1_RTC_CENTURY ,A
    94 001F6 0078 C        	MOV	r1_century,A
    95            C      M 	LCALL	LibWeekCheck
                      2  M  PAGE #( LIBWEEKCHECK ),
       001F7 1E81     2     PAGE ( LIBWEEKCHECK / 1024 ),
       001F8 12DE     1     CALL ( LIBWEEKCHECK % 1024 ),
                      2  M  PAGE #( $ ),
       001F9 1E80     2     PAGE ( $ / 1024 ),
    96 001FA 0069 C        	MOV	r1_rtc_week,A
    97            C        
    98            C      M 	LCALL	LibDefaultSetting
                      2  M  PAGE #( LIBDEFAULTSETTING ),
       001FB 1E81     2     PAGE ( LIBDEFAULTSETTING / 1024 ),
       001FC 1353     1     CALL ( LIBDEFAULTSETTING % 1024 ),
                      2  M  PAGE #( $ ),
       001FD 1E80     2     PAGE ( $ / 1024 ),
    99            C        
   100            C      M 	BLOCK	4
       001FE 1848     1     MOV A,@((( 4 << 1 )+ VALUE_IOCA ))
       001FF 000A     1     IOW  _IOCA ,
   101 00200 00CC C        	CLR	_RC
   102            C      M 	MOV	_RD,@(0x41)
       00201 1841     1     MOV A,@( 65 )
       00202 004D     1     MOV  _RD ,A
   103 00203 0012 C        	RET
   104            C        
   105 00204      C        InitLcd:
   106            C      M 	MOV	_RE,@(0x00)
       00204 1800     1     MOV A,@( 0 )
       00205 004E     1     MOV  _RE ,A
   107            C      M 	MOV	_RE,@(0x02)
       00206 1802     1     MOV A,@( 2 )
       00207 004E     1     MOV  _RE ,A
   108            C      M 	MOV	_RE,@(0x06)
       00208 1806     1     MOV A,@( 6 )
       00209 004E     1     MOV  _RE ,A
   109            C        	;OR	_RE,@(0x06)
   110            C      M 	BANK	3
       0020A 0B84     1     BS  _RAM , 6 
       0020B 0BC4     1     BS  _RAM , 7 
   111 0020C 0434 C        	MOV	A,r3_contrast
   112            C      M 	PAGE	#(LibLcdContrast)
       0020D 1E81     1     PAGE ( LIBLCDCONTRAST / 1024 ),
   113 0020E 1087 C        	CALL	LibLcdContrast
   114            C        	
   115            C      M 	PAGE	#(VgaBlank)
       0020F 1E83     1     PAGE ( VGABLANK / 1024 ),
   116 00210 1800 C        	MOV	A,@(0)
   117 00211 10E2 C        	CALL	VgaBlank
   118 00212 1801 C        	MOV	A,@(1)
   119 00213 10E2 C        	CALL	VgaBlank
   120 00214 1802 C        	MOV	A,@(2)
   121 00215 10E2 C        	CALL	VgaBlank
   122 00216 1803 C        	MOV	A,@(3)
   123 00217 10E2 C        	CALL	VgaBlank
   124            C      M 	PAGE	#($)
       00218 1E80     1     PAGE ( $ / 1024 ),
   125            C        
   126 00219      C        InitLcd_blank:
   127 00219 00D5 C        	CLR	cnt
   128 0021A      C        InitLcd_blank_loop:
   129            C      M 	IOW	_IOCB,cnt
       0021A 0415     1     MOV A, CNT 
       0021B 000B     1     IOW  _IOCB ,
   130            C      M 	IOW	_IOCC,@(0x00)
       0021C 1800     1     MOV A,@( 0 )
       0021D 000C     1     IOW  _IOCC ,
   131 0021E 0555 C        	INC	cnt
   132            C      M 	SUBA	cnt,@(128)
       0021F 1880     1     MOV A,@( 128 )
       00220 0115     1     SUB A, CNT 
   133            C      M 	JPNZ	InitLcd_blank_loop
       00221 0E83     1     JBS  _STATUS , Z 
       00222 161A     1     JMP  INITLCD_BLANK_LOOP ,
   134            C        /*
   135            C        InitLcd_test:	
   136            C        	MOV	cnt,@(0x00)
   137            C        InitLcd_test_loop:
   138            C        	IOW	_IOCB,cnt
   139            C        	IOW	_IOCC,@(0x01)
   140            C        	INC	cnt
   141            C        	SUBA	cnt,@(0x80)
   142            C        	JPNZ	InitLcd_test_loop
   143            C        */
   144            C        
   145            C        /*
   146            C        	IOW	_IOCB,@(10)
   147            C        	IOW	_IOCC,@(0xff)
   148            C        	IOW	_IOCB,@(0x40+10)
   149            C        	IOW	_IOCC,@(0xff)
   150            C        
   151            C        	IOW	_IOCB,@(18)
   152            C        	IOW	_IOCC,@(0xff)
   153            C        	IOW	_IOCB,@(0x40+18)
   154            C        	IOW	_IOCC,@(0xff)
   155            C        
   156            C        	IOW	_IOCB,@(28)
   157            C        	IOW	_IOCC,@(0xff)
   158            C        	IOW	_IOCB,@(0x40+28)
   159            C        	IOW	_IOCC,@(0xff)
   160            C        */
   161 00223 0012 C        	RET
   162            C        
   163            C        
   202                     INCLUDE	"library.asm"
     1            C        
     2            C        ORG	0x0400
     3            C        
     4            C        /*************************************************
     5            C        LibPushStack
     6            C        input:	acc	-- 要压栈的内容
     7            C        output:	acc	-- 压栈的内容
     8            C        说明：	软件压栈，放在 block 9(最后一个block)里面
     9            C        *************************************************/
    10 00400      C        LibPushProgram:
    11 00400 0ADD C        	BS	sys_flag,PROGRAMINIT
    12 00401 00D8 C        	CLR	program
    13 00402      C        LibPushStack:
    14 00402 1024 C        	CALL	LibStoreStack
    15            C        	
    16 00403 054D C        	INC	_RD
    17            C      M 	MOV	_RC,_RD
       00404 040D     1     MOV A, _RD 
       00405 004C     1     MOV  _RC ,A
    18            C      M 	MOV	_RD,int_acc
       00406 0410     1     MOV A, INT_ACC 
       00407 004D     1     MOV  _RD ,A
    19            C        	
    20 00408 102F C        	CALL	LibResumeStack
    21 00409 0012 C        	RET
    22            C        
    23            C        /*************************************************
    24            C        LibPopStack
    25            C        input:	none	-- 出栈1个
    26            C        output:	acc	-- 出栈的值
    27            C        说明：	软件出栈，放在 block 9(最后一个block)里面
    28            C        *************************************************/
    29 0040A      C        LibPopProgram:
    30 0040A 0B1D C        	BS	sys_flag,PROGRAMREIN
    31 0040B 00D8 C        	CLR	program
    32 0040C      C        LibPopStack:
    33 0040C 1024 C        	CALL	LibStoreStack
    34            C        	
    35 0040D 00D0 C        	CLR	int_acc
    36 0040E 040D C        	MOV	A,_RD
    37            C      M 	JPZ	LibPopStack_1
       0040F 0C83     1     JBC  _STATUS , Z 
       00410 1416     1     JMP  LIBPOPSTACK_1 ,
    38 00411 004C C        	MOV	_RC,A
    39            C      M 	MOV	int_acc,_RD
       00412 040D     1     MOV A, _RD 
       00413 0050     1     MOV  INT_ACC ,A
    40 00414 00CC C        	CLR	_RC
    41 00415 01CD C        	DEC	_RD
    42 00416      C        LibPopStack_1:
    43 00416 102F C        	CALL	LibResumeStack
    44 00417 0012 C        	RET
    45            C        
    46            C        /*************************************************
    47            C        LibGetStack
    48            C        input:	acc	-- 要获取的堆栈位置 (相对于栈顶，0为栈顶)
    49            C        output:	acc	-- 栈内容
    50            C        说明：	软件栈值，放在 block 9(最后一个block)里面
    51            C        *************************************************/
    52 00418      C        LibGetStack:
    53 00418 1024 C        	CALL	LibStoreStack
    54            C        	
    55            C      M 	SUBA	_RD,int_acc
       00419 0410     1     MOV A, INT_ACC 
       0041A 010D     1     SUB A, _RD 
    56 0041B 004C C        	MOV	_RC,A
    57            C      M 	MOV	int_acc,_RD
       0041C 040D     1     MOV A, _RD 
       0041D 0050     1     MOV  INT_ACC ,A
    58            C        	
    59 0041E 102F C        	CALL	LibResumeStack
    60 0041F 0012 C        	RET
    61            C        
    62 00420      C        LibClearStack:
    63 00420 1024 C        	CALL	LibStoreStack
    64 00421 00CD C        	CLR	_RD
    65 00422 102F C        	CALL	LibResumeStack
    66 00423 0012 C        	RET
    67            C        /*************************************************
    68            C        LibStoreStack LibResumeStack
    69            C        说明：	专供LibPushStack、LibPopStack、LibGetStack调用
    70            C        *************************************************/
    71 00424      C        LibStoreStack:
    72 00424 0011 C        	DISI
    73 00425 0050 C        	MOV	int_acc,A
    74            C      M 	MOV	int_status,_RC
       00426 040C     1     MOV A, _RC 
       00427 0051     1     MOV  INT_STATUS ,A
    75 00428 001A C        	IOR	_IOCA
    76 00429 1A1E C        	AND	A,@(0x1e)
    77 0042A 0052 C        	MOV	int_rsr,A
    78            C      M 	BLOCK	9
       0042B 1852     1     MOV A,@((( 9 << 1 )+ VALUE_IOCA ))
       0042C 000A     1     IOW  _IOCA ,
    79 0042D 00CC C        	CLR	_RC
    80 0042E 0012 C        	RET
    81 0042F      C        LibResumeStack:
    82 0042F 001A C        	IOR	_IOCA
    83 00430 1AE1 C        	AND	A,@(0xe1)
    84 00431 0212 C        	OR	A,int_rsr
    85 00432 000A C        	IOW	_IOCA
    86            C      M 	MOV	_RC,int_status
       00433 0411     1     MOV A, INT_STATUS 
       00434 004C     1     MOV  _RC ,A
    87 00435 0410 C        	MOV	A,int_acc
    88 00436 0013 C        	RETI
    89            C        
    90            C        
    91            C        /*************************************************
    92            C        LibMathHexToBcd
    93            C        input:	ax
    94            C        output:	ax,exa
    95            C        说明：	十六进制转十进制，影响：ax,exa,cnt,bx,exb
    96            C        *************************************************/
    97 00437      C        LibMathHexToBcd:
    98 00437 00D6 C        	CLR	bx
    99 00438 00D4 C        	CLR	exa
   100            C      M 	MOV	cnt,@(8)
       00439 1808     1     MOV A,@( 8 )
       0043A 0055     1     MOV  CNT ,A
   101            C        
   102 0043B      C        LibMathHexToBcd_loop:
   103            C      M 	ADDA	bx,@(0x03)
       0043B 1803     1     MOV A,@( 3 )
       0043C 0396     1     ADD A, BX 
   104 0043D 0057 C        	MOV	exb,A
   105            C      M 	JPNB	exb,3,$+2
       0043E 0ED7     1     JBS  EXB , 3 
       0043F 1441     1     JMP ( $ + 2 ),
   106 00440 0056 C        	MOV	bx,A
   107            C        	
   108            C      M 	ADDA	bx,@(0x30)
       00441 1830     1     MOV A,@( 48 )
       00442 0396     1     ADD A, BX 
   109 00443 0057 C        	MOV	exb,A
   110            C      M 	JPNB	exb,7,$+2
       00444 0FD7     1     JBS  EXB , 7 
       00445 1447     1     JMP ( $ + 2 ),
   111 00446 0056 C        	MOV	bx,A
   112            C        	
   113            C      M 	CLRC
       00447 0803     1     BC  _STATUS , C 
   114 00448 06D3 C        	RLC	ax
   115 00449 06D6 C        	RLC	bx
   116 0044A 06D4 C        	RLC	exa
   117            C        	
   118 0044B 05D5 C        	DJZ	cnt
   119 0044C 143B C        	JMP	LibMathHexToBcd_loop
   120            C      M 	MOV	ax,bx
       0044D 0416     1     MOV A, BX 
       0044E 0053     1     MOV  AX ,A
   121 0044F 0012 C        	RET
   122            C        
   123            C        /*************************************************
   124            C        LibMathBcdToHex
   125            C        input:	ax
   126            C        output:	ax,exa
   127            C        说明：	十进制转十六进制，影响：ax,exa,cnt,bx,exb
   128            C        *************************************************/
   129 00450      C        LibMathBcdToHex:
   130 00450 00D6 C        	CLR	bx
   131            C      M 	MOV	cnt,@(8)
       00451 1808     1     MOV A,@( 8 )
       00452 0055     1     MOV  CNT ,A
   132            C        
   133 00453      C        LibMathBcdToHex_loop:
   134            C      M 	CLRC
       00453 0803     1     BC  _STATUS , C 
   135 00454 0653 C        	RRC	ax
   136 00455 0656 C        	RRC	bx
   137            C        	
   138            C      M 	JPNB	ax,3,$+3
       00456 0ED3     1     JBS  AX , 3 
       00457 145A     1     JMP ( $ + 3 ),
   139            C      M 	SUB	ax,@(0x03)
       00458 1803     1     MOV A,@( 3 )
       00459 0153     1     SUB  AX ,A
   140            C      M 	JPNB	ax,7,$+3
       0045A 0FD3     1     JBS  AX , 7 
       0045B 145E     1     JMP ( $ + 3 ),
   141            C      M 	SUB	ax,@(0x30)
       0045C 1830     1     MOV A,@( 48 )
       0045D 0153     1     SUB  AX ,A
   142            C        	
   143 0045E 05D5 C        	DJZ	cnt
   144 0045F 1453 C        	JMP	LibMathBcdToHex_loop
   145            C      M 	MOV	ax,bx
       00460 0416     1     MOV A, BX 
       00461 0053     1     MOV  AX ,A
   146 00462 0012 C        	RET
   147            C        
   148            C        /*************************************************
   149            C        LibMathHexMul
   150            C        input:	ax,exa
   151            C        output:	ax,exa
   152            C        说明：	十六进制乘法，影响：ax,exa,cnt,bx,exb
   153            C        *************************************************/
   154 00463      C        LibMathHexMul:
   155 00463 00D6 C        	CLR	bx
   156 00464 00D7 C        	CLR	exb
   157            C      M 	MOV	cnt,@(8)
       00465 1808     1     MOV A,@( 8 )
       00466 0055     1     MOV  CNT ,A
   158 00467      C        LibMathHexMul_loop:
   159 00467 06D6 C        	RLC	bx
   160 00468 06D7 C        	RLC	exb
   161 00469 06D4 C        	RLC	exa
   162            C      M 	JPNC	$+6
       0046A 0E03     1     JBS  _STATUS , C 
       0046B 1471     1     JMP ( $ + 6 ),
   163            C      M 	ADD	bx,ax
       0046C 0413     1     MOV A, AX 
       0046D 03D6     1     ADD  BX ,A
   164            C      M 	JPNC	$+2
       0046E 0E03     1     JBS  _STATUS , C 
       0046F 1471     1     JMP ( $ + 2 ),
   165 00470 0557 C        	INC	exb
   166 00471 05D5 C        	DJZ	cnt
   167 00472 1467 C        	JMP	LibMathHexMul_loop
   168            C      M 	MOV	ax,bx
       00473 0416     1     MOV A, BX 
       00474 0053     1     MOV  AX ,A
   169            C      M 	MOV	exa,exb
       00475 0417     1     MOV A, EXB 
       00476 0054     1     MOV  EXA ,A
   170 00477 0012 C        	RET
   171            C        	
   172 00478 0012 C        	RET
   173            C        
   174            C        
   175            C        
   176            C        /*************************************************
   177            C        LibStoreCursor	改变并保存光标
   178            C        *************************************************/
   179            C        
   180 00479      C        LibStoreCursor:
   181            C        	;OR	A,@(0x80)
   182 00479 0053 C        	MOV	ax,A
   183            C      M 	MOV	exa,cursor
       0047A 0419     1     MOV A, CURSOR 
       0047B 0054     1     MOV  EXA ,A
   184            C      M 	MOV	cursor,ax
       0047C 0413     1     MOV A, AX 
       0047D 0059     1     MOV  CURSOR ,A
   185            C      M 	MOV	tmr_cursor,@(600/4)
       0047E 1896     1     MOV A,@(( 600 / 4 ))
       0047F 005A     1     MOV  TMR_CURSOR ,A
   186            C        	
   187 00480 0714 C        	SWAPA	exa
   188 00481 1A03 C        	AND	A,@(0x03)
   189            C      M 	JPZ	LibStoreCursor_ret
       00482 0C83     1     JBC  _STATUS , Z 
       00483 1486     1     JMP  LIBSTORECURSOR_RET ,
   190            C      M 	LJMP	LcdDraw
                      2  M  PAGE #( LCDDRAW ),
       00484 1E82     2     PAGE ( LCDDRAW / 1024 ),
       00485 1412     1     JMP ( LCDDRAW % 1024 ),
   191 00486      C        LibStoreCursor_ret:
   192 00486 0012 C        	RET
   193            C        
   194            C        
   195            C        /*************************************************
   196            C        LibLcdContrast	改变LCD对比度
   197            C        *************************************************/
   198 00487      C        LibLcdContrast:
   199            C        IF	OTP == 1
   200 00487 1FFF C        	ADD	A,@(256-1)
   201            C        ELSE
   202            C        	ADD	A,@(256-2)
   203            C        ENDIF
   204 00488 0053 C        	MOV	ax,A
   205 00489 06D3 C        	RLC	ax
   206 0048A 06D3 C        	RLC	ax
   207            C      M 	AND	ax,@(0x1c)
       0048B 181C     1     MOV A,@( 28 )
       0048C 02D3     1     AND  AX ,A
   208 0048D 0011 C        	DISI
   209 0048E 001E C        	IOR	_IOCE
   210 0048F 1AE3 C        	AND	A,@(0xe3)
   211 00490 0213 C        	OR	A,ax
   212 00491 000E C        	IOW	_IOCE
   213 00492 0013 C        	RETI
   214            C        
   215            C        
   216 00493      C        LibInitDialType:
   217            C      M 	BLOCK	3
       00493 1846     1     MOV A,@((( 3 << 1 )+ VALUE_IOCA ))
       00494 000A     1     IOW  _IOCA ,
   218 00495 00CC C        	CLR	_RC
   219            C      M 	JPNB	sys_flag,DIALTYPE,$+2
       00496 0F5D     1     JBS  SYS_FLAG , DIALTYPE 
       00497 1499     1     JMP ( $ + 2 ),
   220 00498 0B4D C        	BS	_RD,5
   221 00499 0012 C        	RET
   222            C        
   223            C        /*************************************************
   224            C        LibStoreDialNumber	保存待拨号码
   225            C        input:	acch	-- dial number(ASCII)
   226            C        output:	acch	-- 0	error
   227            C        		   !0	ok
   228            C        affect: ax, block 3, _RC
   229            C        note:
   230            C        	保存待拨号码，输入必须是ASCII值，不对输入值校验。
   231            C        	首先检查缓冲区是否满，如果满，不保存值，并返回0。
   232            C        	将输入值存入当前拨号存指针指向的位置，并存指针+1。
   233            C        *************************************************/
   234            C        
   235 0049A      C        LibStoreDialNumber:
   236 0049A 0053 C        	MOV	ax,A
   237 0049B 0413 C        	MOV	A,ax
   238            C      M 	JPZ	LibStoreDialNumber_ret
       0049C 0C83     1     JBC  _STATUS , Z 
       0049D 14BC     1     JMP  LIBSTOREDIALNUMBER_RET ,
   239            C      M 	BLOCK	3
       0049E 1846     1     MOV A,@((( 3 << 1 )+ VALUE_IOCA ))
       0049F 000A     1     IOW  _IOCA ,
   240            C        	
   241 004A0 00CC C        	CLR	_RC
   242 004A1 0BCD C        	BS	_RD,7
   243            C        	
   244            C      M 	MOV	_RC,@(1)
       004A2 1801     1     MOV A,@( 1 )
       004A3 004C     1     MOV  _RC ,A
   245            C      M 	SUBA	_RD,@(64)
       004A4 1840     1     MOV A,@( 64 )
       004A5 010D     1     SUB A, _RD 
   246            C      M 	JPC	LibStoreDialNumber_full
       004A6 0C03     1     JBC  _STATUS , C 
       004A7 14BB     1     JMP  LIBSTOREDIALNUMBER_FULL ,
   247 004A8 054D C        	INC	_RD
   248            C      M 	ADDA	_RD,@(2-1)
       004A9 1801     1     MOV A,@(( 2 - 1 ))
       004AA 038D     1     ADD A, _RD 
   249 004AB 004C C        	MOV	_RC,A
   250            C      M 	MOV	_RD,ax				; 将号码存入拨号区
       004AC 0413     1     MOV A, AX 
       004AD 004D     1     MOV  _RD ,A
   251            C        		
   252            C      M 	MOV	_RC,@(66)
       004AE 1842     1     MOV A,@( 66 )
       004AF 004C     1     MOV  _RC ,A
   253            C      M 	SUBA	_RD,@(32)			; 检查重拨号码区的长度
       004B0 1820     1     MOV A,@( 32 )
       004B1 010D     1     SUB A, _RD 
   254            C      M 	JPC	LibStoreDialNumber_1		; 到32位即不再保存至重拨号码区
       004B2 0C03     1     JBC  _STATUS , C 
       004B3 14B9     1     JMP  LIBSTOREDIALNUMBER_1 ,
   255 004B4 054D C        	INC	_RD
   256            C      M 	ADD	_RC,_RD
       004B5 040D     1     MOV A, _RD 
       004B6 03CC     1     ADD  _RC ,A
   257            C      M 	MOV	_RD,ax
       004B7 0413     1     MOV A, AX 
       004B8 004D     1     MOV  _RD ,A
   258            C        
   259 004B9      C        LibStoreDialNumber_1:
   260 004B9 0413 C        	MOV	A,ax
   261 004BA 14BC C        	JMP	LibStoreDialNumber_ret
   262 004BB      C        LibStoreDialNumber_full:
   263 004BB 1800 C        	MOV	A,@(0)
   264 004BC      C        LibStoreDialNumber_ret:
   265 004BC 0012 C        	RET
   266            C        
   267            C        /*************************************************
   268            C        LibStoreRedialNumber	保存重拨号码
   269            C        input:	none
   270            C        output:	none
   271            C        affect: ax, block 3, _RC
   272            C        note:
   273            C        	只可以在挂机或者flash时才可以将重拨保存。
   274            C        	保存之前必须将保存区清0。
   275            C        附加:
   276            C        	保存完毕之后初始化重拨区和拨号区
   277            C        *************************************************/
   278 004BD      C        LibStoreRedialNumber:
   279            C      M 	BLOCK	3
       004BD 1846     1     MOV A,@((( 3 << 1 )+ VALUE_IOCA ))
       004BE 000A     1     IOW  _IOCA ,
   280            C      M 	MOV	_RC,@(66)
       004BF 1842     1     MOV A,@( 66 )
       004C0 004C     1     MOV  _RC ,A
   281 004C1 040D C        	MOV	A,_RD
   282            C      M 	JPZ	LibStoreRedialNumber_ret	; 重拨号码为空，不改变重拨号码。
       004C2 0C83     1     JBC  _STATUS , Z 
       004C3 14D3     1     JMP  LIBSTOREREDIALNUMBER_RET ,
   283            C      M 	MOV	_RC,@(99)
       004C4 1863     1     MOV A,@( 99 )
       004C5 004C     1     MOV  _RC ,A
   284            C      M 	MOV	cnt,@(32)
       004C6 1820     1     MOV A,@( 32 )
       004C7 0055     1     MOV  CNT ,A
   285 004C8 00D3 C        	CLR	ax
   286 004C9 111D C        	CALL	LibClearRam
   287            C      M 	MOV	ax,@(67)
       004CA 1843     1     MOV A,@( 67 )
       004CB 0053     1     MOV  AX ,A
   288            C      M 	MOV	bx,@(99)
       004CC 1863     1     MOV A,@( 99 )
       004CD 0056     1     MOV  BX ,A
   289            C      M 	MOV	_RC,@(66)
       004CE 1842     1     MOV A,@( 66 )
       004CF 004C     1     MOV  _RC ,A
   290            C      M 	MOV	cnt,_RD
       004D0 040D     1     MOV A, _RD 
       004D1 0055     1     MOV  CNT ,A
   291 004D2 1126 C        	CALL	LibCopyRam
   292 004D3      C        LibStoreRedialNumber_ret:
   293 004D3 00CC C        	CLR	_RC
   294 004D4 00CD C        	CLR	_RD				; 拨号状态清0
   295 004D5 054C C        	INC	_RC
   296 004D6 00CD C        	CLR	_RD				; 拨号指针清0
   297            C      M 	MOV	_RC,@(66)
       004D7 1842     1     MOV A,@( 66 )
       004D8 004C     1     MOV  _RC ,A
   298 004D9 00CD C        	CLR	_RD				; 重拨指针清0
   299 004DA 0012 C        	RET
   300            C        
   301            C        	
   302            C        
   303 004DB      C        LibHookCheck:			; 只可以在挂机状态调用
   304            C      M 	XORA	sys_msg,@(WM_HANDSET)
       004DB 1806     1     MOV A,@( WM_HANDSET )
       004DC 031B     1     XOR A, SYS_MSG 
   305            C      M 	JPZ	LibHookCheck_handset
       004DD 0C83     1     JBC  _STATUS , Z 
       004DE 14E6     1     JMP  LIBHOOKCHECK_HANDSET ,
   306            C      M 	JPNB	hardware,DTAMPOWER,LibHookCheck_ret
       004DF 0E1F     1     JBS  HARDWARE , DTAMPOWER 
       004E0 14E5     1     JMP  LIBHOOKCHECK_RET ,
   307            C      M 	XORA	sys_msg,@(WM_KEYPRESS)
       004E1 1801     1     MOV A,@( WM_KEYPRESS )
       004E2 031B     1     XOR A, SYS_MSG 
   308            C      M 	JPZ	LibHookCheck_key
       004E3 0C83     1     JBC  _STATUS , Z 
       004E4 14EB     1     JMP  LIBHOOKCHECK_KEY ,
   309 004E5      C        LibHookCheck_ret:
   310 004E5 1C00 C        	RETL	@(0)
   311 004E6      C        LibHookCheck_handset:
   312            C      M 	XORA	sys_data,@(HANDSET_OFF)
       004E6 1801     1     MOV A,@( HANDSET_OFF )
       004E7 031C     1     XOR A, SYS_DATA 
   313            C      M 	JPNZ	LibHookCheck_ret
       004E8 0E83     1     JBS  _STATUS , Z 
       004E9 14E5     1     JMP  LIBHOOKCHECK_RET ,
   314 004EA 1C01 C        	RETL	@(1)
   315 004EB      C        LibHookCheck_key:
   316            C      M 	XORA	sys_data,@(KEY_SPK)
       004EB 1817     1     MOV A,@( KEY_SPK )
       004EC 031C     1     XOR A, SYS_DATA 
   317            C      M 	JPNZ	LibHookCheck_ret
       004ED 0E83     1     JBS  _STATUS , Z 
       004EE 14E5     1     JMP  LIBHOOKCHECK_RET ,
   318 004EF 0B9D C        	BS	sys_flag,SPKPHONE
   319 004F0 1C01 C        	RETL	@(1)
   320            C        
   321            C        
   322            C        
   323 004F1      C        LibDisplayDialingStatus:			; 显示拨号的状态，可以只在拨号状态发生改变时调用。
   324            C      M 	BANK	2
       004F1 0984     1     BC  _RAM , 6 
       004F2 0BC4     1     BS  _RAM , 7 
   325            C        	
   326 004F3 09B4 C        	BC	r2_stamp1,6
   327 004F4 09F4 C        	BC	r2_stamp1,7
   328            C      M 	JPB	hardware,HANDSET,$+2
       004F5 0DDF     1     JBC  HARDWARE , HANDSET 
       004F6 14F8     1     JMP ( $ + 2 ),
   329 004F7 0BF4 C        	BS	r2_stamp1,7
   330            C      M 	JPNB	sys_flag,SPKPHONE,$+2
       004F8 0F9D     1     JBS  SYS_FLAG , SPKPHONE 
       004F9 14FB     1     JMP ( $ + 2 ),
   331 004FA 0BB4 C        	BS	r2_stamp1,6
   332 004FB 0BDD C        	BS	sys_flag,STAMP
   333            C        	
   334            C      M 	BLOCK	3
       004FC 1846     1     MOV A,@((( 3 << 1 )+ VALUE_IOCA ))
       004FD 000A     1     IOW  _IOCA ,
   335 004FE 00CC C        	CLR	_RC
   336            C      M 	JPNB	_RD,4,$+6
       004FF 0F0D     1     JBS  _RD , 4 
       00500 1506     1     JMP ( $ + 6 ),
   337            C      M 	MOV	r2_ax,@(STR_MUTE)
       00501 1822     1     MOV A,@( STR_MUTE )
       00502 0060     1     MOV  R2_AX ,A
   338            C      M 	MOV	r2_bx,@(0x02)
       00503 1802     1     MOV A,@( 2 )
       00504 0063     1     MOV  R2_BX ,A
   339 00505 150A C        	JMP	$+5
   340            C      M 	MOV	r2_ax,@(STR_BLANK)
       00506 1823     1     MOV A,@( STR_BLANK )
       00507 0060     1     MOV  R2_AX ,A
   341            C      M 	MOV	r2_bx,@(0x01)
       00508 1801     1     MOV A,@( 1 )
       00509 0063     1     MOV  R2_BX ,A
   342            C      M 	JPB	sys_flag,SPKPHONE,$+2
       0050A 0D9D     1     JBC  SYS_FLAG , SPKPHONE 
       0050B 150D     1     JMP ( $ + 2 ),
   343 0050C 00E3 C        	CLR	r2_bx
   344            C        	
   345            C      M 	PAGE	#(VGA)
       0050D 1E83     1     PAGE ( VGA / 1024 ),
   346            C        	
   347 0050E 1881 C        	MOV	A,@(STYLE_LEFT)
   348 0050F 101C C        	CALL	VgaChar
   349 00510 0420 C        	MOV	A,r2_ax
   350 00511 114B C        	CALL	VgaString
   351 00512 1800 C        	MOV	A,@(0)
   352 00513 101C C        	CALL	VgaChar
   353 00514 1078 C        	CALL	VgaDrawChar
   354            C        	
   355            C      M 	PAGE	#(IIC)
       00515 1E80     1     PAGE ( IIC / 1024 ),
   356 00516 1850 C        	MOV	A,@(0x50)
   357 00517 10A8 C        	CALL	IicSendData
   358 00518 0423 C        	MOV	A,r2_bx
   359 00519 10A8 C        	CALL	IicSendData
   360 0051A 10B3 C        	CALL	IicSer
   361            C      M 	PAGE	#($)
       0051B 1E81     1     PAGE ( $ / 1024 ),
   362 0051C 0012 C        	RET
   363            C        
   364            C        
   365            C        
   366            C        
   367            C        
   368            C        /*************************************************
   369            C        ax:	填充的值
   370            C        cnt:	长度
   371            C        _RC:	起始地址
   372            C        *************************************************/
   373 0051D      C        LibClearRam:
   374 0051D 0415 C        	MOV	A,cnt
   375            C      M 	JPZ	LibClearRam_ret
       0051E 0C83     1     JBC  _STATUS , Z 
       0051F 1525     1     JMP  LIBCLEARRAM_RET ,
   376            C      M 	MOV	_RD,ax
       00520 0413     1     MOV A, AX 
       00521 004D     1     MOV  _RD ,A
   377 00522 054C C        	INC	_RC
   378 00523 01D5 C        	DEC	cnt
   379 00524 151D C        	JMP	LibClearRam
   380 00525      C        LibClearRam_ret:
   381 00525 0012 C        	RET
   382            C        
   383            C        /*************************************************
   384            C        ax:	源地址
   385            C        bx:	目标地址
   386            C        cnt:	长度
   387            C        *************************************************/
   388 00526      C        LibCopyRam:
   389 00526 0415 C        	MOV	A,cnt
   390            C      M 	JPZ	LibCopyRam_ret
       00527 0C83     1     JBC  _STATUS , Z 
       00528 154C     1     JMP  LIBCOPYRAM_RET ,
   391            C      M 	SUBA	ax,bx
       00529 0416     1     MOV A, BX 
       0052A 0113     1     SUB A, AX 
   392            C      M 	JPZ	LibCopyRam_ret
       0052B 0C83     1     JBC  _STATUS , Z 
       0052C 154C     1     JMP  LIBCOPYRAM_RET ,
   393            C      M 	JPC	LibCopyRam_2
       0052D 0C03     1     JBC  _STATUS , C 
       0052E 153E     1     JMP  LIBCOPYRAM_2 ,
   394 0052F      C        LibCopyRam_1:				; 源地址小于目标地址
   395 0052F 01D5 C        	DEC	cnt
   396            C      M 	ADDA	ax,cnt
       00530 0415     1     MOV A, CNT 
       00531 0393     1     ADD A, AX 
   397 00532 004C C        	MOV	_RC,A
   398            C      M 	MOV	exa,_RD
       00533 040D     1     MOV A, _RD 
       00534 0054     1     MOV  EXA ,A
   399            C      M 	ADDA	bx,cnt
       00535 0415     1     MOV A, CNT 
       00536 0396     1     ADD A, BX 
   400 00537 004C C        	MOV	_RC,A
   401            C      M 	MOV	_RD,exa
       00538 0414     1     MOV A, EXA 
       00539 004D     1     MOV  _RD ,A
   402 0053A 0415 C        	MOV	A,cnt
   403            C      M 	JPNZ	LibCopyRam_1
       0053B 0E83     1     JBS  _STATUS , Z 
       0053C 152F     1     JMP  LIBCOPYRAM_1 ,
   404 0053D 154C C        	JMP	LibCopyRam_ret
   405 0053E      C        LibCopyRam_2:				; 源地址大于目标地址
   406 0053E 01D5 C        	DEC	cnt
   407            C      M 	MOV	_RC,ax
       0053F 0413     1     MOV A, AX 
       00540 004C     1     MOV  _RC ,A
   408            C      M 	MOV	exa,_RD
       00541 040D     1     MOV A, _RD 
       00542 0054     1     MOV  EXA ,A
   409            C      M 	MOV	_RC,bx
       00543 0416     1     MOV A, BX 
       00544 004C     1     MOV  _RC ,A
   410            C      M 	MOV	_RD,exa
       00545 0414     1     MOV A, EXA 
       00546 004D     1     MOV  _RD ,A
   411 00547 0553 C        	INC	ax
   412 00548 0556 C        	INC	bx
   413 00549 0415 C        	MOV	A,cnt
   414            C      M 	JPNZ	LibCopyRam_2
       0054A 0E83     1     JBS  _STATUS , Z 
       0054B 153E     1     JMP  LIBCOPYRAM_2 ,
   415 0054C      C        LibCopyRam_ret:
   416 0054C 0012 C        	RET
   417            C        
   418 0054D      C        LibDisplayStamp:
   419            C      M 	BANK	2
       0054D 0984     1     BC  _RAM , 6 
       0054E 0BC4     1     BS  _RAM , 7 
   420            C      M 	ANDA	r2_stamp1,@(0x3c)
       0054F 183C     1     MOV A,@( 60 )
       00550 02B4     1     AND A, R2_STAMP1 
   421 00551 0053 C        	MOV	ax,A
   422            C        	
   423            C      M 	BANK	3
       00552 0B84     1     BS  _RAM , 6 
       00553 0BC4     1     BS  _RAM , 7 
   424 00554 0428 C        	MOV	A,r3_newcall
   425            C      M 	JPZ	$+2
       00555 0C83     1     JBC  _STATUS , Z 
       00556 1558     1     JMP ( $ + 2 ),
   426 00557 0A13 C        	BS	ax,0
   427            C        	
   428 00558 00D4 C        	CLR	exa
   429            C      M 	JPB	r3_ogm,7,$+2			; DAM status
       00559 0DFC     1     JBC  R3_OGM , 7 
       0055A 155C     1     JMP ( $ + 2 ),
   430 0055B 0BD4 C        	BS	exa,7
   431            C      M 	JPNB	r3_ogm,6,$+2			; memory full
       0055C 0FBC     1     JBS  R3_OGM , 6 
       0055D 155F     1     JMP ( $ + 2 ),
   432 0055E 0B94 C        	BS	exa,6
   433 0055F 0437 C        	MOV	A,r3_ringvolume
   434            C      M 	JPNZ	$+2
       00560 0E83     1     JBS  _STATUS , Z 
       00561 1563     1     JMP ( $ + 2 ),
   435 00562 0A94 C        	BS	exa,2
   436            C        	
   437            C      M 	BANK	2
       00563 0984     1     BC  _RAM , 6 
       00564 0BC4     1     BS  _RAM , 7 
   438            C      M 	MOV	r2_stamp1,ax
       00565 0413     1     MOV A, AX 
       00566 0074     1     MOV  R2_STAMP1 ,A
   439            C      M 	MOV	r2_stamp2,exa
       00567 0414     1     MOV A, EXA 
       00568 0075     1     MOV  R2_STAMP2 ,A
   440 00569 00F6 C        	CLR	r2_stamp3
   441 0056A 0BDD C        	BS	sys_flag,STAMP
   442 0056B 1C00 C        	RETL	@(0)
   443            C        
   444 0056C      C        LibDisplayIdle:
   445            C      M 	BANK	3
       0056C 0B84     1     BS  _RAM , 6 
       0056D 0BC4     1     BS  _RAM , 7 
   446            C      M 	JPNB	r3_display,0,LibDisplayIdle_3
       0056E 0E25     1     JBS  R3_DISPLAY , 0 
       0056F 1573     1     JMP  LIBDISPLAYIDLE_3 ,
   447            C        
   448 00570 114D C        	CALL	LibDisplayStamp
   449            C        
   450            C      M 	BANK	3
       00571 0B84     1     BS  _RAM , 6 
       00572 0BC4     1     BS  _RAM , 7 
   451 00573      C        LibDisplayIdle_3:
   452            C      M 	JPNB	r3_display,3,LibDisplayIdle_4
       00573 0EE5     1     JBS  R3_DISPLAY , 3 
       00574 1584     1     JMP  LIBDISPLAYIDLE_4 ,
   453 00575 1882 C        	MOV	A,@(STYLE_RIGHT)
   454            C      M 	LCALL	VgaNum1
                      2  M  PAGE #( VGANUM1 ),
       00576 1E83     2     PAGE ( VGANUM1 / 1024 ),
       00577 1010     1     CALL ( VGANUM1 % 1024 ),
                      2  M  PAGE #( $ ),
       00578 1E81     2     PAGE ( $ / 1024 ),
   455 00579 1820 C        	MOV	A,@(32)
   456            C      M 	LCALL	VgaNum1
                      2  M  PAGE #( VGANUM1 ),
       0057A 1E83     2     PAGE ( VGANUM1 / 1024 ),
       0057B 1010     1     CALL ( VGANUM1 % 1024 ),
                      2  M  PAGE #( $ ),
       0057C 1E81     2     PAGE ( $ / 1024 ),
   457 0057D 1800 C        	MOV	A,@(0)
   458            C      M 	LCALL	VgaNum1
                      2  M  PAGE #( VGANUM1 ),
       0057E 1E83     2     PAGE ( VGANUM1 / 1024 ),
       0057F 1010     1     CALL ( VGANUM1 % 1024 ),
                      2  M  PAGE #( $ ),
       00580 1E81     2     PAGE ( $ / 1024 ),
   459            C      M 	LCALL	VgaDrawNum1
                      2  M  PAGE #( VGADRAWNUM1 ),
       00581 1E83     2     PAGE ( VGADRAWNUM1 / 1024 ),
       00582 1074     1     CALL ( VGADRAWNUM1 % 1024 ),
                      2  M  PAGE #( $ ),
       00583 1E81     2     PAGE ( $ / 1024 ),
   460 00584      C        LibDisplayIdle_4:
   461            C      M 	JPNB	r3_display,4,LibDisplayIdle_5
       00584 0F25     1     JBS  R3_DISPLAY , 4 
       00585 1589     1     JMP  LIBDISPLAYIDLE_5 ,
   462            C      M 	LCALL	VgaBlankNum2
                      2  M  PAGE #( VGABLANKNUM2 ),
       00586 1E83     2     PAGE ( VGABLANKNUM2 / 1024 ),
       00587 10DE     1     CALL ( VGABLANKNUM2 % 1024 ),
                      2  M  PAGE #( $ ),
       00588 1E81     2     PAGE ( $ / 1024 ),
   463 00589      C        LibDisplayIdle_5:
   464            C      M 	JPNB	r3_display,5,LibDisplayIdle_6
       00589 0F65     1     JBS  R3_DISPLAY , 5 
       0058A 15BB     1     JMP  LIBDISPLAYIDLE_6 ,
   465            C        	
   466            C      M 	PAGE	#(LibMathHexToBcd)
       0058B 1E81     1     PAGE ( LIBMATHHEXTOBCD / 1024 ),
   467            C      M 	MOV	ax,r3_totalcall
       0058C 0429     1     MOV A, R3_TOTALCALL 
       0058D 0053     1     MOV  AX ,A
   468 0058E 1037 C        	CALL	LibMathHexToBcd
   469            C      M 	MOV	r3_ax,ax
       0058F 0413     1     MOV A, AX 
       00590 0060     1     MOV  R3_AX ,A
   470            C      M 	MOV	ax,r3_newcall
       00591 0428     1     MOV A, R3_NEWCALL 
       00592 0053     1     MOV  AX ,A
   471 00593 1037 C        	CALL	LibMathHexToBcd
   472            C      M 	MOV	r3_bx,ax
       00594 0413     1     MOV A, AX 
       00595 0063     1     MOV  R3_BX ,A
   473            C        	
   474            C      M 	PAGE	#(VGA)
       00596 1E83     1     PAGE ( VGA / 1024 ),
   475 00597 10E0 C        	CALL	VgaBlankChar
   476            C        	
   477 00598 1881 C        	MOV	A,@(STYLE_LEFT)
   478 00599 101C C        	CALL	VgaChar
   479 0059A 184D C        	MOV	A,@(STR_Total)
   480 0059B 114B C        	CALL	VgaString
   481 0059C 183A C        	MOV	A,@(58)
   482 0059D 101C C        	CALL	VgaChar
   483 0059E 0720 C        	SWAPA	r3_ax
   484 0059F 1A0F C        	AND	A,@(0x0f)
   485 005A0 1F30 C        	ADD	A,@(48)
   486 005A1 101C C        	CALL	VgaChar
   487            C      M 	ANDA	r3_ax,@(0x0f)
       005A2 180F     1     MOV A,@( 15 )
       005A3 02A0     1     AND A, R3_AX 
   488 005A4 1F30 C        	ADD	A,@(48)
   489 005A5 101C C        	CALL	VgaChar
   490 005A6 1800 C        	MOV	A,@(0)
   491 005A7 101C C        	CALL	VgaChar
   492 005A8 1078 C        	CALL	VgaDrawChar
   493            C        	
   494 005A9 1882 C        	MOV	A,@(STYLE_RIGHT)
   495 005AA 101C C        	CALL	VgaChar
   496 005AB 184E C        	MOV	A,@(STR_New)
   497 005AC 114B C        	CALL	VgaString
   498 005AD 183A C        	MOV	A,@(58)
   499 005AE 101C C        	CALL	VgaChar
   500 005AF 0723 C        	SWAPA	r3_bx
   501 005B0 1A0F C        	AND	A,@(0x0f)
   502 005B1 1F30 C        	ADD	A,@(48)
   503 005B2 101C C        	CALL	VgaChar
   504            C      M 	ANDA	r3_bx,@(0x0f)
       005B3 180F     1     MOV A,@( 15 )
       005B4 02A3     1     AND A, R3_BX 
   505 005B5 1F30 C        	ADD	A,@(48)
   506 005B6 101C C        	CALL	VgaChar
   507 005B7 1800 C        	MOV	A,@(0)
   508 005B8 101C C        	CALL	VgaChar
   509 005B9 1078 C        	CALL	VgaDrawChar
   510            C      M 	PAGE	#($)
       005BA 1E81     1     PAGE ( $ / 1024 ),
   511 005BB      C        LibDisplayIdle_6:
   512 005BB 0012 C        	RET
   513            C        
   514            C        
   515            C        
   516 005BC      C        LibInitTimer:
   517            C      M 	BANK	2
       005BC 0984     1     BC  _RAM , 6 
       005BD 0BC4     1     BS  _RAM , 7 
   518 005BE 00EC C        	CLR	r2_msec
   519 005BF 00ED C        	CLR	r2_second
   520 005C0 00EE C        	CLR	r2_minute
   521 005C1 00EF C        	CLR	r2_hour
   522 005C2 1C01 C        	RETL	@(1)
   523            C        
   524 005C3      C        LibUpdateTimer:
   525            C      M 	BANK	2
       005C3 0984     1     BC  _RAM , 6 
       005C4 0BC4     1     BS  _RAM , 7 
   526            C      M 	XORA	sys_msg,@(WM_TIME)
       005C5 1804     1     MOV A,@( WM_TIME )
       005C6 031B     1     XOR A, SYS_MSG 
   527            C      M 	JPNZ	LibUpdateTimer_ret
       005C7 0E83     1     JBS  _STATUS , Z 
       005C8 15E4     1     JMP  LIBUPDATETIMER_RET ,
   528            C      M 	ADD	r2_msec,sys_data
       005C9 041C     1     MOV A, SYS_DATA 
       005CA 03EC     1     ADD  R2_MSEC ,A
   529            C      M 	SUBA	r2_msec,@(100)
       005CB 1864     1     MOV A,@( 100 )
       005CC 012C     1     SUB A, R2_MSEC 
   530            C      M 	JPNC	LibUpdateTimer_ret
       005CD 0E03     1     JBS  _STATUS , C 
       005CE 15E4     1     JMP  LIBUPDATETIMER_RET ,
   531 005CF 006C C        	MOV	r2_msec,A
   532 005D0 056D C        	INC	r2_second
   533            C      M 	SUBA	r2_second,@(60)
       005D1 183C     1     MOV A,@( 60 )
       005D2 012D     1     SUB A, R2_SECOND 
   534            C      M 	JPNZ	LibUpdateTimer_display
       005D3 0E83     1     JBS  _STATUS , Z 
       005D4 15E3     1     JMP  LIBUPDATETIMER_DISPLAY ,
   535 005D5 00ED C        	CLR	r2_second
   536 005D6 056E C        	INC	r2_minute
   537            C      M 	SUBA	r2_minute,@(60)
       005D7 183C     1     MOV A,@( 60 )
       005D8 012E     1     SUB A, R2_MINUTE 
   538            C      M 	JPNZ	LibUpdateTimer_display
       005D9 0E83     1     JBS  _STATUS , Z 
       005DA 15E3     1     JMP  LIBUPDATETIMER_DISPLAY ,
   539 005DB 00EE C        	CLR	r2_minute
   540 005DC 056F C        	INC	r2_hour
   541            C      M 	SUBA	r2_hour,@(200)
       005DD 18C8     1     MOV A,@( 200 )
       005DE 012F     1     SUB A, R2_HOUR 
   542            C      M 	JPNZ	LibUpdateTimer_display
       005DF 0E83     1     JBS  _STATUS , Z 
       005E0 15E3     1     JMP  LIBUPDATETIMER_DISPLAY ,
   543            C      M 	MOV	r2_hour,@(100)
       005E1 1864     1     MOV A,@( 100 )
       005E2 006F     1     MOV  R2_HOUR ,A
   544 005E3      C        LibUpdateTimer_display:
   545 005E3 1C01 C        	RETL	@(1)
   546 005E4      C        LibUpdateTimer_ret:
   547 005E4 1C00 C        	RETL	@(0)
   548            C        
   549 005E5      C        LibDisplayTimer:
   550 005E5 1F00 C        	ADD	A,@(0)
   551            C      M 	JPZ	LibDisplayTimer_ret
       005E6 0C83     1     JBC  _STATUS , Z 
       005E7 1603     1     JMP  LIBDISPLAYTIMER_RET ,
   552            C      M 	BANK	2
       005E8 0984     1     BC  _RAM , 6 
       005E9 0BC4     1     BS  _RAM , 7 
   553 005EA 1882 C        	MOV	A,@(STYLE_RIGHT)
   554            C      M 	LCALL	VgaChar
                      2  M  PAGE #( VGACHAR ),
       005EB 1E83     2     PAGE ( VGACHAR / 1024 ),
       005EC 101C     1     CALL ( VGACHAR % 1024 ),
                      2  M  PAGE #( $ ),
       005ED 1E81     2     PAGE ( $ / 1024 ),
   555 005EE 042F C        	MOV	A,r2_hour
   556            C      M 	JPZ	LibDisplayTimer_1
       005EF 0C83     1     JBC  _STATUS , Z 
       005F0 15F6     1     JMP  LIBDISPLAYTIMER_1 ,
   557 005F1 1204 C        	CALL	UpdateTime
   558 005F2 183A C        	MOV	A,@(58)
   559            C      M 	LCALL	VgaChar
                      2  M  PAGE #( VGACHAR ),
       005F3 1E83     2     PAGE ( VGACHAR / 1024 ),
       005F4 101C     1     CALL ( VGACHAR % 1024 ),
                      2  M  PAGE #( $ ),
       005F5 1E81     2     PAGE ( $ / 1024 ),
   560 005F6      C        LibDisplayTimer_1:
   561 005F6 042E C        	MOV	A,r2_minute
   562 005F7 1204 C        	CALL	UpdateTime
   563 005F8 183A C        	MOV	A,@(58)
   564            C      M 	LCALL	VgaChar
                      2  M  PAGE #( VGACHAR ),
       005F9 1E83     2     PAGE ( VGACHAR / 1024 ),
       005FA 101C     1     CALL ( VGACHAR % 1024 ),
                      2  M  PAGE #( $ ),
       005FB 1E81     2     PAGE ( $ / 1024 ),
   565 005FC 042D C        	MOV	A,r2_second
   566 005FD 1204 C        	CALL	UpdateTime
   567            C      M 	PAGE	#(VGA)
       005FE 1E83     1     PAGE ( VGA / 1024 ),
   568 005FF 1800 C        	MOV	A,@(0)
   569 00600 101C C        	CALL	VgaChar
   570 00601 1078 C        	CALL	VgaDrawChar
   571            C      M 	PAGE	#($)
       00602 1E81     1     PAGE ( $ / 1024 ),
   572 00603      C        LibDisplayTimer_ret:
   573 00603 1C00 C        	RETL	@(0)
   574            C        	
   575            C        
   576 00604      C        UpdateTime:
   577 00604 0053 C        	MOV	ax,A
   578            C      M 	LCALL	LibMathHexToBcd
                      2  M  PAGE #( LIBMATHHEXTOBCD ),
       00605 1E81     2     PAGE ( LIBMATHHEXTOBCD / 1024 ),
       00606 1037     1     CALL ( LIBMATHHEXTOBCD % 1024 ),
                      2  M  PAGE #( $ ),
       00607 1E81     2     PAGE ( $ / 1024 ),
   579            C      M 	MOV	r2_ax,ax
       00608 0413     1     MOV A, AX 
       00609 0060     1     MOV  R2_AX ,A
   580 0060A 0720 C        	SWAPA	r2_ax
   581 0060B 1A0F C        	AND	A,@(0x0f)
   582 0060C 1F30 C        	ADD	A,@(48)
   583            C      M 	LCALL	VgaChar
                      2  M  PAGE #( VGACHAR ),
       0060D 1E83     2     PAGE ( VGACHAR / 1024 ),
       0060E 101C     1     CALL ( VGACHAR % 1024 ),
                      2  M  PAGE #( $ ),
       0060F 1E81     2     PAGE ( $ / 1024 ),
   584            C      M 	ANDA	r2_ax,@(0x0f)
       00610 180F     1     MOV A,@( 15 )
       00611 02A0     1     AND A, R2_AX 
   585 00612 1F30 C        	ADD	A,@(48)
   586            C      M 	LCALL	VgaChar
                      2  M  PAGE #( VGACHAR ),
       00613 1E83     2     PAGE ( VGACHAR / 1024 ),
       00614 101C     1     CALL ( VGACHAR % 1024 ),
                      2  M  PAGE #( $ ),
       00615 1E81     2     PAGE ( $ / 1024 ),
   587 00616 0012 C        	RET
   588            C        	
   589            C        
   590            C        ; 检查数字键是否按下。
   591 00617      C        LibNumberCheck:
   592            C      M 	XORA	sys_data,@(KEY_0)
       00617 1807     1     MOV A,@( KEY_0 )
       00618 031C     1     XOR A, SYS_DATA 
   593            C      M 	JPZ	LibNumberCheck_0
       00619 0C83     1     JBC  _STATUS , Z 
       0061A 1640     1     JMP  LIBNUMBERCHECK_0 ,
   594            C      M 	XORA	sys_data,@(KEY_1)
       0061B 1800     1     MOV A,@( KEY_1 )
       0061C 031C     1     XOR A, SYS_DATA 
   595            C      M 	JPZ	LibNumberCheck_1
       0061D 0C83     1     JBC  _STATUS , Z 
       0061E 1641     1     JMP  LIBNUMBERCHECK_1 ,
   596            C      M 	XORA	sys_data,@(KEY_2)
       0061F 1804     1     MOV A,@( KEY_2 )
       00620 031C     1     XOR A, SYS_DATA 
   597            C      M 	JPZ	LibNumberCheck_2
       00621 0C83     1     JBC  _STATUS , Z 
       00622 1642     1     JMP  LIBNUMBERCHECK_2 ,
   598            C      M 	XORA	sys_data,@(KEY_3)
       00623 1810     1     MOV A,@( KEY_3 )
       00624 031C     1     XOR A, SYS_DATA 
   599            C      M 	JPZ	LibNumberCheck_3
       00625 0C83     1     JBC  _STATUS , Z 
       00626 1643     1     JMP  LIBNUMBERCHECK_3 ,
   600            C      M 	XORA	sys_data,@(KEY_4)
       00627 1801     1     MOV A,@( KEY_4 )
       00628 031C     1     XOR A, SYS_DATA 
   601            C      M 	JPZ	LibNumberCheck_4
       00629 0C83     1     JBC  _STATUS , Z 
       0062A 1644     1     JMP  LIBNUMBERCHECK_4 ,
   602            C      M 	XORA	sys_data,@(KEY_5)
       0062B 1805     1     MOV A,@( KEY_5 )
       0062C 031C     1     XOR A, SYS_DATA 
   603            C      M 	JPZ	LibNumberCheck_5
       0062D 0C83     1     JBC  _STATUS , Z 
       0062E 1645     1     JMP  LIBNUMBERCHECK_5 ,
   604            C      M 	XORA	sys_data,@(KEY_6)
       0062F 1811     1     MOV A,@( KEY_6 )
       00630 031C     1     XOR A, SYS_DATA 
   605            C      M 	JPZ	LibNumberCheck_6
       00631 0C83     1     JBC  _STATUS , Z 
       00632 1646     1     JMP  LIBNUMBERCHECK_6 ,
   606            C      M 	XORA	sys_data,@(KEY_7)
       00633 1802     1     MOV A,@( KEY_7 )
       00634 031C     1     XOR A, SYS_DATA 
   607            C      M 	JPZ	LibNumberCheck_7
       00635 0C83     1     JBC  _STATUS , Z 
       00636 1647     1     JMP  LIBNUMBERCHECK_7 ,
   608            C      M 	XORA	sys_data,@(KEY_8)
       00637 1806     1     MOV A,@( KEY_8 )
       00638 031C     1     XOR A, SYS_DATA 
   609            C      M 	JPZ	LibNumberCheck_8
       00639 0C83     1     JBC  _STATUS , Z 
       0063A 1648     1     JMP  LIBNUMBERCHECK_8 ,
   610            C      M 	XORA	sys_data,@(KEY_9)
       0063B 1812     1     MOV A,@( KEY_9 )
       0063C 031C     1     XOR A, SYS_DATA 
   611            C      M 	JPZ	LibNumberCheck_9
       0063D 0C83     1     JBC  _STATUS , Z 
       0063E 1649     1     JMP  LIBNUMBERCHECK_9 ,
   612 0063F      C        LibNumberCheck_ret:
   613 0063F 1C00 C        	RETL	@(0)
   614 00640      C        LibNumberCheck_0:
   615 00640 1C30 C        	RETL	@(48)
   616 00641      C        LibNumberCheck_1:
   617 00641 1C31 C        	RETL	@(49)
   618 00642      C        LibNumberCheck_2:
   619 00642 1C32 C        	RETL	@(50)
   620 00643      C        LibNumberCheck_3:
   621 00643 1C33 C        	RETL	@(51)
   622 00644      C        LibNumberCheck_4:
   623 00644 1C34 C        	RETL	@(52)
   624 00645      C        LibNumberCheck_5:
   625 00645 1C35 C        	RETL	@(53)
   626 00646      C        LibNumberCheck_6:
   627 00646 1C36 C        	RETL	@(54)
   628 00647      C        LibNumberCheck_7:
   629 00647 1C37 C        	RETL	@(55)
   630 00648      C        LibNumberCheck_8:
   631 00648 1C38 C        	RETL	@(56)
   632 00649      C        LibNumberCheck_9:
   633 00649 1C39 C        	RETL	@(57)
   634            C        
   635            C        ; 检查字母键是否按下
   636 0064A      C        LibCharNumCheck:
   637            C      M 	XORA	sys_data,@(KEY_STAR)
       0064A 1803     1     MOV A,@( KEY_STAR )
       0064B 031C     1     XOR A, SYS_DATA 
   638            C      M 	JPZ	LibDialNumCheck_star
       0064C 0C83     1     JBC  _STATUS , Z 
       0064D 1653     1     JMP  LIBDIALNUMCHECK_STAR ,
   639            C      M 	XORA	sys_data,@(KEY_HASH)
       0064E 1813     1     MOV A,@( KEY_HASH )
       0064F 031C     1     XOR A, SYS_DATA 
   640            C      M 	JPZ	LibDialNumCheck_hash
       00650 0C83     1     JBC  _STATUS , Z 
       00651 1654     1     JMP  LIBDIALNUMCHECK_HASH ,
   641 00652 1617 C        	JMP	LibNumberCheck
   642 00653      C        LibDialNumCheck_star:
   643 00653 1C2A C        	RETL	@(42)
   644 00654      C        LibDialNumCheck_hash:
   645 00654 1C23 C        	RETL	@(35)
   646            C        
   647            C        ; 检查拨号键是否按下
   648 00655      C        LibDialNumCheck:
   649            C      M 	XORA	sys_data,@(KEY_REDIAL)
       00655 1815     1     MOV A,@( KEY_REDIAL )
       00656 031C     1     XOR A, SYS_DATA 
   650            C      M 	JPZ	LibDialNumCheck_pause
       00657 0C83     1     JBC  _STATUS , Z 
       00658 165A     1     JMP  LIBDIALNUMCHECK_PAUSE ,
   651 00659 164A C        	JMP	LibCharNumCheck
   652 0065A      C        LibDialNumCheck_pause:
   653 0065A 1C70 C        	RETL	@(112)
   654            C        
   655            C        
   656            C        
   657            C        
   658 0065B      C        LibNumTone:
   659 0065B 1F90 C        	ADD	A,@(256-112)
   660            C      M 	JPZ	LibNumTone_p
       0065C 0C83     1     JBC  _STATUS , Z 
       0065D 169E     1     JMP  LIBNUMTONE_P ,
   661 0065E 1F0C C        	ADD	A,@(112-100)
   662            C      M 	JPZ	LibNumTone_d
       0065F 0C83     1     JBC  _STATUS , Z 
       00660 169F     1     JMP  LIBNUMTONE_D ,
   663 00661 1F01 C        	ADD	A,@(100-99)
   664            C      M 	JPZ	LibNumTone_c
       00662 0C83     1     JBC  _STATUS , Z 
       00663 16A0     1     JMP  LIBNUMTONE_C ,
   665 00664 1F01 C        	ADD	A,@(99-98)
   666            C      M 	JPZ	LibNumTone_b
       00665 0C83     1     JBC  _STATUS , Z 
       00666 16A1     1     JMP  LIBNUMTONE_B ,
   667 00667 1F01 C        	ADD	A,@(98-97)
   668            C      M 	JPZ	LibNumTone_a
       00668 0C83     1     JBC  _STATUS , Z 
       00669 16A2     1     JMP  LIBNUMTONE_A ,
   669 0066A 1F11 C        	ADD	A,@(97-80)
   670            C      M 	JPZ	LibNumTone_p
       0066B 0C83     1     JBC  _STATUS , Z 
       0066C 169E     1     JMP  LIBNUMTONE_P ,
   671 0066D 1F0C C        	ADD	A,@(80-68)
   672            C      M 	JPZ	LibNumTone_d
       0066E 0C83     1     JBC  _STATUS , Z 
       0066F 169F     1     JMP  LIBNUMTONE_D ,
   673 00670 1F01 C        	ADD	A,@(68-67)
   674            C      M 	JPZ	LibNumTone_c
       00671 0C83     1     JBC  _STATUS , Z 
       00672 16A0     1     JMP  LIBNUMTONE_C ,
   675 00673 1F01 C        	ADD	A,@(67-66)
   676            C      M 	JPZ	LibNumTone_b
       00674 0C83     1     JBC  _STATUS , Z 
       00675 16A1     1     JMP  LIBNUMTONE_B ,
   677 00676 1F01 C        	ADD	A,@(66-65)
   678            C      M 	JPZ	LibNumTone_a
       00677 0C83     1     JBC  _STATUS , Z 
       00678 16A2     1     JMP  LIBNUMTONE_A ,
   679 00679 1F08 C        	ADD	A,@(65-57)
   680            C      M 	JPZ	LibNumTone_9
       0067A 0C83     1     JBC  _STATUS , Z 
       0067B 16A4     1     JMP  LIBNUMTONE_9 ,
   681 0067C 1F01 C        	ADD	A,@(57-56)
   682            C      M 	JPZ	LibNumTone_8
       0067D 0C83     1     JBC  _STATUS , Z 
       0067E 16A8     1     JMP  LIBNUMTONE_8 ,
   683 0067F 1F01 C        	ADD	A,@(56-55)
   684            C      M 	JPZ	LibNumTone_7
       00680 0C83     1     JBC  _STATUS , Z 
       00681 16AC     1     JMP  LIBNUMTONE_7 ,
   685 00682 1F01 C        	ADD	A,@(55-54)
   686            C      M 	JPZ	LibNumTone_6
       00683 0C83     1     JBC  _STATUS , Z 
       00684 16A5     1     JMP  LIBNUMTONE_6 ,
   687 00685 1F01 C        	ADD	A,@(54-53)
   688            C      M 	JPZ	LibNumTone_5
       00686 0C83     1     JBC  _STATUS , Z 
       00687 16A9     1     JMP  LIBNUMTONE_5 ,
   689 00688 1F01 C        	ADD	A,@(53-52)
   690            C      M 	JPZ	LibNumTone_4
       00689 0C83     1     JBC  _STATUS , Z 
       0068A 16AD     1     JMP  LIBNUMTONE_4 ,
   691 0068B 1F01 C        	ADD	A,@(52-51)
   692            C      M 	JPZ	LibNumTone_3
       0068C 0C83     1     JBC  _STATUS , Z 
       0068D 16A6     1     JMP  LIBNUMTONE_3 ,
   693 0068E 1F01 C        	ADD	A,@(51-50)
   694            C      M 	JPZ	LibNumTone_2
       0068F 0C83     1     JBC  _STATUS , Z 
       00690 16AA     1     JMP  LIBNUMTONE_2 ,
   695 00691 1F01 C        	ADD	A,@(50-49)
   696            C      M 	JPZ	LibNumTone_1
       00692 0C83     1     JBC  _STATUS , Z 
       00693 16AE     1     JMP  LIBNUMTONE_1 ,
   697 00694 1F01 C        	ADD	A,@(49-48)
   698            C      M 	JPZ	LibNumTone_0
       00695 0C83     1     JBC  _STATUS , Z 
       00696 16A7     1     JMP  LIBNUMTONE_0 ,
   699 00697 1F06 C        	ADD	A,@(48-42)
   700            C      M 	JPZ	LibNumTone_star
       00698 0C83     1     JBC  _STATUS , Z 
       00699 16AB     1     JMP  LIBNUMTONE_STAR ,
   701 0069A 1F07 C        	ADD	A,@(42-35)
   702            C      M 	JPZ	LibNumTone_hash
       0069B 0C83     1     JBC  _STATUS , Z 
       0069C 16A3     1     JMP  LIBNUMTONE_HASH ,
   703 0069D 1C00 C        	RETL	@(0)
   704 0069E      C        LibNumTone_p:
   705 0069E 1CFF C        	RETL	@(0xff)
   706 0069F      C        LibNumTone_d:
   707 0069F 1C77 C        	RETL	@(0x77)
   708 006A0      C        LibNumTone_c:
   709 006A0 1C7B C        	RETL	@(0x7b)
   710 006A1      C        LibNumTone_b:
   711 006A1 1C7D C        	RETL	@(0x7d)
   712 006A2      C        LibNumTone_a:
   713 006A2 1C7E C        	RETL	@(0x7e)
   714 006A3      C        LibNumTone_hash:
   715 006A3 1CB7 C        	RETL	@(0xb7)
   716 006A4      C        LibNumTone_9:
   717 006A4 1CBB C        	RETL	@(0xbb)
   718 006A5      C        LibNumTone_6:
   719 006A5 1CBD C        	RETL	@(0xbd)
   720 006A6      C        LibNumTone_3:
   721 006A6 1CBE C        	RETL	@(0xbe)
   722 006A7      C        LibNumTone_0:
   723 006A7 1CD7 C        	RETL	@(0xd7)
   724 006A8      C        LibNumTone_8:
   725 006A8 1CDB C        	RETL	@(0xdb)
   726 006A9      C        LibNumTone_5:
   727 006A9 1CDD C        	RETL	@(0xdd)
   728 006AA      C        LibNumTone_2:
   729 006AA 1CDE C        	RETL	@(0xde)
   730 006AB      C        LibNumTone_star:
   731 006AB 1CE7 C        	RETL	@(0xe7)
   732 006AC      C        LibNumTone_7:
   733 006AC 1CEB C        	RETL	@(0xeb)
   734 006AD      C        LibNumTone_4:
   735 006AD 1CED C        	RETL	@(0xed)
   736 006AE      C        LibNumTone_1:
   737 006AE 1CEE C        	RETL	@(0xee)
   738            C        
   739            C        
   740            C        
   741            C        
   742 006AF      C        LibSendOneCommand:
   743            C      M 	PAGE	#(IIC)
       006AF 1E80     1     PAGE ( IIC / 1024 ),
   744 006B0 10A8 C        	CALL	IicSendData
   745 006B1 1800 C        	MOV	A,@(0x00)
   746 006B2 10A8 C        	CALL	IicSendData
   747 006B3 10B3 C        	CALL	IicSer
   748            C      M 	PAGE	#($)
       006B4 1E81     1     PAGE ( $ / 1024 ),
   749 006B5 1C00 C        	RETL	@(0)
   750            C        
   751 006B6      C        LibGetCommand:
   752 006B6 1F3F C        	ADD	A,@(63)
   753 006B7 004C C        	MOV	_RC,A
   754            C      M 	BLOCK	4
       006B8 1848     1     MOV A,@((( 4 << 1 )+ VALUE_IOCA ))
       006B9 000A     1     IOW  _IOCA ,
   755 006BA 040D C        	MOV	A,_RD
   756 006BB 0012 C        	RET
   757            C        
   758            C        
   759            C        ; 获取有效数据的长度，最大32位
   760 006BC      C        LibGetValidLength32:
   761 006BC 00D5 C        	CLR	cnt
   762 006BD      C        LibGetValidLength32_loop:
   763 006BD 040D C        	MOV	A,_RD
   764            C      M 	JPZ	LibGetValidLength32_ret
       006BE 0C83     1     JBC  _STATUS , Z 
       006BF 16C7     1     JMP  LIBGETVALIDLENGTH32_RET ,
   765            C      M 	SUBA	cnt,@(32)
       006C0 1820     1     MOV A,@( 32 )
       006C1 0115     1     SUB A, CNT 
   766            C      M 	JPC	LibGetValidLength32_ret
       006C2 0C03     1     JBC  _STATUS , C 
       006C3 16C7     1     JMP  LIBGETVALIDLENGTH32_RET ,
   767 006C4 0555 C        	INC	cnt
   768 006C5 054C C        	INC	_RC
   769 006C6 16BD C        	JMP	LibGetValidLength32_loop
   770 006C7      C        LibGetValidLength32_ret:
   771 006C7 0415 C        	MOV	A,cnt
   772 006C8 0012 C        	RET
   773            C        
   774            C        
   775            C        ; 获取有效数据的长度，最大16位
   776 006C9      C        LibGetValidLength:
   777 006C9 00D5 C        	CLR	cnt
   778 006CA      C        LibGetValidLength_loop:
   779 006CA 040D C        	MOV	A,_RD
   780            C      M 	JPZ	LibGetValidLength_ret
       006CB 0C83     1     JBC  _STATUS , Z 
       006CC 16D4     1     JMP  LIBGETVALIDLENGTH_RET ,
   781            C      M 	SUBA	cnt,@(16)
       006CD 1810     1     MOV A,@( 16 )
       006CE 0115     1     SUB A, CNT 
   782            C      M 	JPC	LibGetValidLength_ret
       006CF 0C03     1     JBC  _STATUS , C 
       006D0 16D4     1     JMP  LIBGETVALIDLENGTH_RET ,
   783 006D1 0555 C        	INC	cnt
   784 006D2 054C C        	INC	_RC
   785 006D3 16CA C        	JMP	LibGetValidLength_loop
   786 006D4      C        LibGetValidLength_ret:
   787 006D4 0415 C        	MOV	A,cnt
   788 006D5 0012 C        	RET
   789            C        
   790 006D6      C        LibPromptBeep:
   791 006D6 0056 C        	MOV	bx,A
   792            C      M 	PAGE	#(IIC)
       006D7 1E80     1     PAGE ( IIC / 1024 ),
   793 006D8 1860 C        	MOV	A,@(0x60)
   794 006D9 10A8 C        	CALL	IicSendData
   795 006DA 0416 C        	MOV	A,bx
   796 006DB 10A8 C        	CALL	IicSendData
   797 006DC 10B3 C        	CALL	IicSer
   798 006DD 1C00 C        	RETL	@(0)
   799            C        
   800            C        /*************************************************
   801            C        通过日期计算星期
   802            C        方法：
   803            C        1. 400年一个周期。以0年1月0日为基准点。
   804            C        2. 每年按非闰年算，365天，刚好52周+1天，当年离基准年的年数a。
   805            C        3. 计算在到当年经过的闰年数b。注意0年为闰年，同时计算本年。
   806            C        4. 查月份对星期表得到数c。
   807            C        5. 天数d。
   808            C        6. 如果本年为闰年并且月份在3月以内，修正b，e=1。
   809            C        7. 修正值f。
   810            C        8. 结果为。= a+b+c+d-e+f。
   811            C        *************************************************/
   812 006DE      C        LibWeekCheck:
   813            C      M 	ANDA	r1_century,@(0x03)
       006DE 1803     1     MOV A,@( 3 )
       006DF 02B8     1     AND A, R1_CENTURY 
   814 006E0 1313 C        	CALL	WeekCentury		; 100年对星期的表
   815 006E1 03B7 C        	ADD	A,r1_year		; +上年份
   816 006E2 0053 C        	MOV	ax,A
   817            C        	
   818            C      M 	MOV	bx,r1_year
       006E3 0437     1     MOV A, R1_YEAR 
       006E4 0056     1     MOV  BX ,A
   819 006E5 0656 C        	RRC	bx
   820 006E6 0656 C        	RRC	bx
   821            C      M 	AND	bx,@(0x3f)		; 100年内能被4整除的年份个数，不包含能被100整除的年份。
       006E7 183F     1     MOV A,@( 63 )
       006E8 02D6     1     AND  BX ,A
   822            C        	
   823            C      M 	ANDA	r1_century,@(0x03)
       006E9 1803     1     MOV A,@( 3 )
       006EA 02B8     1     AND A, R1_CENTURY 
   824 006EB 0020 C        	TBL
   825 006EC 16F6 C        	JMP	LibWeekCheck_0
   826 006ED 16F4 C        	JMP	LibWeekCheck_1
   827 006EE 16F2 C        	JMP	LibWeekCheck_2
   828 006EF 16F0 C        	JMP	LibWeekCheck_3
   829 006F0      C        LibWeekCheck_3:
   830            C      M 	ADD	bx,@(24)
       006F0 1818     1     MOV A,@( 24 )
       006F1 03D6     1     ADD  BX ,A
   831 006F2      C        LibWeekCheck_2:
   832            C      M 	ADD	bx,@(24)
       006F2 1818     1     MOV A,@( 24 )
       006F3 03D6     1     ADD  BX ,A
   833 006F4      C        LibWeekCheck_1:
   834            C      M 	ADD	bx,@(24)
       006F4 1818     1     MOV A,@( 24 )
       006F5 03D6     1     ADD  BX ,A
   835 006F6      C        LibWeekCheck_0:				; 400年内被4整除的年数。
   836 006F6 0556 C        	INC	bx			; 0年是闰年。
   837            C      M 	ADD	ax,bx
       006F7 0416     1     MOV A, BX 
       006F8 03D3     1     ADD  AX ,A
   838            C        	
   839            C      M 	SUBA	r1_month,@(1)
       006F9 1801     1     MOV A,@( 1 )
       006FA 0136     1     SUB A, R1_MONTH 
   840 006FB 1318 C        	CALL	WeekMonth		; 月份对星期的表
   841 006FC 03D3 C        	ADD	ax,A
   842            C        	
   843            C      M 	ADD	ax,r1_day		; 天
       006FD 0435     1     MOV A, R1_DAY 
       006FE 03D3     1     ADD  AX ,A
   844            C        	
   845            C      M 	SUBA	r1_month,@(3)
       006FF 1803     1     MOV A,@( 3 )
       00700 0136     1     SUB A, R1_MONTH 
   846            C      M 	JPC	LibWeekCheck_4
       00701 0C03     1     JBC  _STATUS , C 
       00702 1708     1     JMP  LIBWEEKCHECK_4 ,
   847 00703 1325 C        	CALL	LibLeapYear
   848 00704 1F00 C        	ADD	A,@(0)
   849            C      M 	JPZ	LibWeekCheck_4
       00705 0C83     1     JBC  _STATUS , Z 
       00706 1708     1     JMP  LIBWEEKCHECK_4 ,
   850 00707 01D3 C        	DEC	ax			; 3月以前，并且当年为闰年，多算一天。
   851            C        	
   852 00708      C        LibWeekCheck_4:
   853            C      M 	ADD	ax,@(5)			; +修正值
       00708 1805     1     MOV A,@( 5 )
       00709 03D3     1     ADD  AX ,A
   854 0070A      C        LibWeekCheck_5:
   855            C      M 	SUBA	ax,@(7)
       0070A 1807     1     MOV A,@( 7 )
       0070B 0113     1     SUB A, AX 
   856            C      M 	JPNC	LibWeekCheck_ret
       0070C 0E03     1     JBS  _STATUS , C 
       0070D 1710     1     JMP  LIBWEEKCHECK_RET ,
   857 0070E 0053 C        	MOV	ax,A
   858 0070F 170A C        	JMP	LibWeekCheck_5
   859 00710      C        LibWeekCheck_ret:
   860            C      M 	MOV	r1_week,ax
       00710 0413     1     MOV A, AX 
       00711 0074     1     MOV  R1_WEEK ,A
   861 00712 0012 C        	RET
   862            C        	
   863            C        
   864            C        
   865 00713      C        WeekCentury:
   866 00713 0020 C        	TBL
   867 00714 1C00 C        	RETL	@(0)
   868 00715 1C02 C        	RETL	@(2)
   869 00716 1C04 C        	RETL	@(4)
   870 00717 1C06 C        	RETL	@(6)
   871            C        
   872 00718      C        WeekMonth:
   873 00718 0020 C        	TBL
   874 00719 1C00 C        	RETL	@(0)
   875 0071A 1C03 C        	RETL	@(3)
   876 0071B 1C03 C        	RETL	@(3)
   877 0071C 1C06 C        	RETL	@(6)
   878 0071D 1C01 C        	RETL	@(1)
   879 0071E 1C04 C        	RETL	@(4)
   880 0071F 1C06 C        	RETL	@(6)
   881 00720 1C02 C        	RETL	@(2)
   882 00721 1C05 C        	RETL	@(5)
   883 00722 1C00 C        	RETL	@(0)
   884 00723 1C03 C        	RETL	@(3)
   885 00724 1C05 C        	RETL	@(5)
   886            C        
   887            C        
   888            C        
   889 00725      C        LibLeapYear:
   890            C      M 	ANDA	r1_year,@(0x03)
       00725 1803     1     MOV A,@( 3 )
       00726 02B7     1     AND A, R1_YEAR 
   891            C      M 	JPNZ	LibLeapYear_false
       00727 0E83     1     JBS  _STATUS , Z 
       00728 1731     1     JMP  LIBLEAPYEAR_FALSE ,
   892 00729 0437 C        	MOV	A,r1_year
   893            C      M 	JPNZ	LibLeapYear_true
       0072A 0E83     1     JBS  _STATUS , Z 
       0072B 1730     1     JMP  LIBLEAPYEAR_TRUE ,
   894            C      M 	ANDA	r1_century,@(0x03)
       0072C 1803     1     MOV A,@( 3 )
       0072D 02B8     1     AND A, R1_CENTURY 
   895            C      M 	JPNZ	LibLeapYear_false
       0072E 0E83     1     JBS  _STATUS , Z 
       0072F 1731     1     JMP  LIBLEAPYEAR_FALSE ,
   896 00730      C        LibLeapYear_true:
   897 00730 1C01 C        	RETL	@(1)
   898 00731      C        LibLeapYear_false:
   899 00731 1C00 C        	RETL	@(0)
   900            C        
   901            C        
   902 00732      C        LibVolAdjust:
   903            C      M 	XORA	sys_data,@(KEY_VOLA)
       00732 1824     1     MOV A,@( KEY_VOLA )
       00733 031C     1     XOR A, SYS_DATA 
   904            C      M 	JPZ	LibVolAdjust_vola
       00734 0C83     1     JBC  _STATUS , Z 
       00735 173B     1     JMP  LIBVOLADJUST_VOLA ,
   905            C      M 	XORA	sys_data,@(KEY_VOLS)
       00736 1825     1     MOV A,@( KEY_VOLS )
       00737 031C     1     XOR A, SYS_DATA 
   906            C      M 	JPZ	LibVolAdjust_vols
       00738 0C83     1     JBC  _STATUS , Z 
       00739 173D     1     JMP  LIBVOLADJUST_VOLS ,
   907 0073A 1C00 C        	RETL	@(0)
   908 0073B      C        LibVolAdjust_vola:
   909 0073B 1801 C        	MOV	A,@(0x01)
   910 0073C 173E C        	JMP	LibVolAdjust_1
   911 0073D      C        LibVolAdjust_vols:
   912 0073D 1800 C        	MOV	A,@(0x00)
   913 0073E      C        LibVolAdjust_1:
   914 0073E 0056 C        	MOV	bx,A
   915            C      M 	PAGE	#(IIC)
       0073F 1E80     1     PAGE ( IIC / 1024 ),
   916 00740 184F C        	MOV	A,@(0x4f)
   917 00741 10A8 C        	CALL	IicSendData
   918 00742 0416 C        	MOV	A,bx
   919 00743 10A8 C        	CALL	IicSendData
   920 00744 10B3 C        	CALL	IicSer
   921            C      M 	PAGE	#($)
       00745 1E81     1     PAGE ( $ / 1024 ),
   922 00746 1C00 C        	RETL	@(0)
   923            C        
   924 00747      C        LibClearDisplaySerialNumber:
   925            C      M 	PAGE	#(VGA)
       00747 1E83     1     PAGE ( VGA / 1024 ),
   926 00748 1882 C        	MOV	A,@(STYLE_RIGHT)
   927 00749 1010 C        	CALL	VgaNum1
   928 0074A 1820 C        	MOV	A,@(32)
   929 0074B 1010 C        	CALL	VgaNum1
   930 0074C 1820 C        	MOV	A,@(32)
   931 0074D 1010 C        	CALL	VgaNum1
   932 0074E 1800 C        	MOV	A,@(0)
   933 0074F 1010 C        	CALL	VgaNum1
   934 00750 1074 C        	CALL	VgaDrawNum1
   935            C      M 	PAGE	#($)
       00751 1E81     1     PAGE ( $ / 1024 ),
   936 00752 1C00 C        	RETL	@(0)
   937            C        
   938            C        
   939 00753      C        LibDefaultSetting:
   940            C      M 	BANK	3
       00753 0B84     1     BS  _RAM , 6 
       00754 0BC4     1     BS  _RAM , 7 
   941            C      M 	MOV	r3_ringmelody,@(DEFAULT_ringmelody)
       00755 1801     1     MOV A,@( DEFAULT_RINGMELODY )
       00756 0076     1     MOV  R3_RINGMELODY ,A
   942            C      M 	MOV	r3_ringvolume,@(DEFAULT_ringvolume)
       00757 1802     1     MOV A,@( DEFAULT_RINGVOLUME )
       00758 0077     1     MOV  R3_RINGVOLUME ,A
   943            C      M 	MOV	r3_flashtime,@(DEFAULT_flashtime)
       00759 1801     1     MOV A,@( DEFAULT_FLASHTIME )
       0075A 007A     1     MOV  R3_FLASHTIME ,A
   944            C      M 	MOV	r3_pausetime,@(DEFAULT_pausetime)
       0075B 1803     1     MOV A,@( DEFAULT_PAUSETIME )
       0075C 007B     1     MOV  R3_PAUSETIME ,A
   945            C      M 	MOV	r3_contrast,@(DEFAULT_contrast)
       0075D 1805     1     MOV A,@( DEFAULT_CONTRAST )
       0075E 0074     1     MOV  R3_CONTRAST ,A
   946            C      M 	MOV	r3_ogm,@(DEFAULT_ogm)
       0075F 1881     1     MOV A,@( DEFAULT_OGM )
       00760 007C     1     MOV  R3_OGM ,A
   947            C      M 	MOV	r3_remotecode1,@(DEFAULT_remotecode1)
       00761 1801     1     MOV A,@( DEFAULT_REMOTECODE1 )
       00762 0070     1     MOV  R3_REMOTECODE1 ,A
   948            C      M 	MOV	r3_remotecode2,@(DEFAULT_remotecode2)
       00763 1823     1     MOV A,@( DEFAULT_REMOTECODE2 )
       00764 0071     1     MOV  R3_REMOTECODE2 ,A
   949            C      M 	MOV	r3_areacode1,@(DEFAULT_areacode1)
       00765 18FF     1     MOV A,@( DEFAULT_AREACODE1 )
       00766 0072     1     MOV  R3_AREACODE1 ,A
   950            C      M 	MOV	r3_areacode2,@(DEFAULT_areacode2)
       00767 18FF     1     MOV A,@( DEFAULT_AREACODE2 )
       00768 0073     1     MOV  R3_AREACODE2 ,A
   951            C      M 	MOV	r3_language,@(DEFAULT_language)
       00769 1800     1     MOV A,@( DEFAULT_LANGUAGE )
       0076A 0075     1     MOV  R3_LANGUAGE ,A
   952            C      M 	MOV	r3_ringdelay,@(DEFAULT_ringdelay)
       0076B 1802     1     MOV A,@( DEFAULT_RINGDELAY )
       0076C 0078     1     MOV  R3_RINGDELAY ,A
   953            C      M 	MOV	r3_rate,@(DEFAULT_rate)
       0076D 1801     1     MOV A,@( DEFAULT_RATE )
       0076E 0079     1     MOV  R3_RATE ,A
   954            C        	
   955 0076F 1C00 C        	RETL	@(0)
   956            C        
   203                     INCLUDE	"lcddrv.asm"
     1            C        ORG	0x0800
     2            C        
     3            C        /*************************************************
     4            C        光标
     5            C        cursor
     6            C        .7	光标的状态
     7            C        .4~.5	光标的y坐标
     8            C        .0~.3	光标的x坐标
     9            C        tmr_cursor	光标的计时器，中断中每4ms减1至0为止
    10            C        
    11            C        SerCursor
    12            C        	光标的服务程序，依赖中断中光标计时。
    13            C        	判断光标，当光标有效时并且光标状态发生改变时，对相应LCD区发出显示请求
    14            C        	光标状态cursor.7=0/1光标亮/灭。
    15            C        *************************************************/
    16            C        
    17 00800      C        SerCursor:
    18 00800 041A C        	MOV	A,tmr_cursor
    19            C      M 	JPNZ	SerCursor_ret
       00801 0E83     1     JBS  _STATUS , Z 
       00802 1411     1     JMP  SERCURSOR_RET ,
    20            C      M 	BLOCK	0
       00803 1840     1     MOV A,@((( 0 << 1 )+ VALUE_IOCA ))
       00804 000A     1     IOW  _IOCA ,
    21            C      M 	XOR	cursor,@(1<<7)
       00805 1880     1     MOV A,@(( 1 << 7 ))
       00806 0359     1     XOR  CURSOR ,A
    22            C      M 	JPB	cursor,7,SerCursor_off
       00807 0DD9     1     JBC  CURSOR , 7 
       00808 140B     1     JMP  SERCURSOR_OFF ,
    23 00809      C        SerCursor_on:
    24 00809 1896 C        	MOV	A,@(600/4)
    25 0080A 140C C        	JMP	$+2
    26 0080B      C        SerCursor_off:
    27 0080B 1864 C        	MOV	A,@(400/4)
    28 0080C 005A C        	MOV	tmr_cursor,A
    29 0080D 0719 C        	SWAPA	cursor
    30 0080E 1A03 C        	AND	A,@(0x03)
    31            C      M 	JPNZ	LcdDraw
       0080F 0E83     1     JBS  _STATUS , Z 
       00810 1412     1     JMP  LCDDRAW ,
    32 00811      C        SerCursor_ret:
    33 00811 0012 C        	RET
    34            C        
    35            C        
    36            C        
    37            C        /*************************************************
    38            C        LCD驱动程序。只能显示ASCII中的字符
    39            C        block 0中.128的内容为驱动控制。
    40            C        .7	stamp显示请求
    41            C        .6	number1显示请求
    42            C        .5	number2显示请求
    43            C        .4	char显示请求
    44            C        .1~.0	显示循环计数。
    45            C        只有调用本程序才能让LcdDriver显示内容
    46            C        输入：ACC	0	印花更新请求
    47            C        		1	第一行数字更新请求
    48            C        		2	第二行数字更新请求
    49            C        		3	第三行字符更新请求
    50            C        *************************************************/
    51            C        
    52 00812      C        LcdDraw:
    53 00812 0053 C        	MOV	ax,A
    54            C      M 	BLOCK	0
       00813 1840     1     MOV A,@((( 0 << 1 )+ VALUE_IOCA ))
       00814 000A     1     IOW  _IOCA ,
    55            C      M 	MOV	_RC,@(128)
       00815 1880     1     MOV A,@( 128 )
       00816 004C     1     MOV  _RC ,A
    56            C      M 	ANDA	ax,@(0x03)
       00817 1803     1     MOV A,@( 3 )
       00818 0293     1     AND A, AX 
    57 00819 0020 C        	TBL
    58 0081A 141E C        	JMP	LcdDraw_stamp
    59 0081B 1420 C        	JMP	LcdDraw_number1
    60 0081C 1422 C        	JMP	LcdDraw_number2
    61 0081D 1424 C        	JMP	LcdDraw_char
    62 0081E      C        LcdDraw_stamp:
    63 0081E 0BCD C        	BS	_RD,7
    64 0081F 1425 C        	JMP	LcdDraw_ret
    65 00820      C        LcdDraw_number1:
    66 00820 0B8D C        	BS	_RD,6
    67 00821 1425 C        	JMP	LcdDraw_ret
    68 00822      C        LcdDraw_number2:
    69 00822 0B4D C        	BS	_RD,5
    70 00823 1425 C        	JMP	LcdDraw_ret
    71 00824      C        LcdDraw_char:
    72 00824 0B0D C        	BS	_RD,4
    73 00825      C        LcdDraw_ret:
    74 00825 0012 C        	RET
    75            C        
    76            C        
    77            C        /*************************************************
    78            C        LCD驱动程序。只能显示ASCII中的字符
    79            C        block 0中.128的内容为驱动控制。
    80            C        .7	stamp显示请求
    81            C        .6	number1显示请求
    82            C        .5	number2显示请求
    83            C        .4	char显示请求
    84            C        .1~.0	显示循环计数。
    85            C        轮寻方式显示。将存在存储区的ASCII值显示出来
    86            C        *************************************************/
    87            C        
    88 00826      C        LcdDriver:
    89            C      M 	BLOCK	0
       00826 1840     1     MOV A,@((( 0 << 1 )+ VALUE_IOCA ))
       00827 000A     1     IOW  _IOCA ,
    90            C      M 	BANK	0
       00828 0984     1     BC  _RAM , 6 
       00829 09C4     1     BC  _RAM , 7 
    91            C      M 	MOV	_RC,@(0x70)
       0082A 1870     1     MOV A,@( 112 )
       0082B 004C     1     MOV  _RC ,A
    92            C      M 	MOV	ax,_RD
       0082C 040D     1     MOV A, _RD 
       0082D 0053     1     MOV  AX ,A
    93            C      M 	MOV	_RC,@(128)
       0082E 1880     1     MOV A,@( 128 )
       0082F 004C     1     MOV  _RC ,A
    94            C      M 	JPNB	_RD,3,LcdDriver_1
       00830 0ECD     1     JBS  _RD , 3 
       00831 1437     1     JMP  LCDDRIVER_1 ,
    95 00832 08CD C        	BC	_RD,3
    96            C      M 	OR	_RD,ax
       00833 0413     1     MOV A, AX 
       00834 024D     1     OR  _RD ,A
    97            C      M 	XOR	sys_flag,@(1<<LCDFLASHSTATUS)
       00835 1801     1     MOV A,@(( 1 << LCDFLASHSTATUS ))
       00836 035D     1     XOR  SYS_FLAG ,A
    98 00837      C        LcdDriver_1:
    99 00837 040D C        	MOV	A,_RD
   100            C      M 	JPZ	LcdDriver_ret
       00838 0C83     1     JBC  _STATUS , Z 
       00839 1455     1     JMP  LCDDRIVER_RET ,
   101 0083A 0053 C        	MOV	ax,A
   102 0083B 1F01 C        	ADD	A,@(0x01)
   103 0083C 1AF3 C        	AND	A,@(0xf3)
   104 0083D 004D C        	MOV	_RD,A
   105            C        	
   106            C      M 	ANDA	ax,@(0x03)
       0083E 1803     1     MOV A,@( 3 )
       0083F 0293     1     AND A, AX 
   107 00840 0020 C        	TBL
   108 00841 1445 C        	JMP	LcdDriver_stamp
   109 00842 1449 C        	JMP	LcdDriver_number1
   110 00843 144D C        	JMP	LcdDriver_number2
   111 00844 1451 C        	JMP	LcdDriver_char
   112 00845      C        LcdDriver_stamp:
   113            C      M 	JPNB	_RD,7,LcdDriver_1
       00845 0FCD     1     JBS  _RD , 7 
       00846 1437     1     JMP  LCDDRIVER_1 ,
   114 00847 09CD C        	BC	_RD,7
   115 00848 1456 C        	JMP	LcdUpdateStamp
   116 00849      C        LcdDriver_number1:
   117            C      M 	JPNB	_RD,6,LcdDriver_1
       00849 0F8D     1     JBS  _RD , 6 
       0084A 1437     1     JMP  LCDDRIVER_1 ,
   118 0084B 098D C        	BC	_RD,6
   119 0084C 155C C        	JMP	LcdUpdateNumber1
   120 0084D      C        LcdDriver_number2:
   121            C      M 	JPNB	_RD,5,LcdDriver_1
       0084D 0F4D     1     JBS  _RD , 5 
       0084E 1437     1     JMP  LCDDRIVER_1 ,
   122 0084F 094D C        	BC	_RD,5
   123 00850 158A C        	JMP	LcdUpdateNumber2
   124 00851      C        LcdDriver_char:
   125            C      M 	JPNB	_RD,4,LcdDriver_1
       00851 0F0D     1     JBS  _RD , 4 
       00852 1437     1     JMP  LCDDRIVER_1 ,
   126 00853 090D C        	BC	_RD,4
   127 00854 15D3 C        	JMP	LcdUpdateChar
   128 00855      C        LcdDriver_ret:
   129 00855 0012 C        	RET
   130            C        
   131            C        /***************************************
   132            C        显示第一行的8个印花
   133            C        .7	handset
   134            C        .6	spk
   135            C        .5	AM
   136            C        .4	PM
   137            C        .3	second
   138            C        .2	/
   139            C        .1	CALLS
   140            C        .0	NEW
   141            C        ***************************************/
   142 00856      C        LcdUpdateStamp:
   143 00856      C        LcdUpdateStamp1:
   144            C      M 	MOV	_RC,@(128+1)
       00856 1881     1     MOV A,@(( 128 + 1 ))
       00857 004C     1     MOV  _RC ,A
   145 00858 1351 C        	CALL	LcdGetData
   146            C        	
   147            C      M 	WR_STAMP	ax,7,@(7+0x40),2,exa
                      2  M  MOV  _RC ,@(( 7 + 64 ))
       00859 1847     2     MOV A,@(( 7 + 64 ))
       0085A 004C     2     MOV  _RC ,A
       0085B 000B     1     IOW  _IOCB ,
                      2  M  MOV  EXA , _RD 
       0085C 040D     2     MOV A, _RD 
       0085D 0054     2     MOV  EXA ,A
       0085E 0894     1     BC  EXA , 2 
                      2  M  JPNB  AX , 7 ,( $ + 2 )
       0085F 0FD3     2     JBS  AX , 7 
       00860 1462     2     JMP ( $ + 2 ),
       00861 0A94     1     BS  EXA , 2 
                      2  M  IOW  _IOCC , EXA 
       00862 0414     2     MOV A, EXA 
       00863 000C     2     IOW  _IOCC ,
       00864 004D     1     MOV  _RD ,A
   148            C      M 	WR_STAMP	ax,6,@(6+0x40),2,exa
                      2  M  MOV  _RC ,@(( 6 + 64 ))
       00865 1846     2     MOV A,@(( 6 + 64 ))
       00866 004C     2     MOV  _RC ,A
       00867 000B     1     IOW  _IOCB ,
                      2  M  MOV  EXA , _RD 
       00868 040D     2     MOV A, _RD 
       00869 0054     2     MOV  EXA ,A
       0086A 0894     1     BC  EXA , 2 
                      2  M  JPNB  AX , 6 ,( $ + 2 )
       0086B 0F93     2     JBS  AX , 6 
       0086C 146E     2     JMP ( $ + 2 ),
       0086D 0A94     1     BS  EXA , 2 
                      2  M  IOW  _IOCC , EXA 
       0086E 0414     2     MOV A, EXA 
       0086F 000C     2     IOW  _IOCC ,
       00870 004D     1     MOV  _RD ,A
   149            C      M 	WR_STAMP	ax,5,@(7+0x40),1,exa
                      2  M  MOV  _RC ,@(( 7 + 64 ))
       00871 1847     2     MOV A,@(( 7 + 64 ))
       00872 004C     2     MOV  _RC ,A
       00873 000B     1     IOW  _IOCB ,
                      2  M  MOV  EXA , _RD 
       00874 040D     2     MOV A, _RD 
       00875 0054     2     MOV  EXA ,A
       00876 0854     1     BC  EXA , 1 
                      2  M  JPNB  AX , 5 ,( $ + 2 )
       00877 0F53     2     JBS  AX , 5 
       00878 147A     2     JMP ( $ + 2 ),
       00879 0A54     1     BS  EXA , 1 
                      2  M  IOW  _IOCC , EXA 
       0087A 0414     2     MOV A, EXA 
       0087B 000C     2     IOW  _IOCC ,
       0087C 004D     1     MOV  _RD ,A
   150            C      M 	WR_STAMP	ax,4,@(6+0x40),1,exa
                      2  M  MOV  _RC ,@(( 6 + 64 ))
       0087D 1846     2     MOV A,@(( 6 + 64 ))
       0087E 004C     2     MOV  _RC ,A
       0087F 000B     1     IOW  _IOCB ,
                      2  M  MOV  EXA , _RD 
       00880 040D     2     MOV A, _RD 
       00881 0054     2     MOV  EXA ,A
       00882 0854     1     BC  EXA , 1 
                      2  M  JPNB  AX , 4 ,( $ + 2 )
       00883 0F13     2     JBS  AX , 4 
       00884 1486     2     JMP ( $ + 2 ),
       00885 0A54     1     BS  EXA , 1 
                      2  M  IOW  _IOCC , EXA 
       00886 0414     2     MOV A, EXA 
       00887 000C     2     IOW  _IOCC ,
       00888 004D     1     MOV  _RD ,A
   151            C      M 	WR_STAMP	ax,3,@(4+0x00),4,exa
                      2  M  MOV  _RC ,@(( 4 + 0 ))
       00889 1804     2     MOV A,@(( 4 + 0 ))
       0088A 004C     2     MOV  _RC ,A
       0088B 000B     1     IOW  _IOCB ,
                      2  M  MOV  EXA , _RD 
       0088C 040D     2     MOV A, _RD 
       0088D 0054     2     MOV  EXA ,A
       0088E 0914     1     BC  EXA , 4 
                      2  M  JPNB  AX , 3 ,( $ + 2 )
       0088F 0ED3     2     JBS  AX , 3 
       00890 1492     2     JMP ( $ + 2 ),
       00891 0B14     1     BS  EXA , 4 
                      2  M  IOW  _IOCC , EXA 
       00892 0414     2     MOV A, EXA 
       00893 000C     2     IOW  _IOCC ,
       00894 004D     1     MOV  _RD ,A
   152            C      M 	WR_STAMP	ax,2,@(0+0x00),5,exa
                      2  M  MOV  _RC ,@(( 0 + 0 ))
       00895 1800     2     MOV A,@(( 0 + 0 ))
       00896 004C     2     MOV  _RC ,A
       00897 000B     1     IOW  _IOCB ,
                      2  M  MOV  EXA , _RD 
       00898 040D     2     MOV A, _RD 
       00899 0054     2     MOV  EXA ,A
       0089A 0954     1     BC  EXA , 5 
                      2  M  JPNB  AX , 2 ,( $ + 2 )
       0089B 0E93     2     JBS  AX , 2 
       0089C 149E     2     JMP ( $ + 2 ),
       0089D 0B54     1     BS  EXA , 5 
                      2  M  IOW  _IOCC , EXA 
       0089E 0414     2     MOV A, EXA 
       0089F 000C     2     IOW  _IOCC ,
       008A0 004D     1     MOV  _RD ,A
   153            C      M 	WR_STAMP	ax,1,@(1+0x00),5,exa
                      2  M  MOV  _RC ,@(( 1 + 0 ))
       008A1 1801     2     MOV A,@(( 1 + 0 ))
       008A2 004C     2     MOV  _RC ,A
       008A3 000B     1     IOW  _IOCB ,
                      2  M  MOV  EXA , _RD 
       008A4 040D     2     MOV A, _RD 
       008A5 0054     2     MOV  EXA ,A
       008A6 0954     1     BC  EXA , 5 
                      2  M  JPNB  AX , 1 ,( $ + 2 )
       008A7 0E53     2     JBS  AX , 1 
       008A8 14AA     2     JMP ( $ + 2 ),
       008A9 0B54     1     BS  EXA , 5 
                      2  M  IOW  _IOCC , EXA 
       008AA 0414     2     MOV A, EXA 
       008AB 000C     2     IOW  _IOCC ,
       008AC 004D     1     MOV  _RD ,A
   154            C      M 	WR_STAMP	ax,0,@(2+0x00),5,exa
                      2  M  MOV  _RC ,@(( 2 + 0 ))
       008AD 1802     2     MOV A,@(( 2 + 0 ))
       008AE 004C     2     MOV  _RC ,A
       008AF 000B     1     IOW  _IOCB ,
                      2  M  MOV  EXA , _RD 
       008B0 040D     2     MOV A, _RD 
       008B1 0054     2     MOV  EXA ,A
       008B2 0954     1     BC  EXA , 5 
                      2  M  JPNB  AX , 0 ,( $ + 2 )
       008B3 0E13     2     JBS  AX , 0 
       008B4 14B6     2     JMP ( $ + 2 ),
       008B5 0B54     1     BS  EXA , 5 
                      2  M  IOW  _IOCC , EXA 
       008B6 0414     2     MOV A, EXA 
       008B7 000C     2     IOW  _IOCC ,
       008B8 004D     1     MOV  _RD ,A
   155            C        	;RET
   156            C        
   157            C        /***************************************
   158            C        显示第二行的前8个印花
   159            C        .7	tape
   160            C        .6	FULL
   161            C        .5	REC
   162            C        .4	pause
   163            C        .3	play
   164            C        .2	ringoff
   165            C        .1	mute
   166            C        .0	book
   167            C        ***************************************/
   168 008B9      C        LcdUpdateStamp2:
   169            C      M 	MOV	_RC,@(128+2)
       008B9 1882     1     MOV A,@(( 128 + 2 ))
       008BA 004C     1     MOV  _RC ,A
   170 008BB 1351 C        	CALL	LcdGetData
   171            C        	
   172            C      M 	WR_STAMP	ax,7,@(6+0x40),3,exa
                      2  M  MOV  _RC ,@(( 6 + 64 ))
       008BC 1846     2     MOV A,@(( 6 + 64 ))
       008BD 004C     2     MOV  _RC ,A
       008BE 000B     1     IOW  _IOCB ,
                      2  M  MOV  EXA , _RD 
       008BF 040D     2     MOV A, _RD 
       008C0 0054     2     MOV  EXA ,A
       008C1 08D4     1     BC  EXA , 3 
                      2  M  JPNB  AX , 7 ,( $ + 2 )
       008C2 0FD3     2     JBS  AX , 7 
       008C3 14C5     2     JMP ( $ + 2 ),
       008C4 0AD4     1     BS  EXA , 3 
                      2  M  IOW  _IOCC , EXA 
       008C5 0414     2     MOV A, EXA 
       008C6 000C     2     IOW  _IOCC ,
       008C7 004D     1     MOV  _RD ,A
   173            C      M 	WR_STAMP	ax,6,@(5+0x40),2,exa
                      2  M  MOV  _RC ,@(( 5 + 64 ))
       008C8 1845     2     MOV A,@(( 5 + 64 ))
       008C9 004C     2     MOV  _RC ,A
       008CA 000B     1     IOW  _IOCB ,
                      2  M  MOV  EXA , _RD 
       008CB 040D     2     MOV A, _RD 
       008CC 0054     2     MOV  EXA ,A
       008CD 0894     1     BC  EXA , 2 
                      2  M  JPNB  AX , 6 ,( $ + 2 )
       008CE 0F93     2     JBS  AX , 6 
       008CF 14D1     2     JMP ( $ + 2 ),
       008D0 0A94     1     BS  EXA , 2 
                      2  M  IOW  _IOCC , EXA 
       008D1 0414     2     MOV A, EXA 
       008D2 000C     2     IOW  _IOCC ,
       008D3 004D     1     MOV  _RD ,A
   174            C      M 	WR_STAMP	ax,5,@(5+0x40),1,exa
                      2  M  MOV  _RC ,@(( 5 + 64 ))
       008D4 1845     2     MOV A,@(( 5 + 64 ))
       008D5 004C     2     MOV  _RC ,A
       008D6 000B     1     IOW  _IOCB ,
                      2  M  MOV  EXA , _RD 
       008D7 040D     2     MOV A, _RD 
       008D8 0054     2     MOV  EXA ,A
       008D9 0854     1     BC  EXA , 1 
                      2  M  JPNB  AX , 5 ,( $ + 2 )
       008DA 0F53     2     JBS  AX , 5 
       008DB 14DD     2     JMP ( $ + 2 ),
       008DC 0A54     1     BS  EXA , 1 
                      2  M  IOW  _IOCC , EXA 
       008DD 0414     2     MOV A, EXA 
       008DE 000C     2     IOW  _IOCC ,
       008DF 004D     1     MOV  _RD ,A
   175            C      M 	WR_STAMP	ax,4,@(4+0x40),2,exa
                      2  M  MOV  _RC ,@(( 4 + 64 ))
       008E0 1844     2     MOV A,@(( 4 + 64 ))
       008E1 004C     2     MOV  _RC ,A
       008E2 000B     1     IOW  _IOCB ,
                      2  M  MOV  EXA , _RD 
       008E3 040D     2     MOV A, _RD 
       008E4 0054     2     MOV  EXA ,A
       008E5 0894     1     BC  EXA , 2 
                      2  M  JPNB  AX , 4 ,( $ + 2 )
       008E6 0F13     2     JBS  AX , 4 
       008E7 14E9     2     JMP ( $ + 2 ),
       008E8 0A94     1     BS  EXA , 2 
                      2  M  IOW  _IOCC , EXA 
       008E9 0414     2     MOV A, EXA 
       008EA 000C     2     IOW  _IOCC ,
       008EB 004D     1     MOV  _RD ,A
   176            C      M 	WR_STAMP	ax,3,@(4+0x40),1,exa
                      2  M  MOV  _RC ,@(( 4 + 64 ))
       008EC 1844     2     MOV A,@(( 4 + 64 ))
       008ED 004C     2     MOV  _RC ,A
       008EE 000B     1     IOW  _IOCB ,
                      2  M  MOV  EXA , _RD 
       008EF 040D     2     MOV A, _RD 
       008F0 0054     2     MOV  EXA ,A
       008F1 0854     1     BC  EXA , 1 
                      2  M  JPNB  AX , 3 ,( $ + 2 )
       008F2 0ED3     2     JBS  AX , 3 
       008F3 14F5     2     JMP ( $ + 2 ),
       008F4 0A54     1     BS  EXA , 1 
                      2  M  IOW  _IOCC , EXA 
       008F5 0414     2     MOV A, EXA 
       008F6 000C     2     IOW  _IOCC ,
       008F7 004D     1     MOV  _RD ,A
   177            C      M 	WR_STAMP	ax,2,@(4+0x00),6,exa
                      2  M  MOV  _RC ,@(( 4 + 0 ))
       008F8 1804     2     MOV A,@(( 4 + 0 ))
       008F9 004C     2     MOV  _RC ,A
       008FA 000B     1     IOW  _IOCB ,
                      2  M  MOV  EXA , _RD 
       008FB 040D     2     MOV A, _RD 
       008FC 0054     2     MOV  EXA ,A
       008FD 0994     1     BC  EXA , 6 
                      2  M  JPNB  AX , 2 ,( $ + 2 )
       008FE 0E93     2     JBS  AX , 2 
       008FF 1501     2     JMP ( $ + 2 ),
       00900 0B94     1     BS  EXA , 6 
                      2  M  IOW  _IOCC , EXA 
       00901 0414     2     MOV A, EXA 
       00902 000C     2     IOW  _IOCC ,
       00903 004D     1     MOV  _RD ,A
   178            C      M 	WR_STAMP	ax,1,@(4+0x00),2,exa
                      2  M  MOV  _RC ,@(( 4 + 0 ))
       00904 1804     2     MOV A,@(( 4 + 0 ))
       00905 004C     2     MOV  _RC ,A
       00906 000B     1     IOW  _IOCB ,
                      2  M  MOV  EXA , _RD 
       00907 040D     2     MOV A, _RD 
       00908 0054     2     MOV  EXA ,A
       00909 0894     1     BC  EXA , 2 
                      2  M  JPNB  AX , 1 ,( $ + 2 )
       0090A 0E53     2     JBS  AX , 1 
       0090B 150D     2     JMP ( $ + 2 ),
       0090C 0A94     1     BS  EXA , 2 
                      2  M  IOW  _IOCC , EXA 
       0090D 0414     2     MOV A, EXA 
       0090E 000C     2     IOW  _IOCC ,
       0090F 004D     1     MOV  _RD ,A
   179            C      M 	WR_STAMP	ax,0,@(4+0x00),0,exa
                      2  M  MOV  _RC ,@(( 4 + 0 ))
       00910 1804     2     MOV A,@(( 4 + 0 ))
       00911 004C     2     MOV  _RC ,A
       00912 000B     1     IOW  _IOCB ,
                      2  M  MOV  EXA , _RD 
       00913 040D     2     MOV A, _RD 
       00914 0054     2     MOV  EXA ,A
       00915 0814     1     BC  EXA , 0 
                      2  M  JPNB  AX , 0 ,( $ + 2 )
       00916 0E13     2     JBS  AX , 0 
       00917 1519     2     JMP ( $ + 2 ),
       00918 0A14     1     BS  EXA , 0 
                      2  M  IOW  _IOCC , EXA 
       00919 0414     2     MOV A, EXA 
       0091A 000C     2     IOW  _IOCC ,
       0091B 004D     1     MOV  _RD ,A
   180            C        	;RET
   181            C        
   182            C        /***************************************
   183            C        显示第二行的后8个印花
   184            C        .7	RPT
   185            C        .6	VIP
   186            C        .5	CFWD
   187            C        .4	FILTER
   188            C        .3	message
   189            C        .2	0
   190            C        .1	0
   191            C        .0	0
   192            C        ***************************************/
   193 0091C      C        LcdUpdateStamp3:
   194            C      M 	MOV	_RC,@(128+3)
       0091C 1883     1     MOV A,@(( 128 + 3 ))
       0091D 004C     1     MOV  _RC ,A
   195 0091E 1351 C        	CALL	LcdGetData
   196            C        	
   197            C      M 	WR_STAMP	ax,7,@(3+0x00),1,exa
                      2  M  MOV  _RC ,@(( 3 + 0 ))
       0091F 1803     2     MOV A,@(( 3 + 0 ))
       00920 004C     2     MOV  _RC ,A
       00921 000B     1     IOW  _IOCB ,
                      2  M  MOV  EXA , _RD 
       00922 040D     2     MOV A, _RD 
       00923 0054     2     MOV  EXA ,A
       00924 0854     1     BC  EXA , 1 
                      2  M  JPNB  AX , 7 ,( $ + 2 )
       00925 0FD3     2     JBS  AX , 7 
       00926 1528     2     JMP ( $ + 2 ),
       00927 0A54     1     BS  EXA , 1 
                      2  M  IOW  _IOCC , EXA 
       00928 0414     2     MOV A, EXA 
       00929 000C     2     IOW  _IOCC ,
       0092A 004D     1     MOV  _RD ,A
   198            C      M 	WR_STAMP	ax,6,@(3+0x00),3,exa
                      2  M  MOV  _RC ,@(( 3 + 0 ))
       0092B 1803     2     MOV A,@(( 3 + 0 ))
       0092C 004C     2     MOV  _RC ,A
       0092D 000B     1     IOW  _IOCB ,
                      2  M  MOV  EXA , _RD 
       0092E 040D     2     MOV A, _RD 
       0092F 0054     2     MOV  EXA ,A
       00930 08D4     1     BC  EXA , 3 
                      2  M  JPNB  AX , 6 ,( $ + 2 )
       00931 0F93     2     JBS  AX , 6 
       00932 1534     2     JMP ( $ + 2 ),
       00933 0AD4     1     BS  EXA , 3 
                      2  M  IOW  _IOCC , EXA 
       00934 0414     2     MOV A, EXA 
       00935 000C     2     IOW  _IOCC ,
       00936 004D     1     MOV  _RD ,A
   199            C      M 	WR_STAMP	ax,5,@(3+0x00),5,exa
                      2  M  MOV  _RC ,@(( 3 + 0 ))
       00937 1803     2     MOV A,@(( 3 + 0 ))
       00938 004C     2     MOV  _RC ,A
       00939 000B     1     IOW  _IOCB ,
                      2  M  MOV  EXA , _RD 
       0093A 040D     2     MOV A, _RD 
       0093B 0054     2     MOV  EXA ,A
       0093C 0954     1     BC  EXA , 5 
                      2  M  JPNB  AX , 5 ,( $ + 2 )
       0093D 0F53     2     JBS  AX , 5 
       0093E 1540     2     JMP ( $ + 2 ),
       0093F 0B54     1     BS  EXA , 5 
                      2  M  IOW  _IOCC , EXA 
       00940 0414     2     MOV A, EXA 
       00941 000C     2     IOW  _IOCC ,
       00942 004D     1     MOV  _RD ,A
   200            C      M 	WR_STAMP	ax,4,@(3+0x40),0,exa
                      2  M  MOV  _RC ,@(( 3 + 64 ))
       00943 1843     2     MOV A,@(( 3 + 64 ))
       00944 004C     2     MOV  _RC ,A
       00945 000B     1     IOW  _IOCB ,
                      2  M  MOV  EXA , _RD 
       00946 040D     2     MOV A, _RD 
       00947 0054     2     MOV  EXA ,A
       00948 0814     1     BC  EXA , 0 
                      2  M  JPNB  AX , 4 ,( $ + 2 )
       00949 0F13     2     JBS  AX , 4 
       0094A 154C     2     JMP ( $ + 2 ),
       0094B 0A14     1     BS  EXA , 0 
                      2  M  IOW  _IOCC , EXA 
       0094C 0414     2     MOV A, EXA 
       0094D 000C     2     IOW  _IOCC ,
       0094E 004D     1     MOV  _RD ,A
   201            C      M 	WR_STAMP	ax,3,@(3+0x40),2,exa
                      2  M  MOV  _RC ,@(( 3 + 64 ))
       0094F 1843     2     MOV A,@(( 3 + 64 ))
       00950 004C     2     MOV  _RC ,A
       00951 000B     1     IOW  _IOCB ,
                      2  M  MOV  EXA , _RD 
       00952 040D     2     MOV A, _RD 
       00953 0054     2     MOV  EXA ,A
       00954 0894     1     BC  EXA , 2 
                      2  M  JPNB  AX , 3 ,( $ + 2 )
       00955 0ED3     2     JBS  AX , 3 
       00956 1558     2     JMP ( $ + 2 ),
       00957 0A94     1     BS  EXA , 2 
                      2  M  IOW  _IOCC , EXA 
       00958 0414     2     MOV A, EXA 
       00959 000C     2     IOW  _IOCC ,
       0095A 004D     1     MOV  _RD ,A
   202 0095B 0012 C        	RET
   203            C        
   204            C        WR_STAMP	MACRO	STAMP_REG,STAMP_BIT,@LCD_ADDR,LCD_BIT,STAMP_TEMP
   205            C        	MOV	_RC,@(LCD_ADDR)
   206            C        	IOW	_IOCB
   207            C        	MOV	STAMP_TEMP,_RD
   208            C        	BC	STAMP_TEMP,LCD_BIT
   209            C        	JPNB	STAMP_REG,STAMP_BIT,$+2
   210            C        	BS	STAMP_TEMP,LCD_BIT
   211            C        	IOW	_IOCC,STAMP_TEMP
   212            C        	MOV	_RD,A
   213            C        	ENDM
   214            C        
   215            C        
   216            C        
   217            C        /*************************************************
   218            C        显示第一行的数字
   219            C        数字按ASCII编码按顺序排列在data ram中。
   220            C        *************************************************/
   221 0095C      C        LcdUpdateNumber1:
   222            C      M 	MOV	r0_ax,@(0x10)
       0095C 1810     1     MOV A,@( 16 )
       0095D 0060     1     MOV  R0_AX ,A
   223            C        	
   224            C      M 	MOV	_RC,@(128+4)
       0095E 1884     1     MOV A,@(( 128 + 4 ))
       0095F 004C     1     MOV  _RC ,A
   225 00960 1886 C        	MOV	A,@(0x86)
   226 00961 121A C        	CALL	LcdMatrixType1
   227            C        	
   228            C      M 	MOV	_RC,@(128+5)
       00962 1885     1     MOV A,@(( 128 + 5 ))
       00963 004C     1     MOV  _RC ,A
   229 00964 1854 C        	MOV	A,@(0x54)
   230 00965 121A C        	CALL	LcdMatrixType1
   231            C        	
   232            C      M 	MOV	_RC,@(128+6)
       00966 1886     1     MOV A,@(( 128 + 6 ))
       00967 004C     1     MOV  _RC ,A
   233 00968 1832 C        	MOV	A,@(0x32)
   234 00969 121A C        	CALL	LcdMatrixType1
   235            C        	
   236            C      M 	MOV	_RC,@(128+7)
       0096A 1887     1     MOV A,@(( 128 + 7 ))
       0096B 004C     1     MOV  _RC ,A
   237 0096C 1810 C        	MOV	A,@(0x10)
   238 0096D 121A C        	CALL	LcdMatrixType1
   239            C        	
   240            C      M 	MOV	_RC,@(128+8)
       0096E 1888     1     MOV A,@(( 128 + 8 ))
       0096F 004C     1     MOV  _RC ,A
   241 00970 1251 C        	CALL	LcdMatrixType2
   242            C        	
   243            C      M 	MOV	r0_ax,@(0x00)
       00971 1800     1     MOV A,@( 0 )
       00972 0060     1     MOV  R0_AX ,A
   244            C        	
   245            C      M 	MOV	_RC,@(128+9)
       00973 1889     1     MOV A,@(( 128 + 9 ))
       00974 004C     1     MOV  _RC ,A
   246 00975 1807 C        	MOV	A,@(0x07)
   247 00976 121A C        	CALL	LcdMatrixType1
   248            C        	
   249            C      M 	MOV	_RC,@(128+10)
       00977 188A     1     MOV A,@(( 128 + 10 ))
       00978 004C     1     MOV  _RC ,A
   250 00979 1821 C        	MOV	A,@(0x21)
   251 0097A 121A C        	CALL	LcdMatrixType1
   252            C        	
   253            C      M 	MOV	_RC,@(128+11)
       0097B 188B     1     MOV A,@(( 128 + 11 ))
       0097C 004C     1     MOV  _RC ,A
   254 0097D 1843 C        	MOV	A,@(0x43)
   255 0097E 121A C        	CALL	LcdMatrixType1
   256            C        	
   257            C      M 	MOV	r0_ax,@(0x08)
       0097F 1808     1     MOV A,@( 8 )
       00980 0060     1     MOV  R0_AX ,A
   258            C        	
   259            C      M 	MOV	_RC,@(128+12)
       00981 188C     1     MOV A,@(( 128 + 12 ))
       00982 004C     1     MOV  _RC ,A
   260 00983 1886 C        	MOV	A,@(0x86)
   261 00984 121A C        	CALL	LcdMatrixType1
   262            C        	
   263            C      M 	MOV	_RC,@(128+13)
       00985 188D     1     MOV A,@(( 128 + 13 ))
       00986 004C     1     MOV  _RC ,A
   264 00987 18A9 C        	MOV	A,@(0xa9)
   265 00988 121A C        	CALL	LcdMatrixType1
   266            C        	
   267 00989 0012 C        	RET
   268            C        
   269            C        
   270            C        /*************************************************
   271            C        显示第二行的数字
   272            C        数字按ASCII编码按顺序排列在data ram中。
   273            C        *************************************************/
   274 0098A      C        LcdUpdateNumber2:
   275            C      M 	MOV	r0_ax,@(0x08)
       0098A 1808     1     MOV A,@( 8 )
       0098B 0060     1     MOV  R0_AX ,A
   276            C      M 	MOV	_RC,@(128+14)
       0098C 188E     1     MOV A,@(( 128 + 14 ))
       0098D 004C     1     MOV  _RC ,A
   277 0098E 1876 C        	MOV	A,@(0x76)
   278 0098F 125E C        	CALL	LcdMatrixType3
   279            C        	
   280            C      M 	MOV	_RC,@(128+15)
       00990 188F     1     MOV A,@(( 128 + 15 ))
       00991 004C     1     MOV  _RC ,A
   281 00992 1854 C        	MOV	A,@(0x54)
   282 00993 125E C        	CALL	LcdMatrixType3
   283            C        	
   284            C      M 	MOV	_RC,@(128+16)
       00994 1890     1     MOV A,@(( 128 + 16 ))
       00995 004C     1     MOV  _RC ,A
   285 00996 1800 C        	MOV	A,@(0x00)
   286 00997 12BD C        	CALL	LcdMatrixType5
   287            C        	
   288            C      M 	MOV	r0_ax,@(0x00)
       00998 1800     1     MOV A,@( 0 )
       00999 0060     1     MOV  R0_AX ,A
   289            C      M 	MOV	_RC,@(128+17)
       0099A 1891     1     MOV A,@(( 128 + 17 ))
       0099B 004C     1     MOV  _RC ,A
   290 0099C 180A C        	MOV	A,@(10)
   291 0099D 128D C        	CALL	LcdMatrixType4
   292            C        	
   293            C      M 	MOV	_RC,@(128+19)
       0099E 1893     1     MOV A,@(( 128 + 19 ))
       0099F 004C     1     MOV  _RC ,A
   294 009A0 1811 C        	MOV	A,@(17)
   295 009A1 128D C        	CALL	LcdMatrixType4
   296            C        	
   297            C      M 	MOV	_RC,@(128+21)
       009A2 1895     1     MOV A,@(( 128 + 21 ))
       009A3 004C     1     MOV  _RC ,A
   298 009A4 1818 C        	MOV	A,@(24)
   299 009A5 128D C        	CALL	LcdMatrixType4
   300            C        	
   301            C      M 	MOV	_RC,@(128+23)
       009A6 1897     1     MOV A,@(( 128 + 23 ))
       009A7 004C     1     MOV  _RC ,A
   302 009A8 181F C        	MOV	A,@(31)
   303 009A9 128D C        	CALL	LcdMatrixType4
   304            C        	
   305            C      M 	MOV	_RC,@(128+25)
       009AA 1899     1     MOV A,@(( 128 + 25 ))
       009AB 004C     1     MOV  _RC ,A
   306 009AC 1826 C        	MOV	A,@(38)
   307 009AD 128D C        	CALL	LcdMatrixType4
   308            C        	
   309            C      M 	MOV	r0_ax,@(0x08)
       009AE 1808     1     MOV A,@( 8 )
       009AF 0060     1     MOV  R0_AX ,A
   310            C      M 	MOV	_RC,@(128+18)
       009B0 1892     1     MOV A,@(( 128 + 18 ))
       009B1 004C     1     MOV  _RC ,A
   311 009B2 180E C        	MOV	A,@(14)
   312 009B3 128D C        	CALL	LcdMatrixType4
   313            C        	
   314            C      M 	MOV	_RC,@(128+20)
       009B4 1894     1     MOV A,@(( 128 + 20 ))
       009B5 004C     1     MOV  _RC ,A
   315 009B6 1815 C        	MOV	A,@(21)
   316 009B7 128D C        	CALL	LcdMatrixType4
   317            C        	
   318            C      M 	MOV	_RC,@(128+22)
       009B8 1896     1     MOV A,@(( 128 + 22 ))
       009B9 004C     1     MOV  _RC ,A
   319 009BA 181C C        	MOV	A,@(28)
   320 009BB 128D C        	CALL	LcdMatrixType4
   321            C        	
   322            C      M 	MOV	_RC,@(128+24)
       009BC 1898     1     MOV A,@(( 128 + 24 ))
       009BD 004C     1     MOV  _RC ,A
   323 009BE 1823 C        	MOV	A,@(35)
   324 009BF 128D C        	CALL	LcdMatrixType4
   325            C        	
   326            C      M 	MOV	_RC,@(128+26)
       009C0 189A     1     MOV A,@(( 128 + 26 ))
       009C1 004C     1     MOV  _RC ,A
   327 009C2 182A C        	MOV	A,@(42)
   328 009C3 128D C        	CALL	LcdMatrixType4
   329            C        	
   330            C      M 	MOV	_RC,@(128+27)
       009C4 189B     1     MOV A,@(( 128 + 27 ))
       009C5 004C     1     MOV  _RC ,A
   331 009C6 180E C        	MOV	A,@(0x0e)
   332 009C7 12BD C        	CALL	LcdMatrixType5
   333            C        	
   334            C      M 	MOV	r0_ax,@(0x00)
       009C8 1800     1     MOV A,@( 0 )
       009C9 0060     1     MOV  R0_AX ,A
   335            C      M 	MOV	_RC,@(128+28)
       009CA 189C     1     MOV A,@(( 128 + 28 ))
       009CB 004C     1     MOV  _RC ,A
   336 009CC 1832 C        	MOV	A,@(0x32)
   337 009CD 125E C        	CALL	LcdMatrixType3
   338            C        	
   339            C      M 	MOV	_RC,@(128+29)
       009CE 189D     1     MOV A,@(( 128 + 29 ))
       009CF 004C     1     MOV  _RC ,A
   340 009D0 1810 C        	MOV	A,@(0x10)
   341 009D1 125E C        	CALL	LcdMatrixType3
   342            C        	
   343 009D2 0012 C        	RET
   344            C        
   345            C        /*************************************************
   346            C        显示第三行的字符
   347            C        字符按ASCII编码按顺序排列在data ram中。
   348            C        *************************************************/
   349 009D3      C        LcdUpdateChar:
   350 009D3 00D5 C        	CLR	cnt				; 显示的位数
   351 009D4      C        LcdUpdateChar_loop:
   352 009D4 0615 C        	RRCA	cnt
   353 009D5 1A7F C        	AND	A,@(0x7f)
   354 009D6 0056 C        	MOV	bx,A
   355 009D7 0396 C        	ADD	A,bx
   356 009D8 0396 C        	ADD	A,bx
   357 009D9 0396 C        	ADD	A,bx
   358 009DA 0396 C        	ADD	A,bx
   359 009DB 1F08 C        	ADD	A,@(8)
   360 009DC 0056 C        	MOV	bx,A				; 显示地址
   361            C      M 	JPB	cnt,0,LcdUpdateChar_loop_even
       009DD 0C15     1     JBC  CNT , 0 
       009DE 15E1     1     JMP  LCDUPDATECHAR_LOOP_EVEN ,
   362 009DF      C        LcdUpdateChar_loop_odd:
   363            C      M 	ADD	bx,@(0x40)			; 奇数位在高位，要加上偏移
       009DF 1840     1     MOV A,@( 64 )
       009E0 03D6     1     ADD  BX ,A
   364 009E1      C        LcdUpdateChar_loop_even:
   365 009E1      C        LcdUpdateChar_digit:				; 开始显示一个位
   366            C      M 	ADDA	cnt,@(128+30)
       009E1 189E     1     MOV A,@(( 128 + 30 ))
       009E2 0395     1     ADD A, CNT 
   367 009E3 004C C        	MOV	_RC,A
   368 009E4 1351 C        	CALL	LcdGetData
   369 009E5 00D7 C        	CLR	exb				; 显示的列
   370 009E6      C        LcdUpdateChar_digit_loop:
   371 009E6 0417 C        	MOV	A,exb
   372 009E7 0020 C        	TBL
   373 009E8 15ED C        	JMP	LcdUpdateChar_digit_loop1
   374 009E9 15F2 C        	JMP	LcdUpdateChar_digit_loop2
   375 009EA 15F7 C        	JMP	LcdUpdateChar_digit_loop3
   376 009EB 15FC C        	JMP	LcdUpdateChar_digit_loop4
   377 009EC 1601 C        	JMP	LcdUpdateChar_digit_loop5
   378 009ED      C        LcdUpdateChar_digit_loop1:
   379 009ED 0413 C        	MOV	A,ax
   380            C      M 	LCALL	TabChar1
                      2  M  PAGE #( TABCHAR1 ),
       009EE 1E8C     2     PAGE ( TABCHAR1 / 1024 ),
       009EF 1009     1     CALL ( TABCHAR1 % 1024 ),
                      2  M  PAGE #( $ ),
       009F0 1E82     2     PAGE ( $ / 1024 ),
   381            C        ;	MOV	exa,A
   382            C        ;	ADDA	cnt,@(128+30)
   383            C        ;	MOV	_RC,A
   384            C        ;	CALL	LcdGetCursor
   385            C        ;	ADD	A,@(0)
   386            C        ;	JPZ	LcdUpdateChar_digit_loop1_1
   387            C        ;	XOR	exa,@(0x7f)
   388            C        ;LcdUpdateChar_digit_loop1_1:
   389            C        ;	MOV	A,exa
   390 009F1 1605 C        	JMP	LcdUpdateChar_digit_loop_1
   391 009F2      C        LcdUpdateChar_digit_loop2:
   392 009F2 0413 C        	MOV	A,ax
   393            C      M 	LCALL	TabChar2
                      2  M  PAGE #( TABCHAR2 ),
       009F3 1E8C     2     PAGE ( TABCHAR2 / 1024 ),
       009F4 100E     1     CALL ( TABCHAR2 % 1024 ),
                      2  M  PAGE #( $ ),
       009F5 1E82     2     PAGE ( $ / 1024 ),
   394 009F6 1605 C        	JMP	LcdUpdateChar_digit_loop_1
   395 009F7      C        LcdUpdateChar_digit_loop3:
   396 009F7 0413 C        	MOV	A,ax
   397            C      M 	LCALL	TabChar3
                      2  M  PAGE #( TABCHAR3 ),
       009F8 1E8C     2     PAGE ( TABCHAR3 / 1024 ),
       009F9 1013     1     CALL ( TABCHAR3 % 1024 ),
                      2  M  PAGE #( $ ),
       009FA 1E82     2     PAGE ( $ / 1024 ),
   398 009FB 1605 C        	JMP	LcdUpdateChar_digit_loop_1
   399 009FC      C        LcdUpdateChar_digit_loop4:
   400 009FC 0413 C        	MOV	A,ax
   401            C      M 	LCALL	TabChar4
                      2  M  PAGE #( TABCHAR4 ),
       009FD 1E8C     2     PAGE ( TABCHAR4 / 1024 ),
       009FE 1018     1     CALL ( TABCHAR4 % 1024 ),
                      2  M  PAGE #( $ ),
       009FF 1E82     2     PAGE ( $ / 1024 ),
   402 00A00 1605 C        	JMP	LcdUpdateChar_digit_loop_1
   403 00A01      C        LcdUpdateChar_digit_loop5:
   404 00A01 0413 C        	MOV	A,ax
   405            C      M 	LCALL	TabChar5
                      2  M  PAGE #( TABCHAR5 ),
       00A02 1E8C     2     PAGE ( TABCHAR5 / 1024 ),
       00A03 101D     1     CALL ( TABCHAR5 % 1024 ),
                      2  M  PAGE #( $ ),
       00A04 1E82     2     PAGE ( $ / 1024 ),
   406 00A05      C        LcdUpdateChar_digit_loop_1:
   407 00A05 0054 C        	MOV	exa,A
   408            C      M 	ADDA	bx,exb				; 地址再加上列地址
       00A06 0417     1     MOV A, EXB 
       00A07 0396     1     ADD A, BX 
   409 00A08 004C C        	MOV	_RC,A
   410 00A09 000B C        	IOW	_IOCB
   411            C      M 	ANDA	_RD,@(0x80)
       00A0A 1880     1     MOV A,@( 128 )
       00A0B 028D     1     AND A, _RD 
   412 00A0C 0214 C        	OR	A,exa
   413 00A0D 004D C        	MOV	_RD,A
   414 00A0E 000C C        	IOW	_IOCC
   415 00A0F 0557 C        	INC	exb
   416            C      M 	SUBA	exb,@5
       00A10 1805     1     MOV A,@( 5 )
       00A11 0117     1     SUB A, EXB 
   417            C      M 	JPNZ	LcdUpdateChar_digit_loop
       00A12 0E83     1     JBS  _STATUS , Z 
       00A13 15E6     1     JMP  LCDUPDATECHAR_DIGIT_LOOP ,
   418 00A14 0555 C        	INC	cnt
   419            C      M 	SUBA	cnt,@16
       00A15 1810     1     MOV A,@( 16 )
       00A16 0115     1     SUB A, CNT 
   420            C      M 	JPNZ	LcdUpdateChar_loop
       00A17 0E83     1     JBS  _STATUS , Z 
       00A18 15D4     1     JMP  LCDUPDATECHAR_LOOP ,
   421            C        	
   422 00A19 0012 C        	RET
   423            C        
   424            C        
   425            C        
   426            C        /*************************************************
   427            C        点阵类型1
   428            C        输入：	acc	-- 高位com，低位com
   429            C        	r0_ax	-- 点阵起始地址。
   430            C        
   431            C        	字符	-- 在当前的ram addr中
   432            C        
   433            C        说明：
   434            C        本类型只适合以下情况：
   435            C        1、7段数码管。
   436            C        2、只占两个common口。
   437            C        *************************************************/
   438 00A1A      C        LcdMatrixType1:
   439 00A1A 0055 C        	MOV	cnt,A
   440 00A1B 1351 C        	CALL	LcdGetData
   441            C      M 	LCALL	TabLed
                      2  M  PAGE #( TABLED ),
       00A1C 1E8C     2     PAGE ( TABLED / 1024 ),
       00A1D 1000     1     CALL ( TABLED % 1024 ),
                      2  M  PAGE #( $ ),
       00A1E 1E82     2     PAGE ( $ / 1024 ),
   442 00A1F 0053 C        	MOV	ax,A
   443 00A20 00E2 C        	CLR	r0_cnt
   444            C        
   445 00A21      C        LcdMatrixType1_loop:
   446            C      M 	ANDA	cnt,@(0x0f)
       00A21 180F     1     MOV A,@( 15 )
       00A22 0295     1     AND A, CNT 
   447 00A23 0056 C        	MOV	bx,A
   448            C        	
   449            C      M 	ADDA	r0_ax,r0_cnt
       00A24 0422     1     MOV A, R0_CNT 
       00A25 03A0     1     ADD A, R0_AX 
   450 00A26 1238 C        	CALL	TabLcdMatrixType1
   451 00A27 0061 C        	MOV	r0_exa,A
   452 00A28 1BFF C        	XOR	A,@(0xff)
   453            C      M 	JPZ	LcdMatrixType1_change
       00A29 0C83     1     JBC  _STATUS , Z 
       00A2A 1633     1     JMP  LCDMATRIXTYPE1_CHANGE ,
   454            C      M 	ANDA	r0_exa,@(0x0f)
       00A2B 180F     1     MOV A,@( 15 )
       00A2C 02A1     1     AND A, R0_EXA 
   455 00A2D 0057 C        	MOV	exb,A
   456 00A2E 0721 C        	SWAPA	r0_exa
   457 00A2F 1A0F C        	AND	A,@(0x0f)
   458 00A30 0054 C        	MOV	exa,A
   459 00A31 131D C        	CALL	LcdUpdateBit
   460 00A32 1634 C        	JMP	LcdMatrixType1_next
   461 00A33      C        LcdMatrixType1_change:
   462 00A33 0755 C        	SWAP	cnt
   463 00A34      C        LcdMatrixType1_next:
   464 00A34 0562 C        	INC	r0_cnt
   465            C      M 	JPNB	r0_cnt,3,LcdMatrixType1_loop
       00A35 0EE2     1     JBS  R0_CNT , 3 
       00A36 1621     1     JMP  LCDMATRIXTYPE1_LOOP ,
   466 00A37      C        LcdMatrixType1_ret:
   467 00A37 0012 C        	RET
   468            C        
   469 00A38      C        TabLcdMatrixType1:				; 高位:段码的位；低位:segment口
   470 00A38 0020 C        	TBL
   471            C        ; 第一种，起始地址0x00
   472 00A39 1C00 C        	RETL	@(0x00)				; A
   473 00A3A 1C51 C        	RETL	@(0x51)				; F
   474 00A3B 1C42 C        	RETL	@(0x42)				; E
   475 00A3C 1CFF C        	RETL	@(0xff)				; ff:转换common口
   476 00A3D 1C10 C        	RETL	@(0x10)				; B
   477 00A3E 1C61 C        	RETL	@(0x61)				; G
   478 00A3F 1C22 C        	RETL	@(0x22)				; C
   479 00A40 1C33 C        	RETL	@(0x33)				; D
   480            C        ; 第二种，起始地址0x08
   481 00A41 1C00 C        	RETL	@(0x00)				; A
   482 00A42 1C51 C        	RETL	@(0x51)				; F
   483 00A43 1C42 C        	RETL	@(0x42)				; E
   484 00A44 1C33 C        	RETL	@(0x33)				; D
   485 00A45 1CFF C        	RETL	@(0xff)				; ff:转换common口
   486 00A46 1C10 C        	RETL	@(0x10)				; B
   487 00A47 1C61 C        	RETL	@(0x61)				; G
   488 00A48 1C22 C        	RETL	@(0x22)				; C
   489            C        ; 第三种，起始地址0x10
   490 00A49 1C25 C        	RETL	@(0x25)				; C
   491 00A4A 1C66 C        	RETL	@(0x66)				; G
   492 00A4B 1C17 C        	RETL	@(0x17)				; B
   493 00A4C 1CFF C        	RETL	@(0xff)				; ff:转换common口
   494 00A4D 1C34 C        	RETL	@(0x34)				; D
   495 00A4E 1C45 C        	RETL	@(0x45)				; E
   496 00A4F 1C56 C        	RETL	@(0x56)				; F
   497 00A50 1C07 C        	RETL	@(0x07)				; A
   498            C        	
   499            C        
   500            C        /*************************************************
   501            C        点阵类型2
   502            C        输入：
   503            C        
   504            C        	字符	-- 在当前的ram addr中
   505            C        
   506            C        说明：
   507            C        本类型只适合以下情况：
   508            C        1、特殊数码管，月份的高位。
   509            C        *************************************************/
   510 00A51      C        LcdMatrixType2:
   511 00A51 1351 C        	CALL	LcdGetData
   512            C      M 	LCALL	TabLed
                      2  M  PAGE #( TABLED ),
       00A52 1E8C     2     PAGE ( TABLED / 1024 ),
       00A53 1000     1     CALL ( TABLED % 1024 ),
                      2  M  PAGE #( $ ),
       00A54 1E82     2     PAGE ( $ / 1024 ),
   513 00A55 0053 C        	MOV	ax,A
   514            C      M 	MOV	exa,@(0x01)
       00A56 1801     1     MOV A,@( 1 )
       00A57 0054     1     MOV  EXA ,A
   515            C      M 	MOV	bx,@(0x07)
       00A58 1807     1     MOV A,@( 7 )
       00A59 0056     1     MOV  BX ,A
   516            C      M 	MOV	exb,@(0x04)
       00A5A 1804     1     MOV A,@( 4 )
       00A5B 0057     1     MOV  EXB ,A
   517 00A5C 131D C        	CALL	LcdUpdateBit
   518 00A5D 0012 C        	RET
   519            C        
   520            C        
   521            C        /*************************************************
   522            C        点阵类型3
   523            C        输入：	acc	-- 高位segment，低位segment
   524            C        	r0_ax	-- 点阵起始地址
   525            C        	
   526            C        	字符	-- 在当前的ram addr中
   527            C        
   528            C        说明：
   529            C        本类型只适合以下情况：
   530            C        1、7段数码管。
   531            C        2、只占两个segment口。
   532            C        *************************************************/
   533 00A5E      C        LcdMatrixType3:
   534 00A5E 0055 C        	MOV	cnt,A
   535 00A5F 1351 C        	CALL	LcdGetData
   536            C      M 	LCALL	TabLed
                      2  M  PAGE #( TABLED ),
       00A60 1E8C     2     PAGE ( TABLED / 1024 ),
       00A61 1000     1     CALL ( TABLED % 1024 ),
                      2  M  PAGE #( $ ),
       00A62 1E82     2     PAGE ( $ / 1024 ),
   537 00A63 0053 C        	MOV	ax,A
   538 00A64 00E2 C        	CLR	r0_cnt
   539            C        
   540 00A65      C        LcdMatrixType3_loop:
   541            C      M 	ANDA	cnt,@(0x0f)
       00A65 180F     1     MOV A,@( 15 )
       00A66 0295     1     AND A, CNT 
   542 00A67 0057 C        	MOV	exb,A
   543            C        	
   544            C      M 	ADDA	r0_ax,r0_cnt
       00A68 0422     1     MOV A, R0_CNT 
       00A69 03A0     1     ADD A, R0_AX 
   545 00A6A 127C C        	CALL	TabLcdMatrixType3
   546 00A6B 0061 C        	MOV	r0_exa,A
   547 00A6C 1BFF C        	XOR	A,@(0xff)
   548            C      M 	JPZ	LcdMatrixType3_change
       00A6D 0C83     1     JBC  _STATUS , Z 
       00A6E 1677     1     JMP  LCDMATRIXTYPE3_CHANGE ,
   549            C      M 	ANDA	r0_exa,@(0x0f)
       00A6F 180F     1     MOV A,@( 15 )
       00A70 02A1     1     AND A, R0_EXA 
   550 00A71 0056 C        	MOV	bx,a
   551 00A72 0721 C        	SWAPA	r0_exa
   552 00A73 1A0F C        	AND	A,@(0x0f)
   553 00A74 0054 C        	MOV	exa,A
   554 00A75 131D C        	CALL	LcdUpdateBit
   555 00A76 1678 C        	JMP	LcdMatrixType3_next
   556 00A77      C        LcdMatrixType3_change:
   557 00A77 0755 C        	SWAP	cnt
   558 00A78      C        LcdMatrixType3_next:
   559 00A78 0562 C        	INC	r0_cnt
   560            C      M 	JPNB	r0_cnt,3,LcdMatrixType3_loop
       00A79 0EE2     1     JBS  R0_CNT , 3 
       00A7A 1665     1     JMP  LCDMATRIXTYPE3_LOOP ,
   561 00A7B      C        LcdMatrixType3_ret:
   562 00A7B 0012 C        	RET
   563            C        
   564 00A7C      C        TabLcdMatrixType3:				; 高位:段码位；地位:common口
   565 00A7C 0020 C        	TBL
   566            C        ; 第一种，起始地址0x00
   567 00A7D 1C3B C        	RETL	@(0x3b)				; D
   568 00A7E 1C2C C        	RETL	@(0x2c)				; C
   569 00A7F 1C1D C        	RETL	@(0x1d)				; B
   570 00A80 1C0E C        	RETL	@(0x0e)				; A
   571 00A81 1CFF C        	RETL	@(0xff)				; ff: 转换segment口
   572 00A82 1C4C C        	RETL	@(0x4c)				; E
   573 00A83 1C6D C        	RETL	@(0x6d)				; G
   574 00A84 1C5E C        	RETL	@(0x5e)				; F
   575            C        ; 第二种，起始地址0x08
   576 00A85 1C1C C        	RETL	@(0x1c)				; B
   577 00A86 1C6D C        	RETL	@(0x6d)				; G
   578 00A87 1C2E C        	RETL	@(0x2e)				; C
   579 00A88 1CFF C        	RETL	@(0xff)				; ff: 转换segment口
   580 00A89 1C0B C        	RETL	@(0x0b)				; A
   581 00A8A 1C5C C        	RETL	@(0x5c)				; F
   582 00A8B 1C4D C        	RETL	@(0x4d)				; E
   583 00A8C 1C3E C        	RETL	@(0x3e)				; D
   584            C        
   585            C        
   586            C        /*************************************************
   587            C        点阵类型4
   588            C        输入：	acc	-- segment起始地址
   589            C        	r0_ax	-- 点阵起始地址。
   590            C        
   591            C        	字符	-- 在当前的ram addr中
   592            C        
   593            C        说明：
   594            C        本类型只适合以下情况：
   595            C        1、7段数码管。
   596            C        2、只占两个common口。并且是固定的，com7和com15
   597            C        *************************************************/
   598 00A8D      C        LcdMatrixType4:
   599 00A8D 0055 C        	MOV	cnt,A
   600 00A8E 1351 C        	CALL	LcdGetData
   601            C      M 	LCALL	TabLed
                      2  M  PAGE #( TABLED ),
       00A8F 1E8C     2     PAGE ( TABLED / 1024 ),
       00A90 1000     1     CALL ( TABLED % 1024 ),
                      2  M  PAGE #( $ ),
       00A91 1E82     2     PAGE ( $ / 1024 ),
   602 00A92 0053 C        	MOV	ax,A
   603 00A93 00E2 C        	CLR	r0_cnt
   604            C      M 	MOV	bx,@(0x07)
       00A94 1807     1     MOV A,@( 7 )
       00A95 0056     1     MOV  BX ,A
   605            C        
   606 00A96      C        LcdMatrixType4_loop:
   607            C      M 	ADDA	r0_ax,r0_cnt
       00A96 0422     1     MOV A, R0_CNT 
       00A97 03A0     1     ADD A, R0_AX 
   608 00A98 12AC C        	CALL	TabLcdMatrixType4
   609 00A99 0061 C        	MOV	r0_exa,A
   610 00A9A 1BFF C        	XOR	A,@(0xff)
   611            C      M 	JPZ	LcdMatrixType4_change
       00A9B 0C83     1     JBC  _STATUS , Z 
       00A9C 16A6     1     JMP  LCDMATRIXTYPE4_CHANGE ,
   612            C      M 	ANDA	r0_exa,@(0x0f)
       00A9D 180F     1     MOV A,@( 15 )
       00A9E 02A1     1     AND A, R0_EXA 
   613 00A9F 0395 C        	ADD	A,cnt
   614 00AA0 0057 C        	MOV	exb,A
   615 00AA1 0721 C        	SWAPA	r0_exa
   616 00AA2 1A0F C        	AND	A,@(0x0f)
   617 00AA3 0054 C        	MOV	exa,A
   618 00AA4 131D C        	CALL	LcdUpdateBit
   619 00AA5 16A8 C        	JMP	LcdMatrixType4_next
   620 00AA6      C        LcdMatrixType4_change:
   621            C      M 	MOV	bx,@(0x0f)
       00AA6 180F     1     MOV A,@( 15 )
       00AA7 0056     1     MOV  BX ,A
   622 00AA8      C        LcdMatrixType4_next:
   623 00AA8 0562 C        	INC	r0_cnt
   624            C      M 	JPNB	r0_cnt,3,LcdMatrixType4_loop
       00AA9 0EE2     1     JBS  R0_CNT , 3 
       00AAA 1696     1     JMP  LCDMATRIXTYPE4_LOOP ,
   625 00AAB      C        LcdMatrixType4_ret:
   626 00AAB 0012 C        	RET
   627            C        
   628 00AAC      C        TabLcdMatrixType4:				; 高位:段码的位；低位:segment口相对位置
   629 00AAC 0020 C        	TBL
   630            C        ; 第一种，起始地址0x00
   631 00AAD 1C00 C        	RETL	@(0x00)				; A
   632 00AAE 1C51 C        	RETL	@(0x51)				; F
   633 00AAF 1C62 C        	RETL	@(0x62)				; G
   634 00AB0 1C13 C        	RETL	@(0x13)				; B
   635 00AB1 1CFF C        	RETL	@(0xff)				; ff:转换common口
   636 00AB2 1C41 C        	RETL	@(0x41)				; E
   637 00AB3 1C32 C        	RETL	@(0x32)				; D
   638 00AB4 1C23 C        	RETL	@(0x23)				; C
   639            C        ; 第二种，起始地址0x08
   640 00AB5 1C00 C        	RETL	@(0x00)				; A
   641 00AB6 1C61 C        	RETL	@(0x61)				; G
   642 00AB7 1C22 C        	RETL	@(0x22)				; C
   643 00AB8 1CFF C        	RETL	@(0xff)				; ff:转换common口
   644 00AB9 1C50 C        	RETL	@(0x50)				; F
   645 00ABA 1C41 C        	RETL	@(0x41)				; E
   646 00ABB 1C32 C        	RETL	@(0x32)				; D
   647 00ABC 1C13 C        	RETL	@(0x13)				; B
   648            C        
   649            C        
   650            C        /*************************************************
   651            C        点阵类型5
   652            C        输入：	acc	-- 起始地址
   653            C        
   654            C        	字符	-- 在当前的ram addr中
   655            C        
   656            C        说明：
   657            C        本类型只适合以下情况：
   658            C        1、7段数码管。
   659            C        2、第13个7段数码管和第24个7段数码管
   660            C        *************************************************/
   661 00ABD      C        LcdMatrixType5:
   662 00ABD 0060 C        	MOV	r0_ax,A
   663 00ABE 1351 C        	CALL	LcdGetData
   664            C      M 	LCALL	TabLed
                      2  M  PAGE #( TABLED ),
       00ABF 1E8C     2     PAGE ( TABLED / 1024 ),
       00AC0 1000     1     CALL ( TABLED % 1024 ),
                      2  M  PAGE #( $ ),
       00AC1 1E82     2     PAGE ( $ / 1024 ),
   665 00AC2 0053 C        	MOV	ax,A
   666 00AC3 00E2 C        	CLR	r0_cnt
   667 00AC4 00D4 C        	CLR	exa
   668            C        
   669 00AC5      C        LcdMatrixType5_loop:
   670            C      M 	ADDA	r0_ax,r0_cnt
       00AC5 0422     1     MOV A, R0_CNT 
       00AC6 03A0     1     ADD A, R0_AX 
   671 00AC7 1300 C        	CALL	TabLcdMatrixType5
   672 00AC8 0056 C        	MOV	bx,A
   673 00AC9 0562 C        	INC	r0_cnt
   674            C      M 	ADDA	r0_ax,r0_cnt
       00ACA 0422     1     MOV A, R0_CNT 
       00ACB 03A0     1     ADD A, R0_AX 
   675 00ACC 1300 C        	CALL	TabLcdMatrixType5
   676 00ACD 0057 C        	MOV	exb,A
   677 00ACE 0562 C        	INC	r0_cnt
   678 00ACF 131D C        	CALL	LcdUpdateBit
   679 00AD0 0554 C        	INC	exa
   680            C        	
   681            C      M 	SUBA	r0_cnt,@14
       00AD1 180E     1     MOV A,@( 14 )
       00AD2 0122     1     SUB A, R0_CNT 
   682            C      M 	JPNC	LcdMatrixType5_loop
       00AD3 0E03     1     JBS  _STATUS , C 
       00AD4 16C5     1     JMP  LCDMATRIXTYPE5_LOOP ,
   683 00AD5      C        LcdMatrixType5_ret:
   684 00AD5 0012 C        	RET
   685            C        ORG	0x0b00
   686 00B00      C        TabLcdMatrixType5:
   687 00B00 0020 C        	TBL
   688            C        ; 第一种，起始地址0x00
   689 00B01 1C0B C        	RETL	@(11)
   690 00B02 1C04 C        	RETL	@(4)
   691 00B03 1C0F C        	RETL	@(15)
   692 00B04 1C0A C        	RETL	@(10)
   693 00B05 1C07 C        	RETL	@(7)
   694 00B06 1C09 C        	RETL	@(9)
   695 00B07 1C0F C        	RETL	@(15)
   696 00B08 1C09 C        	RETL	@(9)
   697 00B09 1C0F C        	RETL	@(15)
   698 00B0A 1C08 C        	RETL	@(8)
   699 00B0B 1C0F C        	RETL	@(15)
   700 00B0C 1C04 C        	RETL	@(4)
   701 00B0D 1C07 C        	RETL	@(7)
   702 00B0E 1C08 C        	RETL	@(8)
   703            C        ; 第二种，起始地址0x0e
   704 00B0F 1C07 C        	RETL	@(7)
   705 00B10 1C2D C        	RETL	@(45)
   706 00B11 1C07 C        	RETL	@(7)
   707 00B12 1C03 C        	RETL	@(3)
   708 00B13 1C0F C        	RETL	@(15)
   709 00B14 1C03 C        	RETL	@(3)
   710 00B15 1C0F C        	RETL	@(15)
   711 00B16 1C2F C        	RETL	@(47)
   712 00B17 1C0F C        	RETL	@(15)
   713 00B18 1C2E C        	RETL	@(46)
   714 00B19 1C07 C        	RETL	@(7)
   715 00B1A 1C2E C        	RETL	@(46)
   716 00B1B 1C07 C        	RETL	@(7)
   717 00B1C 1C2F C        	RETL	@(47)
   718            C        
   719            C        
   720            C        /*************************************************
   721            C        LcdUpdateBit
   722            C        更新一个位
   723            C        输入：	ax	-- 需要显示的段码
   724            C        	exa	-- 段码的位
   725            C        	bx	-- common口
   726            C        	exb	-- segment口
   727            C        *************************************************/
   728 00B1D      C        LcdUpdateBit:
   729            C      M 	MOV	_RC,exb
       00B1D 0417     1     MOV A, EXB 
       00B1E 004C     1     MOV  _RC ,A
   730            C      M 	JPNB	bx,3,$+3
       00B1F 0ED6     1     JBS  BX , 3 
       00B20 1723     1     JMP ( $ + 3 ),
   731            C      M 	ADD	_RC,@(0x40)			; 当前lcd的地址
       00B21 1840     1     MOV A,@( 64 )
       00B22 03CC     1     ADD  _RC ,A
   732            C      M 	IOW	_IOCB,_RC
       00B23 040C     1     MOV A, _RC 
       00B24 000B     1     IOW  _IOCB ,
   733 00B25 0414 C        	MOV	A,exa
   734            C      M 	LCALL	TabSetBit
                      2  M  PAGE #( TABSETBIT ),
       00B26 1E8D     2     PAGE ( TABSETBIT / 1024 ),
       00B27 120D     1     CALL ( TABSETBIT % 1024 ),
                      2  M  PAGE #( $ ),
       00B28 1E82     2     PAGE ( $ / 1024 ),
   735 00B29 0293 C        	AND	A,ax
   736            C      M 	JPNZ	LcdUpdateBit_1
       00B2A 0E83     1     JBS  _STATUS , Z 
       00B2B 1734     1     JMP  LCDUPDATEBIT_1 ,
   737 00B2C      C        LcdUpdateBit_0:
   738            C      M 	ANDA	bx,@(0x07)
       00B2C 1807     1     MOV A,@( 7 )
       00B2D 0296     1     AND A, BX 
   739            C      M 	LCALL	TabSetBit
                      2  M  PAGE #( TABSETBIT ),
       00B2E 1E8D     2     PAGE ( TABSETBIT / 1024 ),
       00B2F 120D     1     CALL ( TABSETBIT % 1024 ),
                      2  M  PAGE #( $ ),
       00B30 1E82     2     PAGE ( $ / 1024 ),
   740 00B31 1BFF C        	XOR	A,@(0xff)
   741 00B32 02CD C        	AND	_RD,A
   742 00B33 173A C        	JMP	LcdUpdateBit_2
   743 00B34      C        LcdUpdateBit_1:
   744            C      M 	ANDA	bx,@(0x07)
       00B34 1807     1     MOV A,@( 7 )
       00B35 0296     1     AND A, BX 
   745            C      M 	LCALL	TabSetBit
                      2  M  PAGE #( TABSETBIT ),
       00B36 1E8D     2     PAGE ( TABSETBIT / 1024 ),
       00B37 120D     1     CALL ( TABSETBIT % 1024 ),
                      2  M  PAGE #( $ ),
       00B38 1E82     2     PAGE ( $ / 1024 ),
   746 00B39 024D C        	OR	_RD,A
   747 00B3A      C        LcdUpdateBit_2:
   748            C      M 	IOW	_IOCC,_RD
       00B3A 040D     1     MOV A, _RD 
       00B3B 000C     1     IOW  _IOCC ,
   749 00B3C 0012 C        	RET
   750            C        
   751            C        
   752 00B3D      C        LcdGetCursor:
   753            C      M 	SUBA	_RC,@(128+46)
       00B3D 18AE     1     MOV A,@(( 128 + 46 ))
       00B3E 010C     1     SUB A, _RC 
   754            C      M 	JPNC	LcdGetCursor_char
       00B3F 0E03     1     JBS  _STATUS , C 
       00B40 1743     1     JMP  LCDGETCURSOR_CHAR ,
   755 00B41      C        LcdGetCursor_err:
   756 00B41      C        LcdGetCursor_false:
   757 00B41 1C00 C        	RETL	@(0)
   758 00B42      C        LcdGetCursor_true:
   759 00B42 1C01 C        	RETL	@(1)
   760 00B43      C        LcdGetCursor_char:
   761 00B43 0719 C        	SWAPA	cursor
   762 00B44 1A03 C        	AND	A,@(0x03)
   763 00B45 1D03 C        	SUB	A,@(3)
   764            C      M 	JPNZ	LcdGetCursor_false
       00B46 0E83     1     JBS  _STATUS , Z 
       00B47 1741     1     JMP  LCDGETCURSOR_FALSE ,
   765            C      M 	SUBA	_RC,@(128+30)
       00B48 189E     1     MOV A,@(( 128 + 30 ))
       00B49 010C     1     SUB A, _RC 
   766 00B4A 0319 C        	XOR	A,cursor
   767 00B4B 1A0F C        	AND	A,@(0x0f)
   768            C      M 	JPNZ	LcdGetCursor_false
       00B4C 0E83     1     JBS  _STATUS , Z 
       00B4D 1741     1     JMP  LCDGETCURSOR_FALSE ,
   769            C      M 	JPNB	cursor,7,LcdGetCursor_false
       00B4E 0FD9     1     JBS  CURSOR , 7 
       00B4F 1741     1     JMP  LCDGETCURSOR_FALSE ,
   770 00B50 1742 C        	JMP	LcdGetCursor_true
   771            C        
   772            C        
   773            C        
   774            C        	
   775            C        
   776            C        
   777 00B51      C        LcdGetData:
   778            C      M 	MOV	ax,_RD
       00B51 040D     1     MOV A, _RD 
       00B52 0053     1     MOV  AX ,A
   779            C      M 	SUBA	_RC,@(128+1)
       00B53 1881     1     MOV A,@(( 128 + 1 ))
       00B54 010C     1     SUB A, _RC 
   780            C      M 	JPNC	LcdGetData_err
       00B55 0E03     1     JBS  _STATUS , C 
       00B56 1767     1     JMP  LCDGETDATA_ERR ,
   781            C      M 	SUBA	_RC,@(128+4)
       00B57 1884     1     MOV A,@(( 128 + 4 ))
       00B58 010C     1     SUB A, _RC 
   782            C      M 	JPNC	LcdGetData_stamp
       00B59 0E03     1     JBS  _STATUS , C 
       00B5A 176A     1     JMP  LCDGETDATA_STAMP ,
   783            C      M 	SUBA	_RC,@(128+14)
       00B5B 188E     1     MOV A,@(( 128 + 14 ))
       00B5C 010C     1     SUB A, _RC 
   784            C      M 	JPNC	LcdGetData_num1
       00B5D 0E03     1     JBS  _STATUS , C 
       00B5E 1774     1     JMP  LCDGETDATA_NUM1 ,
   785            C      M 	SUBA	_RC,@(128+30)
       00B5F 189E     1     MOV A,@(( 128 + 30 ))
       00B60 010C     1     SUB A, _RC 
   786            C      M 	JPNC	LcdGetData_num2
       00B61 0E03     1     JBS  _STATUS , C 
       00B62 1798     1     JMP  LCDGETDATA_NUM2 ,
   787            C      M 	SUBA	_RC,@(128+46)
       00B63 18AE     1     MOV A,@(( 128 + 46 ))
       00B64 010C     1     SUB A, _RC 
   788            C      M 	JPNC	LcdGetData_char
       00B65 0E03     1     JBS  _STATUS , C 
       00B66 17BC     1     JMP  LCDGETDATA_CHAR ,
   789 00B67      C        LcdGetData_err:
   790            C      M 	MOV	ax,@(0)
       00B67 1800     1     MOV A,@( 0 )
       00B68 0053     1     MOV  AX ,A
   791 00B69 17E6 C        	JMP	LcdGetData_ret
   792 00B6A      C        LcdGetData_stamp:
   793            C      M 	JPNB	sys_flag,LCDFLASHSTATUS,LcdGetData_ret
       00B6A 0E1D     1     JBS  SYS_FLAG , LCDFLASHSTATUS 
       00B6B 17E6     1     JMP  LCDGETDATA_RET ,
   794            C      M 	SUBA	_RC,@(128+1)
       00B6C 1881     1     MOV A,@(( 128 + 1 ))
       00B6D 010C     1     SUB A, _RC 
   795 00B6E 1F71 C        	ADD	A,@(0x70+1)
   796 00B6F 004C C        	MOV	_RC,A
   797            C      M 	XORA	_RD,@(0xff)
       00B70 18FF     1     MOV A,@( 255 )
       00B71 030D     1     XOR A, _RD 
   798 00B72 02D3 C        	AND	ax,A
   799 00B73 17E6 C        	JMP	LcdGetData_ret
   800 00B74      C        LcdGetData_num1:
   801            C        
   802 00B74 0719 C        	SWAPA	cursor
   803 00B75 1A03 C        	AND	A,@(0x03)
   804 00B76 1D01 C        	SUB	A,@(1)
   805            C      M 	JPNZ	LcdGetData_num1_0
       00B77 0E83     1     JBS  _STATUS , Z 
       00B78 1784     1     JMP  LCDGETDATA_NUM1_0 ,
   806            C      M 	SUBA	_RC,@(128+4)
       00B79 1884     1     MOV A,@(( 128 + 4 ))
       00B7A 010C     1     SUB A, _RC 
   807 00B7B 0319 C        	XOR	A,cursor
   808 00B7C 1A0F C        	AND	A,@(0x0f)
   809            C      M 	JPNZ	LcdGetData_num1_0
       00B7D 0E83     1     JBS  _STATUS , Z 
       00B7E 1784     1     JMP  LCDGETDATA_NUM1_0 ,
   810            C      M 	JPNB	cursor,7,LcdGetData_ret
       00B7F 0FD9     1     JBS  CURSOR , 7 
       00B80 17E6     1     JMP  LCDGETDATA_RET ,
   811            C      M 	MOV	ax,@(127)
       00B81 187F     1     MOV A,@( 127 )
       00B82 0053     1     MOV  AX ,A
   812 00B83 17E6 C        	JMP	LcdGetData_ret
   813            C        
   814 00B84      C        LcdGetData_num1_0:
   815            C      M 	JPNB	sys_flag,LCDFLASHSTATUS,LcdGetData_ret
       00B84 0E1D     1     JBS  SYS_FLAG , LCDFLASHSTATUS 
       00B85 17E6     1     JMP  LCDGETDATA_RET ,
   816            C      M 	SUBA	_RC,@(128+4+8)
       00B86 188C     1     MOV A,@((( 128 + 4 )+ 8 ))
       00B87 010C     1     SUB A, _RC 
   817            C      M 	JPC	LcdGetData_num1_1
       00B88 0C03     1     JBC  _STATUS , C 
       00B89 1792     1     JMP  LCDGETDATA_NUM1_1 ,
   818            C      M 	SUBA	_RC,@(128+4)
       00B8A 1884     1     MOV A,@(( 128 + 4 ))
       00B8B 010C     1     SUB A, _RC 
   819            C      M 	LCALL	TabSetBit
                      2  M  PAGE #( TABSETBIT ),
       00B8C 1E8D     2     PAGE ( TABSETBIT / 1024 ),
       00B8D 120D     1     CALL ( TABSETBIT % 1024 ),
                      2  M  PAGE #( $ ),
       00B8E 1E82     2     PAGE ( $ / 1024 ),
   820            C        	;DISI
   821            C        	;MOV	int_ax,A
   822 00B8F 0063 C        	MOV	r0_bx,A
   823 00B90 1874 C        	MOV	A,@(0x70+4)
   824 00B91 17E0 C        	JMP	LcdGetData_ascii
   825 00B92      C        LcdGetData_num1_1:
   826            C      M 	LCALL	TabSetBit
                      2  M  PAGE #( TABSETBIT ),
       00B92 1E8D     2     PAGE ( TABSETBIT / 1024 ),
       00B93 120D     1     CALL ( TABSETBIT % 1024 ),
                      2  M  PAGE #( $ ),
       00B94 1E82     2     PAGE ( $ / 1024 ),
   827            C        	;DISI
   828            C        	;MOV	int_ax,A
   829 00B95 0063 C        	MOV	r0_bx,A
   830 00B96 1875 C        	MOV	A,@(0x70+5)
   831 00B97 17E0 C        	JMP	LcdGetData_ascii
   832 00B98      C        LcdGetData_num2:
   833            C        
   834 00B98 0719 C        	SWAPA	cursor
   835 00B99 1A03 C        	AND	A,@(0x03)
   836 00B9A 1D02 C        	SUB	A,@(2)
   837            C      M 	JPNZ	LcdGetData_num2_0
       00B9B 0E83     1     JBS  _STATUS , Z 
       00B9C 17A8     1     JMP  LCDGETDATA_NUM2_0 ,
   838            C      M 	SUBA	_RC,@(128+14)
       00B9D 188E     1     MOV A,@(( 128 + 14 ))
       00B9E 010C     1     SUB A, _RC 
   839 00B9F 0319 C        	XOR	A,cursor
   840 00BA0 1A0F C        	AND	A,@(0x0f)
   841            C      M 	JPNZ	LcdGetData_num2_0
       00BA1 0E83     1     JBS  _STATUS , Z 
       00BA2 17A8     1     JMP  LCDGETDATA_NUM2_0 ,
   842            C      M 	JPNB	cursor,7,LcdGetData_ret
       00BA3 0FD9     1     JBS  CURSOR , 7 
       00BA4 17E6     1     JMP  LCDGETDATA_RET ,
   843            C      M 	MOV	ax,@(127)
       00BA5 187F     1     MOV A,@( 127 )
       00BA6 0053     1     MOV  AX ,A
   844 00BA7 17E6 C        	JMP	LcdGetData_ret
   845            C        
   846 00BA8      C        LcdGetData_num2_0:
   847            C      M 	JPNB	sys_flag,LCDFLASHSTATUS,LcdGetData_ret
       00BA8 0E1D     1     JBS  SYS_FLAG , LCDFLASHSTATUS 
       00BA9 17E6     1     JMP  LCDGETDATA_RET ,
   848            C      M 	SUBA	_RC,@(128+14+8)
       00BAA 1896     1     MOV A,@((( 128 + 14 )+ 8 ))
       00BAB 010C     1     SUB A, _RC 
   849            C      M 	JPC	LcdGetData_num2_1
       00BAC 0C03     1     JBC  _STATUS , C 
       00BAD 17B6     1     JMP  LCDGETDATA_NUM2_1 ,
   850            C      M 	SUBA	_RC,@(128+14)
       00BAE 188E     1     MOV A,@(( 128 + 14 ))
       00BAF 010C     1     SUB A, _RC 
   851            C      M 	LCALL	TabSetBit
                      2  M  PAGE #( TABSETBIT ),
       00BB0 1E8D     2     PAGE ( TABSETBIT / 1024 ),
       00BB1 120D     1     CALL ( TABSETBIT % 1024 ),
                      2  M  PAGE #( $ ),
       00BB2 1E82     2     PAGE ( $ / 1024 ),
   852            C        	;DISI
   853            C        	;MOV	int_ax,A
   854 00BB3 0063 C        	MOV	r0_bx,A
   855 00BB4 1876 C        	MOV	A,@(0x70+6)
   856 00BB5 17E0 C        	JMP	LcdGetData_ascii
   857 00BB6      C        LcdGetData_num2_1:
   858            C      M 	LCALL	TabSetBit
                      2  M  PAGE #( TABSETBIT ),
       00BB6 1E8D     2     PAGE ( TABSETBIT / 1024 ),
       00BB7 120D     1     CALL ( TABSETBIT % 1024 ),
                      2  M  PAGE #( $ ),
       00BB8 1E82     2     PAGE ( $ / 1024 ),
   859            C        	;DISI
   860            C        	;MOV	int_ax,A
   861 00BB9 0063 C        	MOV	r0_bx,A
   862 00BBA 1877 C        	MOV	A,@(0x70+7)
   863 00BBB 17E0 C        	JMP	LcdGetData_ascii
   864 00BBC      C        LcdGetData_char:
   865            C        
   866 00BBC 0719 C        	SWAPA	cursor
   867 00BBD 1A03 C        	AND	A,@(0x03)
   868 00BBE 1D03 C        	SUB	A,@(3)
   869            C      M 	JPNZ	LcdGetData_char_0
       00BBF 0E83     1     JBS  _STATUS , Z 
       00BC0 17CC     1     JMP  LCDGETDATA_CHAR_0 ,
   870            C      M 	SUBA	_RC,@(128+30)
       00BC1 189E     1     MOV A,@(( 128 + 30 ))
       00BC2 010C     1     SUB A, _RC 
   871 00BC3 0319 C        	XOR	A,cursor
   872 00BC4 1A0F C        	AND	A,@(0x0f)
   873            C      M 	JPNZ	LcdGetData_char_0
       00BC5 0E83     1     JBS  _STATUS , Z 
       00BC6 17CC     1     JMP  LCDGETDATA_CHAR_0 ,
   874            C      M 	JPNB	cursor,7,LcdGetData_ret
       00BC7 0FD9     1     JBS  CURSOR , 7 
       00BC8 17E6     1     JMP  LCDGETDATA_RET ,
   875            C      M 	MOV	ax,@(127)
       00BC9 187F     1     MOV A,@( 127 )
       00BCA 0053     1     MOV  AX ,A
   876 00BCB 17E6 C        	JMP	LcdGetData_ret
   877            C        
   878 00BCC      C        LcdGetData_char_0:
   879            C      M 	JPNB	sys_flag,LCDFLASHSTATUS,LcdGetData_ret
       00BCC 0E1D     1     JBS  SYS_FLAG , LCDFLASHSTATUS 
       00BCD 17E6     1     JMP  LCDGETDATA_RET ,
   880            C      M 	SUBA	_RC,@(128+30+8)
       00BCE 18A6     1     MOV A,@((( 128 + 30 )+ 8 ))
       00BCF 010C     1     SUB A, _RC 
   881            C      M 	JPC	LcdGetData_char_1
       00BD0 0C03     1     JBC  _STATUS , C 
       00BD1 17DA     1     JMP  LCDGETDATA_CHAR_1 ,
   882            C      M 	SUBA	_RC,@(128+30)
       00BD2 189E     1     MOV A,@(( 128 + 30 ))
       00BD3 010C     1     SUB A, _RC 
   883            C      M 	LCALL	TabSetBit
                      2  M  PAGE #( TABSETBIT ),
       00BD4 1E8D     2     PAGE ( TABSETBIT / 1024 ),
       00BD5 120D     1     CALL ( TABSETBIT % 1024 ),
                      2  M  PAGE #( $ ),
       00BD6 1E82     2     PAGE ( $ / 1024 ),
   884            C        	;DISI
   885            C        	;MOV	int_ax,A
   886 00BD7 0063 C        	MOV	r0_bx,A
   887 00BD8 1878 C        	MOV	A,@(0x70+8)
   888 00BD9 17E0 C        	JMP	LcdGetData_ascii
   889 00BDA      C        LcdGetData_char_1:
   890            C      M 	LCALL	TabSetBit
                      2  M  PAGE #( TABSETBIT ),
       00BDA 1E8D     2     PAGE ( TABSETBIT / 1024 ),
       00BDB 120D     1     CALL ( TABSETBIT % 1024 ),
                      2  M  PAGE #( $ ),
       00BDC 1E82     2     PAGE ( $ / 1024 ),
   891            C        	;DISI
   892            C        	;MOV	int_ax,A
   893 00BDD 0063 C        	MOV	r0_bx,A
   894 00BDE 1879 C        	MOV	A,@(0x70+9)
   895 00BDF 17E0 C        	JMP	LcdGetData_ascii
   896            C        	
   897 00BE0      C        LcdGetData_ascii:
   898 00BE0 004C C        	MOV	_RC,A
   899            C        	;ANDA	_RD,int_ax
   900            C      M 	ANDA	_RD,r0_bx
       00BE1 0423     1     MOV A, R0_BX 
       00BE2 028D     1     AND A, _RD 
   901            C      M 	JPZ	$+2
       00BE3 0C83     1     JBC  _STATUS , Z 
       00BE4 17E6     1     JMP ( $ + 2 ),
   902 00BE5 00D3 C        	CLR	ax
   903            C        	;ENI
   904 00BE6      C        LcdGetData_ret:
   905 00BE6 0413 C        	MOV	A,ax
   906 00BE7 0012 C        	RET
   907            C        	
   908            C        	
   909            C        
   204                     INCLUDE	"vga.asm"
     1            C        
     2            C        ORG	0x0c00
     3 00C00      C        VGA:
     4            C        
     5 00C00      C        VgaStamp1:
     6 00C00 0053 C        	MOV	ax,A
     7            C      M 	MOV	_RC,@(128+1)
       00C01 1881     1     MOV A,@(( 128 + 1 ))
       00C02 004C     1     MOV  _RC ,A
     8 00C03 140B C        	JMP	VgaStamp
     9 00C04      C        VgaStamp2:
    10 00C04 0053 C        	MOV	ax,A
    11            C      M 	MOV	_RC,@(128+2)
       00C05 1882     1     MOV A,@(( 128 + 2 ))
       00C06 004C     1     MOV  _RC ,A
    12 00C07 140B C        	JMP	VgaStamp
    13 00C08      C        VgaStamp3:
    14 00C08 0053 C        	MOV	ax,A
    15            C      M 	MOV	_RC,@(128+3)
       00C09 1883     1     MOV A,@(( 128 + 3 ))
       00C0A 004C     1     MOV  _RC ,A
    16 00C0B      C        VgaStamp:
    17            C      M 	BLOCK	0
       00C0B 1840     1     MOV A,@((( 0 << 1 )+ VALUE_IOCA ))
       00C0C 000A     1     IOW  _IOCA ,
    18            C      M 	MOV	_RD,ax
       00C0D 0413     1     MOV A, AX 
       00C0E 004D     1     MOV  _RD ,A
    19 00C0F 0012 C        	RET
    20            C        
    21 00C10      C        VgaNum1:
    22 00C10 0053 C        	MOV	ax,A
    23            C      M 	MOV	_RC,@(128+48)
       00C11 18B0     1     MOV A,@(( 128 + 48 ))
       00C12 004C     1     MOV  _RC ,A
    24            C      M 	MOV	cnt,@(10)
       00C13 180A     1     MOV A,@( 10 )
       00C14 0055     1     MOV  CNT ,A
    25 00C15 1422 C        	JMP	VgaLcd
    26            C        
    27 00C16      C        VgaNum2:
    28 00C16 0053 C        	MOV	ax,A
    29            C      M 	MOV	_RC,@(128+60)
       00C17 18BC     1     MOV A,@(( 128 + 60 ))
       00C18 004C     1     MOV  _RC ,A
    30            C      M 	MOV	cnt,@(32)
       00C19 1820     1     MOV A,@( 32 )
       00C1A 0055     1     MOV  CNT ,A
    31 00C1B 1422 C        	JMP	VgaLcd
    32            C        
    33 00C1C      C        VgaChar:
    34 00C1C 0053 C        	MOV	ax,A
    35            C      M 	MOV	_RC,@(128+94)
       00C1D 18DE     1     MOV A,@(( 128 + 94 ))
       00C1E 004C     1     MOV  _RC ,A
    36            C      M 	MOV	cnt,@(32)
       00C1F 1820     1     MOV A,@( 32 )
       00C20 0055     1     MOV  CNT ,A
    37 00C21 1422 C        	JMP	VgaLcd
    38            C        
    39 00C22      C        VgaLcd:
    40            C      M 	BLOCK	0
       00C22 1840     1     MOV A,@((( 0 << 1 )+ VALUE_IOCA ))
       00C23 000A     1     IOW  _IOCA ,
    41 00C24 0413 C        	MOV	A,ax
    42            C      M 	JPZ	VgaLcd_end
       00C25 0C83     1     JBC  _STATUS , Z 
       00C26 1470     1     JMP  VGALCD_END ,
    43            C      M 	JPNB	_RD,7,VgaLcd_begin
       00C27 0FCD     1     JBS  _RD , 7 
       00C28 1434     1     JMP  VGALCD_BEGIN ,
    44 00C29 054C C        	INC	_RC
    45            C      M 	SUBA	_RD,cnt
       00C2A 0415     1     MOV A, CNT 
       00C2B 010D     1     SUB A, _RD 
    46            C      M 	JPC	VgaLcd_full
       00C2C 0C03     1     JBC  _STATUS , C 
       00C2D 143D     1     JMP  VGALCD_FULL ,
    47 00C2E 054D C        	INC	_RD
    48 00C2F      C        VgaLcd_capital:
    49            C        	/*
    50            C        	MOV	bx,_RD
    51            C        	DEC	_RC
    52            C        	
    53            C        	SWAPA	_RD
    54            C        	AND	A,@(0x07)
    55            C        	TBL
    56            C        	JMP	VgaLcd_normal
    57            C        	JMP	VgaLcd_all
    58            C        	JMP	VgaLcd_word
    59            C        	JMP	VgaLcd_char
    60            C        	JMP	VgaLcd_letter
    61            C        	JMP	VgaLcd_lower
    62            C        	JMP	VgaLcd_normal
    63            C        	JMP	VgaLcd_normal
    64            C        VgaLcd_normal:
    65            C        	JMP	VgaLcd_ret
    66            C        VgaLcd_all:
    67            C        	JMP	VgaLcd_caps
    68            C        VgaLcd_word:				; 每个单词的第一个字符大写
    69            C        	MOV	exa,_RC
    70            C        	CLR	exb
    71            C        	SUBA	bx,@(2)
    72            C        	JPNC	VgaLcd_word_1
    73            C        	ADD	_RC,bx
    74            C        	MOV	A,_RD
    75            C        	CALL	VgaGetCharType		; 得到上一个字符的类型
    76            C        	MOV	exb,A
    77            C        VgaLcd_word_1:
    78            C        	SUBA	exb,@(2)
    79            C        	JPNC	VgaLcd_caps
    80            C        	JMP	VgaLcd_ret
    81            C        VgaLcd_char:				; 首字符大写
    82            C        	SUBA	bx,@(1)
    83            C        	JPNZ	VgaLcd_ret
    84            C        	AND	_RD,@(0x8f)
    85            C        	JMP	VgaLcd_caps
    86            C        VgaLcd_letter:				; 首字母大写
    87            C        	MOV	A,ax
    88            C        	CALL	VgaGetCharType		; 得到当前字符的类型
    89            C        	SUB	A,@(2)
    90            C        	JPC	VgaLcd_ret
    91            C        	AND	_RD,@(0x8f)
    92            C        	JMP	VgaLcd_caps
    93            C        VgaLcd_lower:				; 第一个小写字母大写
    94            C        	MOV	A,ax
    95            C        	CALL	VgaGetCharType
    96            C        	SUB	A,@(6)
    97            C        	JPC	VgaLcd_ret
    98            C        	AND	_RD,@(0x8f)
    99            C        	JMP	VgaLcd_caps
   100            C        VgaLcd_caps:
   101            C        	MOV	A,ax
   102            C        	CALL	VgaGetCharType
   103            C        	CALL	VgaLetterCaps
   104            C        	SUB	ax,A
   105            C        	
   106            C        
   107            C        VgaLcd_ret:
   108            C        	INC	_RC
   109            C        	*/
   110            C      M 	ADD	_RC,_RD
       00C2F 040D     1     MOV A, _RD 
       00C30 03CC     1     ADD  _RC ,A
   111            C      M 	MOV	_RD,ax
       00C31 0413     1     MOV A, AX 
       00C32 004D     1     MOV  _RD ,A
   112 00C33 0012 C        	RET
   113            C        
   114 00C34      C        VgaLcd_begin:
   115            C      M 	MOV	_RD,ax
       00C34 0413     1     MOV A, AX 
       00C35 004D     1     MOV  _RD ,A
   116 00C36 054C C        	INC	_RC
   117 00C37 0555 C        	INC	cnt			; 清空包括计数器
   118 00C38 00D3 C        	CLR	ax
   119            C      M 	LCALL	LibClearRam
                      2  M  PAGE #( LIBCLEARRAM ),
       00C39 1E81     2     PAGE ( LIBCLEARRAM / 1024 ),
       00C3A 111D     1     CALL ( LIBCLEARRAM % 1024 ),
                      2  M  PAGE #( $ ),
       00C3B 1E83     2     PAGE ( $ / 1024 ),
   120 00C3C 0012 C        	RET
   121            C        	
   122 00C3D      C        VgaLcd_full:
   123            C      M 	MOV	exb,ax
       00C3D 0413     1     MOV A, AX 
       00C3E 0057     1     MOV  EXB ,A
   124            C      M 	MOV	bx,_RC
       00C3F 040C     1     MOV A, _RC 
       00C40 0056     1     MOV  BX ,A
   125            C      M 	MOV	_RC,@(0x30)
       00C41 1830     1     MOV A,@( 48 )
       00C42 004C     1     MOV  _RC ,A
   126            C      M 	MOV	_RD,bx
       00C43 0416     1     MOV A, BX 
       00C44 004D     1     MOV  _RD ,A
   127 00C45 054C C        	INC	_RC
   128            C      M 	MOV	_RD,cnt
       00C46 0415     1     MOV A, CNT 
       00C47 004D     1     MOV  _RD ,A
   129 00C48 0556 C        	INC	bx
   130            C      M 	ADDA	bx,@(1)
       00C49 1801     1     MOV A,@( 1 )
       00C4A 0396     1     ADD A, BX 
   131 00C4B 0053 C        	MOV	ax,A
   132            C      M 	LCALL	LibCopyRam
                      2  M  PAGE #( LIBCOPYRAM ),
       00C4C 1E81     2     PAGE ( LIBCOPYRAM / 1024 ),
       00C4D 1126     1     CALL ( LIBCOPYRAM % 1024 ),
                      2  M  PAGE #( $ ),
       00C4E 1E83     2     PAGE ( $ / 1024 ),
   133            C      M 	MOV	_RC,@(0x31)
       00C4F 1831     1     MOV A,@( 49 )
       00C50 004C     1     MOV  _RC ,A
   134            C      M 	MOV	cnt,_RD
       00C51 040D     1     MOV A, _RD 
       00C52 0055     1     MOV  CNT ,A
   135 00C53 01CC C        	DEC	_RC
   136            C      M 	MOV	_RC,_RD
       00C54 040D     1     MOV A, _RD 
       00C55 004C     1     MOV  _RC ,A
   137            C      M 	MOV	ax,exb
       00C56 0417     1     MOV A, EXB 
       00C57 0053     1     MOV  AX ,A
   138 00C58 142F C        	JMP	VgaLcd_capital
   139            C        	
   140            C        	
   141            C      M 	MOV	exb,ax
       00C59 0413     1     MOV A, AX 
       00C5A 0057     1     MOV  EXB ,A
   142            C      M 	ADDA	_RC,@(1)
       00C5B 1801     1     MOV A,@( 1 )
       00C5C 038C     1     ADD A, _RC 
   143 00C5D 0056 C        	MOV	bx,A
   144 00C5E 1F01 C        	ADD	A,@(1)
   145 00C5F 0053 C        	MOV	ax,A
   146 00C60 01D5 C        	DEC	cnt
   147            C      M 	MOV	_RC,@(0x30)
       00C61 1830     1     MOV A,@( 48 )
       00C62 004C     1     MOV  _RC ,A
   148            C      M 	ADDA	bx,cnt
       00C63 0415     1     MOV A, CNT 
       00C64 0396     1     ADD A, BX 
   149 00C65 004D C        	MOV	_RD,A
   150            C      M 	LCALL	LibCopyRam
                      2  M  PAGE #( LIBCOPYRAM ),
       00C66 1E81     2     PAGE ( LIBCOPYRAM / 1024 ),
       00C67 1126     1     CALL ( LIBCOPYRAM % 1024 ),
                      2  M  PAGE #( $ ),
       00C68 1E83     2     PAGE ( $ / 1024 ),
   151            C      M 	MOV	_RC,@(0x30)
       00C69 1830     1     MOV A,@( 48 )
       00C6A 004C     1     MOV  _RC ,A
   152            C      M 	MOV	_RC,_RD
       00C6B 040D     1     MOV A, _RD 
       00C6C 004C     1     MOV  _RC ,A
   153            C      M 	MOV	_RD,exb
       00C6D 0417     1     MOV A, EXB 
       00C6E 004D     1     MOV  _RD ,A
   154            C        	
   155 00C6F 0012 C        	RET
   156            C        	
   157 00C70      C        VgaLcd_end:
   158 00C70 09CD C        	BC	_RD,7			; 复位控制器的起始位
   159 00C71 0012 C        	RET
   160            C        /*
   161            C        ; input: acc
   162            C        VgaGetCharType:
   163            C        	ADD	A,@(0)
   164            C        	JPZ	VgaGetCharType_null
   165            C        	ADD	A,@(256-255)
   166            C        	JPC	VgaGetCharType_lower3
   167            C        	ADD	A,@(255-248)
   168            C        	JPC	VgaGetCharType_lower4
   169            C        	ADD	A,@(248-247)
   170            C        	JPC	VgaGetCharType_other
   171            C        	ADD	A,@(247-224)
   172            C        	JPC	VgaGetCharType_lower4
   173            C        	ADD	A,@(224-223)
   174            C        	JPC	VgaGetCharType_other
   175            C        	ADD	A,@(223-216)
   176            C        	JPC	VgaGetCharType_upper4
   177            C        	ADD	A,@(216-215)
   178            C        	JPC	VgaGetCharType_other
   179            C        	ADD	A,@(215-192)
   180            C        	JPC	VgaGetCharType_upper4
   181            C        	ADD	A,@(192-160)
   182            C        	JPC	VgaGetCharType_other
   183            C        	ADD	A,@(160-159)
   184            C        	JPC	VgaGetCharType_upper3
   185            C        	ADD	A,@(159-158)
   186            C        	JPC	VgaGetCharType_lower2
   187            C        	ADD	A,@(158-157)
   188            C        	JPC	VgaGetCharType_other
   189            C        	ADD	A,@(157-156)
   190            C        	JPC	VgaGetCharType_lower2
   191            C        	ADD	A,@(156-155)
   192            C        	JPC	VgaGetCharType_other
   193            C        	ADD	A,@(155-154)
   194            C        	JPC	VgaGetCharType_lower2
   195            C        	ADD	A,@(154-143)
   196            C        	JPC	VgaGetCharType_other
   197            C        	ADD	A,@(143-142)
   198            C        	JPC	VgaGetCharType_upper2
   199            C        	ADD	A,@(142-141)
   200            C        	JPC	VgaGetCharType_other
   201            C        	ADD	A,@(141-140)
   202            C        	JPC	VgaGetCharType_upper2
   203            C        	ADD	A,@(140-139)
   204            C        	JPC	VgaGetCharType_other
   205            C        	ADD	A,@(139-138)
   206            C        	JPC	VgaGetCharType_upper2
   207            C        	ADD	A,@(138-123)
   208            C        	JPC	VgaGetCharType_other
   209            C        	ADD	A,@(123-97)
   210            C        	JPC	VgaGetCharType_lower1
   211            C        	ADD	A,@(97-91)
   212            C        	JPC	VgaGetCharType_other
   213            C        	ADD	A,@(91-65)
   214            C        	JPC	VgaGetCharType_upper1
   215            C        	ADD	A,@(65-33)
   216            C        	JPC	VgaGetCharType_other
   217            C        	ADD	A,@(33-32)
   218            C        	JPC	VgaGetCharType_blank
   219            C        	JMP	VgaGetCharType_other
   220            C        VgaGetCharType_null:
   221            C        	RETL	@(0)
   222            C        VgaGetCharType_blank:
   223            C        	RETL	@(1)
   224            C        VgaGetCharType_other:
   225            C        	RETL	@(2)
   226            C        VgaGetCharType_upper1:
   227            C        	RETL	@(3)
   228            C        VgaGetCharType_upper2:
   229            C        	RETL	@(4)
   230            C        VgaGetCharType_upper3:
   231            C        	RETL	@(5)
   232            C        VgaGetCharType_upper4:
   233            C        	RETL	@(6)
   234            C        VgaGetCharType_lower1:
   235            C        	RETL	@(7)
   236            C        VgaGetCharType_lower2:
   237            C        	RETL	@(8)
   238            C        VgaGetCharType_lower3:
   239            C        	RETL	@(9)
   240            C        VgaGetCharType_lower4:
   241            C        	RETL	@(10)
   242            C        
   243            C        VgaLetterCaps:
   244            C        	TBL
   245            C        	RETL	@(0)
   246            C        	RETL	@(0)
   247            C        	RETL	@(0)
   248            C        	RETL	@(0)
   249            C        	RETL	@(0)
   250            C        	RETL	@(0)
   251            C        	RETL	@(0)
   252            C        	RETL	@(97-65)
   253            C        	RETL	@(154-138)
   254            C        	RETL	@(255-159)
   255            C        	RETL	@(224-192)
   256            C        */
   257            C        
   258 00C72      C        VgaDrawStamp:
   259 00C72 0BDD C        	BS	sys_flag,STAMP
   260 00C73 1C00 C        	RETL	@(0)
   261 00C74      C        VgaDrawNum1:
   262 00C74 1801 C        	MOV	A,@(1)
   263 00C75 147A C        	JMP	VgaDraw
   264 00C76      C        VgaDrawNum2:
   265 00C76 1802 C        	MOV	A,@(2)
   266 00C77 147A C        	JMP	VgaDraw
   267 00C78      C        VgaDrawChar:
   268 00C78 1803 C        	MOV	A,@(3)
   269 00C79 147A C        	JMP	VgaDraw
   270            C        
   271 00C7A      C        VgaDraw:
   272            C      M 	LCALL	LcdDraw			; 已经指定 block 0
                      2  M  PAGE #( LCDDRAW ),
       00C7A 1E82     2     PAGE ( LCDDRAW / 1024 ),
       00C7B 1012     1     CALL ( LCDDRAW % 1024 ),
                      2  M  PAGE #( $ ),
       00C7C 1E83     2     PAGE ( $ / 1024 ),
   273 00C7D 0413 C        	MOV	A,ax
   274 00C7E 0020 C        	TBL
   275 00C7F 1483 C        	JMP	VgaDraw_stamp
   276 00C80 1484 C        	JMP	VgaDraw_num1
   277 00C81 148D C        	JMP	VgaDraw_num2
   278 00C82 1496 C        	JMP	VgaDraw_char
   279 00C83      C        VgaDraw_stamp:
   280 00C83 0012 C        	RET
   281 00C84      C        VgaDraw_num1:
   282            C      M 	MOV	ax,@(128+50)
       00C84 18B2     1     MOV A,@(( 128 + 50 ))
       00C85 0053     1     MOV  AX ,A
   283            C      M 	MOV	bx,@(128+4)
       00C86 1884     1     MOV A,@(( 128 + 4 ))
       00C87 0056     1     MOV  BX ,A
   284            C      M 	MOV	exb,@(10)
       00C88 180A     1     MOV A,@( 10 )
       00C89 0057     1     MOV  EXB ,A
   285            C      M 	MOV	_RC,@(128+48)
       00C8A 18B0     1     MOV A,@(( 128 + 48 ))
       00C8B 004C     1     MOV  _RC ,A
   286 00C8C 149F C        	JMP	VgaDraw_ascii
   287            C        
   288 00C8D      C        VgaDraw_num2:
   289            C      M 	MOV	ax,@(128+62)
       00C8D 18BE     1     MOV A,@(( 128 + 62 ))
       00C8E 0053     1     MOV  AX ,A
   290            C      M 	MOV	bx,@(128+14)
       00C8F 188E     1     MOV A,@(( 128 + 14 ))
       00C90 0056     1     MOV  BX ,A
   291            C      M 	MOV	exb,@(16)
       00C91 1810     1     MOV A,@( 16 )
       00C92 0057     1     MOV  EXB ,A
   292            C      M 	MOV	_RC,@(128+60)
       00C93 18BC     1     MOV A,@(( 128 + 60 ))
       00C94 004C     1     MOV  _RC ,A
   293 00C95 149F C        	JMP	VgaDraw_ascii
   294            C        
   295 00C96      C        VgaDraw_char:
   296            C      M 	MOV	ax,@(128+96)
       00C96 18E0     1     MOV A,@(( 128 + 96 ))
       00C97 0053     1     MOV  AX ,A
   297            C      M 	MOV	bx,@(128+30)
       00C98 189E     1     MOV A,@(( 128 + 30 ))
       00C99 0056     1     MOV  BX ,A
   298            C      M 	MOV	exb,@(16)
       00C9A 1810     1     MOV A,@( 16 )
       00C9B 0057     1     MOV  EXB ,A
   299            C      M 	MOV	_RC,@(128+94)
       00C9C 18DE     1     MOV A,@(( 128 + 94 ))
       00C9D 004C     1     MOV  _RC ,A
   300 00C9E 149F C        	JMP	VgaDraw_ascii
   301            C        
   302            C        
   303 00C9F      C        VgaDraw_ascii:
   304            C      M 	MOV	exa,_RD
       00C9F 040D     1     MOV A, _RD 
       00CA0 0054     1     MOV  EXA ,A
   305 00CA1 054C C        	INC	_RC
   306 00CA2 054C C        	INC	_RC
   307            C      M 	LCALL	LibGetValidLength32
                      2  M  PAGE #( LIBGETVALIDLENGTH32 ),
       00CA3 1E81     2     PAGE ( LIBGETVALIDLENGTH32 / 1024 ),
       00CA4 12BC     1     CALL ( LIBGETVALIDLENGTH32 % 1024 ),
                      2  M  PAGE #( $ ),
       00CA5 1E83     2     PAGE ( $ / 1024 ),
   308            C      M 	JPZ	VgaDraw_ret
       00CA6 0C83     1     JBC  _STATUS , Z 
       00CA7 14D9     1     JMP  VGADRAW_RET ,
   309 00CA8 0055 C        	MOV	cnt,A
   310            C      M 	ANDA	exa,@(0x03)
       00CA9 1803     1     MOV A,@( 3 )
       00CAA 0294     1     AND A, EXA 
   311 00CAB 0020 C        	TBL
   312 00CAC 14B0 C        	JMP	VgaDraw_ascii_normal
   313 00CAD 14B0 C        	JMP	VgaDraw_ascii_left
   314 00CAE 14B7 C        	JMP	VgaDraw_ascii_right
   315 00CAF 14C3 C        	JMP	VgaDraw_ascii_center
   316 00CB0      C        VgaDraw_ascii_normal:
   317 00CB0      C        VgaDraw_ascii_left:
   318            C      M 	SUBA	cnt,exb
       00CB0 0417     1     MOV A, EXB 
       00CB1 0115     1     SUB A, CNT 
   319            C      M 	JPNC	VgaDraw_shift
       00CB2 0E03     1     JBS  _STATUS , C 
       00CB3 14CE     1     JMP  VGADRAW_SHIFT ,
   320            C      M 	MOV	cnt,exb
       00CB4 0417     1     MOV A, EXB 
       00CB5 0055     1     MOV  CNT ,A
   321 00CB6 14CE C        	JMP	VgaDraw_shift
   322 00CB7      C        VgaDraw_ascii_right:
   323            C      M 	SUBA	cnt,exb
       00CB7 0417     1     MOV A, EXB 
       00CB8 0115     1     SUB A, CNT 
   324            C      M 	JPNC	VgaDraw_ascii_right_1
       00CB9 0E03     1     JBS  _STATUS , C 
       00CBA 14BF     1     JMP  VGADRAW_ASCII_RIGHT_1 ,
   325 00CBB 03D3 C        	ADD	ax,A
   326            C      M 	MOV	cnt,exb
       00CBC 0417     1     MOV A, EXB 
       00CBD 0055     1     MOV  CNT ,A
   327 00CBE 14CE C        	JMP	VgaDraw_shift
   328 00CBF      C        VgaDraw_ascii_right_1:
   329 00CBF 1BFF C        	XOR	A,@(0xff)
   330 00CC0 1F01 C        	ADD	A,@(1)
   331 00CC1 03D6 C        	ADD	bx,A
   332 00CC2 14CE C        	JMP	VgaDraw_shift
   333 00CC3      C        VgaDraw_ascii_center:
   334            C      M 	SUBA	cnt,exb
       00CC3 0417     1     MOV A, EXB 
       00CC4 0115     1     SUB A, CNT 
   335            C      M 	JPNC	VgaDraw_ascii_center_1
       00CC5 0E03     1     JBS  _STATUS , C 
       00CC6 14C8     1     JMP  VGADRAW_ASCII_CENTER_1 ,
   336 00CC7 14B7 C        	JMP	VgaDraw_ascii_right
   337 00CC8      C        VgaDraw_ascii_center_1:
   338 00CC8 1BFF C        	XOR	A,@(0xff)
   339 00CC9 1F01 C        	ADD	A,@(1)
   340 00CCA 0054 C        	MOV	exa,A
   341 00CCB 0614 C        	RRCA	exa
   342 00CCC 03D6 C        	ADD	bx,A
   343 00CCD 14CE C        	JMP	VgaDraw_shift
   344            C        
   345 00CCE      C        VgaDraw_shift:
   346            C      M 	LCALL	LibCopyRam
                      2  M  PAGE #( LIBCOPYRAM ),
       00CCE 1E81     2     PAGE ( LIBCOPYRAM / 1024 ),
       00CCF 1126     1     CALL ( LIBCOPYRAM % 1024 ),
                      2  M  PAGE #( $ ),
       00CD0 1E83     2     PAGE ( $ / 1024 ),
   347            C        	
   348            C      M 	MOV	_RC,@(128+8)
       00CD1 1888     1     MOV A,@(( 128 + 8 ))
       00CD2 004C     1     MOV  _RC ,A
   349            C      M 	SUBA	_RD,@(49)
       00CD3 1831     1     MOV A,@( 49 )
       00CD4 010D     1     SUB A, _RD 
   350            C      M 	JPZ	VgaDraw_ret
       00CD5 0C83     1     JBC  _STATUS , Z 
       00CD6 14D9     1     JMP  VGADRAW_RET ,
   351            C      M 	MOV	_RD,@(32)
       00CD7 1820     1     MOV A,@( 32 )
       00CD8 004D     1     MOV  _RD ,A
   352 00CD9      C        VgaDraw_ret:
   353 00CD9 0012 C        	RET
   354            C        
   355 00CDA      C        VgaBlankStamp:
   356 00CDA 1800 C        	MOV	A,@(0)
   357 00CDB 14E2 C        	JMP	VgaBlank
   358 00CDC      C        VgaBlankNum1:
   359 00CDC 1801 C        	MOV	A,@(1)
   360 00CDD 14E2 C        	JMP	VgaBlank
   361 00CDE      C        VgaBlankNum2:
   362 00CDE 1802 C        	MOV	A,@(2)
   363 00CDF 14E2 C        	JMP	VgaBlank
   364 00CE0      C        VgaBlankChar:
   365 00CE0 1803 C        	MOV	A,@(3)
   366 00CE1 14E2 C        	JMP	VgaBlank
   367            C        
   368 00CE2      C        VgaBlank:
   369            C      M 	LCALL	LcdDraw
                      2  M  PAGE #( LCDDRAW ),
       00CE2 1E82     2     PAGE ( LCDDRAW / 1024 ),
       00CE3 1012     1     CALL ( LCDDRAW % 1024 ),
                      2  M  PAGE #( $ ),
       00CE4 1E83     2     PAGE ( $ / 1024 ),
   370 00CE5 0413 C        	MOV	A,ax
   371 00CE6 0020 C        	TBL
   372 00CE7 14EB C        	JMP	VgaBlank_stamp
   373 00CE8 14F0 C        	JMP	VgaBlank_num1
   374 00CE9 14F5 C        	JMP	VgaBlank_num2
   375 00CEA 14FA C        	JMP	VgaBlank_char
   376 00CEB      C        VgaBlank_stamp:
   377            C      M 	MOV	_RC,@(128+1)
       00CEB 1881     1     MOV A,@(( 128 + 1 ))
       00CEC 004C     1     MOV  _RC ,A
   378            C      M 	MOV	cnt,@(3)
       00CED 1803     1     MOV A,@( 3 )
       00CEE 0055     1     MOV  CNT ,A
   379 00CEF 14FE C        	JMP	VgaBlank_ret
   380 00CF0      C        VgaBlank_num1:
   381            C      M 	MOV	_RC,@(128+4)
       00CF0 1884     1     MOV A,@(( 128 + 4 ))
       00CF1 004C     1     MOV  _RC ,A
   382            C      M 	MOV	cnt,@(10)
       00CF2 180A     1     MOV A,@( 10 )
       00CF3 0055     1     MOV  CNT ,A
   383 00CF4 14FE C        	JMP	VgaBlank_ret
   384 00CF5      C        VgaBlank_num2:
   385            C      M 	MOV	_RC,@(128+14)
       00CF5 188E     1     MOV A,@(( 128 + 14 ))
       00CF6 004C     1     MOV  _RC ,A
   386            C      M 	MOV	cnt,@(16)
       00CF7 1810     1     MOV A,@( 16 )
       00CF8 0055     1     MOV  CNT ,A
   387 00CF9 14FE C        	JMP	VgaBlank_ret
   388 00CFA      C        VgaBlank_char:
   389            C      M 	MOV	_RC,@(128+30)
       00CFA 189E     1     MOV A,@(( 128 + 30 ))
       00CFB 004C     1     MOV  _RC ,A
   390            C      M 	MOV	cnt,@(16)
       00CFC 1810     1     MOV A,@( 16 )
       00CFD 0055     1     MOV  CNT ,A
   391 00CFE      C        VgaBlank_ret:
   392 00CFE 00D3 C        	CLR	ax
   393            C      M 	LCALL	LibClearRam
                      2  M  PAGE #( LIBCLEARRAM ),
       00CFF 1E81     2     PAGE ( LIBCLEARRAM / 1024 ),
       00D00 111D     1     CALL ( LIBCLEARRAM % 1024 ),
                      2  M  PAGE #( $ ),
       00D01 1E83     2     PAGE ( $ / 1024 ),
   394 00D02 0012 C        	RET
   395            C        
   396            C        ; input:	acc
   397            C        ;		.7 =1 flash
   398            C        ;		.6~.4	flash bit
   399            C        ;		.3~.0	flash address
   400            C        
   401 00D03      C        VgaFlash:
   402 00D03 0053 C        	MOV	ax,A
   403 00D04 0713 C        	SWAPA	ax
   404 00D05 1A07 C        	AND	A,@(0x07)
   405            C      M 	LCALL	TabSetBit
                      2  M  PAGE #( TABSETBIT ),
       00D06 1E8D     2     PAGE ( TABSETBIT / 1024 ),
       00D07 120D     1     CALL ( TABSETBIT % 1024 ),
                      2  M  PAGE #( $ ),
       00D08 1E83     2     PAGE ( $ / 1024 ),
   406 00D09 0054 C        	MOV	exa,A
   407            C      M 	BLOCK	0
       00D0A 1840     1     MOV A,@((( 0 << 1 )+ VALUE_IOCA ))
       00D0B 000A     1     IOW  _IOCA ,
   408            C      M 	MOV	_RC,@(0x70+1)
       00D0C 1871     1     MOV A,@(( 112 + 1 ))
       00D0D 004C     1     MOV  _RC ,A
   409            C      M 	ANDA	ax,@(0x0f)
       00D0E 180F     1     MOV A,@( 15 )
       00D0F 0293     1     AND A, AX 
   410 00D10 03CC C        	ADD	_RC,A
   411            C        	
   412            C      M 	JPNB	ax,7,VgaFlash_off
       00D11 0FD3     1     JBS  AX , 7 
       00D12 1516     1     JMP  VGAFLASH_OFF ,
   413 00D13      C        VgaFlash_on:
   414            C      M 	OR	_RD,exa
       00D13 0414     1     MOV A, EXA 
       00D14 024D     1     OR  _RD ,A
   415 00D15 1519 C        	JMP	VgaFlash_chk
   416 00D16      C        VgaFlash_off:
   417            C      M 	XORA	exa,@(0xff)
       00D16 18FF     1     MOV A,@( 255 )
       00D17 0314     1     XOR A, EXA 
   418 00D18 02CD C        	AND	_RD,A
   419 00D19      C        VgaFlash_chk:
   420 00D19 00D3 C        	CLR	ax
   421            C      M 	MOV	_RC,@(0x71)
       00D1A 1871     1     MOV A,@( 113 )
       00D1B 004C     1     MOV  _RC ,A
   422 00D1C 040D C        	MOV	A,_RD
   423            C      M 	JPNZ	VgaFlash_chk_stamp
       00D1D 0E83     1     JBS  _STATUS , Z 
       00D1E 1527     1     JMP  VGAFLASH_CHK_STAMP ,
   424 00D1F 054C C        	INC	_RC
   425 00D20 040D C        	MOV	A,_RD
   426            C      M 	JPNZ	VgaFlash_chk_stamp
       00D21 0E83     1     JBS  _STATUS , Z 
       00D22 1527     1     JMP  VGAFLASH_CHK_STAMP ,
   427 00D23 054C C        	INC	_RC
   428 00D24 040D C        	MOV	A,_RD
   429            C      M 	JPZ	VgaFlash_chk_1
       00D25 0C83     1     JBC  _STATUS , Z 
       00D26 1528     1     JMP  VGAFLASH_CHK_1 ,
   430 00D27      C        VgaFlash_chk_stamp:
   431 00D27 0BD3 C        	BS	ax,7
   432 00D28      C        VgaFlash_chk_1:
   433            C      M 	MOV	_RC,@(0x74)
       00D28 1874     1     MOV A,@( 116 )
       00D29 004C     1     MOV  _RC ,A
   434 00D2A 040D C        	MOV	A,_RD
   435            C      M 	JPNZ	VgaFlash_chk_num1
       00D2B 0E83     1     JBS  _STATUS , Z 
       00D2C 1531     1     JMP  VGAFLASH_CHK_NUM1 ,
   436 00D2D 054C C        	INC	_RC
   437 00D2E 040D C        	MOV	A,_RD
   438            C      M 	JPZ	VgaFlash_chk_2
       00D2F 0C83     1     JBC  _STATUS , Z 
       00D30 1532     1     JMP  VGAFLASH_CHK_2 ,
   439 00D31      C        VgaFlash_chk_num1:
   440 00D31 0B93 C        	BS	ax,6
   441 00D32      C        VgaFlash_chk_2:
   442            C      M 	MOV	_RC,@(0x76)
       00D32 1876     1     MOV A,@( 118 )
       00D33 004C     1     MOV  _RC ,A
   443 00D34 040D C        	MOV	A,_RD
   444            C      M 	JPNZ	VgaFlash_chk_num2
       00D35 0E83     1     JBS  _STATUS , Z 
       00D36 153B     1     JMP  VGAFLASH_CHK_NUM2 ,
   445 00D37 054C C        	INC	_RC
   446 00D38 040D C        	MOV	A,_RD
   447            C      M 	JPZ	VgaFlash_chk_3
       00D39 0C83     1     JBC  _STATUS , Z 
       00D3A 153C     1     JMP  VGAFLASH_CHK_3 ,
   448 00D3B      C        VgaFlash_chk_num2:
   449 00D3B 0B53 C        	BS	ax,5
   450 00D3C      C        VgaFlash_chk_3:
   451            C      M 	MOV	_RC,@(0x78)
       00D3C 1878     1     MOV A,@( 120 )
       00D3D 004C     1     MOV  _RC ,A
   452 00D3E 040D C        	MOV	A,_RD
   453            C      M 	JPNZ	VgaFlash_chk_char
       00D3F 0E83     1     JBS  _STATUS , Z 
       00D40 1545     1     JMP  VGAFLASH_CHK_CHAR ,
   454 00D41 054C C        	INC	_RC
   455 00D42 040D C        	MOV	A,_RD
   456            C      M 	JPZ	VgaFlash_chk_4
       00D43 0C83     1     JBC  _STATUS , Z 
       00D44 1546     1     JMP  VGAFLASH_CHK_4 ,
   457 00D45      C        VgaFlash_chk_char:
   458 00D45 0B13 C        	BS	ax,4
   459 00D46      C        VgaFlash_chk_4:
   460            C      M 	MOV	_RC,@(0x70)
       00D46 1870     1     MOV A,@( 112 )
       00D47 004C     1     MOV  _RC ,A
   461            C      M 	MOV	_RD,ax
       00D48 0413     1     MOV A, AX 
       00D49 004D     1     MOV  _RD ,A
   462            C        	
   463 00D4A 0012 C        	RET
   464            C        	
   465            C        ; 字符串输入
   466            C        ; input:	acch -- string ID
   467            C        ; output:	none
   468            C        ; note:
   469            C        ; 	字符串输入，只限于第三行
   470            C        VGASTR	MACRO	#STR_ADDR
   471            C        	MOV	A,_RD
   472            C        	LCALL	STR_ADDR
   473            C        	JMP	VgaString_loop1
   474            C        	ENDM
   475            C        
   476 00D4B      C        VgaString:
   477 00D4B 0053 C        	MOV	ax,A
   478            C      M 	BLOCK	0
       00D4C 1840     1     MOV A,@((( 0 << 1 )+ VALUE_IOCA ))
       00D4D 000A     1     IOW  _IOCA ,
   479            C      M 	MOV	_RC,@(0x7a)
       00D4E 187A     1     MOV A,@( 122 )
       00D4F 004C     1     MOV  _RC ,A
   480            C      M 	MOV	_RD,ax
       00D50 0413     1     MOV A, AX 
       00D51 004D     1     MOV  _RD ,A
   481            C      M 	MOV	_RC,@(0x7b)
       00D52 187B     1     MOV A,@( 123 )
       00D53 004C     1     MOV  _RC ,A
   482 00D54 00CD C        	CLR	_RD
   483            C        
   484 00D55      C        VgaString_loop:
   485            C      M 	MOV	_RC,@(0x7a)
       00D55 187A     1     MOV A,@( 122 )
       00D56 004C     1     MOV  _RC ,A
   486            C      M 	MOV	ax,_RD
       00D57 040D     1     MOV A, _RD 
       00D58 0053     1     MOV  AX ,A
   487 00D59 054C C        	INC	_RC
   488 00D5A 0413 C        	MOV	A,ax
   489 00D5B 0020 C        	TBL
   490 00D5C 15B5 C        	JMP	VgaString_000
   491 00D5D 15BA C        	JMP	VgaString_001
   492 00D5E 15BF C        	JMP	VgaString_002
   493 00D5F 15C4 C        	JMP	VgaString_003
   494 00D60 15C9 C        	JMP	VgaString_004
   495 00D61 15CE C        	JMP	VgaString_005
   496 00D62 15D3 C        	JMP	VgaString_006
   497 00D63 15D8 C        	JMP	VgaString_007
   498 00D64 15DD C        	JMP	VgaString_008
   499 00D65 15E2 C        	JMP	VgaString_009
   500 00D66 15E7 C        	JMP	VgaString_010
   501 00D67 15EC C        	JMP	VgaString_011
   502 00D68 15F1 C        	JMP	VgaString_012
   503 00D69 15F6 C        	JMP	VgaString_013
   504 00D6A 15FB C        	JMP	VgaString_014
   505 00D6B 1600 C        	JMP	VgaString_015
   506 00D6C 1605 C        	JMP	VgaString_016
   507 00D6D 160A C        	JMP	VgaString_017
   508 00D6E 160F C        	JMP	VgaString_018
   509 00D6F 1614 C        	JMP	VgaString_019
   510 00D70 1619 C        	JMP	VgaString_020
   511 00D71 161E C        	JMP	VgaString_021
   512 00D72 1623 C        	JMP	VgaString_022
   513 00D73 1628 C        	JMP	VgaString_023
   514 00D74 162D C        	JMP	VgaString_024
   515 00D75 1632 C        	JMP	VgaString_025
   516 00D76 1637 C        	JMP	VgaString_026
   517 00D77 163C C        	JMP	VgaString_027
   518 00D78 1641 C        	JMP	VgaString_028
   519 00D79 1646 C        	JMP	VgaString_029
   520 00D7A 164B C        	JMP	VgaString_030
   521 00D7B 1650 C        	JMP	VgaString_031
   522 00D7C 1655 C        	JMP	VgaString_032
   523 00D7D 165A C        	JMP	VgaString_033
   524 00D7E 165F C        	JMP	VgaString_034
   525 00D7F 1664 C        	JMP	VgaString_035
   526 00D80 1669 C        	JMP	VgaString_036
   527 00D81 166E C        	JMP	VgaString_037
   528 00D82 1673 C        	JMP	VgaString_038
   529 00D83 1678 C        	JMP	VgaString_039
   530 00D84 167D C        	JMP	VgaString_040
   531 00D85 1682 C        	JMP	VgaString_041
   532 00D86 1687 C        	JMP	VgaString_042
   533 00D87 168C C        	JMP	VgaString_043
   534 00D88 1691 C        	JMP	VgaString_044
   535 00D89 1696 C        	JMP	VgaString_045
   536 00D8A 169B C        	JMP	VgaString_046
   537 00D8B 16A0 C        	JMP	VgaString_047
   538 00D8C 16A5 C        	JMP	VgaString_048
   539 00D8D 16AA C        	JMP	VgaString_049
   540 00D8E 16AF C        	JMP	VgaString_050
   541 00D8F 16B4 C        	JMP	VgaString_051
   542 00D90 16B9 C        	JMP	VgaString_052
   543 00D91 16BE C        	JMP	VgaString_053
   544 00D92 16C3 C        	JMP	VgaString_054
   545 00D93 16C8 C        	JMP	VgaString_055
   546 00D94 16CD C        	JMP	VgaString_056
   547 00D95 16D2 C        	JMP	VgaString_057
   548 00D96 16D7 C        	JMP	VgaString_058
   549 00D97 16DC C        	JMP	VgaString_059
   550 00D98 16E1 C        	JMP	VgaString_060
   551 00D99 16E6 C        	JMP	VgaString_061
   552 00D9A 16EB C        	JMP	VgaString_062
   553 00D9B 16F0 C        	JMP	VgaString_063
   554 00D9C 16F5 C        	JMP	VgaString_064
   555 00D9D 16FA C        	JMP	VgaString_065
   556 00D9E 16FF C        	JMP	VgaString_066
   557 00D9F 1704 C        	JMP	VgaString_067
   558 00DA0 1709 C        	JMP	VgaString_068
   559 00DA1 170E C        	JMP	VgaString_069
   560 00DA2 1713 C        	JMP	VgaString_070
   561 00DA3 1718 C        	JMP	VgaString_071
   562 00DA4 171D C        	JMP	VgaString_072
   563 00DA5 1722 C        	JMP	VgaString_073
   564 00DA6 1727 C        	JMP	VgaString_074
   565 00DA7 172C C        	JMP	VgaString_075
   566 00DA8 1731 C        	JMP	VgaString_076
   567 00DA9 1736 C        	JMP	VgaString_077
   568 00DAA 173B C        	JMP	VgaString_078
   569 00DAB 1740 C        	JMP	VgaString_079
   570 00DAC 1745 C        	JMP	VgaString_080
   571 00DAD 174A C        	JMP	VgaString_081
   572 00DAE 174F C        	JMP	VgaString_082
   573 00DAF 1754 C        	JMP	VgaString_083
   574 00DB0 1759 C        	JMP	VgaString_084
   575 00DB1 175E C        	JMP	VgaString_085
   576 00DB2 1763 C        	JMP	VgaString_086
   577 00DB3 1768 C        	JMP	VgaString_087
   578 00DB4 176D C        	JMP	VgaString_088
   579 00DB5      C        VgaString_000:
   580            C      M 	VGASTR	#(TabString_NoContent)
       00DB5 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_NOCONTENT 
                      3  M  PAGE #( TABSTRING_NOCONTENT ),
       00DB6 1E8E     3     PAGE ( TABSTRING_NOCONTENT / 1024 ),
       00DB7 1027     2     CALL ( TABSTRING_NOCONTENT % 1024 ),
                      3  M  PAGE #( $ ),
       00DB8 1E83     3     PAGE ( $ / 1024 ),
       00DB9 1772     1     JMP  VGASTRING_LOOP1 ,
   581 00DBA      C        VgaString_001:
   582            C      M 	VGASTR	#(TabString_CallList)
       00DBA 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_CALLLIST 
                      3  M  PAGE #( TABSTRING_CALLLIST ),
       00DBB 1E8E     3     PAGE ( TABSTRING_CALLLIST / 1024 ),
       00DBC 1033     2     CALL ( TABSTRING_CALLLIST % 1024 ),
                      3  M  PAGE #( $ ),
       00DBD 1E83     3     PAGE ( $ / 1024 ),
       00DBE 1772     1     JMP  VGASTRING_LOOP1 ,
   583 00DBF      C        VgaString_002:
   584            C      M 	VGASTR	#(TabString_PhoneBook)
       00DBF 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_PHONEBOOK 
                      3  M  PAGE #( TABSTRING_PHONEBOOK ),
       00DC0 1E8E     3     PAGE ( TABSTRING_PHONEBOOK / 1024 ),
       00DC1 103E     2     CALL ( TABSTRING_PHONEBOOK % 1024 ),
                      3  M  PAGE #( $ ),
       00DC2 1E83     3     PAGE ( $ / 1024 ),
       00DC3 1772     1     JMP  VGASTRING_LOOP1 ,
   585 00DC4      C        VgaString_003:
   586            C      M 	VGASTR	#(TabString_PleaseInput)
       00DC4 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_PLEASEINPUT 
                      3  M  PAGE #( TABSTRING_PLEASEINPUT ),
       00DC5 1E8E     3     PAGE ( TABSTRING_PLEASEINPUT / 1024 ),
       00DC6 104A     2     CALL ( TABSTRING_PLEASEINPUT % 1024 ),
                      3  M  PAGE #( $ ),
       00DC7 1E83     3     PAGE ( $ / 1024 ),
       00DC8 1772     1     JMP  VGASTRING_LOOP1 ,
   587 00DC9      C        VgaString_004:
   588            C      M 	VGASTR	#(TabString_null)
       00DC9 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_NULL 
                      3  M  PAGE #( TABSTRING_NULL ),
       00DCA 1E8E     3     PAGE ( TABSTRING_NULL / 1024 ),
       00DCB 1000     2     CALL ( TABSTRING_NULL % 1024 ),
                      3  M  PAGE #( $ ),
       00DCC 1E83     3     PAGE ( $ / 1024 ),
       00DCD 1772     1     JMP  VGASTRING_LOOP1 ,
   589 00DCE      C        VgaString_005:
   590            C      M 	VGASTR	#(TabString_SystemSetting)
       00DCE 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_SYSTEMSETTING 
                      3  M  PAGE #( TABSTRING_SYSTEMSETTING ),
       00DCF 1E8E     3     PAGE ( TABSTRING_SYSTEMSETTING / 1024 ),
       00DD0 1058     2     CALL ( TABSTRING_SYSTEMSETTING % 1024 ),
                      3  M  PAGE #( $ ),
       00DD1 1E83     3     PAGE ( $ / 1024 ),
       00DD2 1772     1     JMP  VGASTRING_LOOP1 ,
   591 00DD3      C        VgaString_006:
   592            C      M 	VGASTR	#(TabString_DAM)
       00DD3 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_DAM 
                      3  M  PAGE #( TABSTRING_DAM ),
       00DD4 1E8E     3     PAGE ( TABSTRING_DAM / 1024 ),
       00DD5 1068     2     CALL ( TABSTRING_DAM % 1024 ),
                      3  M  PAGE #( $ ),
       00DD6 1E83     3     PAGE ( $ / 1024 ),
       00DD7 1772     1     JMP  VGASTRING_LOOP1 ,
   593 00DD8      C        VgaString_007:
   594            C      M 	VGASTR	#(TabString_TwoWay)
       00DD8 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_TWOWAY 
                      3  M  PAGE #( TABSTRING_TWOWAY ),
       00DD9 1E8E     3     PAGE ( TABSTRING_TWOWAY / 1024 ),
       00DDA 106D     2     CALL ( TABSTRING_TWOWAY % 1024 ),
                      3  M  PAGE #( $ ),
       00DDB 1E83     3     PAGE ( $ / 1024 ),
       00DDC 1772     1     JMP  VGASTRING_LOOP1 ,
   595 00DDD      C        VgaString_008:
   596            C      M 	VGASTR	#(TabString_HighQuality)
       00DDD 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_HIGHQUALITY 
                      3  M  PAGE #( TABSTRING_HIGHQUALITY ),
       00DDE 1E8E     3     PAGE ( TABSTRING_HIGHQUALITY / 1024 ),
       00DDF 1076     2     CALL ( TABSTRING_HIGHQUALITY % 1024 ),
                      3  M  PAGE #( $ ),
       00DE0 1E83     3     PAGE ( $ / 1024 ),
       00DE1 1772     1     JMP  VGASTRING_LOOP1 ,
   597 00DE2      C        VgaString_009:
   598            C      M 	VGASTR	#(TabString_LowQuality)
       00DE2 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_LOWQUALITY 
                      3  M  PAGE #( TABSTRING_LOWQUALITY ),
       00DE3 1E8E     3     PAGE ( TABSTRING_LOWQUALITY / 1024 ),
       00DE4 1086     2     CALL ( TABSTRING_LOWQUALITY % 1024 ),
                      3  M  PAGE #( $ ),
       00DE5 1E83     3     PAGE ( $ / 1024 ),
       00DE6 1772     1     JMP  VGASTRING_LOOP1 ,
   599 00DE7      C        VgaString_010:
   600            C      M 	VGASTR	#(TabString_Delete)
       00DE7 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_DELETE 
                      3  M  PAGE #( TABSTRING_DELETE ),
       00DE8 1E8E     3     PAGE ( TABSTRING_DELETE / 1024 ),
       00DE9 1098     2     CALL ( TABSTRING_DELETE % 1024 ),
                      3  M  PAGE #( $ ),
       00DEA 1E83     3     PAGE ( $ / 1024 ),
       00DEB 1772     1     JMP  VGASTRING_LOOP1 ,
   601 00DEC      C        VgaString_011:
   602            C      M 	VGASTR	#(TabString_BrowsePhonebook)
       00DEC 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_BROWSEPHONEBOOK 
                      3  M  PAGE #( TABSTRING_BROWSEPHONEBOOK ),
       00DED 1E8E     3     PAGE ( TABSTRING_BROWSEPHONEBOOK / 1024 ),
       00DEE 10A1     2     CALL ( TABSTRING_BROWSEPHONEBOOK % 1024 ),
                      3  M  PAGE #( $ ),
       00DEF 1E83     3     PAGE ( $ / 1024 ),
       00DF0 1772     1     JMP  VGASTRING_LOOP1 ,
   603 00DF1      C        VgaString_012:
   604            C      M 	VGASTR	#(TabString_InputNumber)
       00DF1 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_INPUTNUMBER 
                      3  M  PAGE #( TABSTRING_INPUTNUMBER ),
       00DF2 1E8E     3     PAGE ( TABSTRING_INPUTNUMBER / 1024 ),
       00DF3 1280     2     CALL ( TABSTRING_INPUTNUMBER % 1024 ),
                      3  M  PAGE #( $ ),
       00DF4 1E83     3     PAGE ( $ / 1024 ),
       00DF5 1772     1     JMP  VGASTRING_LOOP1 ,
   605 00DF6      C        VgaString_013:
   606            C      M 	VGASTR	#(TabString_InputName)
       00DF6 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_INPUTNAME 
                      3  M  PAGE #( TABSTRING_INPUTNAME ),
       00DF7 1E8E     3     PAGE ( TABSTRING_INPUTNAME / 1024 ),
       00DF8 128E     2     CALL ( TABSTRING_INPUTNAME % 1024 ),
                      3  M  PAGE #( $ ),
       00DF9 1E83     3     PAGE ( $ / 1024 ),
       00DFA 1772     1     JMP  VGASTRING_LOOP1 ,
   607 00DFB      C        VgaString_014:
   608            C      M 	VGASTR	#(TabString_EditPhonebook)
       00DFB 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_EDITPHONEBOOK 
                      3  M  PAGE #( TABSTRING_EDITPHONEBOOK ),
       00DFC 1E8E     3     PAGE ( TABSTRING_EDITPHONEBOOK / 1024 ),
       00DFD 10B3     2     CALL ( TABSTRING_EDITPHONEBOOK % 1024 ),
                      3  M  PAGE #( $ ),
       00DFE 1E83     3     PAGE ( $ / 1024 ),
       00DFF 1772     1     JMP  VGASTRING_LOOP1 ,
   609 00E00      C        VgaString_015:
   610            C      M 	VGASTR	#(TabString_Deleteall)
       00E00 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_DELETEALL 
                      3  M  PAGE #( TABSTRING_DELETEALL ),
       00E01 1E8E     3     PAGE ( TABSTRING_DELETEALL / 1024 ),
       00E02 10C3     2     CALL ( TABSTRING_DELETEALL % 1024 ),
                      3  M  PAGE #( $ ),
       00E03 1E83     3     PAGE ( $ / 1024 ),
       00E04 1772     1     JMP  VGASTRING_LOOP1 ,
   611 00E05      C        VgaString_016:
   612            C      M 	VGASTR	#(TabString_Input)
       00E05 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_INPUT 
                      3  M  PAGE #( TABSTRING_INPUT ),
       00E06 1E8E     3     PAGE ( TABSTRING_INPUT / 1024 ),
       00E07 10CF     2     CALL ( TABSTRING_INPUT % 1024 ),
                      3  M  PAGE #( $ ),
       00E08 1E83     3     PAGE ( $ / 1024 ),
       00E09 1772     1     JMP  VGASTRING_LOOP1 ,
   613 00E0A      C        VgaString_017:
   614            C      M 	VGASTR	#(TabString_Again)
       00E0A 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_AGAIN 
                      3  M  PAGE #( TABSTRING_AGAIN ),
       00E0B 1E8E     3     PAGE ( TABSTRING_AGAIN / 1024 ),
       00E0C 10D6     2     CALL ( TABSTRING_AGAIN % 1024 ),
                      3  M  PAGE #( $ ),
       00E0D 1E83     3     PAGE ( $ / 1024 ),
       00E0E 1772     1     JMP  VGASTRING_LOOP1 ,
   615 00E0F      C        VgaString_018:
   616            C      M 	VGASTR	#(TabString_ClockSetting)
       00E0F 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_CLOCKSETTING 
                      3  M  PAGE #( TABSTRING_CLOCKSETTING ),
       00E10 1E8E     3     PAGE ( TABSTRING_CLOCKSETTING / 1024 ),
       00E11 10DD     2     CALL ( TABSTRING_CLOCKSETTING % 1024 ),
                      3  M  PAGE #( $ ),
       00E12 1E83     3     PAGE ( $ / 1024 ),
       00E13 1772     1     JMP  VGASTRING_LOOP1 ,
   617 00E14      C        VgaString_019:
   618            C      M 	VGASTR	#(TabString_PhoneSetting)
       00E14 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_PHONESETTING 
                      3  M  PAGE #( TABSTRING_PHONESETTING ),
       00E15 1E8E     3     PAGE ( TABSTRING_PHONESETTING / 1024 ),
       00E16 10EC     2     CALL ( TABSTRING_PHONESETTING % 1024 ),
                      3  M  PAGE #( $ ),
       00E17 1E83     3     PAGE ( $ / 1024 ),
       00E18 1772     1     JMP  VGASTRING_LOOP1 ,
   619 00E19      C        VgaString_020:
   620            C      M 	VGASTR	#(TabString_RestoreDefault)
       00E19 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_RESTOREDEFAULT 
                      3  M  PAGE #( TABSTRING_RESTOREDEFAULT ),
       00E1A 1E8E     3     PAGE ( TABSTRING_RESTOREDEFAULT / 1024 ),
       00E1B 1100     2     CALL ( TABSTRING_RESTOREDEFAULT % 1024 ),
                      3  M  PAGE #( $ ),
       00E1C 1E83     3     PAGE ( $ / 1024 ),
       00E1D 1772     1     JMP  VGASTRING_LOOP1 ,
   621 00E1E      C        VgaString_021:
   622            C      M 	VGASTR	#(TabString_Play)
       00E1E 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_PLAY 
                      3  M  PAGE #( TABSTRING_PLAY ),
       00E1F 1E8E     3     PAGE ( TABSTRING_PLAY / 1024 ),
       00E20 1111     2     CALL ( TABSTRING_PLAY % 1024 ),
                      3  M  PAGE #( $ ),
       00E21 1E83     3     PAGE ( $ / 1024 ),
       00E22 1772     1     JMP  VGASTRING_LOOP1 ,
   623 00E23      C        VgaString_022:
   624            C      M 	VGASTR	#(TabString_Record)
       00E23 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_RECORD 
                      3  M  PAGE #( TABSTRING_RECORD ),
       00E24 1E8E     3     PAGE ( TABSTRING_RECORD / 1024 ),
       00E25 1117     2     CALL ( TABSTRING_RECORD % 1024 ),
                      3  M  PAGE #( $ ),
       00E26 1E83     3     PAGE ( $ / 1024 ),
       00E27 1772     1     JMP  VGASTRING_LOOP1 ,
   625 00E28      C        VgaString_023:
   626            C      M 	VGASTR	#(TabString_Ringmelody)
       00E28 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_RINGMELODY 
                      3  M  PAGE #( TABSTRING_RINGMELODY ),
       00E29 1E8E     3     PAGE ( TABSTRING_RINGMELODY / 1024 ),
       00E2A 111F     2     CALL ( TABSTRING_RINGMELODY % 1024 ),
                      3  M  PAGE #( $ ),
       00E2B 1E83     3     PAGE ( $ / 1024 ),
       00E2C 1772     1     JMP  VGASTRING_LOOP1 ,
   627 00E2D      C        VgaString_024:
   628            C      M 	VGASTR	#(TabString_Ringvolume)
       00E2D 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_RINGVOLUME 
                      3  M  PAGE #( TABSTRING_RINGVOLUME ),
       00E2E 1E8E     3     PAGE ( TABSTRING_RINGVOLUME / 1024 ),
       00E2F 112C     2     CALL ( TABSTRING_RINGVOLUME % 1024 ),
                      3  M  PAGE #( $ ),
       00E30 1E83     3     PAGE ( $ / 1024 ),
       00E31 1772     1     JMP  VGASTRING_LOOP1 ,
   629 00E32      C        VgaString_025:
   630            C      M 	VGASTR	#(TabString_Areacode)
       00E32 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_AREACODE 
                      3  M  PAGE #( TABSTRING_AREACODE ),
       00E33 1E8E     3     PAGE ( TABSTRING_AREACODE / 1024 ),
       00E34 1139     2     CALL ( TABSTRING_AREACODE % 1024 ),
                      3  M  PAGE #( $ ),
       00E35 1E83     3     PAGE ( $ / 1024 ),
       00E36 1772     1     JMP  VGASTRING_LOOP1 ,
   631 00E37      C        VgaString_026:
   632            C      M 	VGASTR	#(TabString_Flashtime)
       00E37 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_FLASHTIME 
                      3  M  PAGE #( TABSTRING_FLASHTIME ),
       00E38 1E8E     3     PAGE ( TABSTRING_FLASHTIME / 1024 ),
       00E39 1144     2     CALL ( TABSTRING_FLASHTIME % 1024 ),
                      3  M  PAGE #( $ ),
       00E3A 1E83     3     PAGE ( $ / 1024 ),
       00E3B 1772     1     JMP  VGASTRING_LOOP1 ,
   633 00E3C      C        VgaString_027:
   634            C      M 	VGASTR	#(TabString_Pausetime)
       00E3C 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_PAUSETIME 
                      3  M  PAGE #( TABSTRING_PAUSETIME ),
       00E3D 1E8E     3     PAGE ( TABSTRING_PAUSETIME / 1024 ),
       00E3E 1150     2     CALL ( TABSTRING_PAUSETIME % 1024 ),
                      3  M  PAGE #( $ ),
       00E3F 1E83     3     PAGE ( $ / 1024 ),
       00E40 1772     1     JMP  VGASTRING_LOOP1 ,
   635 00E41      C        VgaString_028:
   636            C      M 	VGASTR	#(TabString_LCDcontrast)
       00E41 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_LCDCONTRAST 
                      3  M  PAGE #( TABSTRING_LCDCONTRAST ),
       00E42 1E8E     3     PAGE ( TABSTRING_LCDCONTRAST / 1024 ),
       00E43 115C     2     CALL ( TABSTRING_LCDCONTRAST % 1024 ),
                      3  M  PAGE #( $ ),
       00E44 1E83     3     PAGE ( $ / 1024 ),
       00E45 1772     1     JMP  VGASTRING_LOOP1 ,
   637 00E46      C        VgaString_029:
   638            C      M 	VGASTR	#(TabString_HFDialing)
       00E46 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_HFDIALING 
                      3  M  PAGE #( TABSTRING_HFDIALING ),
       00E47 1E8E     3     PAGE ( TABSTRING_HFDIALING / 1024 ),
       00E48 116A     2     CALL ( TABSTRING_HFDIALING % 1024 ),
                      3  M  PAGE #( $ ),
       00E49 1E83     3     PAGE ( $ / 1024 ),
       00E4A 1772     1     JMP  VGASTRING_LOOP1 ,
   639 00E4B      C        VgaString_030:
   640            C      M 	VGASTR	#(TabString_Memorecord)
       00E4B 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_MEMORECORD 
                      3  M  PAGE #( TABSTRING_MEMORECORD ),
       00E4C 1E8E     3     PAGE ( TABSTRING_MEMORECORD / 1024 ),
       00E4D 1176     2     CALL ( TABSTRING_MEMORECORD % 1024 ),
                      3  M  PAGE #( $ ),
       00E4E 1E83     3     PAGE ( $ / 1024 ),
       00E4F 1772     1     JMP  VGASTRING_LOOP1 ,
   641 00E50      C        VgaString_031:
   642            C      M 	VGASTR	#(TabString_OGM1record)
       00E50 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_OGM1RECORD 
                      3  M  PAGE #( TABSTRING_OGM1RECORD ),
       00E51 1E8E     3     PAGE ( TABSTRING_OGM1RECORD / 1024 ),
       00E52 1183     2     CALL ( TABSTRING_OGM1RECORD % 1024 ),
                      3  M  PAGE #( $ ),
       00E53 1E83     3     PAGE ( $ / 1024 ),
       00E54 1772     1     JMP  VGASTRING_LOOP1 ,
   643 00E55      C        VgaString_032:
   644            C      M 	VGASTR	#(TabString_OGM2record)
       00E55 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_OGM2RECORD 
                      3  M  PAGE #( TABSTRING_OGM2RECORD ),
       00E56 1E8E     3     PAGE ( TABSTRING_OGM2RECORD / 1024 ),
       00E57 1191     2     CALL ( TABSTRING_OGM2RECORD % 1024 ),
                      3  M  PAGE #( $ ),
       00E58 1E83     3     PAGE ( $ / 1024 ),
       00E59 1772     1     JMP  VGASTRING_LOOP1 ,
   645 00E5A      C        VgaString_033:
   646            C      M 	VGASTR	#(TabString_PreHFdial)
       00E5A 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_PREHFDIAL 
                      3  M  PAGE #( TABSTRING_PREHFDIAL ),
       00E5B 1E8E     3     PAGE ( TABSTRING_PREHFDIAL / 1024 ),
       00E5C 101A     2     CALL ( TABSTRING_PREHFDIAL % 1024 ),
                      3  M  PAGE #( $ ),
       00E5D 1E83     3     PAGE ( $ / 1024 ),
       00E5E 1772     1     JMP  VGASTRING_LOOP1 ,
   647 00E5F      C        VgaString_034:
   648            C      M 	VGASTR	#(TabString_MUTE)
       00E5F 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_MUTE 
                      3  M  PAGE #( TABSTRING_MUTE ),
       00E60 1E8E     3     PAGE ( TABSTRING_MUTE / 1024 ),
       00E61 119F     2     CALL ( TABSTRING_MUTE % 1024 ),
                      3  M  PAGE #( $ ),
       00E62 1E83     3     PAGE ( $ / 1024 ),
       00E63 1772     1     JMP  VGASTRING_LOOP1 ,
   649 00E64      C        VgaString_035:
   650            C      M 	VGASTR	#(TabString_BLANK)
       00E64 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_BLANK 
                      3  M  PAGE #( TABSTRING_BLANK ),
       00E65 1E8E     3     PAGE ( TABSTRING_BLANK / 1024 ),
       00E66 11A5     2     CALL ( TABSTRING_BLANK % 1024 ),
                      3  M  PAGE #( $ ),
       00E67 1E83     3     PAGE ( $ / 1024 ),
       00E68 1772     1     JMP  VGASTRING_LOOP1 ,
   651 00E69      C        VgaString_036:
   652            C      M 	VGASTR	#(TabString_Jingle)
       00E69 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_JINGLE 
                      3  M  PAGE #( TABSTRING_JINGLE ),
       00E6A 1E8E     3     PAGE ( TABSTRING_JINGLE / 1024 ),
       00E6B 11AF     2     CALL ( TABSTRING_JINGLE % 1024 ),
                      3  M  PAGE #( $ ),
       00E6C 1E83     3     PAGE ( $ / 1024 ),
       00E6D 1772     1     JMP  VGASTRING_LOOP1 ,
   653 00E6E      C        VgaString_037:
   654            C      M 	VGASTR	#(TabString_BabyElephant)
       00E6E 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_BABYELEPHANT 
                      3  M  PAGE #( TABSTRING_BABYELEPHANT ),
       00E6F 1E8E     3     PAGE ( TABSTRING_BABYELEPHANT / 1024 ),
       00E70 11B7     2     CALL ( TABSTRING_BABYELEPHANT % 1024 ),
                      3  M  PAGE #( $ ),
       00E71 1E83     3     PAGE ( $ / 1024 ),
       00E72 1772     1     JMP  VGASTRING_LOOP1 ,
   655 00E73      C        VgaString_038:
   656            C      M 	VGASTR	#(TabString_Bonanza)
       00E73 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_BONANZA 
                      3  M  PAGE #( TABSTRING_BONANZA ),
       00E74 1E8E     3     PAGE ( TABSTRING_BONANZA / 1024 ),
       00E75 11C6     2     CALL ( TABSTRING_BONANZA % 1024 ),
                      3  M  PAGE #( $ ),
       00E76 1E83     3     PAGE ( $ / 1024 ),
       00E77 1772     1     JMP  VGASTRING_LOOP1 ,
   657 00E78      C        VgaString_039:
   658            C      M 	VGASTR	#(TabString_Choopeta)
       00E78 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_CHOOPETA 
                      3  M  PAGE #( TABSTRING_CHOOPETA ),
       00E79 1E8E     3     PAGE ( TABSTRING_CHOOPETA / 1024 ),
       00E7A 11CF     2     CALL ( TABSTRING_CHOOPETA % 1024 ),
                      3  M  PAGE #( $ ),
       00E7B 1E83     3     PAGE ( $ / 1024 ),
       00E7C 1772     1     JMP  VGASTRING_LOOP1 ,
   659 00E7D      C        VgaString_040:
   660            C      M 	VGASTR	#(TabString_ForElise)
       00E7D 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_FORELISE 
                      3  M  PAGE #( TABSTRING_FORELISE ),
       00E7E 1E8E     3     PAGE ( TABSTRING_FORELISE / 1024 ),
       00E7F 11D9     2     CALL ( TABSTRING_FORELISE % 1024 ),
                      3  M  PAGE #( $ ),
       00E80 1E83     3     PAGE ( $ / 1024 ),
       00E81 1772     1     JMP  VGASTRING_LOOP1 ,
   661 00E82      C        VgaString_041:
   662            C      M 	VGASTR	#(TabString_MarcheTurque)
       00E82 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_MARCHETURQUE 
                      3  M  PAGE #( TABSTRING_MARCHETURQUE ),
       00E83 1E8E     3     PAGE ( TABSTRING_MARCHETURQUE / 1024 ),
       00E84 11E4     2     CALL ( TABSTRING_MARCHETURQUE % 1024 ),
                      3  M  PAGE #( $ ),
       00E85 1E83     3     PAGE ( $ / 1024 ),
       00E86 1772     1     JMP  VGASTRING_LOOP1 ,
   663 00E87      C        VgaString_042:
   664            C      M 	VGASTR	#(TabString_ALittleNight)
       00E87 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_ALITTLENIGHT 
                      3  M  PAGE #( TABSTRING_ALITTLENIGHT ),
       00E88 1E8E     3     PAGE ( TABSTRING_ALITTLENIGHT / 1024 ),
       00E89 1200     2     CALL ( TABSTRING_ALITTLENIGHT % 1024 ),
                      3  M  PAGE #( $ ),
       00E8A 1E83     3     PAGE ( $ / 1024 ),
       00E8B 1772     1     JMP  VGASTRING_LOOP1 ,
   665 00E8C      C        VgaString_043:
   666            C      M 	VGASTR	#(TabString_SmokeOnWater)
       00E8C 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_SMOKEONWATER 
                      3  M  PAGE #( TABSTRING_SMOKEONWATER ),
       00E8D 1E8E     3     PAGE ( TABSTRING_SMOKEONWATER / 1024 ),
       00E8E 1210     2     CALL ( TABSTRING_SMOKEONWATER % 1024 ),
                      3  M  PAGE #( $ ),
       00E8F 1E83     3     PAGE ( $ / 1024 ),
       00E90 1772     1     JMP  VGASTRING_LOOP1 ,
   667 00E91      C        VgaString_044:
   668            C      M 	VGASTR	#(TabString_TheEntertainer)
       00E91 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_THEENTERTAINER 
                      3  M  PAGE #( TABSTRING_THEENTERTAINER ),
       00E92 1E8E     3     PAGE ( TABSTRING_THEENTERTAINER / 1024 ),
       00E93 1220     2     CALL ( TABSTRING_THEENTERTAINER % 1024 ),
                      3  M  PAGE #( $ ),
       00E94 1E83     3     PAGE ( $ / 1024 ),
       00E95 1772     1     JMP  VGASTRING_LOOP1 ,
   669 00E96      C        VgaString_045:
   670            C      M 	VGASTR	#(TabString_FinalCountdown)
       00E96 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_FINALCOUNTDOWN 
                      3  M  PAGE #( TABSTRING_FINALCOUNTDOWN ),
       00E97 1E8E     3     PAGE ( TABSTRING_FINALCOUNTDOWN / 1024 ),
       00E98 1231     2     CALL ( TABSTRING_FINALCOUNTDOWN % 1024 ),
                      3  M  PAGE #( $ ),
       00E99 1E83     3     PAGE ( $ / 1024 ),
       00E9A 1772     1     JMP  VGASTRING_LOOP1 ,
   671 00E9B      C        VgaString_046:
   672            C      M 	VGASTR	#(TabString_TwinPeaks)
       00E9B 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_TWINPEAKS 
                      3  M  PAGE #( TABSTRING_TWINPEAKS ),
       00E9C 1E8E     3     PAGE ( TABSTRING_TWINPEAKS / 1024 ),
       00E9D 1242     2     CALL ( TABSTRING_TWINPEAKS % 1024 ),
                      3  M  PAGE #( $ ),
       00E9E 1E83     3     PAGE ( $ / 1024 ),
       00E9F 1772     1     JMP  VGASTRING_LOOP1 ,
   673 00EA0      C        VgaString_047:
   674            C      M 	VGASTR	#(TabString_ZorbaLeGrec)
       00EA0 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_ZORBALEGREC 
                      3  M  PAGE #( TABSTRING_ZORBALEGREC ),
       00EA1 1E8E     3     PAGE ( TABSTRING_ZORBALEGREC / 1024 ),
       00EA2 124E     2     CALL ( TABSTRING_ZORBALEGREC % 1024 ),
                      3  M  PAGE #( $ ),
       00EA3 1E83     3     PAGE ( $ / 1024 ),
       00EA4 1772     1     JMP  VGASTRING_LOOP1 ,
   675 00EA5      C        VgaString_048:
   676            C      M 	VGASTR	#(TabString_OFF)
       00EA5 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_OFF 
                      3  M  PAGE #( TABSTRING_OFF ),
       00EA6 1E8E     3     PAGE ( TABSTRING_OFF / 1024 ),
       00EA7 125D     2     CALL ( TABSTRING_OFF % 1024 ),
                      3  M  PAGE #( $ ),
       00EA8 1E83     3     PAGE ( $ / 1024 ),
       00EA9 1772     1     JMP  VGASTRING_LOOP1 ,
   677 00EAA      C        VgaString_049:
   678            C      M 	VGASTR	#(TabString_NoMessage)
       00EAA 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_NOMESSAGE 
                      3  M  PAGE #( TABSTRING_NOMESSAGE ),
       00EAB 1E8E     3     PAGE ( TABSTRING_NOMESSAGE / 1024 ),
       00EAC 1262     2     CALL ( TABSTRING_NOMESSAGE % 1024 ),
                      3  M  PAGE #( $ ),
       00EAD 1E83     3     PAGE ( $ / 1024 ),
       00EAE 1772     1     JMP  VGASTRING_LOOP1 ,
   679 00EAF      C        VgaString_050:
   680            C      M 	VGASTR	#(TabString_Pause)
       00EAF 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_PAUSE 
                      3  M  PAGE #( TABSTRING_PAUSE ),
       00EB0 1E8E     3     PAGE ( TABSTRING_PAUSE / 1024 ),
       00EB1 126E     2     CALL ( TABSTRING_PAUSE % 1024 ),
                      3  M  PAGE #( $ ),
       00EB2 1E83     3     PAGE ( $ / 1024 ),
       00EB3 1772     1     JMP  VGASTRING_LOOP1 ,
   681 00EB4      C        VgaString_051:
   682            C      M 	VGASTR	#(TabString_OGM)
       00EB4 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_OGM 
                      3  M  PAGE #( TABSTRING_OGM ),
       00EB5 1E8E     3     PAGE ( TABSTRING_OGM / 1024 ),
       00EB6 1275     2     CALL ( TABSTRING_OGM % 1024 ),
                      3  M  PAGE #( $ ),
       00EB7 1E83     3     PAGE ( $ / 1024 ),
       00EB8 1772     1     JMP  VGASTRING_LOOP1 ,
   683 00EB9      C        VgaString_052:
   684            C      M 	VGASTR	#(TabString_Memo)
       00EB9 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_MEMO 
                      3  M  PAGE #( TABSTRING_MEMO ),
       00EBA 1E8E     3     PAGE ( TABSTRING_MEMO / 1024 ),
       00EBB 127A     2     CALL ( TABSTRING_MEMO % 1024 ),
                      3  M  PAGE #( $ ),
       00EBC 1E83     3     PAGE ( $ / 1024 ),
       00EBD 1772     1     JMP  VGASTRING_LOOP1 ,
   685 00EBE      C        VgaString_053:
   686            C      M 	VGASTR	#(TabString_SelectRingTone)
       00EBE 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_SELECTRINGTONE 
                      3  M  PAGE #( TABSTRING_SELECTRINGTONE ),
       00EBF 1E8E     3     PAGE ( TABSTRING_SELECTRINGTONE / 1024 ),
       00EC0 129A     2     CALL ( TABSTRING_SELECTRINGTONE % 1024 ),
                      3  M  PAGE #( $ ),
       00EC1 1E83     3     PAGE ( $ / 1024 ),
       00EC2 1772     1     JMP  VGASTRING_LOOP1 ,
   687 00EC3      C        VgaString_054:
   688            C      M 	VGASTR	#(TabString_DateSetting)
       00EC3 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_DATESETTING 
                      3  M  PAGE #( TABSTRING_DATESETTING ),
       00EC4 1E8E     3     PAGE ( TABSTRING_DATESETTING / 1024 ),
       00EC5 12AC     2     CALL ( TABSTRING_DATESETTING % 1024 ),
                      3  M  PAGE #( $ ),
       00EC6 1E83     3     PAGE ( $ / 1024 ),
       00EC7 1772     1     JMP  VGASTRING_LOOP1 ,
   689 00EC8      C        VgaString_055:
   690            C      M 	VGASTR	#(TabString_DAMSetting)
       00EC8 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_DAMSETTING 
                      3  M  PAGE #( TABSTRING_DAMSETTING ),
       00EC9 1E8E     3     PAGE ( TABSTRING_DAMSETTING / 1024 ),
       00ECA 12BA     2     CALL ( TABSTRING_DAMSETTING % 1024 ),
                      3  M  PAGE #( $ ),
       00ECB 1E83     3     PAGE ( $ / 1024 ),
       00ECC 1772     1     JMP  VGASTRING_LOOP1 ,
   691 00ECD      C        VgaString_056:
   692            C      M 	VGASTR	#(TabString_RecorderON)
       00ECD 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_RECORDERON 
                      3  M  PAGE #( TABSTRING_RECORDERON ),
       00ECE 1E8E     3     PAGE ( TABSTRING_RECORDERON / 1024 ),
       00ECF 12C7     2     CALL ( TABSTRING_RECORDERON % 1024 ),
                      3  M  PAGE #( $ ),
       00ED0 1E83     3     PAGE ( $ / 1024 ),
       00ED1 1772     1     JMP  VGASTRING_LOOP1 ,
   693 00ED2      C        VgaString_057:
   694            C      M 	VGASTR	#(TabString_RecorderOFF)
       00ED2 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_RECORDEROFF 
                      3  M  PAGE #( TABSTRING_RECORDEROFF ),
       00ED3 1E8E     3     PAGE ( TABSTRING_RECORDEROFF / 1024 ),
       00ED4 12D4     2     CALL ( TABSTRING_RECORDEROFF % 1024 ),
                      3  M  PAGE #( $ ),
       00ED5 1E83     3     PAGE ( $ / 1024 ),
       00ED6 1772     1     JMP  VGASTRING_LOOP1 ,
   695 00ED7      C        VgaString_058:
   696            C      M 	VGASTR	#(TabString_Setringdelay)
       00ED7 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_SETRINGDELAY 
                      3  M  PAGE #( TABSTRING_SETRINGDELAY ),
       00ED8 1E8E     3     PAGE ( TABSTRING_SETRINGDELAY / 1024 ),
       00ED9 12E2     2     CALL ( TABSTRING_SETRINGDELAY % 1024 ),
                      3  M  PAGE #( $ ),
       00EDA 1E83     3     PAGE ( $ / 1024 ),
       00EDB 1772     1     JMP  VGASTRING_LOOP1 ,
   697 00EDC      C        VgaString_059:
   698            C      M 	VGASTR	#(TabString_Setremotecode)
       00EDC 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_SETREMOTECODE 
                      3  M  PAGE #( TABSTRING_SETREMOTECODE ),
       00EDD 1E8E     3     PAGE ( TABSTRING_SETREMOTECODE / 1024 ),
       00EDE 1300     2     CALL ( TABSTRING_SETREMOTECODE % 1024 ),
                      3  M  PAGE #( $ ),
       00EDF 1E83     3     PAGE ( $ / 1024 ),
       00EE0 1772     1     JMP  VGASTRING_LOOP1 ,
   699 00EE1      C        VgaString_060:
   700            C      M 	VGASTR	#(TabString_Setrecordtime)
       00EE1 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_SETRECORDTIME 
                      3  M  PAGE #( TABSTRING_SETRECORDTIME ),
       00EE2 1E8E     3     PAGE ( TABSTRING_SETRECORDTIME / 1024 ),
       00EE3 1311     2     CALL ( TABSTRING_SETRECORDTIME % 1024 ),
                      3  M  PAGE #( $ ),
       00EE4 1E83     3     PAGE ( $ / 1024 ),
       00EE5 1772     1     JMP  VGASTRING_LOOP1 ,
   701 00EE6      C        VgaString_061:
   702            C      M 	VGASTR	#(TabString_SetOGM)
       00EE6 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_SETOGM 
                      3  M  PAGE #( TABSTRING_SETOGM ),
       00EE7 1E8E     3     PAGE ( TABSTRING_SETOGM / 1024 ),
       00EE8 1322     2     CALL ( TABSTRING_SETOGM % 1024 ),
                      3  M  PAGE #( $ ),
       00EE9 1E83     3     PAGE ( $ / 1024 ),
       00EEA 1772     1     JMP  VGASTRING_LOOP1 ,
   703 00EEB      C        VgaString_062:
   704            C      M 	VGASTR	#(TabString_Sun)
       00EEB 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_SUN 
                      3  M  PAGE #( TABSTRING_SUN ),
       00EEC 1E8E     3     PAGE ( TABSTRING_SUN / 1024 ),
       00EED 132B     2     CALL ( TABSTRING_SUN % 1024 ),
                      3  M  PAGE #( $ ),
       00EEE 1E83     3     PAGE ( $ / 1024 ),
       00EEF 1772     1     JMP  VGASTRING_LOOP1 ,
   705 00EF0      C        VgaString_063:
   706            C      M 	VGASTR	#(TabString_Mon)
       00EF0 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_MON 
                      3  M  PAGE #( TABSTRING_MON ),
       00EF1 1E8E     3     PAGE ( TABSTRING_MON / 1024 ),
       00EF2 1330     2     CALL ( TABSTRING_MON % 1024 ),
                      3  M  PAGE #( $ ),
       00EF3 1E83     3     PAGE ( $ / 1024 ),
       00EF4 1772     1     JMP  VGASTRING_LOOP1 ,
   707 00EF5      C        VgaString_064:
   708            C      M 	VGASTR	#(TabString_Tue)
       00EF5 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_TUE 
                      3  M  PAGE #( TABSTRING_TUE ),
       00EF6 1E8E     3     PAGE ( TABSTRING_TUE / 1024 ),
       00EF7 1335     2     CALL ( TABSTRING_TUE % 1024 ),
                      3  M  PAGE #( $ ),
       00EF8 1E83     3     PAGE ( $ / 1024 ),
       00EF9 1772     1     JMP  VGASTRING_LOOP1 ,
   709 00EFA      C        VgaString_065:
   710            C      M 	VGASTR	#(TabString_Wed)
       00EFA 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_WED 
                      3  M  PAGE #( TABSTRING_WED ),
       00EFB 1E8E     3     PAGE ( TABSTRING_WED / 1024 ),
       00EFC 133A     2     CALL ( TABSTRING_WED % 1024 ),
                      3  M  PAGE #( $ ),
       00EFD 1E83     3     PAGE ( $ / 1024 ),
       00EFE 1772     1     JMP  VGASTRING_LOOP1 ,
   711 00EFF      C        VgaString_066:
   712            C      M 	VGASTR	#(TabString_Thu)
       00EFF 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_THU 
                      3  M  PAGE #( TABSTRING_THU ),
       00F00 1E8E     3     PAGE ( TABSTRING_THU / 1024 ),
       00F01 133F     2     CALL ( TABSTRING_THU % 1024 ),
                      3  M  PAGE #( $ ),
       00F02 1E83     3     PAGE ( $ / 1024 ),
       00F03 1772     1     JMP  VGASTRING_LOOP1 ,
   713 00F04      C        VgaString_067:
   714            C      M 	VGASTR	#(TabString_Fri)
       00F04 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_FRI 
                      3  M  PAGE #( TABSTRING_FRI ),
       00F05 1E8E     3     PAGE ( TABSTRING_FRI / 1024 ),
       00F06 1344     2     CALL ( TABSTRING_FRI % 1024 ),
                      3  M  PAGE #( $ ),
       00F07 1E83     3     PAGE ( $ / 1024 ),
       00F08 1772     1     JMP  VGASTRING_LOOP1 ,
   715 00F09      C        VgaString_068:
   716            C      M 	VGASTR	#(TabString_Sat)
       00F09 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_SAT 
                      3  M  PAGE #( TABSTRING_SAT ),
       00F0A 1E8E     3     PAGE ( TABSTRING_SAT / 1024 ),
       00F0B 1349     2     CALL ( TABSTRING_SAT % 1024 ),
                      3  M  PAGE #( $ ),
       00F0C 1E83     3     PAGE ( $ / 1024 ),
       00F0D 1772     1     JMP  VGASTRING_LOOP1 ,
   717 00F0E      C        VgaString_069:
   718            C      M 	VGASTR	#(TabString_memoryset)
       00F0E 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_MEMORYSET 
                      3  M  PAGE #( TABSTRING_MEMORYSET ),
       00F0F 1E8E     3     PAGE ( TABSTRING_MEMORYSET / 1024 ),
       00F10 134E     2     CALL ( TABSTRING_MEMORYSET % 1024 ),
                      3  M  PAGE #( $ ),
       00F11 1E83     3     PAGE ( $ / 1024 ),
       00F12 1772     1     JMP  VGASTRING_LOOP1 ,
   719 00F13      C        VgaString_070:
   720            C      M 	VGASTR	#(TabString_Successful)
       00F13 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_SUCCESSFUL 
                      3  M  PAGE #( TABSTRING_SUCCESSFUL ),
       00F14 1E8E     3     PAGE ( TABSTRING_SUCCESSFUL / 1024 ),
       00F15 135A     2     CALL ( TABSTRING_SUCCESSFUL % 1024 ),
                      3  M  PAGE #( $ ),
       00F16 1E83     3     PAGE ( $ / 1024 ),
       00F17 1772     1     JMP  VGASTRING_LOOP1 ,
   721 00F18      C        VgaString_071:
   722            C      M 	VGASTR	#(TabString_NewCall)
       00F18 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_NEWCALL 
                      3  M  PAGE #( TABSTRING_NEWCALL ),
       00F19 1E8E     3     PAGE ( TABSTRING_NEWCALL / 1024 ),
       00F1A 1367     2     CALL ( TABSTRING_NEWCALL % 1024 ),
                      3  M  PAGE #( $ ),
       00F1B 1E83     3     PAGE ( $ / 1024 ),
       00F1C 1772     1     JMP  VGASTRING_LOOP1 ,
   723 00F1D      C        VgaString_072:
   724            C      M 	VGASTR	#(TabString_ICM)
       00F1D 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_ICM 
                      3  M  PAGE #( TABSTRING_ICM ),
       00F1E 1E8E     3     PAGE ( TABSTRING_ICM / 1024 ),
       00F1F 1371     2     CALL ( TABSTRING_ICM % 1024 ),
                      3  M  PAGE #( $ ),
       00F20 1E83     3     PAGE ( $ / 1024 ),
       00F21 1772     1     JMP  VGASTRING_LOOP1 ,
   725 00F22      C        VgaString_073:
   726            C      M 	VGASTR	#(TabString_Remote)
       00F22 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_REMOTE 
                      3  M  PAGE #( TABSTRING_REMOTE ),
       00F23 1E8E     3     PAGE ( TABSTRING_REMOTE / 1024 ),
       00F24 1376     2     CALL ( TABSTRING_REMOTE % 1024 ),
                      3  M  PAGE #( $ ),
       00F25 1E83     3     PAGE ( $ / 1024 ),
       00F26 1772     1     JMP  VGASTRING_LOOP1 ,
   727 00F27      C        VgaString_074:
   728            C      M 	VGASTR	#(TabString_Answered)
       00F27 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_ANSWERED 
                      3  M  PAGE #( TABSTRING_ANSWERED ),
       00F28 1E8E     3     PAGE ( TABSTRING_ANSWERED / 1024 ),
       00F29 137E     2     CALL ( TABSTRING_ANSWERED % 1024 ),
                      3  M  PAGE #( $ ),
       00F2A 1E83     3     PAGE ( $ / 1024 ),
       00F2B 1772     1     JMP  VGASTRING_LOOP1 ,
   729 00F2C      C        VgaString_075:
   730            C      M 	VGASTR	#(TabString_RingTimes)
       00F2C 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_RINGTIMES 
                      3  M  PAGE #( TABSTRING_RINGTIMES ),
       00F2D 1E8E     3     PAGE ( TABSTRING_RINGTIMES / 1024 ),
       00F2E 1388     2     CALL ( TABSTRING_RINGTIMES % 1024 ),
                      3  M  PAGE #( $ ),
       00F2F 1E83     3     PAGE ( $ / 1024 ),
       00F30 1772     1     JMP  VGASTRING_LOOP1 ,
   731 00F31      C        VgaString_076:
   732            C      M 	VGASTR	#(TabString_ToPhonebook)
       00F31 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_TOPHONEBOOK 
                      3  M  PAGE #( TABSTRING_TOPHONEBOOK ),
       00F32 1E8E     3     PAGE ( TABSTRING_TOPHONEBOOK / 1024 ),
       00F33 1395     2     CALL ( TABSTRING_TOPHONEBOOK % 1024 ),
                      3  M  PAGE #( $ ),
       00F34 1E83     3     PAGE ( $ / 1024 ),
       00F35 1772     1     JMP  VGASTRING_LOOP1 ,
   733 00F36      C        VgaString_077:
   734            C      M 	VGASTR	#(TabString_Total)
       00F36 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_TOTAL 
                      3  M  PAGE #( TABSTRING_TOTAL ),
       00F37 1E8E     3     PAGE ( TABSTRING_TOTAL / 1024 ),
       00F38 1006     2     CALL ( TABSTRING_TOTAL % 1024 ),
                      3  M  PAGE #( $ ),
       00F39 1E83     3     PAGE ( $ / 1024 ),
       00F3A 1772     1     JMP  VGASTRING_LOOP1 ,
   735 00F3B      C        VgaString_078:
   736            C      M 	VGASTR	#(TabString_New)
       00F3B 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_NEW 
                      3  M  PAGE #( TABSTRING_NEW ),
       00F3C 1E8E     3     PAGE ( TABSTRING_NEW / 1024 ),
       00F3D 100D     2     CALL ( TABSTRING_NEW % 1024 ),
                      3  M  PAGE #( $ ),
       00F3E 1E83     3     PAGE ( $ / 1024 ),
       00F3F 1772     1     JMP  VGASTRING_LOOP1 ,
   737 00F40      C        VgaString_079:
   738            C      M 	VGASTR	#(TabString_EndOfList)
       00F40 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_ENDOFLIST 
                      3  M  PAGE #( TABSTRING_ENDOFLIST ),
       00F41 1E8E     3     PAGE ( TABSTRING_ENDOFLIST / 1024 ),
       00F42 13A3     2     CALL ( TABSTRING_ENDOFLIST % 1024 ),
                      3  M  PAGE #( $ ),
       00F43 1E83     3     PAGE ( $ / 1024 ),
       00F44 1772     1     JMP  VGASTRING_LOOP1 ,
   739 00F45      C        VgaString_080:
   740            C      M 	VGASTR	#(TabString_Private)
       00F45 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_PRIVATE 
                      3  M  PAGE #( TABSTRING_PRIVATE ),
       00F46 1E8E     3     PAGE ( TABSTRING_PRIVATE / 1024 ),
       00F47 13B0     2     CALL ( TABSTRING_PRIVATE % 1024 ),
                      3  M  PAGE #( $ ),
       00F48 1E83     3     PAGE ( $ / 1024 ),
       00F49 1772     1     JMP  VGASTRING_LOOP1 ,
   741 00F4A      C        VgaString_081:
   742            C      M 	VGASTR	#(TabString_WrongMessage)
       00F4A 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_WRONGMESSAGE 
                      3  M  PAGE #( TABSTRING_WRONGMESSAGE ),
       00F4B 1E8E     3     PAGE ( TABSTRING_WRONGMESSAGE / 1024 ),
       00F4C 13B9     2     CALL ( TABSTRING_WRONGMESSAGE % 1024 ),
                      3  M  PAGE #( $ ),
       00F4D 1E83     3     PAGE ( $ / 1024 ),
       00F4E 1772     1     JMP  VGASTRING_LOOP1 ,
   743 00F4F      C        VgaString_082:
   744            C      M 	VGASTR	#(TabString_Unavallable)
       00F4F 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_UNAVALLABLE 
                      3  M  PAGE #( TABSTRING_UNAVALLABLE ),
       00F50 1E8E     3     PAGE ( TABSTRING_UNAVALLABLE / 1024 ),
       00F51 13C8     2     CALL ( TABSTRING_UNAVALLABLE % 1024 ),
                      3  M  PAGE #( $ ),
       00F52 1E83     3     PAGE ( $ / 1024 ),
       00F53 1772     1     JMP  VGASTRING_LOOP1 ,
   745 00F54      C        VgaString_083:
   746            C      M 	VGASTR	#(TabString_null)
       00F54 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_NULL 
                      3  M  PAGE #( TABSTRING_NULL ),
       00F55 1E8E     3     PAGE ( TABSTRING_NULL / 1024 ),
       00F56 1000     2     CALL ( TABSTRING_NULL % 1024 ),
                      3  M  PAGE #( $ ),
       00F57 1E83     3     PAGE ( $ / 1024 ),
       00F58 1772     1     JMP  VGASTRING_LOOP1 ,
   747 00F59      C        VgaString_084:
   748            C      M 	VGASTR	#(TabString_null)
       00F59 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_NULL 
                      3  M  PAGE #( TABSTRING_NULL ),
       00F5A 1E8E     3     PAGE ( TABSTRING_NULL / 1024 ),
       00F5B 1000     2     CALL ( TABSTRING_NULL % 1024 ),
                      3  M  PAGE #( $ ),
       00F5C 1E83     3     PAGE ( $ / 1024 ),
       00F5D 1772     1     JMP  VGASTRING_LOOP1 ,
   749 00F5E      C        VgaString_085:
   750            C      M 	VGASTR	#(TabString_null)
       00F5E 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_NULL 
                      3  M  PAGE #( TABSTRING_NULL ),
       00F5F 1E8E     3     PAGE ( TABSTRING_NULL / 1024 ),
       00F60 1000     2     CALL ( TABSTRING_NULL % 1024 ),
                      3  M  PAGE #( $ ),
       00F61 1E83     3     PAGE ( $ / 1024 ),
       00F62 1772     1     JMP  VGASTRING_LOOP1 ,
   751 00F63      C        VgaString_086:
   752            C      M 	VGASTR	#(TabString_null)
       00F63 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_NULL 
                      3  M  PAGE #( TABSTRING_NULL ),
       00F64 1E8E     3     PAGE ( TABSTRING_NULL / 1024 ),
       00F65 1000     2     CALL ( TABSTRING_NULL % 1024 ),
                      3  M  PAGE #( $ ),
       00F66 1E83     3     PAGE ( $ / 1024 ),
       00F67 1772     1     JMP  VGASTRING_LOOP1 ,
   753 00F68      C        VgaString_087:
   754            C      M 	VGASTR	#(TabString_null)
       00F68 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_NULL 
                      3  M  PAGE #( TABSTRING_NULL ),
       00F69 1E8E     3     PAGE ( TABSTRING_NULL / 1024 ),
       00F6A 1000     2     CALL ( TABSTRING_NULL % 1024 ),
                      3  M  PAGE #( $ ),
       00F6B 1E83     3     PAGE ( $ / 1024 ),
       00F6C 1772     1     JMP  VGASTRING_LOOP1 ,
   755 00F6D      C        VgaString_088:
   756            C      M 	VGASTR	#(TabString_null)
       00F6D 040D     1     MOV A, _RD 
                      2  M  LCALL  TABSTRING_NULL 
                      3  M  PAGE #( TABSTRING_NULL ),
       00F6E 1E8E     3     PAGE ( TABSTRING_NULL / 1024 ),
       00F6F 1000     2     CALL ( TABSTRING_NULL % 1024 ),
                      3  M  PAGE #( $ ),
       00F70 1E83     3     PAGE ( $ / 1024 ),
       00F71 1772     1     JMP  VGASTRING_LOOP1 ,
   757            C        
   758 00F72      C        VgaString_loop1:
   759 00F72 0053 C        	MOV	ax,A
   760 00F73 054D C        	INC	_RD
   761 00F74 0413 C        	MOV	A,ax
   762            C      M 	JPZ	VgaString_ret
       00F75 0C83     1     JBC  _STATUS , Z 
       00F76 1779     1     JMP  VGASTRING_RET ,
   763 00F77 101C C        	CALL	VgaChar
   764 00F78 1555 C        	JMP	VgaString_loop
   765 00F79      C        VgaString_ret:
   766 00F79 0012 C        	RET
   767            C                                     
   768            C                                     
   769            C                                     
   770            C                                     
   771            C                                     
   772            C                                     
   773            C                                     
   774            C                                     
   775            C                                     
   776            C                                     
   205                     INCLUDE	"service.asm"
     1            C        ORG	0x1000
     2            C        
     3 01000      C        SerMessager:
     4 01000 041B C        	MOV	A,sys_msg
     5            C      M 	JPNZ	SerMessager_ret
       01001 0E83     1     JBS  _STATUS , Z 
       01002 141A     1     JMP  SERMESSAGER_RET ,
     6            C      M 	BANK	0
       01003 0984     1     BC  _RAM , 6 
       01004 09C4     1     BC  _RAM , 7 
     7 01005 101C C        	CALL	SerPower
     8            C      M 	JPNZ	SerMessager_ret
       01006 0E83     1     JBS  _STATUS , Z 
       01007 141A     1     JMP  SERMESSAGER_RET ,
     9 01008 103E C        	CALL	SerCommand
    10            C      M 	JPNZ	SerMessager_ret
       01009 0E83     1     JBS  _STATUS , Z 
       0100A 141A     1     JMP  SERMESSAGER_RET ,
    11            C      M 	JPB	sys_flagext,DSPSTATUS,SerMessager_none
       0100B 0C1E     1     JBC  SYS_FLAGEXT , DSPSTATUS 
       0100C 1418     1     JMP  SERMESSAGER_NONE ,
    12 0100D 1022 C        	CALL	SerHandset
    13            C      M 	JPNZ	SerMessager_ret
       0100E 0E83     1     JBS  _STATUS , Z 
       0100F 141A     1     JMP  SERMESSAGER_RET ,
    14            C      M 	JPB	r0_tmr_timer,4,SerMessager_timer
       01010 0D39     1     JBC  R0_TMR_TIMER , 4 
       01011 1415     1     JMP  SERMESSAGER_TIMER ,
    15 01012 107A C        	CALL	SerKeyCheck
    16            C      M 	JPNZ	SerMessager_ret
       01013 0E83     1     JBS  _STATUS , Z 
       01014 141A     1     JMP  SERMESSAGER_RET ,
    17 01015      C        SerMessager_timer:
    18 01015 106F C        	CALL	SerTimer
    19            C      M 	JPNZ	SerMessager_ret
       01016 0E83     1     JBS  _STATUS , Z 
       01017 141A     1     JMP  SERMESSAGER_RET ,
    20 01018      C        SerMessager_none:
    21 01018 00DC C        	CLR	sys_data
    22 01019 00DB C        	CLR	sys_msg
    23 0101A      C        SerMessager_ret:
    24 0101A 041B C        	MOV	A,sys_msg
    25 0101B 0012 C        	RET
    26            C        
    27 0101C      C        SerPower:
    28            C      M 	XORA	hardware,_P7
       0101C 0407     1     MOV A, _P7 
       0101D 031F     1     XOR A, HARDWARE 
    29 0101E 0053 C        	MOV	ax,A
    30            C      M 	JPB	ax,6,SerHardWare_power
       0101F 0D93     1     JBC  AX , 6 
       01020 1428     1     JMP  SERHARDWARE_POWER ,
    31 01021 1418 C        	JMP	SerMessager_none
    32            C        
    33 01022      C        SerHandset:
    34            C      M 	XORA	hardware,_P7
       01022 0407     1     MOV A, _P7 
       01023 031F     1     XOR A, HARDWARE 
    35 01024 0053 C        	MOV	ax,A
    36            C      M 	JPB	ax,7,SerHardWare_handset
       01025 0DD3     1     JBC  AX , 7 
       01026 1433     1     JMP  SERHARDWARE_HANDSET ,
    37 01027 1418 C        	JMP	SerMessager_none
    38            C        
    39            C        /*
    40            C        SerHardWare:
    41            C        	XORA	hardware,_P7
    42            C        	MOV	ax,A
    43            C        	JPB	ax,6,SerHardWare_power
    44            C        	JPB	ax,7,SerHardWare_handset
    45            C        	CLR	sys_msg
    46            C        	JMP	SerMessager_ret
    47            C        */
    48 01028      C        SerHardWare_power:
    49            C      M 	XOR	hardware,@(1<<6)
       01028 1840     1     MOV A,@(( 1 << 6 ))
       01029 035F     1     XOR  HARDWARE ,A
    50            C      M 	JPNB	hardware,6,SerHardWare_power_down
       0102A 0F9F     1     JBS  HARDWARE , 6 
       0102B 142E     1     JMP  SERHARDWARE_POWER_DOWN ,
    51 0102C      C        SerHardWare_power_up:
    52 0102C 1800 C        	MOV	A,@(POWER_ON)
    53 0102D 142F C        	JMP	SerHardWare_power_ret
    54 0102E      C        SerHardWare_power_down:
    55 0102E 1801 C        	MOV	A,@(POWER_DOWN)
    56 0102F      C        SerHardWare_power_ret:
    57 0102F 005C C        	MOV	sys_data,A
    58            C      M 	MOV	sys_msg,@(WM_POWER)
       01030 1805     1     MOV A,@( WM_POWER )
       01031 005B     1     MOV  SYS_MSG ,A
    59 01032 141A C        	JMP	SerMessager_ret
    60 01033      C        SerHardWare_handset:
    61            C      M 	XOR	hardware,@(1<<7)
       01033 1880     1     MOV A,@(( 1 << 7 ))
       01034 035F     1     XOR  HARDWARE ,A
    62            C      M 	JPNB	hardware,7,SerHardWare_handset_off
       01035 0FDF     1     JBS  HARDWARE , 7 
       01036 1439     1     JMP  SERHARDWARE_HANDSET_OFF ,
    63 01037      C        SerHardWare_handset_on:
    64 01037 1800 C        	MOV	A,@(HANDSET_ON)
    65 01038 143A C        	JMP	SerHardWare_handset_ret
    66 01039      C        SerHardWare_handset_off:
    67 01039 1801 C        	MOV	A,@(HANDSET_OFF)
    68 0103A      C        SerHardWare_handset_ret:
    69 0103A 005C C        	MOV	sys_data,A
    70            C      M 	MOV	sys_msg,@(WM_HANDSET)
       0103B 1806     1     MOV A,@( WM_HANDSET )
       0103C 005B     1     MOV  SYS_MSG ,A
    71 0103D 141A C        	JMP	SerMessager_ret
    72            C        
    73            C        /*
    74            C        SerCommand:
    75            C        	BLOCK	4
    76            C        	CLR	sys_msg
    77            C        SerCommand_1:
    78            C        	MOV	_RC,@(128)
    79            C        	MOV	A,_RD
    80            C        	JPZ	SerCommand_ret
    81            C        	MOV	cnt,A
    82            C        	INC	_RC
    83            C        	MOV	A,_RD
    84            C        	;LCALL	LibCommandValidLength
    85            C        	;ADD	A,@(0)
    86            C        	JPNZ	SerCommand_valid
    87            C        	DEC	cnt
    88            C        	MOV	ax,@(128+2)
    89            C        	MOV	bx,@(128+1)
    90            C        	LCALL	LibCopyRam
    91            C        	DEC	_RC
    92            C        	DEC	_RD
    93            C        	JMP	SerCommand_1
    94            C        SerCommand_valid:
    95            C        	MOV	exb,A
    96            C        	SUBA	cnt,exb
    97            C        	JPNC	SerCommand_error
    98            C        	MOV	_RC,@(128+2)
    99            C        	MOV	sys_data,_RD
   100            C        	MOV	sys_msg,@(WM_COMMAND)
   101            C        	
   102            C        	MOV	cnt,exb
   103            C        	MOV	ax,@(128+2)
   104            C        	MOV	bx,@(63)
   105            C        	LCALL	LibCopyRam
   106            C        	INC	exb
   107            C        	MOV	_RC,@(128)
   108            C        	SUB	_RD,exb
   109            C        	MOV	cnt,_RD
   110            C        	ADDA	exb,@(128+1)
   111            C        	MOV	ax,A
   112            C        	MOV	bx,@(128+1)
   113            C        	LCALL	LibCopyRam
   114            C        	
   115            C        SerCommand_ret:
   116            C        	JMP	SerMessager_ret
   117            C        
   118            C        SerCommand_error:
   119            C        	MOV	_RC,@(128)
   120            C        	MOV	cnt,A
   121            C        	CLR	ax
   122            C        	LCALL	LibClearRam
   123            C        	JMP	SerMessager_ret
   124            C        */
   125            C        
   126 0103E      C        SerCommand:
   127            C      M 	BLOCK	4
       0103E 1848     1     MOV A,@((( 4 << 1 )+ VALUE_IOCA ))
       0103F 000A     1     IOW  _IOCA ,
   128 01040 00DB C        	CLR	sys_msg
   129 01041      C        SerCommand_1:
   130            C      M 	MOV	_RC,@(128)
       01041 1880     1     MOV A,@( 128 )
       01042 004C     1     MOV  _RC ,A
   131 01043 040D C        	MOV	A,_RD
   132            C      M 	JPZ	SerCommand_ret
       01044 0C83     1     JBC  _STATUS , Z 
       01045 146E     1     JMP  SERCOMMAND_RET ,
   133 01046 0055 C        	MOV	cnt,A
   134 01047 054C C        	INC	_RC
   135 01048 040D C        	MOV	A,_RD
   136            C      M 	LCALL	IicCommandLength
                      2  M  PAGE #( IICCOMMANDLENGTH ),
       01049 1E80     2     PAGE ( IICCOMMANDLENGTH / 1024 ),
       0104A 1177     1     CALL ( IICCOMMANDLENGTH % 1024 ),
                      2  M  PAGE #( $ ),
       0104B 1E84     2     PAGE ( $ / 1024 ),
   137            C        	/*
   138            C        	ADD	A,@(0)
   139            C        	JPNZ	SerCommand_valid
   140            C        	DEC	cnt
   141            C        	MOV	ax,@(128+2)
   142            C        	MOV	bx,@(128+1)
   143            C        	LCALL	LibCopyRam
   144            C        	DEC	_RC
   145            C        	DEC	_RD
   146            C        	JMP	SerCommand_1
   147            C        	*/
   148 0104C      C        SerCommand_valid:
   149 0104C 0057 C        	MOV	exb,A
   150            C      M 	SUBA	cnt,exb
       0104D 0417     1     MOV A, EXB 
       0104E 0115     1     SUB A, CNT 
   151            C      M 	JPNC	SerCommand_ret
       0104F 0E03     1     JBS  _STATUS , C 
       01050 146E     1     JMP  SERCOMMAND_RET ,
   152            C      M 	MOV	_RC,@(128+1)
       01051 1881     1     MOV A,@(( 128 + 1 ))
       01052 004C     1     MOV  _RC ,A
   153            C      M 	MOV	sys_data,_RD
       01053 040D     1     MOV A, _RD 
       01054 005C     1     MOV  SYS_DATA ,A
   154            C      M 	MOV	sys_msg,@(WM_COMMAND)
       01055 1807     1     MOV A,@( WM_COMMAND )
       01056 005B     1     MOV  SYS_MSG ,A
   155            C        	
   156            C      M 	MOV	cnt,exb
       01057 0417     1     MOV A, EXB 
       01058 0055     1     MOV  CNT ,A
   157            C      M 	MOV	ax,@(128+1)
       01059 1881     1     MOV A,@(( 128 + 1 ))
       0105A 0053     1     MOV  AX ,A
   158            C      M 	MOV	bx,@(63)
       0105B 183F     1     MOV A,@( 63 )
       0105C 0056     1     MOV  BX ,A
   159            C      M 	LCALL	LibCopyRam
                      2  M  PAGE #( LIBCOPYRAM ),
       0105D 1E81     2     PAGE ( LIBCOPYRAM / 1024 ),
       0105E 1126     1     CALL ( LIBCOPYRAM % 1024 ),
                      2  M  PAGE #( $ ),
       0105F 1E84     2     PAGE ( $ / 1024 ),
   160            C      M 	MOV	_RC,@(128)
       01060 1880     1     MOV A,@( 128 )
       01061 004C     1     MOV  _RC ,A
   161            C      M 	SUB	_RD,exb
       01062 0417     1     MOV A, EXB 
       01063 014D     1     SUB  _RD ,A
   162            C      M 	MOV	cnt,_RD
       01064 040D     1     MOV A, _RD 
       01065 0055     1     MOV  CNT ,A
   163            C      M 	ADDA	exb,@(128+1)
       01066 1881     1     MOV A,@(( 128 + 1 ))
       01067 0397     1     ADD A, EXB 
   164 01068 0053 C        	MOV	ax,A
   165            C      M 	MOV	bx,@(128+1)
       01069 1881     1     MOV A,@(( 128 + 1 ))
       0106A 0056     1     MOV  BX ,A
   166            C      M 	LCALL	LibCopyRam
                      2  M  PAGE #( LIBCOPYRAM ),
       0106B 1E81     2     PAGE ( LIBCOPYRAM / 1024 ),
       0106C 1126     1     CALL ( LIBCOPYRAM % 1024 ),
                      2  M  PAGE #( $ ),
       0106D 1E84     2     PAGE ( $ / 1024 ),
   167            C        	
   168 0106E      C        SerCommand_ret:
   169 0106E 141A C        	JMP	SerMessager_ret
   170            C        	
   171            C        
   172            C        
   173 0106F      C        SerTimer:
   174 0106F 0439 C        	MOV	A,r0_tmr_timer
   175            C      M 	JPZ	SerTimer_none
       01070 0C83     1     JBC  _STATUS , Z 
       01071 1478     1     JMP  SERTIMER_NONE ,
   176 01072 005C C        	MOV	sys_data,A
   177            C      M 	SUB	r0_tmr_timer,sys_data
       01073 041C     1     MOV A, SYS_DATA 
       01074 0179     1     SUB  R0_TMR_TIMER ,A
   178            C      M 	MOV	sys_msg,@(WM_TIME)
       01075 1804     1     MOV A,@( WM_TIME )
       01076 005B     1     MOV  SYS_MSG ,A
   179 01077 1479 C        	JMP	SerTimer_ret
   180 01078      C        SerTimer_none:
   181 01078 00DB C        	CLR	sys_msg
   182 01079      C        SerTimer_ret:
   183 01079 141A C        	JMP	SerMessager_ret
   184            C        
   185 0107A      C        SerKeyCheck:
   186            C      M 	MOV	_RSR,@(r0_key1_dealed)
       0107A 1834     1     MOV A,@( R0_KEY1_DEALED )
       0107B 0044     1     MOV  _RSR ,A
   187            C      M 	MOV	ax,r0_key1
       0107C 0428     1     MOV A, R0_KEY1 
       0107D 0053     1     MOV  AX ,A
   188            C      M 	MOV	exa,@(0xff)
       0107E 18FF     1     MOV A,@( 255 )
       0107F 0054     1     MOV  EXA ,A
   189 01080 10AB C        	CALL	SerKey
   190            C      M 	JPNZ	SerKeyCheck_1
       01081 0E83     1     JBS  _STATUS , Z 
       01082 149F     1     JMP  SERKEYCHECK_1 ,
   191            C      M 	MOV	_RSR,@(r0_key2_dealed)
       01083 1835     1     MOV A,@( R0_KEY2_DEALED )
       01084 0044     1     MOV  _RSR ,A
   192            C      M 	MOV	ax,r0_key2
       01085 0429     1     MOV A, R0_KEY2 
       01086 0053     1     MOV  AX ,A
   193            C      M 	MOV	exa,@(0xff)
       01087 18FF     1     MOV A,@( 255 )
       01088 0054     1     MOV  EXA ,A
   194 01089 10AB C        	CALL	SerKey
   195            C      M 	JPNZ	SerKeyCheck_2
       0108A 0E83     1     JBS  _STATUS , Z 
       0108B 14A0     1     JMP  SERKEYCHECK_2 ,
   196            C      M 	MOV	_RSR,@(r0_key3_dealed)
       0108C 1836     1     MOV A,@( R0_KEY3_DEALED )
       0108D 0044     1     MOV  _RSR ,A
   197            C      M 	MOV	ax,r0_key3
       0108E 042A     1     MOV A, R0_KEY3 
       0108F 0053     1     MOV  AX ,A
   198            C      M 	MOV	exa,@(0xff)
       01090 18FF     1     MOV A,@( 255 )
       01091 0054     1     MOV  EXA ,A
   199 01092 10AB C        	CALL	SerKey
   200            C      M 	JPNZ	SerKeyCheck_3
       01093 0E83     1     JBS  _STATUS , Z 
       01094 14A3     1     JMP  SERKEYCHECK_3 ,
   201            C      M 	MOV	_RSR,@(r0_key4_dealed)
       01095 1837     1     MOV A,@( R0_KEY4_DEALED )
       01096 0044     1     MOV  _RSR ,A
   202            C      M 	MOV	ax,r0_key4
       01097 042B     1     MOV A, R0_KEY4 
       01098 0053     1     MOV  AX ,A
   203            C      M 	MOV	exa,@(0x01)
       01099 1801     1     MOV A,@( 1 )
       0109A 0054     1     MOV  EXA ,A
   204 0109B 10AB C        	CALL	SerKey
   205            C      M 	JPNZ	SerKeyCheck_4
       0109C 0E83     1     JBS  _STATUS , Z 
       0109D 14A6     1     JMP  SERKEYCHECK_4 ,
   206 0109E 14A9 C        	JMP	SerKeyCheck_none
   207 0109F      C        SerKeyCheck_1:
   208 0109F 14AA C        	JMP	SerKeyCheck_ret
   209 010A0      C        SerKeyCheck_2:
   210            C      M 	ADD	sys_data,@(0x10)
       010A0 1810     1     MOV A,@( 16 )
       010A1 03DC     1     ADD  SYS_DATA ,A
   211 010A2 14AA C        	JMP	SerKeyCheck_ret
   212 010A3      C        SerKeyCheck_3:
   213            C      M 	ADD	sys_data,@(0x20)
       010A3 1820     1     MOV A,@( 32 )
       010A4 03DC     1     ADD  SYS_DATA ,A
   214 010A5 14AA C        	JMP	SerKeyCheck_ret
   215 010A6      C        SerKeyCheck_4:
   216            C      M 	ADD	sys_data,@(0x30)
       010A6 1830     1     MOV A,@( 48 )
       010A7 03DC     1     ADD  SYS_DATA ,A
   217 010A8 14AA C        	JMP	SerKeyCheck_ret
   218 010A9      C        SerKeyCheck_none:
   219 010A9 00DB C        	CLR	sys_msg
   220 010AA      C        SerKeyCheck_ret:
   221 010AA 141A C        	JMP	SerMessager_ret
   222            C        
   223 010AB      C        SerKey:
   224            C      M 	XORA	_R0,ax
       010AB 0413     1     MOV A, AX 
       010AC 0300     1     XOR A, _R0 
   225 010AD 0294 C        	AND	A,exa
   226            C      M 	JPZ	SerKey_none
       010AE 0C83     1     JBC  _STATUS , Z 
       010AF 14CA     1     JMP  SERKEY_NONE ,
   227 010B0 0053 C        	MOV	ax,A
   228            C        	
   229 010B1 00D5 C        	CLR	cnt
   230 010B2      C        SerKey_loop:
   231            C      M 	JPB	cnt,3,SerKey_none
       010B2 0CD5     1     JBC  CNT , 3 
       010B3 14CA     1     JMP  SERKEY_NONE ,
   232 010B4 0653 C        	RRC	ax
   233            C      M 	JPC	SerKey_1
       010B5 0C03     1     JBC  _STATUS , C 
       010B6 14B9     1     JMP  SERKEY_1 ,
   234 010B7 0555 C        	INC	cnt
   235 010B8 14B2 C        	JMP	SerKey_loop
   236 010B9      C        SerKey_1:
   237            C      M 	MOV	sys_data,cnt
       010B9 0415     1     MOV A, CNT 
       010BA 005C     1     MOV  SYS_DATA ,A
   238            C      M 	LCALL	TabSetBit
                      2  M  PAGE #( TABSETBIT ),
       010BB 1E8D     2     PAGE ( TABSETBIT / 1024 ),
       010BC 120D     1     CALL ( TABSETBIT % 1024 ),
                      2  M  PAGE #( $ ),
       010BD 1E84     2     PAGE ( $ / 1024 ),
   239 010BE 0053 C        	MOV	ax,A
   240 010BF 0340 C        	XOR	_R0,A
   241            C      M 	ANDA	_R0,ax
       010C0 0413     1     MOV A, AX 
       010C1 0280     1     AND A, _R0 
   242            C      M 	JPNZ	SerKey_release
       010C2 0E83     1     JBS  _STATUS , Z 
       010C3 14C7     1     JMP  SERKEY_RELEASE ,
   243 010C4      C        SerKey_press:
   244            C      M 	MOV	sys_msg,@(WM_KEYPRESS)
       010C4 1801     1     MOV A,@( WM_KEYPRESS )
       010C5 005B     1     MOV  SYS_MSG ,A
   245 010C6 14CC C        	JMP	SerKey_ret
   246 010C7      C        SerKey_release:
   247            C      M 	MOV	sys_msg,@(WM_KEYRELEASE)
       010C7 1803     1     MOV A,@( WM_KEYRELEASE )
       010C8 005B     1     MOV  SYS_MSG ,A
   248 010C9 14CC C        	JMP	SerKey_ret
   249 010CA      C        SerKey_none:
   250            C      M 	MOV	sys_msg,@(WM_NONE)
       010CA 1800     1     MOV A,@( WM_NONE )
       010CB 005B     1     MOV  SYS_MSG ,A
   251 010CC      C        SerKey_ret:
   252 010CC 141A C        	JMP	SerMessager_ret
   253            C        
   254            C        
   255 010CD      C        SerIntKeyScan:
   256            C      M 	AND	_RE,@(0xfb)			; blank LCD
       010CD 18FB     1     MOV A,@( 251 )
       010CE 02CE     1     AND  _RE ,A
   257 010CF 001E C        	IOR	_IOCE
   258 010D0 1ADF C        	AND	A,@(0xdf)
   259 010D1 000E C        	IOW	_IOCE
   260            C        	
   261 010D2 0B88 C        	BS	_P8,6
   262            C        	
   263 010D3 0803 C        	BC	_STATUS,C
   264            C      M 	MOV	r0_int_ax,@(0xff)
       010D4 18FF     1     MOV A,@( 255 )
       010D5 007D     1     MOV  R0_INT_AX ,A
   265            C      M 	ANDA	r0_tmr,@(0x07)
       010D6 1807     1     MOV A,@( 7 )
       010D7 02BB     1     AND A, R0_TMR 
   266 010D8 0020 C        	TBL
   267 010D9 067D C        	RRC	r0_int_ax
   268 010DA 067D C        	RRC	r0_int_ax
   269 010DB 067D C        	RRC	r0_int_ax
   270 010DC 067D C        	RRC	r0_int_ax
   271 010DD 067D C        	RRC	r0_int_ax
   272 010DE 067D C        	RRC	r0_int_ax
   273 010DF 067D C        	RRC	r0_int_ax
   274 010E0 063D C        	RRCA	r0_int_ax
   275 010E1 0006 C        	IOW	_IOC6
   276 010E2 0046 C        	MOV	_R6,A
   277 010E3 0012 C        	RET
   278            C        
   279 010E4      C        SerIntKeyRead:
   280            C      M 	MOV	r0_int_ax,@(r0_key1_get-1)
       010E4 182B     1     MOV A,@(( R0_KEY1_GET - 1 ))
       010E5 007D     1     MOV  R0_INT_AX ,A
   281 010E6 063B C        	RRCA	r0_tmr
   282 010E7 1A03 C        	AND	A,@(0x03)
   283 010E8 0020 C        	TBL
   284 010E9 057D C        	INC	r0_int_ax
   285 010EA 057D C        	INC	r0_int_ax
   286 010EB 057D C        	INC	r0_int_ax
   287 010EC 057D C        	INC	r0_int_ax
   288            C      M 	MOV	_RSR,r0_int_ax
       010ED 043D     1     MOV A, R0_INT_AX 
       010EE 0044     1     MOV  _RSR ,A
   289            C      M 	JPB	r0_tmr,0,SerIntKeyRead_l
       010EF 0C3B     1     JBC  R0_TMR , 0 
       010F0 14F6     1     JMP  SERINTKEYREAD_L ,
   290 010F1      C        SerIntKeyRead_h:
   291            C      M 	AND	_R0,@(0x0f)
       010F1 180F     1     MOV A,@( 15 )
       010F2 02C0     1     AND  _R0 ,A
   292 010F3 0707 C        	SWAPA	_R7
   293 010F4 1AF0 C        	AND	A,@(0xf0)
   294 010F5 14FA C        	JMP	SerIntKeyRead_1
   295 010F6      C        SerIntKeyRead_l:
   296            C      M 	AND	_R0,@(0xf0)
       010F6 18F0     1     MOV A,@( 240 )
       010F7 02C0     1     AND  _R0 ,A
   297            C      M 	ANDA	_R7,@(0x0f)
       010F8 180F     1     MOV A,@( 15 )
       010F9 0287     1     AND A, _R7 
   298 010FA      C        SerIntKeyRead_1:
   299 010FA 0240 C        	OR	_R0,A
   300            C      M 	IOW	_IOC6,@(0xff)
       010FB 18FF     1     MOV A,@( 255 )
       010FC 0006     1     IOW  _IOC6 ,
   301            C        	
   302 010FD 0988 C        	BC	_P8,6
   303            C        	
   304 010FE 001E C        	IOR	_IOCE
   305 010FF 1920 C        	OR	A,@(0x20)
   306 01100 000E C        	IOW	_IOCE
   307            C      M 	OR	_RE,@(0x06)			; open LCD
       01101 1806     1     MOV A,@( 6 )
       01102 024E     1     OR  _RE ,A
   308            C        	
   309 01103 0012 C        	RET
   310            C        
   311 01104      C        SerIntKeyProtect:
   312            C      M 	XORA	r0_key1_get,r0_key1_bak
       01104 0430     1     MOV A, R0_KEY1_BAK 
       01105 032C     1     XOR A, R0_KEY1_GET 
   313 01106 1AFF C        	AND	A,@(0xff)
   314            C      M 	JPNZ	SerIntKeyProtect_newkey
       01107 0E83     1     JBS  _STATUS , Z 
       01108 1528     1     JMP  SERINTKEYPROTECT_NEWKEY ,
   315            C      M 	XORA	r0_key2_get,r0_key2_bak
       01109 0431     1     MOV A, R0_KEY2_BAK 
       0110A 032D     1     XOR A, R0_KEY2_GET 
   316 0110B 1AFF C        	AND	A,@(0xff)
   317            C      M 	JPNZ	SerIntKeyProtect_newkey
       0110C 0E83     1     JBS  _STATUS , Z 
       0110D 1528     1     JMP  SERINTKEYPROTECT_NEWKEY ,
   318            C      M 	XORA	r0_key3_get,r0_key3_bak
       0110E 0432     1     MOV A, R0_KEY3_BAK 
       0110F 032E     1     XOR A, R0_KEY3_GET 
   319 01110 1AFF C        	AND	A,@(0xff)
   320            C      M 	JPNZ	SerIntKeyProtect_newkey
       01111 0E83     1     JBS  _STATUS , Z 
       01112 1528     1     JMP  SERINTKEYPROTECT_NEWKEY ,
   321            C      M 	XORA	r0_key4_get,r0_key4_bak
       01113 0433     1     MOV A, R0_KEY4_BAK 
       01114 032F     1     XOR A, R0_KEY4_GET 
   322 01115 1A01 C        	AND	A,@(0x01)
   323            C      M 	JPNZ	SerIntKeyProtect_newkey
       01116 0E83     1     JBS  _STATUS , Z 
       01117 1528     1     JMP  SERINTKEYPROTECT_NEWKEY ,
   324 01118 0438 C        	MOV	A,r0_tmr_key
   325            C      M 	JPZ	SerIntKeyProtect_end
       01119 0C83     1     JBC  _STATUS , Z 
       0111A 1532     1     JMP  SERINTKEYPROTECT_END ,
   326 0111B 01F8 C        	DEC	r0_tmr_key
   327 0111C 0438 C        	MOV	A,r0_tmr_key
   328            C      M 	JPNZ	SerIntKeyProtect_end
       0111D 0E83     1     JBS  _STATUS , Z 
       0111E 1532     1     JMP  SERINTKEYPROTECT_END ,
   329            C      M 	MOV	r0_key1,r0_key1_bak
       0111F 0430     1     MOV A, R0_KEY1_BAK 
       01120 0068     1     MOV  R0_KEY1 ,A
   330            C      M 	MOV	r0_key2,r0_key2_bak
       01121 0431     1     MOV A, R0_KEY2_BAK 
       01122 0069     1     MOV  R0_KEY2 ,A
   331            C      M 	MOV	r0_key3,r0_key3_bak
       01123 0432     1     MOV A, R0_KEY3_BAK 
       01124 006A     1     MOV  R0_KEY3 ,A
   332            C      M 	MOV	r0_key4,r0_key4_bak
       01125 0433     1     MOV A, R0_KEY4_BAK 
       01126 006B     1     MOV  R0_KEY4 ,A
   333 01127 1532 C        	JMP	SerIntKeyProtect_end
   334 01128      C        SerIntKeyProtect_newkey:
   335            C      M 	MOV	r0_key1_bak,r0_key1_get
       01128 042C     1     MOV A, R0_KEY1_GET 
       01129 0070     1     MOV  R0_KEY1_BAK ,A
   336            C      M 	MOV	r0_key2_bak,r0_key2_get
       0112A 042D     1     MOV A, R0_KEY2_GET 
       0112B 0071     1     MOV  R0_KEY2_BAK ,A
   337            C      M 	MOV	r0_key3_bak,r0_key3_get
       0112C 042E     1     MOV A, R0_KEY3_GET 
       0112D 0072     1     MOV  R0_KEY3_BAK ,A
   338            C      M 	MOV	r0_key4_bak,r0_key4_get
       0112E 042F     1     MOV A, R0_KEY4_GET 
       0112F 0073     1     MOV  R0_KEY4_BAK ,A
   339            C      M 	MOV	r0_tmr_key,@(50)
       01130 1832     1     MOV A,@( 50 )
       01131 0078     1     MOV  R0_TMR_KEY ,A
   340 01132      C        SerIntKeyProtect_end:
   341 01132 0012 C        	RET
   342            C        
   343 01133      C        SerIntTimer:
   344 01133 057A C        	INC	r0_tmr_unit
   345            C      M 	SUBA	r0_tmr_unit,@(TIME_UNIT)
       01134 180A     1     MOV A,@( TIME_UNIT )
       01135 013A     1     SUB A, R0_TMR_UNIT 
   346            C      M 	JPNC	SerIntTimer_end
       01136 0E03     1     JBS  _STATUS , C 
       01137 153A     1     JMP  SERINTTIMER_END ,
   347 01138 007A C        	MOV	r0_tmr_unit,A
   348 01139 0579 C        	INC	r0_tmr_timer
   349 0113A      C        SerIntTimer_end:
   350 0113A 0012 C        	RET
   351            C        
   352            C        
   353 0113B      C        SerIntDialNumber:
   354 0113B 0012 C        	RET
   355            C        
   356            C        ; 时钟
   357 0113C      C        SerClock:
   358            C      M 	BANK	1
       0113C 0B84     1     BS  _RAM , 6 
       0113D 09C4     1     BC  _RAM , 7 
   359            C      M 	JPNB	r1_rtc_flag,7,SerClock_ret
       0113E 0FEE     1     JBS  R1_RTC_FLAG , 7 
       0113F 1596     1     JMP  SERCLOCK_RET ,
   360 01140 09EE C        	BC	r1_rtc_flag,7
   361 01141 0011 C        	DISI
   362 01142 0725 C        	SWAPA	r1_rtc_tmr
   363 01143 1A0F C        	AND	A,@(0x0f)
   364 01144 03E6 C        	ADD	r1_rtc_second,A
   365            C      M 	AND	r1_rtc_tmr,@(0x0f)
       01145 180F     1     MOV A,@( 15 )
       01146 02E5     1     AND  R1_RTC_TMR ,A
   366 01147 0010 C        	ENI
   367 01148 0A2E C        	BS	r1_rtc_flag,0
   368            C      M 	SUBA	r1_rtc_second,@(60)
       01149 183C     1     MOV A,@( 60 )
       0114A 0126     1     SUB A, R1_RTC_SECOND 
   369            C      M 	JPNC	SerClock_ret
       0114B 0E03     1     JBS  _STATUS , C 
       0114C 1596     1     JMP  SERCLOCK_RET ,
   370            C      M 	SUB	r1_rtc_second,@(60)
       0114D 183C     1     MOV A,@( 60 )
       0114E 0166     1     SUB  R1_RTC_SECOND ,A
   371 0114F 0A6E C        	BS	r1_rtc_flag,1
   372 01150 0567 C        	INC	r1_rtc_minute
   373            C      M 	SUBA	r1_rtc_minute,@(60)
       01151 183C     1     MOV A,@( 60 )
       01152 0127     1     SUB A, R1_RTC_MINUTE 
   374            C      M 	JPNC	SerClock_ret
       01153 0E03     1     JBS  _STATUS , C 
       01154 1596     1     JMP  SERCLOCK_RET ,
   375 01155 00E7 C        	CLR	r1_rtc_minute
   376 01156 0AAE C        	BS	r1_rtc_flag,2
   377 01157 0568 C        	INC	r1_rtc_hour
   378            C      M 	SUBA	r1_rtc_hour,@(24)
       01158 1818     1     MOV A,@( 24 )
       01159 0128     1     SUB A, R1_RTC_HOUR 
   379            C      M 	JPNC	SerClock_ret
       0115A 0E03     1     JBS  _STATUS , C 
       0115B 1596     1     JMP  SERCLOCK_RET ,
   380 0115C 00E8 C        	CLR	r1_rtc_hour
   381 0115D 0AEE C        	BS	r1_rtc_flag,3
   382 0115E 0A5F C        	BS	hardware,SYNCCLOCK		; 时钟同步
   383 0115F 0569 C        	INC	r1_rtc_week
   384            C      M 	SUBA	r1_rtc_week,@(7)
       01160 1807     1     MOV A,@( 7 )
       01161 0129     1     SUB A, R1_RTC_WEEK 
   385            C      M 	JPNC	$+2
       01162 0E03     1     JBS  _STATUS , C 
       01163 1565     1     JMP ( $ + 2 ),
   386 01164 00E9 C        	CLR	r1_rtc_week
   387 01165 056A C        	INC	r1_rtc_day
   388 01166 01AB C        	DECA	r1_rtc_month
   389            C      M 	LCALL	TabMonth
                      2  M  PAGE #( TABMONTH ),
       01167 1E8D     2     PAGE ( TABMONTH / 1024 ),
       01168 1200     1     CALL ( TABMONTH % 1024 ),
                      2  M  PAGE #( $ ),
       01169 1E84     2     PAGE ( $ / 1024 ),
   390 0116A 0053 C        	MOV	ax,A
   391            C      M 	SUBA	r1_rtc_month,@(2)
       0116B 1802     1     MOV A,@( 2 )
       0116C 012B     1     SUB A, R1_RTC_MONTH 
   392            C      M 	JPNZ	SerClock_1
       0116D 0E83     1     JBS  _STATUS , Z 
       0116E 157B     1     JMP  SERCLOCK_1 ,
   393            C      M 	ANDA	r1_rtc_year,@(0x03)
       0116F 1803     1     MOV A,@( 3 )
       01170 02AC     1     AND A, R1_RTC_YEAR 
   394            C      M 	JPNZ	SerClock_normal
       01171 0E83     1     JBS  _STATUS , Z 
       01172 157B     1     JMP  SERCLOCK_NORMAL ,
   395 01173 042C C        	MOV	A,r1_rtc_year
   396            C      M 	JPNZ	SerClock_leap
       01174 0E83     1     JBS  _STATUS , Z 
       01175 157A     1     JMP  SERCLOCK_LEAP ,
   397            C      M 	ANDA	r1_rtc_century,@(0x03)
       01176 1803     1     MOV A,@( 3 )
       01177 02AD     1     AND A, R1_RTC_CENTURY 
   398            C      M 	JPNZ	SerClock_normal
       01178 0E83     1     JBS  _STATUS , Z 
       01179 157B     1     JMP  SERCLOCK_NORMAL ,
   399 0117A      C        SerClock_leap:
   400 0117A 0553 C        	INC	ax
   401 0117B      C        SerClock_normal:
   402 0117B      C        SerClock_1:
   403            C      M 	SUBA	r1_rtc_day,ax
       0117B 0413     1     MOV A, AX 
       0117C 012A     1     SUB A, R1_RTC_DAY 
   404            C      M 	JPNC	SerClock_ret
       0117D 0E03     1     JBS  _STATUS , C 
       0117E 1596     1     JMP  SERCLOCK_RET ,
   405            C      M 	MOV	r1_rtc_day,@(1)
       0117F 1801     1     MOV A,@( 1 )
       01180 006A     1     MOV  R1_RTC_DAY ,A
   406 01181 0B2E C        	BS	r1_rtc_flag,4
   407 01182 056B C        	INC	r1_rtc_month
   408            C      M 	SUBA	r1_rtc_month,@(13)
       01183 180D     1     MOV A,@( 13 )
       01184 012B     1     SUB A, R1_RTC_MONTH 
   409            C      M 	JPNC	SerClock_ret
       01185 0E03     1     JBS  _STATUS , C 
       01186 1596     1     JMP  SERCLOCK_RET ,
   410            C      M 	MOV	r1_rtc_month,@(1)
       01187 1801     1     MOV A,@( 1 )
       01188 006B     1     MOV  R1_RTC_MONTH ,A
   411 01189 0B6E C        	BS	r1_rtc_flag,5
   412 0118A 056C C        	INC	r1_rtc_year
   413            C      M 	SUBA	r1_rtc_year,@(100)
       0118B 1864     1     MOV A,@( 100 )
       0118C 012C     1     SUB A, R1_RTC_YEAR 
   414            C      M 	JPNC	SerClock_ret
       0118D 0E03     1     JBS  _STATUS , C 
       0118E 1596     1     JMP  SERCLOCK_RET ,
   415 0118F 00EC C        	CLR	r1_rtc_year
   416 01190 056D C        	INC	r1_rtc_century
   417            C      M 	SUBA	r1_rtc_century,@(100)
       01191 1864     1     MOV A,@( 100 )
       01192 012D     1     SUB A, R1_RTC_CENTURY 
   418            C      M 	JPNC	SerClock_ret
       01193 0E03     1     JBS  _STATUS , C 
       01194 1596     1     JMP  SERCLOCK_RET ,
   419 01195 00ED C        	CLR	r1_rtc_century
   420 01196      C        SerClock_ret:
   421 01196 1C00 C        	RETL	@(0)
   422            C        
   423 01197      C        SerServer:
   424 01197 119D C        	CALL	SerSync				; 同步
   425 01198 11E4 C        	CALL	SerClockUpdate
   426 01199 122F C        	CALL	SerBackLight			; 背光灯
   427 0119A 1274 C        	CALL	SerDspCheck			; 处理DSP的相关命令
   428 0119B 1321 C        	CALL	SerStamp
   429 0119C 1C00 C        	RETL	@(0)
   430            C        
   431 0119D      C        SerSync:
   432            C      M 	XORA	sys_msg,@(WM_COMMAND)
       0119D 1807     1     MOV A,@( WM_COMMAND )
       0119E 031B     1     XOR A, SYS_MSG 
   433            C      M 	JPZ	SerSync_ret
       0119F 0C83     1     JBC  _STATUS , Z 
       011A0 15A5     1     JMP  SERSYNC_RET ,
   434            C      M 	JPB	hardware,SYNCCLOCK,SerSync_clock
       011A1 0C5F     1     JBC  HARDWARE , SYNCCLOCK 
       011A2 15A6     1     JMP  SERSYNC_CLOCK ,
   435            C      M 	JPB	hardware,SYNCSETTING,SerSync_setting
       011A3 0C9F     1     JBC  HARDWARE , SYNCSETTING 
       011A4 15BF     1     JMP  SERSYNC_SETTING ,
   436 011A5      C        SerSync_ret:
   437 011A5 1C00 C        	RETL	@(0)
   438 011A6      C        SerSync_clock:
   439            C      M 	BANK	1
       011A6 0B84     1     BS  _RAM , 6 
       011A7 09C4     1     BC  _RAM , 7 
   440            C      M 	PAGE	#(IIC)
       011A8 1E80     1     PAGE ( IIC / 1024 ),
   441 011A9 1840 C        	MOV	A,@(0x40)
   442 011AA 10A8 C        	CALL	IicSendData
   443 011AB 042D C        	MOV	A,r1_rtc_century
   444 011AC 10A8 C        	CALL	IicSendData
   445 011AD 042C C        	MOV	A,r1_rtc_year
   446 011AE 10A8 C        	CALL	IicSendData
   447 011AF 042B C        	MOV	A,r1_rtc_month
   448 011B0 10A8 C        	CALL	IicSendData
   449 011B1 042A C        	MOV	A,r1_rtc_day
   450 011B2 10A8 C        	CALL	IicSendData
   451 011B3 0428 C        	MOV	A,r1_rtc_hour
   452 011B4 10A8 C        	CALL	IicSendData
   453 011B5 0427 C        	MOV	A,r1_rtc_minute
   454 011B6 10A8 C        	CALL	IicSendData
   455 011B7 0426 C        	MOV	A,r1_rtc_second
   456 011B8 10A8 C        	CALL	IicSendData
   457 011B9 0429 C        	MOV	A,r1_rtc_week
   458 011BA 10A8 C        	CALL	IicSendData
   459 011BB 10B3 C        	CALL	IicSer
   460            C      M 	PAGE	#($)
       011BC 1E84     1     PAGE ( $ / 1024 ),
   461 011BD 085F C        	BC	hardware,SYNCCLOCK
   462 011BE 15A5 C        	JMP	SerSync_ret
   463 011BF      C        SerSync_setting:
   464            C      M 	BANK	3
       011BF 0B84     1     BS  _RAM , 6 
       011C0 0BC4     1     BS  _RAM , 7 
   465            C      M 	PAGE	#(IIC)
       011C1 1E80     1     PAGE ( IIC / 1024 ),
   466            C      M 	BANK	3
       011C2 0B84     1     BS  _RAM , 6 
       011C3 0BC4     1     BS  _RAM , 7 
   467 011C4 187F C        	MOV	A,@(0x7f)
   468 011C5 10A8 C        	CALL	IicSendData
   469 011C6 0430 C        	MOV	A,r3_remotecode1
   470 011C7 10A8 C        	CALL	IicSendData
   471 011C8 0431 C        	MOV	A,r3_remotecode2
   472 011C9 10A8 C        	CALL	IicSendData
   473 011CA 0432 C        	MOV	A,r3_areacode1
   474 011CB 10A8 C        	CALL	IicSendData
   475 011CC 0433 C        	MOV	A,r3_areacode2
   476 011CD 10A8 C        	CALL	IicSendData
   477 011CE 0434 C        	MOV	A,r3_contrast
   478 011CF 10A8 C        	CALL	IicSendData
   479 011D0 0435 C        	MOV	A,r3_language
   480 011D1 10A8 C        	CALL	IicSendData
   481 011D2 0436 C        	MOV	A,r3_ringmelody
   482 011D3 10A8 C        	CALL	IicSendData
   483 011D4 0437 C        	MOV	A,r3_ringvolume
   484 011D5 10A8 C        	CALL	IicSendData
   485 011D6 0438 C        	MOV	A,r3_ringdelay
   486 011D7 10A8 C        	CALL	IicSendData
   487 011D8 0439 C        	MOV	A,r3_rate
   488 011D9 10A8 C        	CALL	IicSendData
   489 011DA 043A C        	MOV	A,r3_flashtime
   490 011DB 10A8 C        	CALL	IicSendData
   491 011DC 043B C        	MOV	A,r3_pausetime
   492 011DD 10A8 C        	CALL	IicSendData
   493 011DE 043C C        	MOV	A,r3_ogm
   494 011DF 10A8 C        	CALL	IicSendData
   495 011E0 10B3 C        	CALL	IicSer
   496            C      M 	PAGE	#($)
       011E1 1E84     1     PAGE ( $ / 1024 ),
   497 011E2 089F C        	BC	hardware,SYNCSETTING
   498 011E3 15A5 C        	JMP	SerSync_ret
   499            C        
   500 011E4      C        SerClockUpdate:
   501            C      M 	BANK	1
       011E4 0B84     1     BS  _RAM , 6 
       011E5 09C4     1     BC  _RAM , 7 
   502            C      M 	JPNB	r1_rtc_flag,1,SerClockUpdate_ret
       011E6 0E6E     1     JBS  R1_RTC_FLAG , 1 
       011E7 161D     1     JMP  SERCLOCKUPDATE_RET ,
   503 011E8 086E C        	BC	r1_rtc_flag,1
   504            C        
   505 011E9 1881 C        	MOV	A,@(STYLE_LEFT)
   506            C      M 	LCALL	VgaNum1
                      2  M  PAGE #( VGANUM1 ),
       011EA 1E83     2     PAGE ( VGANUM1 / 1024 ),
       011EB 1010     1     CALL ( VGANUM1 % 1024 ),
                      2  M  PAGE #( $ ),
       011EC 1E84     2     PAGE ( $ / 1024 ),
   507            C      M 	MOV	ax,r1_rtc_hour
       011ED 0428     1     MOV A, R1_RTC_HOUR 
       011EE 0053     1     MOV  AX ,A
   508            C      M 	JPB	sys_flag,TIMEFORMAT,SerClockUpdate_1
       011EF 0C5D     1     JBC  SYS_FLAG , TIMEFORMAT 
       011F0 15FD     1     JMP  SERCLOCKUPDATE_1 ,
   509 011F1 0428 C        	MOV	A,r1_rtc_hour
   510            C      M 	JPNZ	$+4
       011F2 0E83     1     JBS  _STATUS , Z 
       011F3 15F7     1     JMP ( $ + 4 ),
   511            C      M 	MOV	ax,@(12)
       011F4 180C     1     MOV A,@( 12 )
       011F5 0053     1     MOV  AX ,A
   512 011F6 15FD C        	JMP	SerClockUpdate_1
   513            C      M 	SUBA	ax,@(13)
       011F7 180D     1     MOV A,@( 13 )
       011F8 0113     1     SUB A, AX 
   514            C      M 	JPNC	SerClockUpdate_1
       011F9 0E03     1     JBS  _STATUS , C 
       011FA 15FD     1     JMP  SERCLOCKUPDATE_1 ,
   515            C      M 	SUB	ax,@(12)
       011FB 180C     1     MOV A,@( 12 )
       011FC 0153     1     SUB  AX ,A
   516 011FD      C        SerClockUpdate_1:
   517 011FD 0413 C        	MOV	A,ax
   518 011FE 121E C        	CALL	UpdateClock
   519 011FF 0427 C        	MOV	A,r1_rtc_minute
   520 01200 121E C        	CALL	UpdateClock
   521 01201 042B C        	MOV	A,r1_rtc_month
   522 01202 121E C        	CALL	UpdateClock
   523 01203 042A C        	MOV	A,r1_rtc_day
   524 01204 121E C        	CALL	UpdateClock
   525            C      M 	PAGE	#(VGA)
       01205 1E83     1     PAGE ( VGA / 1024 ),
   526 01206 1800 C        	MOV	A,@(0x00)
   527 01207 1010 C        	CALL	VgaNum1
   528 01208 1074 C        	CALL	VgaDrawNum1
   529            C      M 	PAGE	#($)
       01209 1E84     1     PAGE ( $ / 1024 ),
   530            C        	
   531            C      M 	MOV	ax,r1_rtc_hour
       0120A 0428     1     MOV A, R1_RTC_HOUR 
       0120B 0053     1     MOV  AX ,A
   532            C      M 	BANK	2
       0120C 0984     1     BC  _RAM , 6 
       0120D 0BC4     1     BS  _RAM , 7 
   533            C        	
   534            C      M 	AND	r2_stamp1,@(0xc3)
       0120E 18C3     1     MOV A,@( 195 )
       0120F 02F4     1     AND  R2_STAMP1 ,A
   535            C      M 	JPB	sys_flag,TIMEFORMAT,SerClockUpdate_2
       01210 0C5D     1     JBC  SYS_FLAG , TIMEFORMAT 
       01211 161A     1     JMP  SERCLOCKUPDATE_2 ,
   536            C      M 	SUBA	ax,@(12)
       01212 180C     1     MOV A,@( 12 )
       01213 0113     1     SUB A, AX 
   537            C      M 	JPC	SerClockUpdate_pm
       01214 0C03     1     JBC  _STATUS , C 
       01215 1618     1     JMP  SERCLOCKUPDATE_PM ,
   538 01216      C        SerClockUpdate_am:
   539 01216 0B74 C        	BS	r2_stamp1,5
   540 01217 161A C        	JMP	SerClockUpdate_2
   541 01218      C        SerClockUpdate_pm:
   542 01218 0B34 C        	BS	r2_stamp1,4
   543 01219 161A C        	JMP	SerClockUpdate_2
   544 0121A      C        SerClockUpdate_2:
   545 0121A 0AF4 C        	BS	r2_stamp1,3
   546 0121B 0AB4 C        	BS	r2_stamp1,2
   547 0121C 0BDD C        	BS	sys_flag,STAMP
   548 0121D      C        SerClockUpdate_ret:
   549 0121D 1C00 C        	RETL	@(0)
   550            C        
   551 0121E      C        UpdateClock:
   552 0121E 0053 C        	MOV	ax,A
   553            C      M 	LCALL	LibMathHexToBcd
                      2  M  PAGE #( LIBMATHHEXTOBCD ),
       0121F 1E81     2     PAGE ( LIBMATHHEXTOBCD / 1024 ),
       01220 1037     1     CALL ( LIBMATHHEXTOBCD % 1024 ),
                      2  M  PAGE #( $ ),
       01221 1E84     2     PAGE ( $ / 1024 ),
   554            C      M 	MOV	r1_rtc_temp,ax
       01222 0413     1     MOV A, AX 
       01223 007A     1     MOV  R1_RTC_TEMP ,A
   555            C      M 	PAGE	#(VGA)
       01224 1E83     1     PAGE ( VGA / 1024 ),
   556 01225 073A C        	SWAPA	r1_rtc_temp
   557 01226 1A0F C        	AND	A,@(0x0f)
   558 01227 1F30 C        	ADD	A,@(48)
   559 01228 1010 C        	CALL	VgaNum1
   560            C      M 	ANDA	r1_rtc_temp,@(0x0f)
       01229 180F     1     MOV A,@( 15 )
       0122A 02BA     1     AND A, R1_RTC_TEMP 
   561 0122B 1F30 C        	ADD	A,@(48)
   562 0122C 1010 C        	CALL	VgaNum1
   563            C      M 	PAGE	#($)
       0122D 1E84     1     PAGE ( $ / 1024 ),
   564 0122E 1C00 C        	RETL	@(0)
   565            C        
   566            C        
   567            C        
   568 0122F      C        SerBackLight:
   569            C      M 	JPNB	hardware,POWERSTATUS,SerBackLight_off
       0122F 0F9F     1     JBS  HARDWARE , POWERSTATUS 
       01230 1656     1     JMP  SERBACKLIGHT_OFF ,
   570            C      M 	XORA	sys_msg,@(WM_POWER)
       01231 1805     1     MOV A,@( WM_POWER )
       01232 031B     1     XOR A, SYS_MSG 
   571            C      M 	JPZ	SerBackLight_power
       01233 0C83     1     JBC  _STATUS , Z 
       01234 1658     1     JMP  SERBACKLIGHT_POWER ,
   572            C      M 	XORA	sys_msg,@(WM_KEYPRESS)
       01235 1801     1     MOV A,@( WM_KEYPRESS )
       01236 031B     1     XOR A, SYS_MSG 
   573            C      M 	JPZ	SerBackLight_on
       01237 0C83     1     JBC  _STATUS , Z 
       01238 166E     1     JMP  SERBACKLIGHT_ON ,
   574            C      M 	XORA	sys_msg,@(WM_COMMAND)
       01239 1807     1     MOV A,@( WM_COMMAND )
       0123A 031B     1     XOR A, SYS_MSG 
   575            C      M 	JPZ	SerBackLight_command
       0123B 0C83     1     JBC  _STATUS , Z 
       0123C 165D     1     JMP  SERBACKLIGHT_COMMAND ,
   576            C      M 	XORA	sys_msg,@(WM_HANDSET)
       0123D 1806     1     MOV A,@( WM_HANDSET )
       0123E 031B     1     XOR A, SYS_MSG 
   577            C      M 	JPZ	SerBackLight_on
       0123F 0C83     1     JBC  _STATUS , Z 
       01240 166E     1     JMP  SERBACKLIGHT_ON ,
   578            C      M 	JPNB	_R9,0,SerBackLight_ret
       01241 0E09     1     JBS  _R9 , 0 
       01242 1673     1     JMP  SERBACKLIGHT_RET ,
   579            C      M 	XORA	sys_msg,@(WM_TIME)
       01243 1804     1     MOV A,@( WM_TIME )
       01244 031B     1     XOR A, SYS_MSG 
   580            C      M 	JPNZ	SerBackLight_ret
       01245 0E83     1     JBS  _STATUS , Z 
       01246 1673     1     JMP  SERBACKLIGHT_RET ,
   581            C      M 	BANK	2
       01247 0984     1     BC  _RAM , 6 
       01248 0BC4     1     BS  _RAM , 7 
   582            C      M 	ADD	r2_tmr_blight,sys_data
       01249 041C     1     MOV A, SYS_DATA 
       0124A 03E8     1     ADD  R2_TMR_BLIGHT ,A
   583 0124B      C        SerBackLight_1:
   584            C      M 	SUBA	r2_tmr_blight,@(100)
       0124B 1864     1     MOV A,@( 100 )
       0124C 0128     1     SUB A, R2_TMR_BLIGHT 
   585            C      M 	JPNC	SerBackLight_2
       0124D 0E03     1     JBS  _STATUS , C 
       0124E 1652     1     JMP  SERBACKLIGHT_2 ,
   586 0124F 0068 C        	MOV	r2_tmr_blight,A
   587 01250 0569 C        	INC	r2_tmr_blight1
   588 01251 164B C        	JMP	SerBackLight_1
   589 01252      C        SerBackLight_2:
   590            C      M 	SUBA	r2_tmr_blight1,@(20)
       01252 1814     1     MOV A,@( 20 )
       01253 0129     1     SUB A, R2_TMR_BLIGHT1 
   591            C      M 	JPNC	SerBackLight_ret
       01254 0E03     1     JBS  _STATUS , C 
       01255 1673     1     JMP  SERBACKLIGHT_RET ,
   592 01256      C        SerBackLight_off:
   593 01256 0809 C        	BC	_R9,0
   594 01257 1673 C        	JMP	SerBackLight_ret
   595            C        
   596 01258      C        SerBackLight_power:
   597            C      M 	XORA	sys_data,@(POWER_ON)
       01258 1800     1     MOV A,@( POWER_ON )
       01259 031C     1     XOR A, SYS_DATA 
   598            C      M 	JPZ	SerBackLight_on
       0125A 0C83     1     JBC  _STATUS , Z 
       0125B 166E     1     JMP  SERBACKLIGHT_ON ,
   599 0125C 1656 C        	JMP	SerBackLight_off
   600            C        
   601 0125D      C        SerBackLight_command:
   602            C      M 	XORA	sys_data,@(0x19)
       0125D 1819     1     MOV A,@( 25 )
       0125E 031C     1     XOR A, SYS_DATA 
   603            C      M 	JPZ	SerBackLight_on
       0125F 0C83     1     JBC  _STATUS , Z 
       01260 166E     1     JMP  SERBACKLIGHT_ON ,
   604            C      M 	XORA	sys_data,@(0x1a)
       01261 181A     1     MOV A,@( 26 )
       01262 031C     1     XOR A, SYS_DATA 
   605            C      M 	JPZ	SerBackLight_command_1
       01263 0C83     1     JBC  _STATUS , Z 
       01264 1666     1     JMP  SERBACKLIGHT_COMMAND_1 ,
   606 01265 1C00 C        	RETL	@(0)
   607 01266      C        SerBackLight_command_1:
   608 01266 1801 C        	MOV	A,@(1)
   609            C      M 	LCALL	LibGetCommand
                      2  M  PAGE #( LIBGETCOMMAND ),
       01267 1E81     2     PAGE ( LIBGETCOMMAND / 1024 ),
       01268 12B6     1     CALL ( LIBGETCOMMAND % 1024 ),
                      2  M  PAGE #( $ ),
       01269 1E84     2     PAGE ( $ / 1024 ),
   610 0126A 1F00 C        	ADD	A,@(0)
   611            C      M 	JPZ	SerBackLight_on
       0126B 0C83     1     JBC  _STATUS , Z 
       0126C 166E     1     JMP  SERBACKLIGHT_ON ,
   612 0126D 1C00 C        	RETL	@(0)
   613            C        
   614 0126E      C        SerBackLight_on:
   615 0126E 0A09 C        	BS	_R9,0
   616            C      M 	BANK	2
       0126F 0984     1     BC  _RAM , 6 
       01270 0BC4     1     BS  _RAM , 7 
   617 01271 00E8 C        	CLR	r2_tmr_blight
   618 01272 00E9 C        	CLR	r2_tmr_blight1
   619            C        	
   620 01273      C        SerBackLight_ret:
   621 01273 1C00 C        	RETL	@(0)
   622            C        
   623 01274      C        SerDspCheck:
   624            C      M 	XORA	sys_msg,@(WM_HANDSET)
       01274 1806     1     MOV A,@( WM_HANDSET )
       01275 031B     1     XOR A, SYS_MSG 
   625            C      M 	JPZ	SerDspCheck_handset
       01276 0C83     1     JBC  _STATUS , Z 
       01277 1681     1     JMP  SERDSPCHECK_HANDSET ,
   626            C      M 	XORA	sys_msg,@(WM_POWER)
       01278 1805     1     MOV A,@( WM_POWER )
       01279 031B     1     XOR A, SYS_MSG 
   627            C      M 	JPZ	SerDspCheck_power
       0127A 0C83     1     JBC  _STATUS , Z 
       0127B 1689     1     JMP  SERDSPCHECK_POWER ,
   628            C      M 	XORA	sys_msg,@(WM_COMMAND)
       0127C 1807     1     MOV A,@( WM_COMMAND )
       0127D 031B     1     XOR A, SYS_MSG 
   629            C      M 	JPZ	SerDspCheck_command
       0127E 0C83     1     JBC  _STATUS , Z 
       0127F 1692     1     JMP  SERDSPCHECK_COMMAND ,
   630 01280      C        SerDspCheck_ret:
   631 01280 1C00 C        	RETL	@(0)
   632 01281      C        SerDspCheck_handset:
   633            C      M 	PAGE	#(IIC)
       01281 1E80     1     PAGE ( IIC / 1024 ),
   634 01282 1851 C        	MOV	A,@(0x51)
   635 01283 10A8 C        	CALL	IicSendData
   636 01284 041C C        	MOV	A,sys_data
   637 01285 10A8 C        	CALL	IicSendData
   638 01286 10B3 C        	CALL	IicSer
   639            C      M 	PAGE	#($)
       01287 1E84     1     PAGE ( $ / 1024 ),
   640 01288 1C00 C        	RETL	@(0)
   641 01289      C        SerDspCheck_power:
   642            C      M 	XORA	sys_data,@(POWER_ON)
       01289 1800     1     MOV A,@( POWER_ON )
       0128A 031C     1     XOR A, SYS_DATA 
   643            C      M 	JPZ	SerDspCheck_power_on
       0128B 0C83     1     JBC  _STATUS , Z 
       0128C 1690     1     JMP  SERDSPCHECK_POWER_ON ,
   644 0128D 0989 C        	BC	_P9,6
   645 0128E 081F C        	BC	hardware,DTAMPOWER
   646 0128F 0012 C        	RET
   647 01290      C        SerDspCheck_power_on:
   648 01290 0B89 C        	BS	_P9,6
   649 01291 1C00 C        	RETL	@(0)
   650            C        
   651 01292      C        SerDspCheck_command:
   652            C      M 	SUBA	sys_data,@(0x07)
       01292 1807     1     MOV A,@( 7 )
       01293 011C     1     SUB A, SYS_DATA 
   653            C      M 	JPC	SerDspCheck_command_1
       01294 0C03     1     JBC  _STATUS , C 
       01295 16AB     1     JMP  SERDSPCHECK_COMMAND_1 ,
   654 01296 041C C        	MOV	A,sys_data
   655 01297 133F C        	CALL	SerDspCheckTabInfo
   656 01298 0044 C        	MOV	_RSR,A
   657 01299 1801 C        	MOV	A,@(1)
   658            C      M 	LCALL	LibGetCommand
                      2  M  PAGE #( LIBGETCOMMAND ),
       0129A 1E81     2     PAGE ( LIBGETCOMMAND / 1024 ),
       0129B 12B6     1     CALL ( LIBGETCOMMAND % 1024 ),
                      2  M  PAGE #( $ ),
       0129C 1E84     2     PAGE ( $ / 1024 ),
   659 0129D 0040 C        	MOV	_R0,A
   660            C        	
   661            C      M 	SUBA	sys_data,@(0x04)
       0129E 1804     1     MOV A,@( 4 )
       0129F 011C     1     SUB A, SYS_DATA 
   662            C      M 	JPNZ	SerDspCheck_command_1
       012A0 0E83     1     JBS  _STATUS , Z 
       012A1 16AB     1     JMP  SERDSPCHECK_COMMAND_1 ,
   663 012A2 0428 C        	MOV	A,r3_newcall
   664            C      M 	JPZ	$+2
       012A3 0C83     1     JBC  _STATUS , Z 
       012A4 16A6     1     JMP ( $ + 2 ),
   665 012A5 1880 C        	MOV	A,@(0x80)
   666            C      M 	BANK	2
       012A6 0984     1     BC  _RAM , 6 
       012A7 0BC4     1     BS  _RAM , 7 
   667 012A8 1F40 C        	ADD	A,@(0x40)
   668 012A9 0078 C        	MOV	r2_led_newcall,A
   669 012AA 1C00 C        	RETL	@(0)
   670 012AB      C        SerDspCheck_command_1:
   671            C      M 	XORA	sys_data,@(0x1c)
       012AB 181C     1     MOV A,@( 28 )
       012AC 031C     1     XOR A, SYS_DATA 
   672            C      M 	JPZ	SerDspCheck_status
       012AD 0C83     1     JBC  _STATUS , Z 
       012AE 16C5     1     JMP  SERDSPCHECK_STATUS ,
   673 012AF 081E C        	BC	sys_flagext,DSPSTATUS
   674            C      M 	XORA	sys_data,@(0x1a)
       012B0 181A     1     MOV A,@( 26 )
       012B1 031C     1     XOR A, SYS_DATA 
   675            C      M 	JPZ	SerDspCheck_caller
       012B2 0C83     1     JBC  _STATUS , Z 
       012B3 16CF     1     JMP  SERDSPCHECK_CALLER ,
   676            C      M 	XORA	sys_data,@(0x3f)
       012B4 183F     1     MOV A,@( 63 )
       012B5 031C     1     XOR A, SYS_DATA 
   677            C      M 	JPZ	SerDspCheck_reset
       012B6 0C83     1     JBC  _STATUS , Z 
       012B7 16E8     1     JMP  SERDSPCHECK_RESET ,
   678            C      M 	XORA	sys_data,@(0x40)
       012B8 1840     1     MOV A,@( 64 )
       012B9 031C     1     XOR A, SYS_DATA 
   679            C      M 	JPZ	SerDspCheck_time
       012BA 0C83     1     JBC  _STATUS , Z 
       012BB 16EB     1     JMP  SERDSPCHECK_TIME ,
   680            C      M 	XORA	sys_data,@(0x7f)
       012BC 187F     1     MOV A,@( 127 )
       012BD 031C     1     XOR A, SYS_DATA 
   681            C      M 	JPZ	SerDspCheck_set
       012BE 0C83     1     JBC  _STATUS , Z 
       012BF 170B     1     JMP  SERDSPCHECK_SET ,
   682            C      M 	XORA	sys_data,@(0x80)
       012C0 1880     1     MOV A,@( 128 )
       012C1 031C     1     XOR A, SYS_DATA 
   683            C      M 	JPZ	SerDspCheck_cid
       012C2 0C83     1     JBC  _STATUS , Z 
       012C3 1704     1     JMP  SERDSPCHECK_CID ,
   684 012C4 1C00 C        	RETL	@(0)
   685 012C5      C        SerDspCheck_status:
   686 012C5 1801 C        	MOV	A,@(1)
   687            C      M 	LCALL	LibGetCommand
                      2  M  PAGE #( LIBGETCOMMAND ),
       012C6 1E81     2     PAGE ( LIBGETCOMMAND / 1024 ),
       012C7 12B6     1     CALL ( LIBGETCOMMAND % 1024 ),
                      2  M  PAGE #( $ ),
       012C8 1E84     2     PAGE ( $ / 1024 ),
   688            C      M 	JPZ	SerDspCheck_status_idle
       012C9 0C83     1     JBC  _STATUS , Z 
       012CA 16CD     1     JMP  SERDSPCHECK_STATUS_IDLE ,
   689 012CB 0A1E C        	BS	sys_flagext,DSPSTATUS
   690            C        	;BS	sys_flag,PROGRAMREIN
   691 012CC 1C00 C        	RETL	@(0)
   692 012CD      C        SerDspCheck_status_idle:
   693 012CD 081E C        	BC	sys_flagext,DSPSTATUS
   694 012CE 1C00 C        	RETL	@(0)
   695 012CF      C        SerDspCheck_caller:
   696 012CF 1801 C        	MOV	A,@(1)
   697            C      M 	LCALL	LibGetCommand
                      2  M  PAGE #( LIBGETCOMMAND ),
       012D0 1E81     2     PAGE ( LIBGETCOMMAND / 1024 ),
       012D1 12B6     1     CALL ( LIBGETCOMMAND % 1024 ),
                      2  M  PAGE #( $ ),
       012D2 1E84     2     PAGE ( $ / 1024 ),
   698 012D3 0053 C        	MOV	ax,A
   699            C      M 	JPZ	SerDspCheck_ret
       012D4 0C83     1     JBC  _STATUS , Z 
       012D5 1680     1     JMP  SERDSPCHECK_RET ,
   700            C      M 	SUBA	ax,@(0x04)
       012D6 1804     1     MOV A,@( 4 )
       012D7 0113     1     SUB A, AX 
   701            C      M 	JPZ	SerDspCheck_ret
       012D8 0C83     1     JBC  _STATUS , Z 
       012D9 1680     1     JMP  SERDSPCHECK_RET ,
   702 012DA      C        SerDspCheck_memory:
   703            C      M 	LCALL	AppCallerToEditor
                      2  M  PAGE #( APPCALLERTOEDITOR ),
       012DA 1E8B     2     PAGE ( APPCALLERTOEDITOR / 1024 ),
       012DB 10A0     1     CALL ( APPCALLERTOEDITOR % 1024 ),
                      2  M  PAGE #( $ ),
       012DC 1E84     2     PAGE ( $ / 1024 ),
   704 012DD 1801 C        	MOV	A,@(1)
   705            C      M 	LCALL	LibGetCommand
                      2  M  PAGE #( LIBGETCOMMAND ),
       012DE 1E81     2     PAGE ( LIBGETCOMMAND / 1024 ),
       012DF 12B6     1     CALL ( LIBGETCOMMAND % 1024 ),
                      2  M  PAGE #( $ ),
       012E0 1E84     2     PAGE ( $ / 1024 ),
   706            C      M 	LCALL	AppEditorToMemory
                      2  M  PAGE #( APPEDITORTOMEMORY ),
       012E1 1E8A     2     PAGE ( APPEDITORTOMEMORY / 1024 ),
       012E2 10A5     1     CALL ( APPEDITORTOMEMORY % 1024 ),
                      2  M  PAGE #( $ ),
       012E3 1E84     2     PAGE ( $ / 1024 ),
   707            C      M 	LCALL	LibClearEditor
                      2  M  PAGE #( LIBCLEAREDITOR ),
       012E4 1E8B     2     PAGE ( LIBCLEAREDITOR / 1024 ),
       012E5 10DB     1     CALL ( LIBCLEAREDITOR % 1024 ),
                      2  M  PAGE #( $ ),
       012E6 1E84     2     PAGE ( $ / 1024 ),
   708 012E7 1C00 C        	RETL	@(0)
   709 012E8      C        SerDspCheck_reset:
   710 012E8 0A5F C        	BS	hardware,SYNCCLOCK		; 时钟同步
   711 012E9 0A1F C        	BS	hardware,DTAMPOWER
   712 012EA 1C00 C        	RETL	@(0)
   713            C        
   714 012EB      C        SerDspCheck_time:
   715            C      M 	MOV	cnt,@(8)
       012EB 1808     1     MOV A,@( 8 )
       012EC 0055     1     MOV  CNT ,A
   716            C      M 	MOV	ax,@(64)
       012ED 1840     1     MOV A,@( 64 )
       012EE 0053     1     MOV  AX ,A
   717            C      M 	MOV	bx,@(0)
       012EF 1800     1     MOV A,@( 0 )
       012F0 0056     1     MOV  BX ,A
   718 012F1      C        SerDspCheck_time_loop:
   719 012F1 01D5 C        	DEC	cnt
   720            C      M 	BLOCK	4
       012F2 1848     1     MOV A,@((( 4 << 1 )+ VALUE_IOCA ))
       012F3 000A     1     IOW  _IOCA ,
   721            C      M 	ADDA	ax,cnt
       012F4 0415     1     MOV A, CNT 
       012F5 0393     1     ADD A, AX 
   722 012F6 004C C        	MOV	_RC,A
   723            C      M 	MOV	exa,_RD
       012F7 040D     1     MOV A, _RD 
       012F8 0054     1     MOV  EXA ,A
   724            C      M 	BLOCK	1
       012F9 1842     1     MOV A,@((( 1 << 1 )+ VALUE_IOCA ))
       012FA 000A     1     IOW  _IOCA ,
   725            C      M 	ADDA	bx,cnt
       012FB 0415     1     MOV A, CNT 
       012FC 0396     1     ADD A, BX 
   726 012FD 004C C        	MOV	_RC,A
   727            C      M 	MOV	_RD,exa
       012FE 0414     1     MOV A, EXA 
       012FF 004D     1     MOV  _RD ,A
   728 01300 0415 C        	MOV	A,cnt
   729            C      M 	JPNZ	SerDspCheck_time_loop
       01301 0E83     1     JBS  _STATUS , Z 
       01302 16F1     1     JMP  SERDSPCHECK_TIME_LOOP ,
   730 01303 1C00 C        	RETL	@(0)
   731 01304      C        SerDspCheck_cid:
   732            C      M 	MOV	cnt,@(58)
       01304 183A     1     MOV A,@( 58 )
       01305 0055     1     MOV  CNT ,A
   733            C      M 	MOV	ax,@(64)
       01306 1840     1     MOV A,@( 64 )
       01307 0053     1     MOV  AX ,A
   734            C      M 	MOV	bx,@(8)
       01308 1808     1     MOV A,@( 8 )
       01309 0056     1     MOV  BX ,A
   735 0130A 16F1 C        	JMP	SerDspCheck_time_loop
   736 0130B      C        SerDspCheck_set:
   737 0130B 00D5 C        	CLR	cnt
   738 0130C      C        SerDspCheck_set_loop:
   739            C      M 	ADDA	cnt,@(1)
       0130C 1801     1     MOV A,@( 1 )
       0130D 0395     1     ADD A, CNT 
   740            C      M 	LCALL	LibGetCommand
                      2  M  PAGE #( LIBGETCOMMAND ),
       0130E 1E81     2     PAGE ( LIBGETCOMMAND / 1024 ),
       0130F 12B6     1     CALL ( LIBGETCOMMAND % 1024 ),
                      2  M  PAGE #( $ ),
       01310 1E84     2     PAGE ( $ / 1024 ),
   741 01311 0053 C        	MOV	ax,A
   742            C        	
   743 01312 0415 C        	MOV	A,cnt
   744 01313 1331 C        	CALL	SetDspCheckTabSet
   745 01314 0044 C        	MOV	_RSR,A
   746            C      M 	MOV	_R0,ax
       01315 0413     1     MOV A, AX 
       01316 0040     1     MOV  _R0 ,A
   747 01317 0555 C        	INC	cnt
   748            C      M 	SUBA	cnt,@(13)
       01318 180D     1     MOV A,@( 13 )
       01319 0115     1     SUB A, CNT 
   749            C      M 	JPNC	SerDspCheck_set_loop
       0131A 0E03     1     JBS  _STATUS , C 
       0131B 170C     1     JMP  SERDSPCHECK_SET_LOOP ,
   750 0131C 0434 C        	MOV	A,r3_contrast
   751            C      M 	LCALL	LibLcdContrast
                      2  M  PAGE #( LIBLCDCONTRAST ),
       0131D 1E81     2     PAGE ( LIBLCDCONTRAST / 1024 ),
       0131E 1087     1     CALL ( LIBLCDCONTRAST % 1024 ),
                      2  M  PAGE #( $ ),
       0131F 1E84     2     PAGE ( $ / 1024 ),
   752 01320 1C00 C        	RETL	@(0)
   753            C        
   754            C        
   755 01321      C        SerStamp:
   756            C      M 	JPNB	sys_flag,STAMP,SerStamp_ret
       01321 0FDD     1     JBS  SYS_FLAG , STAMP 
       01322 1730     1     JMP  SERSTAMP_RET ,
   757 01323 09DD C        	BC	sys_flag,STAMP
   758            C      M 	PAGE	#(VGA)
       01324 1E83     1     PAGE ( VGA / 1024 ),
   759            C      M 	BANK	2
       01325 0984     1     BC  _RAM , 6 
       01326 0BC4     1     BS  _RAM , 7 
   760 01327 0434 C        	MOV	A,r2_stamp1
   761 01328 1000 C        	CALL	VgaStamp1
   762 01329 0435 C        	MOV	A,r2_stamp2
   763 0132A 1004 C        	CALL	VgaStamp2
   764 0132B 0436 C        	MOV	A,r2_stamp3
   765 0132C 1008 C        	CALL	VgaStamp3
   766 0132D 1800 C        	MOV	A,@(0)
   767 0132E 107A C        	CALL	VgaDraw
   768            C      M 	PAGE	#($)
       0132F 1E84     1     PAGE ( $ / 1024 ),
   769 01330      C        SerStamp_ret:
   770 01330 1C00 C        	RETL	@(0)
   771            C        
   772 01331      C        SetDspCheckTabSet:
   773 01331 0020 C        	TBL
   774 01332 1CF0 C        	RETL	@(r3_remotecode1+0xc0)
   775 01333 1CF1 C        	RETL	@(r3_remotecode2+0xc0)
   776 01334 1CF2 C        	RETL	@(r3_areacode1+0xc0)
   777 01335 1CF3 C        	RETL	@(r3_areacode2+0xc0)
   778 01336 1CF4 C        	RETL	@(r3_contrast+0xc0)
   779 01337 1CF5 C        	RETL	@(r3_language+0xc0)
   780 01338 1CF6 C        	RETL	@(r3_ringmelody+0xc0)
   781 01339 1CF7 C        	RETL	@(r3_ringvolume+0xc0)
   782 0133A 1CF8 C        	RETL	@(r3_ringdelay+0xc0)
   783 0133B 1CF9 C        	RETL	@(r3_rate+0xc0)
   784 0133C 1CFA C        	RETL	@(r3_flashtime+0xc0)
   785 0133D 1CFB C        	RETL	@(r3_pausetime+0xc0)
   786 0133E 1CFC C        	RETL	@(r3_ogm+0xc0)
   787 0133F      C        SerDspCheckTabInfo:
   788 0133F 0020 C        	TBL
   789 01340 1C00 C        	RETL	@(0x00)
   790 01341 1CE6 C        	RETL	@(r3_newmsg+0xc0)
   791 01342 1CE7 C        	RETL	@(r3_totalmsg+0xc0)
   792 01343 1CEB C        	RETL	@(r3_book+0xc0)
   793 01344 1CE8 C        	RETL	@(r3_newcall+0xc0)
   794 01345 1CE9 C        	RETL	@(r3_totalcall+0xc0)
   795 01346 1CEA C        	RETL	@(r3_dialedcall+0xc0)
   796            C        
   797            C        
   798            C        
   206                     INCLUDE	"application.asm"
     1            C        
     2            C        /*************************************************
     3            C        application 说明
     4            C        1.  由program保存程序的ID，同时该ID也在stack中，不一定在栈顶。
     5            C            如果program=0，表明当前的程序已经已经停止，由program从stack中出栈，取出上一级程序ID。
     6            C        2.  两个重要位，sys_flag,PROGRAMINIT和sys_flag,PROGRAMREIN。
     7            C            当暂停本程序调用一个新的程序，则sys_flag,PROGRAMINIT置1，第一次执行程序。
     8            C            当程序退出，回到上一级程序时，则sys_flag,PROGRAMREIN置1，程序重新进入。
     9            C            由程序自己清0。
    10            C            第一次执行程序sys_flag,PROGRAMINIT和sys_flag,PROGRAMREIN都被置1。
    11            C        3.  可以将program中的重要数据保存在stack中。
    12            C            第一次执行程序，由application从stack中出栈取得程序ID并保存在program中。
    13            C            需要调用一个新的程序，必须将程序的重要数据保存到stack中，然后保存本程序的ID，再保存新程序的ID。
    14            C            本程序退出，只需要将program清0。
    15            C            本程序退出并进入一个新的程序，只需要保存新程序的ID。
    16            C        4.  sys_flag.PROGRAMINIT=1，对程序作初始化。
    17            C            sys_flag.PROGRAMREIN=1，重新激活程序，需要将程序的保存数据恢复，数据必须和调用新程序时存入的数据相匹配。
    18            C        5.  光标必须保存。
    19            C        6.  不能连续压栈超过2个新程序。
    20            C        *************************************************/
    21            C        
    22            C        ORG	0x1400
    23 01400      C        Application_error:
    24            C      M 	PAGE	#(VGA)
       01400 1E83     1     PAGE ( VGA / 1024 ),
    25 01401 10E0 C        	CALL	VgaBlankChar
    26 01402 1883 C        	MOV	A,@(STYLE_CENTER)
    27 01403 101C C        	CALL	VgaChar
    28 01404 1862 C        	MOV	A,@(98)
    29 01405 101C C        	CALL	VgaChar
    30 01406 1869 C        	MOV	A,@(105)
    31 01407 101C C        	CALL	VgaChar
    32 01408 1867 C        	MOV	A,@(103)
    33 01409 101C C        	CALL	VgaChar
    34 0140A 1820 C        	MOV	A,@(32)
    35 0140B 101C C        	CALL	VgaChar
    36 0140C 1865 C        	MOV	A,@(101)
    37 0140D 101C C        	CALL	VgaChar
    38 0140E 1872 C        	MOV	A,@(114)
    39 0140F 101C C        	CALL	VgaChar
    40 01410 1872 C        	MOV	A,@(114)
    41 01411 101C C        	CALL	VgaChar
    42 01412 186F C        	MOV	A,@(111)
    43 01413 101C C        	CALL	VgaChar
    44 01414 1872 C        	MOV	A,@(114)
    45 01415 101C C        	CALL	VgaChar
    46 01416 1800 C        	MOV	A,@(0)
    47 01417 101C C        	CALL	VgaChar
    48 01418 1078 C        	CALL	VgaDrawChar
    49 01419 0012 C        	RET
    50            C        
    51            C        
    52 0141A      C        ApplicationBackGround:
    53            C      M 	SUBA	program,@(7)
       0141A 1807     1     MOV A,@( 7 )
       0141B 0118     1     SUB A, PROGRAM 
    54            C      M 	JPNC	ApplicationBackGround_ret
       0141C 0E03     1     JBS  _STATUS , C 
       0141D 142C     1     JMP  APPLICATIONBACKGROUND_RET ,
    55            C      M 	XORA	sys_msg,@(WM_HANDSET)
       0141E 1806     1     MOV A,@( WM_HANDSET )
       0141F 031B     1     XOR A, SYS_MSG 
    56            C      M 	JPZ	ApplicationBackGround_handset
       01420 0C83     1     JBC  _STATUS , Z 
       01421 142D     1     JMP  APPLICATIONBACKGROUND_HANDSET ,
    57            C      M 	XORA	sys_msg,@(WM_POWER)
       01422 1805     1     MOV A,@( WM_POWER )
       01423 031B     1     XOR A, SYS_MSG 
    58            C      M 	JPZ	ApplicationBackGround_power
       01424 0C83     1     JBC  _STATUS , Z 
       01425 142F     1     JMP  APPLICATIONBACKGROUND_POWER ,
    59            C      M 	JPNB	hardware,DTAMPOWER,ApplicationBackGround_power
       01426 0E1F     1     JBS  HARDWARE , DTAMPOWER 
       01427 142F     1     JMP  APPLICATIONBACKGROUND_POWER ,
    60            C      M 	XORA	sys_msg,@(WM_COMMAND)
       01428 1807     1     MOV A,@( WM_COMMAND )
       01429 031B     1     XOR A, SYS_MSG 
    61            C      M 	JPZ	ApplicationBackGround_command
       0142A 0C83     1     JBC  _STATUS , Z 
       0142B 1435     1     JMP  APPLICATIONBACKGROUND_COMMAND ,
    62 0142C      C        ApplicationBackGround_ret:
    63 0142C 1C00 C        	RETL	@(0)
    64 0142D      C        ApplicationBackGround_handset:
    65 0142D 1802 C        	MOV	A,@(PRO_AppDialingPhone)
    66 0142E 1447 C        	JMP	ApplicationBackGround_newprogram
    67 0142F      C        ApplicationBackGround_power:
    68            C      M 	PAGE	#(LibPushStack)
       0142F 1E81     1     PAGE ( LIBPUSHSTACK / 1024 ),
    69 01430 1020 C        	CALL	LibClearStack
    70 01431 1801 C        	MOV	A,@(PRO_AppIdle)
    71 01432 1000 C        	CALL	LibPushProgram
    72            C      M 	PAGE	#($)
       01433 1E85     1     PAGE ( $ / 1024 ),
    73 01434 1C01 C        	RETL	@(1)
    74 01435      C        ApplicationBackGround_command:
    75            C      M 	XORA	sys_data,@(0x19)
       01435 1819     1     MOV A,@( 25 )
       01436 031C     1     XOR A, SYS_DATA 
    76            C      M 	JPZ	ApplicationBackGround_ringin
       01437 0C83     1     JBC  _STATUS , Z 
       01438 1445     1     JMP  APPLICATIONBACKGROUND_RINGIN ,
    77            C      M 	XORA	sys_data,@(0x1a)
       01439 181A     1     MOV A,@( 26 )
       0143A 031C     1     XOR A, SYS_DATA 
    78            C      M 	JPZ	ApplicationBackGround_call
       0143B 0C83     1     JBC  _STATUS , Z 
       0143C 143E     1     JMP  APPLICATIONBACKGROUND_CALL ,
    79 0143D 142C C        	JMP	ApplicationBackGround_ret
    80 0143E      C        ApplicationBackGround_call:
    81 0143E 1801 C        	MOV	A,@(1)
    82            C      M 	LCALL	LibGetCommand
                      2  M  PAGE #( LIBGETCOMMAND ),
       0143F 1E81     2     PAGE ( LIBGETCOMMAND / 1024 ),
       01440 12B6     1     CALL ( LIBGETCOMMAND % 1024 ),
                      2  M  PAGE #( $ ),
       01441 1E85     2     PAGE ( $ / 1024 ),
    83 01442 1F00 C        	ADD	A,@(0)
    84            C      M 	JPNZ	ApplicationBackGround_ret
       01443 0E83     1     JBS  _STATUS , Z 
       01444 142C     1     JMP  APPLICATIONBACKGROUND_RET ,
    85 01445      C        ApplicationBackGround_ringin:
    86 01445 1805 C        	MOV	A,@(PRO_AppNewCall)
    87 01446 1447 C        	JMP	ApplicationBackGround_newprogram
    88 01447      C        ApplicationBackGround_newprogram:
    89 01447 0053 C        	MOV	ax,A
    90            C      M 	PAGE	#(LibPushStack)
       01448 1E81     1     PAGE ( LIBPUSHSTACK / 1024 ),
    91 01449 1020 C        	CALL	LibClearStack
    92 0144A 1800 C        	MOV	A,@(0x00)
    93 0144B 1002 C        	CALL	LibPushStack
    94 0144C 1801 C        	MOV	A,@(PRO_AppIdle)
    95 0144D 1002 C        	CALL	LibPushStack
    96 0144E 0413 C        	MOV	A,ax
    97 0144F 1000 C        	CALL	LibPushProgram
    98            C      M 	PAGE	#($)
       01450 1E85     1     PAGE ( $ / 1024 ),
    99 01451 1C01 C        	RETL	@(1)
   100            C        	
   101            C        	
   102            C        	
   103            C        
   104            C        
   105 01452      C        Application:
   106 01452 0418 C        	MOV	A,program
   107            C      M 	JPNZ	Application_0
       01453 0E83     1     JBS  _STATUS , Z 
       01454 145F     1     JMP  APPLICATION_0 ,
   108            C      M 	LCALL	LibDisplayStamp
                      2  M  PAGE #( LIBDISPLAYSTAMP ),
       01455 1E81     2     PAGE ( LIBDISPLAYSTAMP / 1024 ),
       01456 114D     1     CALL ( LIBDISPLAYSTAMP % 1024 ),
                      2  M  PAGE #( $ ),
       01457 1E85     2     PAGE ( $ / 1024 ),
   109            C      M 	LCALL	LibPopProgram
                      2  M  PAGE #( LIBPOPPROGRAM ),
       01458 1E81     2     PAGE ( LIBPOPPROGRAM / 1024 ),
       01459 100A     1     CALL ( LIBPOPPROGRAM % 1024 ),
                      2  M  PAGE #( $ ),
       0145A 1E85     2     PAGE ( $ / 1024 ),
   110 0145B 0058 C        	MOV	program,A
   111 0145C 1F00 C        	ADD	A,@(0)
   112            C      M 	JPZ	Application_error
       0145D 0C83     1     JBC  _STATUS , Z 
       0145E 1400     1     JMP  APPLICATION_ERROR ,
   113 0145F      C        Application_0:
   114 0145F 101A C        	CALL	ApplicationBackGround
   115 01460 1F00 C        	ADD	A,@(0)
   116            C      M 	JPNZ	Application
       01461 0E83     1     JBS  _STATUS , Z 
       01462 1452     1     JMP  APPLICATION ,
   117 01463      C        Application_1:
   118            C      M 	JPB	sys_flagext,DSPSTATUS,Application_ret
       01463 0C1E     1     JBC  SYS_FLAGEXT , DSPSTATUS 
       01464 1558     1     JMP  APPLICATION_RET ,
   119            C      M 	SUBA	program,@(1)
       01465 1801     1     MOV A,@( 1 )
       01466 0118     1     SUB A, PROGRAM 
   120            C        	;AND	A,@(0x7f)
   121 01467 0020 C        	TBL
   122 01468 14B8 C        	JMP	Application_001
   123 01469 14BA C        	JMP	Application_002
   124 0146A 14BC C        	JMP	Application_003
   125 0146B 14BE C        	JMP	Application_004
   126 0146C 14C0 C        	JMP	Application_005
   127 0146D 14C2 C        	JMP	Application_006
   128 0146E 14C4 C        	JMP	Application_007
   129 0146F 14C6 C        	JMP	Application_008
   130 01470 14C8 C        	JMP	Application_009
   131 01471 14CA C        	JMP	Application_010
   132 01472 14CC C        	JMP	Application_011
   133 01473 14CE C        	JMP	Application_012
   134 01474 14D0 C        	JMP	Application_013
   135 01475 14D2 C        	JMP	Application_014
   136 01476 14D4 C        	JMP	Application_015
   137 01477 14D6 C        	JMP	Application_016
   138 01478 14D8 C        	JMP	Application_017
   139 01479 14DA C        	JMP	Application_018
   140 0147A 14DC C        	JMP	Application_019
   141 0147B 14DE C        	JMP	Application_020
   142 0147C 14E0 C        	JMP	Application_021
   143 0147D 14E2 C        	JMP	Application_022
   144 0147E 14E4 C        	JMP	Application_023
   145 0147F 14E6 C        	JMP	Application_024
   146 01480 14E8 C        	JMP	Application_025
   147 01481 14EA C        	JMP	Application_026
   148 01482 14EC C        	JMP	Application_027
   149 01483 14EE C        	JMP	Application_028
   150 01484 14F0 C        	JMP	Application_029
   151 01485 14F2 C        	JMP	Application_030
   152 01486 14F4 C        	JMP	Application_031
   153 01487 14F6 C        	JMP	Application_032
   154 01488 14F8 C        	JMP	Application_033
   155 01489 14FA C        	JMP	Application_034
   156 0148A 14FC C        	JMP	Application_035
   157 0148B 14FE C        	JMP	Application_036
   158 0148C 1500 C        	JMP	Application_037
   159 0148D 1502 C        	JMP	Application_038
   160 0148E 1504 C        	JMP	Application_039
   161 0148F 1506 C        	JMP	Application_040
   162 01490 1508 C        	JMP	Application_041
   163 01491 150A C        	JMP	Application_042
   164 01492 150C C        	JMP	Application_043
   165 01493 150E C        	JMP	Application_044
   166 01494 1510 C        	JMP	Application_045
   167 01495 1512 C        	JMP	Application_046
   168 01496 1514 C        	JMP	Application_047
   169 01497 1516 C        	JMP	Application_048
   170 01498 1518 C        	JMP	Application_049
   171 01499 151A C        	JMP	Application_050
   172 0149A 151C C        	JMP	Application_051
   173 0149B 151E C        	JMP	Application_052
   174 0149C 1520 C        	JMP	Application_053
   175 0149D 1522 C        	JMP	Application_054
   176 0149E 1524 C        	JMP	Application_055
   177 0149F 1526 C        	JMP	Application_056
   178 014A0 1528 C        	JMP	Application_057
   179 014A1 152A C        	JMP	Application_058
   180 014A2 152C C        	JMP	Application_059
   181 014A3 152E C        	JMP	Application_060
   182 014A4 1530 C        	JMP	Application_061
   183 014A5 1532 C        	JMP	Application_062
   184 014A6 1534 C        	JMP	Application_063
   185 014A7 1536 C        	JMP	Application_064
   186 014A8 1538 C        	JMP	Application_065
   187 014A9 153A C        	JMP	Application_066
   188 014AA 153C C        	JMP	Application_067
   189 014AB 153E C        	JMP	Application_068
   190 014AC 1540 C        	JMP	Application_069
   191 014AD 1542 C        	JMP	Application_070
   192 014AE 1544 C        	JMP	Application_071
   193 014AF 1546 C        	JMP	Application_072
   194 014B0 1548 C        	JMP	Application_073
   195 014B1 154A C        	JMP	Application_074
   196 014B2 154C C        	JMP	Application_075
   197 014B3 154E C        	JMP	Application_076
   198 014B4 1550 C        	JMP	Application_077
   199 014B5 1552 C        	JMP	Application_078
   200 014B6 1554 C        	JMP	Application_079
   201 014B7 1556 C        	JMP	Application_080
   202            C        
   203 014B8      C        Application_001:
   204            C      M 	LJMP	AppIdle
                      2  M  PAGE #( APPIDLE ),
       014B8 1E85     2     PAGE ( APPIDLE / 1024 ),
       014B9 1559     1     JMP ( APPIDLE % 1024 ),
   205 014BA      C        Application_002:
   206            C      M 	LJMP	AppDialingPhone
                      2  M  PAGE #( APPDIALINGPHONE ),
       014BA 1E86     2     PAGE ( APPDIALINGPHONE / 1024 ),
       014BB 1400     1     JMP ( APPDIALINGPHONE % 1024 ),
   207 014BC      C        Application_003:
   208            C      M 	LJMP	AppDialingExit
                      2  M  PAGE #( APPDIALINGEXIT ),
       014BC 1E86     2     PAGE ( APPDIALINGEXIT / 1024 ),
       014BD 176E     1     JMP ( APPDIALINGEXIT % 1024 ),
   209 014BE      C        Application_004:
   210            C      M 	LJMP	AppPreDial
                      2  M  PAGE #( APPPREDIAL ),
       014BE 1E86     2     PAGE ( APPPREDIAL / 1024 ),
       014BF 1649     1     JMP ( APPPREDIAL % 1024 ),
   211 014C0      C        Application_005:
   212            C      M 	LJMP	AppNewCall
                      2  M  PAGE #( APPNEWCALL ),
       014C0 1E8B     2     PAGE ( APPNEWCALL / 1024 ),
       014C1 1503     1     JMP ( APPNEWCALL % 1024 ),
   213 014C2      C        Application_006:
   214            C      M 	LJMP	AppIdle
                      2  M  PAGE #( APPIDLE ),
       014C2 1E85     2     PAGE ( APPIDLE / 1024 ),
       014C3 1559     1     JMP ( APPIDLE % 1024 ),
   215 014C4      C        Application_007:
   216            C      M 	LJMP	AppNoContent
                      2  M  PAGE #( APPNOCONTENT ),
       014C4 1E85     2     PAGE ( APPNOCONTENT / 1024 ),
       014C5 1652     1     JMP ( APPNOCONTENT % 1024 ),
   217 014C6      C        Application_008:
   218            C      M 	LJMP	AppMenuMain
                      2  M  PAGE #( APPMENUMAIN ),
       014C6 1E87     2     PAGE ( APPMENUMAIN / 1024 ),
       014C7 1447     1     JMP ( APPMENUMAIN % 1024 ),
   219 014C8      C        Application_009:
   220            C      M 	LJMP	AppCallList
                      2  M  PAGE #( APPCALLLIST ),
       014C8 1E87     2     PAGE ( APPCALLLIST / 1024 ),
       014C9 1545     1     JMP ( APPCALLLIST % 1024 ),
   221 014CA      C        Application_010:
   222            C      M 	LJMP	AppMenuPhoneBook
                      2  M  PAGE #( APPMENUPHONEBOOK ),
       014CA 1E87     2     PAGE ( APPMENUPHONEBOOK / 1024 ),
       014CB 1449     1     JMP ( APPMENUPHONEBOOK % 1024 ),
   223 014CC      C        Application_011:
   224            C      M 	LJMP	AppMenuPhone
                      2  M  PAGE #( APPMENUPHONE ),
       014CC 1E87     2     PAGE ( APPMENUPHONE / 1024 ),
       014CD 14CE     1     JMP ( APPMENUPHONE % 1024 ),
   225 014CE      C        Application_012:
   226            C      M 	LJMP	AppMenuSystemSetting
                      2  M  PAGE #( APPMENUSYSTEMSETTING ),
       014CE 1E87     2     PAGE ( APPMENUSYSTEMSETTING / 1024 ),
       014CF 144B     1     JMP ( APPMENUSYSTEMSETTING % 1024 ),
   227 014D0      C        Application_013:
   228            C      M 	LJMP	AppMenuDAM
                      2  M  PAGE #( APPMENUDAM ),
       014D0 1E87     2     PAGE ( APPMENUDAM / 1024 ),
       014D1 144F     1     JMP ( APPMENUDAM % 1024 ),
   229 014D2      C        Application_014:
   230            C      M 	LJMP	AppMenuPhoneSetting
                      2  M  PAGE #( APPMENUPHONESETTING ),
       014D2 1E87     2     PAGE ( APPMENUPHONESETTING / 1024 ),
       014D3 144D     1     JMP ( APPMENUPHONESETTING % 1024 ),
   231 014D4      C        Application_015:
   232            C      M 	LJMP	AppMenuRecord
                      2  M  PAGE #( APPMENURECORD ),
       014D4 1E87     2     PAGE ( APPMENURECORD / 1024 ),
       014D5 1451     1     JMP ( APPMENURECORD % 1024 ),
   233 014D6      C        Application_016:
   234            C      M 	LJMP	AppIdle
                      2  M  PAGE #( APPIDLE ),
       014D6 1E85     2     PAGE ( APPIDLE / 1024 ),
       014D7 1559     1     JMP ( APPIDLE % 1024 ),
   235 014D8      C        Application_017:
   236            C      M 	LJMP	AppMenuRecorderOn
                      2  M  PAGE #( APPMENURECORDERON ),
       014D8 1E87     2     PAGE ( APPMENURECORDERON / 1024 ),
       014D9 1453     1     JMP ( APPMENURECORDERON % 1024 ),
   237 014DA      C        Application_018:
   238            C      M 	LJMP	AppIdle
                      2  M  PAGE #( APPIDLE ),
       014DA 1E85     2     PAGE ( APPIDLE / 1024 ),
       014DB 1559     1     JMP ( APPIDLE % 1024 ),
   239 014DC      C        Application_019:
   240            C      M 	LJMP	AppIdle
                      2  M  PAGE #( APPIDLE ),
       014DC 1E85     2     PAGE ( APPIDLE / 1024 ),
       014DD 1559     1     JMP ( APPIDLE % 1024 ),
   241 014DE      C        Application_020:
   242            C      M 	LJMP	AppIdle
                      2  M  PAGE #( APPIDLE ),
       014DE 1E85     2     PAGE ( APPIDLE / 1024 ),
       014DF 1559     1     JMP ( APPIDLE % 1024 ),
   243 014E0      C        Application_021:
   244            C      M 	LJMP	AppIdle
                      2  M  PAGE #( APPIDLE ),
       014E0 1E85     2     PAGE ( APPIDLE / 1024 ),
       014E1 1559     1     JMP ( APPIDLE % 1024 ),
   245 014E2      C        Application_022:
   246            C      M 	LJMP	AppIdle
                      2  M  PAGE #( APPIDLE ),
       014E2 1E85     2     PAGE ( APPIDLE / 1024 ),
       014E3 1559     1     JMP ( APPIDLE % 1024 ),
   247 014E4      C        Application_023:
   248            C      M 	LJMP	AppBrowsePbook
                      2  M  PAGE #( APPBROWSEPBOOK ),
       014E4 1E87     2     PAGE ( APPBROWSEPBOOK / 1024 ),
       014E5 1547     1     JMP ( APPBROWSEPBOOK % 1024 ),
   249 014E6      C        Application_024:
   250            C      M 	LJMP	AppNewBook
                      2  M  PAGE #( APPNEWBOOK ),
       014E6 1E8A     2     PAGE ( APPNEWBOOK / 1024 ),
       014E7 1400     1     JMP ( APPNEWBOOK % 1024 ),
   251 014E8      C        Application_025:
   252            C      M 	LJMP	AppDeleteBook
                      2  M  PAGE #( APPDELETEBOOK ),
       014E8 1E85     2     PAGE ( APPDELETEBOOK / 1024 ),
       014E9 16D6     1     JMP ( APPDELETEBOOK % 1024 ),
   253 014EA      C        Application_026:
   254            C      M 	LJMP	AppIdle
                      2  M  PAGE #( APPIDLE ),
       014EA 1E85     2     PAGE ( APPIDLE / 1024 ),
       014EB 1559     1     JMP ( APPIDLE % 1024 ),
   255 014EC      C        Application_027:
   256            C      M 	LJMP	AppIdle
                      2  M  PAGE #( APPIDLE ),
       014EC 1E85     2     PAGE ( APPIDLE / 1024 ),
       014ED 1559     1     JMP ( APPIDLE % 1024 ),
   257 014EE      C        Application_028:
   258            C      M 	LJMP	AppSetClock
                      2  M  PAGE #( APPSETCLOCK ),
       014EE 1E88     2     PAGE ( APPSETCLOCK / 1024 ),
       014EF 1400     1     JMP ( APPSETCLOCK % 1024 ),
   259 014F0      C        Application_029:
   260            C      M 	LJMP	AppRestoreDefault
                      2  M  PAGE #( APPRESTOREDEFAULT ),
       014F0 1E85     2     PAGE ( APPRESTOREDEFAULT / 1024 ),
       014F1 16EE     1     JMP ( APPRESTOREDEFAULT % 1024 ),
   261 014F2      C        Application_030:
   262            C      M 	LJMP	AppSetRingMelody
                      2  M  PAGE #( APPSETRINGMELODY ),
       014F2 1E88     2     PAGE ( APPSETRINGMELODY / 1024 ),
       014F3 16A8     1     JMP ( APPSETRINGMELODY % 1024 ),
   263 014F4      C        Application_031:
   264            C      M 	LJMP	AppSetRingVolume
                      2  M  PAGE #( APPSETRINGVOLUME ),
       014F4 1E88     2     PAGE ( APPSETRINGVOLUME / 1024 ),
       014F5 16E6     1     JMP ( APPSETRINGVOLUME % 1024 ),
   265 014F6      C        Application_032:
   266            C      M 	LJMP	AppSetAreaCode
                      2  M  PAGE #( APPSETAREACODE ),
       014F6 1E87     2     PAGE ( APPSETAREACODE / 1024 ),
       014F7 170A     1     JMP ( APPSETAREACODE % 1024 ),
   267 014F8      C        Application_033:
   268            C      M 	LJMP	AppSetFlashTime
                      2  M  PAGE #( APPSETFLASHTIME ),
       014F8 1E88     2     PAGE ( APPSETFLASHTIME / 1024 ),
       014F9 1729     1     JMP ( APPSETFLASHTIME % 1024 ),
   269 014FA      C        Application_034:
   270            C      M 	LJMP	AppSetPauseTime
                      2  M  PAGE #( APPSETPAUSETIME ),
       014FA 1E88     2     PAGE ( APPSETPAUSETIME / 1024 ),
       014FB 1758     1     JMP ( APPSETPAUSETIME % 1024 ),
   271 014FC      C        Application_035:
   272            C      M 	LJMP	AppSetLcdContrast
                      2  M  PAGE #( APPSETLCDCONTRAST ),
       014FC 1E88     2     PAGE ( APPSETLCDCONTRAST / 1024 ),
       014FD 1781     1     JMP ( APPSETLCDCONTRAST % 1024 ),
   273 014FE      C        Application_036:
   274            C      M 	LJMP	AppNoMessage
                      2  M  PAGE #( APPNOMESSAGE ),
       014FE 1E85     2     PAGE ( APPNOMESSAGE / 1024 ),
       014FF 1650     1     JMP ( APPNOMESSAGE % 1024 ),
   275 01500      C        Application_037:
   276            C      M 	LJMP	AppPlay
                      2  M  PAGE #( APPPLAY ),
       01500 1E89     2     PAGE ( APPPLAY / 1024 ),
       01501 1400     1     JMP ( APPPLAY % 1024 ),
   277 01502      C        Application_038:
   278            C      M 	LJMP	AppDeleteAllMsg
                      2  M  PAGE #( APPDELETEALLMSG ),
       01502 1E85     2     PAGE ( APPDELETEALLMSG / 1024 ),
       01503 16C9     1     JMP ( APPDELETEALLMSG % 1024 ),
   279 01504      C        Application_039:
   280            C      M 	LJMP	AppMemoRecord
                      2  M  PAGE #( APPMEMORECORD ),
       01504 1E89     2     PAGE ( APPMEMORECORD / 1024 ),
       01505 161C     1     JMP ( APPMEMORECORD % 1024 ),
   281 01506      C        Application_040:
   282            C      M 	LJMP	AppOgm1Record
                      2  M  PAGE #( APPOGM1RECORD ),
       01506 1E89     2     PAGE ( APPOGM1RECORD / 1024 ),
       01507 161E     1     JMP ( APPOGM1RECORD % 1024 ),
   283 01508      C        Application_041:
   284            C      M 	LJMP	AppOgm2Record
                      2  M  PAGE #( APPOGM2RECORD ),
       01508 1E89     2     PAGE ( APPOGM2RECORD / 1024 ),
       01509 1620     1     JMP ( APPOGM2RECORD % 1024 ),
   285 0150A      C        Application_042:
   286            C      M 	LJMP	AppOgmSelect
                      2  M  PAGE #( APPOGMSELECT ),
       0150A 1E89     2     PAGE ( APPOGMSELECT / 1024 ),
       0150B 14C9     1     JMP ( APPOGMSELECT % 1024 ),
   287 0150C      C        Application_043:
   288            C      M 	LJMP	AppOgm1Play
                      2  M  PAGE #( APPOGM1PLAY ),
       0150C 1E89     2     PAGE ( APPOGM1PLAY / 1024 ),
       0150D 1624     1     JMP ( APPOGM1PLAY % 1024 ),
   289 0150E      C        Application_044:
   290            C      M 	LJMP	AppOgm2Play
                      2  M  PAGE #( APPOGM2PLAY ),
       0150E 1E89     2     PAGE ( APPOGM2PLAY / 1024 ),
       0150F 1626     1     JMP ( APPOGM2PLAY % 1024 ),
   291 01510      C        Application_045:
   292            C      M 	LJMP	AppMemoPlay
                      2  M  PAGE #( APPMEMOPLAY ),
       01510 1E89     2     PAGE ( APPMEMOPLAY / 1024 ),
       01511 1622     1     JMP ( APPMEMOPLAY % 1024 ),
   293 01512      C        Application_046:
   294            C      M 	LJMP	AppOnoffSelect
                      2  M  PAGE #( APPONOFFSELECT ),
       01512 1E89     2     PAGE ( APPONOFFSELECT / 1024 ),
       01513 1764     1     JMP ( APPONOFFSELECT % 1024 ),
   295 01514      C        Application_047:
   296            C      M 	LJMP	AppMemory1
                      2  M  PAGE #( APPMEMORY1 ),
       01514 1E87     2     PAGE ( APPMEMORY1 / 1024 ),
       01515 168E     1     JMP ( APPMEMORY1 % 1024 ),
   297 01516      C        Application_048:
   298            C      M 	LJMP	AppMemory2
                      2  M  PAGE #( APPMEMORY2 ),
       01516 1E87     2     PAGE ( APPMEMORY2 / 1024 ),
       01517 1690     1     JMP ( APPMEMORY2 % 1024 ),
   299 01518      C        Application_049:
   300            C      M 	LJMP	AppMemory3
                      2  M  PAGE #( APPMEMORY3 ),
       01518 1E87     2     PAGE ( APPMEMORY3 / 1024 ),
       01519 1692     1     JMP ( APPMEMORY3 % 1024 ),
   301 0151A      C        Application_050:
   302            C      M 	LJMP	AppProgram
                      2  M  PAGE #( APPPROGRAM ),
       0151A 1E8B     2     PAGE ( APPPROGRAM / 1024 ),
       0151B 1400     1     JMP ( APPPROGRAM % 1024 ),
   303 0151C      C        Application_051:
   304            C      M 	LJMP	AppEditBook
                      2  M  PAGE #( APPEDITBOOK ),
       0151C 1E8A     2     PAGE ( APPEDITBOOK / 1024 ),
       0151D 140D     1     JMP ( APPEDITBOOK % 1024 ),
   305 0151E      C        Application_052:
   306            C      M 	LJMP	AppSetDate
                      2  M  PAGE #( APPSETDATE ),
       0151E 1E88     2     PAGE ( APPSETDATE / 1024 ),
       0151F 14FF     1     JMP ( APPSETDATE % 1024 ),
   307 01520      C        Application_053:
   308            C      M 	LJMP	AppSetDam
                      2  M  PAGE #( APPSETDAM ),
       01520 1E88     2     PAGE ( APPSETDAM / 1024 ),
       01521 17AF     1     JMP ( APPSETDAM % 1024 ),
   309 01522      C        Application_054:
   310            C      M 	LJMP	AppSetRingDelay
                      2  M  PAGE #( APPSETRINGDELAY ),
       01522 1E89     2     PAGE ( APPSETRINGDELAY / 1024 ),
       01523 1628     1     JMP ( APPSETRINGDELAY % 1024 ),
   311 01524      C        Application_055:
   312            C      M 	LJMP	AppSetRemoteCode
                      2  M  PAGE #( APPSETREMOTECODE ),
       01524 1E89     2     PAGE ( APPSETREMOTECODE / 1024 ),
       01525 1694     1     JMP ( APPSETREMOTECODE % 1024 ),
   313 01526      C        Application_056:
   314            C      M 	LJMP	AppSetRecordTime
                      2  M  PAGE #( APPSETRECORDTIME ),
       01526 1E89     2     PAGE ( APPSETRECORDTIME / 1024 ),
       01527 171D     1     JMP ( APPSETRECORDTIME % 1024 ),
   315 01528      C        Application_057:
   316            C      M 	LJMP	AppSuccessfull
                      2  M  PAGE #( APPSUCCESSFULL ),
       01528 1E85     2     PAGE ( APPSUCCESSFULL / 1024 ),
       01529 164E     1     JMP ( APPSUCCESSFULL % 1024 ),
   317 0152A      C        Application_058:
   318            C      M 	LJMP	AppIdle
                      2  M  PAGE #( APPIDLE ),
       0152A 1E85     2     PAGE ( APPIDLE / 1024 ),
       0152B 1559     1     JMP ( APPIDLE % 1024 ),
   319 0152C      C        Application_059:
   320            C      M 	LJMP	AppIdle
                      2  M  PAGE #( APPIDLE ),
       0152C 1E85     2     PAGE ( APPIDLE / 1024 ),
       0152D 1559     1     JMP ( APPIDLE % 1024 ),
   321 0152E      C        Application_060:
   322            C      M 	LJMP	AppIdle
                      2  M  PAGE #( APPIDLE ),
       0152E 1E85     2     PAGE ( APPIDLE / 1024 ),
       0152F 1559     1     JMP ( APPIDLE % 1024 ),
   323 01530      C        Application_061:
   324            C      M 	LJMP	AppIdle
                      2  M  PAGE #( APPIDLE ),
       01530 1E85     2     PAGE ( APPIDLE / 1024 ),
       01531 1559     1     JMP ( APPIDLE % 1024 ),
   325 01532      C        Application_062:
   326            C      M 	LJMP	AppIdle
                      2  M  PAGE #( APPIDLE ),
       01532 1E85     2     PAGE ( APPIDLE / 1024 ),
       01533 1559     1     JMP ( APPIDLE % 1024 ),
   327 01534      C        Application_063:
   328            C      M 	LJMP	AppIdle
                      2  M  PAGE #( APPIDLE ),
       01534 1E85     2     PAGE ( APPIDLE / 1024 ),
       01535 1559     1     JMP ( APPIDLE % 1024 ),
   329 01536      C        Application_064:
   330            C      M 	LJMP	AppIdle
                      2  M  PAGE #( APPIDLE ),
       01536 1E85     2     PAGE ( APPIDLE / 1024 ),
       01537 1559     1     JMP ( APPIDLE % 1024 ),
   331 01538      C        Application_065:
   332            C      M 	LJMP	AppIdle
                      2  M  PAGE #( APPIDLE ),
       01538 1E85     2     PAGE ( APPIDLE / 1024 ),
       01539 1559     1     JMP ( APPIDLE % 1024 ),
   333 0153A      C        Application_066:
   334            C      M 	LJMP	AppIdle
                      2  M  PAGE #( APPIDLE ),
       0153A 1E85     2     PAGE ( APPIDLE / 1024 ),
       0153B 1559     1     JMP ( APPIDLE % 1024 ),
   335 0153C      C        Application_067:
   336            C      M 	LJMP	AppIdle
                      2  M  PAGE #( APPIDLE ),
       0153C 1E85     2     PAGE ( APPIDLE / 1024 ),
       0153D 1559     1     JMP ( APPIDLE % 1024 ),
   337 0153E      C        Application_068:
   338            C      M 	LJMP	AppIdle
                      2  M  PAGE #( APPIDLE ),
       0153E 1E85     2     PAGE ( APPIDLE / 1024 ),
       0153F 1559     1     JMP ( APPIDLE % 1024 ),
   339 01540      C        Application_069:
   340            C      M 	LJMP	AppIdle
                      2  M  PAGE #( APPIDLE ),
       01540 1E85     2     PAGE ( APPIDLE / 1024 ),
       01541 1559     1     JMP ( APPIDLE % 1024 ),
   341 01542      C        Application_070:
   342            C      M 	LJMP	AppIdle
                      2  M  PAGE #( APPIDLE ),
       01542 1E85     2     PAGE ( APPIDLE / 1024 ),
       01543 1559     1     JMP ( APPIDLE % 1024 ),
   343 01544      C        Application_071:
   344            C      M 	LJMP	AppIdle
                      2  M  PAGE #( APPIDLE ),
       01544 1E85     2     PAGE ( APPIDLE / 1024 ),
       01545 1559     1     JMP ( APPIDLE % 1024 ),
   345 01546      C        Application_072:
   346            C      M 	LJMP	AppIdle
                      2  M  PAGE #( APPIDLE ),
       01546 1E85     2     PAGE ( APPIDLE / 1024 ),
       01547 1559     1     JMP ( APPIDLE % 1024 ),
   347 01548      C        Application_073:
   348            C      M 	LJMP	AppIdle
                      2  M  PAGE #( APPIDLE ),
       01548 1E85     2     PAGE ( APPIDLE / 1024 ),
       01549 1559     1     JMP ( APPIDLE % 1024 ),
   349 0154A      C        Application_074:
   350            C      M 	LJMP	AppIdle
                      2  M  PAGE #( APPIDLE ),
       0154A 1E85     2     PAGE ( APPIDLE / 1024 ),
       0154B 1559     1     JMP ( APPIDLE % 1024 ),
   351 0154C      C        Application_075:
   352            C      M 	LJMP	AppIdle
                      2  M  PAGE #( APPIDLE ),
       0154C 1E85     2     PAGE ( APPIDLE / 1024 ),
       0154D 1559     1     JMP ( APPIDLE % 1024 ),
   353 0154E      C        Application_076:
   354            C      M 	LJMP	AppIdle
                      2  M  PAGE #( APPIDLE ),
       0154E 1E85     2     PAGE ( APPIDLE / 1024 ),
       0154F 1559     1     JMP ( APPIDLE % 1024 ),
   355 01550      C        Application_077:
   356            C      M 	LJMP	AppIdle
                      2  M  PAGE #( APPIDLE ),
       01550 1E85     2     PAGE ( APPIDLE / 1024 ),
       01551 1559     1     JMP ( APPIDLE % 1024 ),
   357 01552      C        Application_078:
   358            C      M 	LJMP	AppIdle
                      2  M  PAGE #( APPIDLE ),
       01552 1E85     2     PAGE ( APPIDLE / 1024 ),
       01553 1559     1     JMP ( APPIDLE % 1024 ),
   359 01554      C        Application_079:
   360            C      M 	LJMP	AppIdle
                      2  M  PAGE #( APPIDLE ),
       01554 1E85     2     PAGE ( APPIDLE / 1024 ),
       01555 1559     1     JMP ( APPIDLE % 1024 ),
   361 01556      C        Application_080:
   362            C      M 	LJMP	AppIdle
                      2  M  PAGE #( APPIDLE ),
       01556 1E85     2     PAGE ( APPIDLE / 1024 ),
       01557 1559     1     JMP ( APPIDLE % 1024 ),
   363 01558      C        Application_ret:
   364 01558 1C00 C        	RETL	@(0)
   365            C        
   366            C        
   367            C        
   368            C        /*************************************************
   369            C        AppIdle
   370            C        待机程序
   371            C        初始化:	打开hook，拨号计时器清0。
   372            C        显示:	第二行显示清空，第三行显示拨号计时。
   373            C        待机:	1. 屏幕显示message信息数，机器的状态等
   374            C        	2. 处理所有的按键消息，手柄消息。
   375            C        操作:
   376            C        	1. 按下数字键，进入预拨号码编辑程序(AppPreDial)
   377            C        	2. 拿起手柄，进入拨号程序(AppDialingPhone)
   378            C        	3. 按下SPK键，进入拨号程序(AppDialingPhone)
   379            C        *************************************************/
   380 01559      C        AppIdle:
   381            C      M 	JPB	sys_flag,PROGRAMINIT,AppIdle_init
       01559 0CDD     1     JBC  SYS_FLAG , PROGRAMINIT 
       0155A 155E     1     JMP  APPIDLE_INIT ,
   382            C      M 	JPB	sys_flag,PROGRAMREIN,AppIdle_rein
       0155B 0D1D     1     JBC  SYS_FLAG , PROGRAMREIN 
       0155C 1564     1     JMP  APPIDLE_REIN ,
   383 0155D 1577 C        	JMP	AppIdle_idle
   384 0155E      C        AppIdle_init:
   385 0155E 08DD C        	BC	sys_flag,PROGRAMINIT
   386 0155F 1800 C        	MOV	A,@(0x00)
   387            C      M 	LCALL	LibStoreCursor
                      2  M  PAGE #( LIBSTORECURSOR ),
       01560 1E81     2     PAGE ( LIBSTORECURSOR / 1024 ),
       01561 1079     1     CALL ( LIBSTORECURSOR % 1024 ),
                      2  M  PAGE #( $ ),
       01562 1E85     2     PAGE ( $ / 1024 ),
   388 01563 156A C        	JMP	AppIdle_display
   389 01564      C        AppIdle_rein:
   390            C      M 	LCALL	LibPopStack
                      2  M  PAGE #( LIBPOPSTACK ),
       01564 1E81     2     PAGE ( LIBPOPSTACK / 1024 ),
       01565 100C     1     CALL ( LIBPOPSTACK % 1024 ),
                      2  M  PAGE #( $ ),
       01566 1E85     2     PAGE ( $ / 1024 ),
   391            C      M 	LCALL	LibStoreCursor
                      2  M  PAGE #( LIBSTORECURSOR ),
       01567 1E81     2     PAGE ( LIBSTORECURSOR / 1024 ),
       01568 1079     1     CALL ( LIBSTORECURSOR % 1024 ),
                      2  M  PAGE #( $ ),
       01569 1E85     2     PAGE ( $ / 1024 ),
   392 0156A      C        AppIdle_display:
   393 0156A 091D C        	BC	sys_flag,PROGRAMREIN
   394            C        	
   395            C      M 	PAGE	#(VGA)
       0156B 1E83     1     PAGE ( VGA / 1024 ),
   396 0156C 10DE C        	CALL	VgaBlankNum2
   397 0156D 18B0 C        	MOV	A,@(0x80+0x30+0x00)
   398 0156E 1103 C        	CALL	VgaFlash
   399            C      M 	PAGE	#($)
       0156F 1E85     1     PAGE ( $ / 1024 ),
   400            C        	
   401            C      M 	BANK	1
       01570 0B84     1     BS  _RAM , 6 
       01571 09C4     1     BC  _RAM , 7 
   402 01572 0A6E C        	BS	r1_rtc_flag,1				; 更新时钟
   403            C      M 	BANK	3
       01573 0B84     1     BS  _RAM , 6 
       01574 0BC4     1     BS  _RAM , 7 
   404            C      M 	MOV	r3_display,@(0x3f)			; 其它信息显示更新
       01575 183F     1     MOV A,@( 63 )
       01576 0065     1     MOV  R3_DISPLAY ,A
   405 01577      C        AppIdle_idle:
   406            C      M 	LCALL	LibDisplayIdle
                      2  M  PAGE #( LIBDISPLAYIDLE ),
       01577 1E81     2     PAGE ( LIBDISPLAYIDLE / 1024 ),
       01578 116C     1     CALL ( LIBDISPLAYIDLE % 1024 ),
                      2  M  PAGE #( $ ),
       01579 1E85     2     PAGE ( $ / 1024 ),
   407            C        	
   408            C      M 	LCALL	LibHookCheck
                      2  M  PAGE #( LIBHOOKCHECK ),
       0157A 1E81     2     PAGE ( LIBHOOKCHECK / 1024 ),
       0157B 10DB     1     CALL ( LIBHOOKCHECK % 1024 ),
                      2  M  PAGE #( $ ),
       0157C 1E85     2     PAGE ( $ / 1024 ),
   409 0157D 1F00 C        	ADD	A,@(0)
   410            C      M 	JPNZ	AppIdle_offhook
       0157E 0E83     1     JBS  _STATUS , Z 
       0157F 1642     1     JMP  APPIDLE_OFFHOOK ,
   411            C        	
   412 01580 118C C        	CALL	IicTest
   413            C        	
   414            C      M 	JPNB	hardware,DTAMPOWER,AppIdle_ret
       01581 0E1F     1     JBS  HARDWARE , DTAMPOWER 
       01582 158B     1     JMP  APPIDLE_RET ,
   415            C        
   416            C      M 	XORA	sys_msg,@(WM_KEYPRESS)
       01583 1801     1     MOV A,@( WM_KEYPRESS )
       01584 031B     1     XOR A, SYS_MSG 
   417            C      M 	JPZ	AppIdle_keypress
       01585 0C83     1     JBC  _STATUS , Z 
       01586 15C6     1     JMP  APPIDLE_KEYPRESS ,
   418            C      M 	XORA	sys_msg,@(WM_COMMAND)
       01587 1807     1     MOV A,@( WM_COMMAND )
       01588 031B     1     XOR A, SYS_MSG 
   419            C      M 	JPZ	AppIdle_command
       01589 0C83     1     JBC  _STATUS , Z 
       0158A 1629     1     JMP  APPIDLE_COMMAND ,
   420            C        	
   421 0158B      C        AppIdle_ret:
   422 0158B 1C00 C        	RETL	@(0)
   423            C        
   424 0158C      C        IicTest:
   425            C      M 	XORA	sys_msg,@(WM_KEYPRESS)
       0158C 1801     1     MOV A,@( WM_KEYPRESS )
       0158D 031B     1     XOR A, SYS_MSG 
   426            C      M 	JPNZ	IicTest_ret
       0158E 0E83     1     JBS  _STATUS , Z 
       0158F 15C5     1     JMP  IICTEST_RET ,
   427            C      M 	XORA	sys_data,@(KEY_MENU)
       01590 1830     1     MOV A,@( KEY_MENU )
       01591 031C     1     XOR A, SYS_DATA 
   428            C      M 	JPZ	IicTest_menu
       01592 0C83     1     JBC  _STATUS , Z 
       01593 159C     1     JMP  IICTEST_MENU ,
   429            C      M 	XORA	sys_data,@(KEY_SPK)
       01594 1817     1     MOV A,@( KEY_SPK )
       01595 031C     1     XOR A, SYS_DATA 
   430            C      M 	JPZ	IicTest_spk
       01596 0C83     1     JBC  _STATUS , Z 
       01597 15B6     1     JMP  IICTEST_SPK ,
   431            C      M 	XORA	sys_data,@(KEY_STOP)
       01598 1816     1     MOV A,@( KEY_STOP )
       01599 031C     1     XOR A, SYS_DATA 
   432            C      M 	JPZ	IicTest_stop
       0159A 0C83     1     JBC  _STATUS , Z 
       0159B 15BE     1     JMP  IICTEST_STOP ,
   433 0159C      C        IicTest_menu:
   434            C      M 	PAGE	#(IIC)
       0159C 1E80     1     PAGE ( IIC / 1024 ),
   435 0159D 1880 C        	MOV	A,@(0x80)
   436 0159E 10A8 C        	CALL	IicSendData
   437 0159F 1808 C        	MOV	A,@(0x08)
   438 015A0 10A8 C        	CALL	IicSendData
   439 015A1 1801 C        	MOV	A,@(0x01)
   440 015A2 10A8 C        	CALL	IicSendData
   441 015A3 1801 C        	MOV	A,@(0x01)
   442 015A4 10A8 C        	CALL	IicSendData
   443 015A5 180C C        	MOV	A,@(0x0c)
   444 015A6 10A8 C        	CALL	IicSendData
   445 015A7 1800 C        	MOV	A,@(0x00)
   446 015A8 10A8 C        	CALL	IicSendData
   447 015A9 1801 C        	MOV	A,@(0x01)
   448 015AA 10A8 C        	CALL	IicSendData
   449 015AB 1823 C        	MOV	A,@(0x23)
   450 015AC 10A8 C        	CALL	IicSendData
   451 015AD 1833 C        	MOV	A,@(0x33)
   452 015AE 10A8 C        	CALL	IicSendData
   453 015AF 18F2 C        	MOV	A,@(0xf2)
   454 015B0 10A8 C        	CALL	IicSendData
   455 015B1 1820 C        	MOV	A,@(0x20)
   456 015B2 10A8 C        	CALL	IicSendData
   457 015B3 10B3 C        	CALL	IicSer
   458            C      M 	PAGE	#($)
       015B4 1E85     1     PAGE ( $ / 1024 ),
   459 015B5 15C5 C        	JMP	IicTest_ret
   460 015B6      C        IicTest_spk:
   461            C      M 	PAGE	#(IIC)
       015B6 1E80     1     PAGE ( IIC / 1024 ),
   462 015B7 1871 C        	MOV	A,@(0x71)
   463 015B8 10A8 C        	CALL	IicSendData
   464 015B9 1805 C        	MOV	A,@(0x05)
   465 015BA 10A8 C        	CALL	IicSendData
   466 015BB 10B3 C        	CALL	IicSer
   467            C      M 	PAGE	#($)
       015BC 1E85     1     PAGE ( $ / 1024 ),
   468 015BD 15C5 C        	JMP	IicTest_ret
   469 015BE      C        IicTest_stop:
   470            C      M 	PAGE	#(IIC)
       015BE 1E80     1     PAGE ( IIC / 1024 ),
   471 015BF 1872 C        	MOV	A,@(0x72)
   472 015C0 10A8 C        	CALL	IicSendData
   473 015C1 1803 C        	MOV	A,@(0x03)
   474 015C2 10A8 C        	CALL	IicSendData
   475 015C3 10B3 C        	CALL	IicSer
   476            C      M 	PAGE	#($)
       015C4 1E85     1     PAGE ( $ / 1024 ),
   477 015C5      C        IicTest_ret:
   478 015C5 1C00 C        	RETL	@(0)
   479            C        
   480 015C6      C        AppIdle_keypress:
   481            C      M 	LCALL	LibCharNumCheck			; 检查是否号码键按下
                      2  M  PAGE #( LIBCHARNUMCHECK ),
       015C6 1E81     2     PAGE ( LIBCHARNUMCHECK / 1024 ),
       015C7 124A     1     CALL ( LIBCHARNUMCHECK % 1024 ),
                      2  M  PAGE #( $ ),
       015C8 1E85     2     PAGE ( $ / 1024 ),
   482 015C9 1F00 C        	ADD	A,@(0)
   483            C      M 	JPNZ	AppIdle_keypress_num
       015CA 0E83     1     JBS  _STATUS , Z 
       015CB 15FD     1     JMP  APPIDLE_KEYPRESS_NUM ,
   484            C      M 	XORA	sys_data,@(KEY_MENU)
       015CC 1830     1     MOV A,@( KEY_MENU )
       015CD 031C     1     XOR A, SYS_DATA 
   485            C      M 	JPZ	AppIdle_keypress_menu
       015CE 0C83     1     JBC  _STATUS , Z 
       015CF 1611     1     JMP  APPIDLE_KEYPRESS_MENU ,
   486            C      M 	XORA	sys_data,@(KEY_PLAY)
       015D0 1820     1     MOV A,@( KEY_PLAY )
       015D1 031C     1     XOR A, SYS_DATA 
   487            C      M 	JPZ	AppIdle_keypress_play
       015D2 0C83     1     JBC  _STATUS , Z 
       015D3 1613     1     JMP  APPIDLE_KEYPRESS_PLAY ,
   488            C      M 	XORA	sys_data,@(KEY_MEMO)
       015D4 1822     1     MOV A,@( KEY_MEMO )
       015D5 031C     1     XOR A, SYS_DATA 
   489            C      M 	JPZ	AppIdle_keypress_memo
       015D6 0C83     1     JBC  _STATUS , Z 
       015D7 1615     1     JMP  APPIDLE_KEYPRESS_MEMO ,
   490            C      M 	XORA	sys_data,@(KEY_OGM)
       015D8 1821     1     MOV A,@( KEY_OGM )
       015D9 031C     1     XOR A, SYS_DATA 
   491            C      M 	JPZ	AppIdle_keypress_ogm
       015DA 0C83     1     JBC  _STATUS , Z 
       015DB 1617     1     JMP  APPIDLE_KEYPRESS_OGM ,
   492            C      M 	XORA	sys_data,@(KEY_ONOFF)
       015DC 1823     1     MOV A,@( KEY_ONOFF )
       015DD 031C     1     XOR A, SYS_DATA 
   493            C      M 	JPZ	AppIdle_keypress_onoff
       015DE 0C83     1     JBC  _STATUS , Z 
       015DF 1619     1     JMP  APPIDLE_KEYPRESS_ONOFF ,
   494            C      M 	XORA	sys_data,@(KEY_M1)
       015E0 1814     1     MOV A,@( KEY_M1 )
       015E1 031C     1     XOR A, SYS_DATA 
   495            C      M 	JPZ	AppIdle_keypress_m1
       015E2 0C83     1     JBC  _STATUS , Z 
       015E3 161B     1     JMP  APPIDLE_KEYPRESS_M1 ,
   496            C      M 	XORA	sys_data,@(KEY_M2)
       015E4 1815     1     MOV A,@( KEY_M2 )
       015E5 031C     1     XOR A, SYS_DATA 
   497            C      M 	JPZ	AppIdle_keypress_m2
       015E6 0C83     1     JBC  _STATUS , Z 
       015E7 161D     1     JMP  APPIDLE_KEYPRESS_M2 ,
   498            C      M 	XORA	sys_data,@(KEY_M3)
       015E8 1816     1     MOV A,@( KEY_M3 )
       015E9 031C     1     XOR A, SYS_DATA 
   499            C      M 	JPZ	AppIdle_keypress_m3
       015EA 0C83     1     JBC  _STATUS , Z 
       015EB 161F     1     JMP  APPIDLE_KEYPRESS_M3 ,
   500            C      M 	XORA	sys_data,@(KEY_PROGRAM)
       015EC 1824     1     MOV A,@( KEY_PROGRAM )
       015ED 031C     1     XOR A, SYS_DATA 
   501            C      M 	JPZ	AppIdle_keypress_program
       015EE 0C83     1     JBC  _STATUS , Z 
       015EF 1621     1     JMP  APPIDLE_KEYPRESS_PROGRAM ,
   502            C      M 	XORA	sys_data,@(KEY_LCD)
       015F0 1825     1     MOV A,@( KEY_LCD )
       015F1 031C     1     XOR A, SYS_DATA 
   503            C      M 	JPZ	AppIdle_keypress_lcd
       015F2 0C83     1     JBC  _STATUS , Z 
       015F3 1623     1     JMP  APPIDLE_KEYPRESS_LCD ,
   504            C      M 	XORA	sys_data,@(KEY_PBOOK)
       015F4 1826     1     MOV A,@( KEY_PBOOK )
       015F5 031C     1     XOR A, SYS_DATA 
   505            C      M 	JPZ	AppIdle_keypress_pbook
       015F6 0C83     1     JBC  _STATUS , Z 
       015F7 1625     1     JMP  APPIDLE_KEYPRESS_PBOOK ,
   506            C      M 	XORA	sys_data,@(KEY_CID)
       015F8 1827     1     MOV A,@( KEY_CID )
       015F9 031C     1     XOR A, SYS_DATA 
   507            C      M 	JPZ	AppIdle_keypress_cid
       015FA 0C83     1     JBC  _STATUS , Z 
       015FB 1627     1     JMP  APPIDLE_KEYPRESS_CID ,
   508 015FC 158B C        	JMP	AppIdle_ret
   509 015FD      C        AppIdle_keypress_num:
   510 015FD 0054 C        	MOV	exa,A
   511            C      M 	BLOCK	3
       015FE 1846     1     MOV A,@((( 3 << 1 )+ VALUE_IOCA ))
       015FF 000A     1     IOW  _IOCA ,
   512 01600 00D3 C        	CLR	ax
   513            C      M 	MOV	cnt,@(33)
       01601 1821     1     MOV A,@( 33 )
       01602 0055     1     MOV  CNT ,A
   514            C      M 	MOV	_RC,@(131)
       01603 1883     1     MOV A,@( 131 )
       01604 004C     1     MOV  _RC ,A
   515            C      M 	LCALL	LibClearRam
                      2  M  PAGE #( LIBCLEARRAM ),
       01605 1E81     2     PAGE ( LIBCLEARRAM / 1024 ),
       01606 111D     1     CALL ( LIBCLEARRAM % 1024 ),
                      2  M  PAGE #( $ ),
       01607 1E85     2     PAGE ( $ / 1024 ),
   516            C      M 	MOV	_RC,@(131)
       01608 1883     1     MOV A,@( 131 )
       01609 004C     1     MOV  _RC ,A
   517 0160A 054D C        	INC	_RD
   518            C      M 	ADD	_RC,_RD
       0160B 040D     1     MOV A, _RD 
       0160C 03CC     1     ADD  _RC ,A
   519            C      M 	MOV	_RD,exa
       0160D 0414     1     MOV A, EXA 
       0160E 004D     1     MOV  _RD ,A
   520            C        	
   521 0160F 1804 C        	MOV	A,@(PRO_AppPreDial)
   522 01610 1644 C        	JMP	AppIdle_newprogram
   523            C        
   524 01611      C        AppIdle_keypress_menu:
   525 01611 1808 C        	MOV	A,@(PRO_AppMenuMain)
   526 01612 1644 C        	JMP	AppIdle_newprogram
   527            C        
   528 01613      C        AppIdle_keypress_play:
   529 01613 1825 C        	MOV	A,@(PRO_AppPlay)
   530 01614 1644 C        	JMP	AppIdle_newprogram
   531            C        
   532 01615      C        AppIdle_keypress_memo:
   533 01615 1827 C        	MOV	A,@(PRO_AppMemoRecord)
   534 01616 1644 C        	JMP	AppIdle_newprogram
   535            C        
   536 01617      C        AppIdle_keypress_ogm:
   537 01617 182A C        	MOV	A,@(PRO_AppOgmSelect)
   538 01618 1644 C        	JMP	AppIdle_newprogram
   539            C        
   540 01619      C        AppIdle_keypress_onoff:
   541 01619 182E C        	MOV	A,@(PRO_AppOnoffSelect)
   542 0161A 1644 C        	JMP	AppIdle_newprogram
   543            C        
   544 0161B      C        AppIdle_keypress_m1:
   545 0161B 182F C        	MOV	A,@(PRO_AppMemory1)
   546 0161C 1644 C        	JMP	AppIdle_newprogram
   547            C        
   548 0161D      C        AppIdle_keypress_m2:
   549 0161D 1830 C        	MOV	A,@(PRO_AppMemory2)
   550 0161E 1644 C        	JMP	AppIdle_newprogram
   551            C        
   552 0161F      C        AppIdle_keypress_m3:
   553 0161F 1831 C        	MOV	A,@(PRO_AppMemory3)
   554 01620 1644 C        	JMP	AppIdle_newprogram
   555            C        
   556 01621      C        AppIdle_keypress_program:
   557 01621 1832 C        	MOV	A,@(PRO_AppProgram)
   558 01622 1644 C        	JMP	AppIdle_newprogram
   559            C        
   560 01623      C        AppIdle_keypress_lcd:
   561 01623 1823 C        	MOV	A,@(PRO_AppSetLcdContrast)
   562 01624 1644 C        	JMP	AppIdle_newprogram
   563            C        
   564 01625      C        AppIdle_keypress_pbook:
   565 01625 180A C        	MOV	A,@(PRO_AppMenuPhoneBook)
   566 01626 1644 C        	JMP	AppIdle_newprogram
   567            C        
   568 01627      C        AppIdle_keypress_cid:
   569 01627 1809 C        	MOV	A,@(PRO_AppCallList)
   570 01628 1644 C        	JMP	AppIdle_newprogram
   571            C        
   572 01629      C        AppIdle_command:
   573            C      M 	XORA	sys_data,@(0x19)
       01629 1819     1     MOV A,@( 25 )
       0162A 031C     1     XOR A, SYS_DATA 
   574            C      M 	JPZ	AppIdle_command_ringin
       0162B 0C83     1     JBC  _STATUS , Z 
       0162C 1639     1     JMP  APPIDLE_COMMAND_RINGIN ,
   575            C      M 	XORA	sys_data,@(0x1a)
       0162D 181A     1     MOV A,@( 26 )
       0162E 031C     1     XOR A, SYS_DATA 
   576            C      M 	JPZ	AppIdle_command_call
       0162F 0C83     1     JBC  _STATUS , Z 
       01630 1632     1     JMP  APPIDLE_COMMAND_CALL ,
   577 01631 158B C        	JMP	AppIdle_ret
   578 01632      C        AppIdle_command_call:
   579 01632 1801 C        	MOV	A,@(1)
   580            C      M 	LCALL	LibGetCommand
                      2  M  PAGE #( LIBGETCOMMAND ),
       01633 1E81     2     PAGE ( LIBGETCOMMAND / 1024 ),
       01634 12B6     1     CALL ( LIBGETCOMMAND % 1024 ),
                      2  M  PAGE #( $ ),
       01635 1E85     2     PAGE ( $ / 1024 ),
   581 01636 1F00 C        	ADD	A,@(0)
   582            C      M 	JPNZ	AppIdle_ret
       01637 0E83     1     JBS  _STATUS , Z 
       01638 158B     1     JMP  APPIDLE_RET ,
   583 01639      C        AppIdle_command_ringin:
   584            C      M 	PAGE	#(LibPushStack)
       01639 1E81     1     PAGE ( LIBPUSHSTACK / 1024 ),
   585 0163A 1800 C        	MOV	A,@(0x00)
   586 0163B 1002 C        	CALL	LibPushStack
   587 0163C 1801 C        	MOV	A,@(PRO_AppIdle)
   588 0163D 1002 C        	CALL	LibPushStack
   589 0163E 1805 C        	MOV	A,@(PRO_AppNewCall)
   590 0163F 1000 C        	CALL	LibPushProgram
   591            C      M 	PAGE	#($)
       01640 1E85     1     PAGE ( $ / 1024 ),
   592 01641 1C01 C        	RETL	@(1)
   593            C        
   594            C        
   595            C        ;AppIdle_power:
   596            C        ;	XORA	sys_data,@(POWER_ON)
   597            C        ;	JPZ	AppIdle_power_on
   598            C        ;	JMP	AppIdle_ret
   599            C        ;AppIdle_power_on:
   600            C        ;	BS	_P9,6				; 启动DSP
   601            C        ;	JMP	AppIdle_ret
   602            C        
   603 01642      C        AppIdle_offhook:
   604 01642 1802 C        	MOV	A,@(PRO_AppDialingPhone)
   605 01643 1644 C        	JMP	AppIdle_newprogram
   606            C        
   607 01644      C        AppIdle_newprogram:
   608 01644 0053 C        	MOV	ax,A
   609            C        	
   610            C      M 	PAGE	#(LibPushStack)
       01645 1E81     1     PAGE ( LIBPUSHSTACK / 1024 ),
   611 01646 1800 C        	MOV	A,@(0x00)
   612 01647 1002 C        	CALL	LibPushStack
   613 01648 1801 C        	MOV	A,@(PRO_AppIdle)
   614 01649 1002 C        	CALL	LibPushStack
   615 0164A 0413 C        	MOV	A,ax
   616 0164B 1000 C        	CALL	LibPushProgram
   617            C      M 	PAGE	#($)
       0164C 1E85     1     PAGE ( $ / 1024 ),
   618            C        	
   619 0164D 1C00 C        	RETL	@(0)
   620            C        
   621            C        /*************************************************
   622            C        AppSuccessfull
   623            C        显示成功
   624            C        	2秒自动退出
   625            C        	按"EXIT"退出
   626            C        *************************************************/
   627 0164E      C        AppSuccessfull:
   628 0164E 1846 C        	MOV	A,@(STR_Successful)
   629 0164F 1654 C        	JMP	AppPrompt
   630            C        	
   631            C        
   632            C        /*************************************************
   633            C        AppNoMessage
   634            C        无message提示
   635            C        初始化:	
   636            C        	
   637            C        显示:	
   638            C        待机:	2秒后自动退出
   639            C        *************************************************/
   640 01650      C        AppNoMessage:
   641 01650 1831 C        	MOV	A,@(STR_NoMessage)
   642 01651 1654 C        	JMP	AppPrompt
   643            C        
   644            C        /*************************************************
   645            C        AppNoContent
   646            C        无内容提示
   647            C        初始化:	
   648            C        	
   649            C        显示:	
   650            C        待机:	2秒后自动退出
   651            C        *************************************************/
   652 01652      C        AppNoContent:
   653 01652 1800 C        	MOV	A,@(STR_NoContent)
   654 01653 1654 C        	JMP	AppPrompt
   655            C        
   656            C        /*************************************************
   657            C        AppPrompt
   658            C        提示
   659            C        初始化:	
   660            C        	
   661            C        显示:	
   662            C        待机:	2秒后自动退出
   663            C        	按"EXIT"退出
   664            C        *************************************************/
   665 01654      C        AppPrompt:
   666            C      M 	BANK	2
       01654 0984     1     BC  _RAM , 6 
       01655 0BC4     1     BS  _RAM , 7 
   667 01656 0060 C        	MOV	r2_ax,A
   668            C      M 	JPB	sys_flag,PROGRAMINIT,AppPrompt_init
       01657 0CDD     1     JBC  SYS_FLAG , PROGRAMINIT 
       01658 165C     1     JMP  APPPROMPT_INIT ,
   669            C      M 	JPB	sys_flag,PROGRAMREIN,AppPrompt_rein
       01659 0D1D     1     JBC  SYS_FLAG , PROGRAMREIN 
       0165A 165E     1     JMP  APPPROMPT_REIN ,
   670 0165B 166F C        	JMP	AppPrompt_idle
   671 0165C      C        AppPrompt_init:
   672 0165C 08DD C        	BC	sys_flag,PROGRAMINIT
   673 0165D 165E C        	JMP	AppPrompt_display
   674 0165E      C        AppPrompt_rein:
   675 0165E      C        AppPrompt_display:
   676 0165E 091D C        	BC	sys_flag,PROGRAMREIN
   677            C      M 	PAGE	#(VGA)
       0165F 1E83     1     PAGE ( VGA / 1024 ),
   678 01660 10DE C        	CALL	VgaBlankNum2
   679 01661 10E0 C        	CALL	VgaBlankChar
   680 01662 1881 C        	MOV	A,@(STYLE_LEFT)
   681 01663 101C C        	CALL	VgaChar
   682 01664 0420 C        	MOV	A,r2_ax
   683 01665 114B C        	CALL	VgaString
   684 01666 1800 C        	MOV	A,@(0)
   685 01667 101C C        	CALL	VgaChar
   686 01668 1078 C        	CALL	VgaDrawChar
   687            C      M 	PAGE	#($)
       01669 1E85     1     PAGE ( $ / 1024 ),
   688 0166A 0011 C        	DISI
   689 0166B 00EA C        	CLR	r2_tmr_dial
   690            C      M 	MOV	r2_tmr_dial1,@(2)
       0166C 1802     1     MOV A,@( 2 )
       0166D 006B     1     MOV  R2_TMR_DIAL1 ,A
   691 0166E 0010 C        	ENI
   692 0166F      C        AppPrompt_idle:
   693 0166F 042B C        	MOV	A,r2_tmr_dial1
   694            C      M 	JPNZ	AppPrompt_idle_1
       01670 0E83     1     JBS  _STATUS , Z 
       01671 1676     1     JMP  APPPROMPT_IDLE_1 ,
   695 01672 042A C        	MOV	A,r2_tmr_dial
   696            C      M 	JPNZ	AppPrompt_idle_1
       01673 0E83     1     JBS  _STATUS , Z 
       01674 1676     1     JMP  APPPROMPT_IDLE_1 ,
   697 01675 1680 C        	JMP	AppPrompt_exit
   698 01676      C        AppPrompt_idle_1:
   699            C      M 	XORA	sys_msg,@(WM_KEYPRESS)
       01676 1801     1     MOV A,@( WM_KEYPRESS )
       01677 031B     1     XOR A, SYS_MSG 
   700            C      M 	JPZ	AppPrompt_key
       01678 0C83     1     JBC  _STATUS , Z 
       01679 167B     1     JMP  APPPROMPT_KEY ,
   701 0167A 1C00 C        	RETL	@(0)
   702 0167B      C        AppPrompt_key:
   703            C      M 	XORA	sys_data,@(KEY_EXIT)
       0167B 1816     1     MOV A,@( KEY_EXIT )
       0167C 031C     1     XOR A, SYS_DATA 
   704            C      M 	JPZ	AppPrompt_exit
       0167D 0C83     1     JBC  _STATUS , Z 
       0167E 1680     1     JMP  APPPROMPT_EXIT ,
   705 0167F 1C00 C        	RETL	@(0)
   706 01680      C        AppPrompt_exit:
   707 01680 00D8 C        	CLR	program
   708 01681 1C00 C        	RETL	@(0)
   709            C        
   710            C        
   711            C        
   712            C        /*************************************************
   713            C        AppConfirm
   714            C        确认提示
   715            C        初始化:	
   716            C        	
   717            C        显示:	
   718            C        待机:
   719            C        	OK - 确认
   720            C        	EXIT - 取消
   721            C        	3秒后自动取消
   722            C        *************************************************/
   723 01682      C        AppConfirm:
   724            C      M 	BANK	3
       01682 0B84     1     BS  _RAM , 6 
       01683 0BC4     1     BS  _RAM , 7 
   725 01684 0060 C        	MOV	r3_ax,A
   726            C      M 	JPB	sys_flag,PROGRAMINIT,AppConfirm_init
       01685 0CDD     1     JBC  SYS_FLAG , PROGRAMINIT 
       01686 168A     1     JMP  APPCONFIRM_INIT ,
   727            C      M 	JPB	sys_flag,PROGRAMINIT,AppConfirm_rein
       01687 0CDD     1     JBC  SYS_FLAG , PROGRAMINIT 
       01688 168B     1     JMP  APPCONFIRM_REIN ,
   728 01689 16A0 C        	JMP	AppConfirm_idle
   729 0168A      C        AppConfirm_init:
   730 0168A 08DD C        	BC	sys_flag,PROGRAMINIT
   731 0168B      C        AppConfirm_rein:
   732 0168B      C        AppConfirm_display:
   733 0168B 091D C        	BC	sys_flag,PROGRAMREIN
   734            C      M 	PAGE	#(VGA)
       0168C 1E83     1     PAGE ( VGA / 1024 ),
   735 0168D 10DE C        	CALL	VgaBlankNum2
   736 0168E 10E0 C        	CALL	VgaBlankChar
   737 0168F 1881 C        	MOV	A,@(STYLE_LEFT)
   738 01690 101C C        	CALL	VgaChar
   739 01691 0420 C        	MOV	A,r3_ax
   740 01692 114B C        	CALL	VgaString
   741 01693 183F C        	MOV	A,@(63)
   742 01694 101C C        	CALL	VgaChar
   743 01695 1800 C        	MOV	A,@(0)
   744 01696 101C C        	CALL	VgaChar
   745 01697 1078 C        	CALL	VgaDrawChar
   746            C      M 	PAGE	#($)
       01698 1E85     1     PAGE ( $ / 1024 ),
   747            C      M 	BANK	2
       01699 0984     1     BC  _RAM , 6 
       0169A 0BC4     1     BS  _RAM , 7 
   748 0169B 0011 C        	DISI
   749 0169C 00EA C        	CLR	r2_tmr_dial
   750            C      M 	MOV	r2_tmr_dial1,@(3)
       0169D 1803     1     MOV A,@( 3 )
       0169E 006B     1     MOV  R2_TMR_DIAL1 ,A
   751 0169F 0010 C        	ENI
   752 016A0      C        AppConfirm_idle:
   753            C      M 	BANK	2
       016A0 0984     1     BC  _RAM , 6 
       016A1 0BC4     1     BS  _RAM , 7 
   754 016A2 042B C        	MOV	A,r2_tmr_dial1
   755            C      M 	JPNZ	AppConfirm_idle_1
       016A3 0E83     1     JBS  _STATUS , Z 
       016A4 16A9     1     JMP  APPCONFIRM_IDLE_1 ,
   756 016A5 042A C        	MOV	A,r2_tmr_dial
   757            C      M 	JPNZ	AppConfirm_idle_1
       016A6 0E83     1     JBS  _STATUS , Z 
       016A7 16A9     1     JMP  APPCONFIRM_IDLE_1 ,
   758 016A8 16BB C        	JMP	AppConfirm_exit
   759 016A9      C        AppConfirm_idle_1:
   760            C      M 	XORA	sys_msg,@(WM_KEYPRESS)
       016A9 1801     1     MOV A,@( WM_KEYPRESS )
       016AA 031B     1     XOR A, SYS_MSG 
   761 016AB 0E83 C        	JBS	_STATUS,Z
   762 016AC 1C00 C        	RETL	@(0)
   763 016AD      C        AppConfirm_key:
   764            C      M 	XORA	sys_data,@(KEY_OK)
       016AD 1830     1     MOV A,@( KEY_OK )
       016AE 031C     1     XOR A, SYS_DATA 
   765            C      M 	JPZ	AppConfirm_ok
       016AF 0C83     1     JBC  _STATUS , Z 
       016B0 16B6     1     JMP  APPCONFIRM_OK ,
   766            C      M 	XORA	sys_data,@(KEY_EXIT)
       016B1 1816     1     MOV A,@( KEY_EXIT )
       016B2 031C     1     XOR A, SYS_DATA 
   767            C      M 	JPZ	AppConfirm_exit
       016B3 0C83     1     JBC  _STATUS , Z 
       016B4 16BB     1     JMP  APPCONFIRM_EXIT ,
   768 016B5 1C00 C        	RETL	@(0)
   769 016B6      C        AppConfirm_ok:
   770 016B6 1839 C        	MOV	A,@(PRO_AppSuccessfull)
   771            C      M 	LCALL	LibPushProgram
                      2  M  PAGE #( LIBPUSHPROGRAM ),
       016B7 1E81     2     PAGE ( LIBPUSHPROGRAM / 1024 ),
       016B8 1000     1     CALL ( LIBPUSHPROGRAM % 1024 ),
                      2  M  PAGE #( $ ),
       016B9 1E85     2     PAGE ( $ / 1024 ),
   772 016BA 1C01 C        	RETL	@(1)
   773 016BB      C        AppConfirm_exit:
   774            C      M 	PAGE	#(IIC)
       016BB 1E80     1     PAGE ( IIC / 1024 ),
   775 016BC 1860 C        	MOV	A,@(0x60)
   776 016BD 10A8 C        	CALL	IicSendData
   777 016BE 1801 C        	MOV	A,@(0x01)
   778 016BF 10A8 C        	CALL	IicSendData
   779 016C0 10B3 C        	CALL	IicSer
   780            C      M 	PAGE	#($)
       016C1 1E85     1     PAGE ( $ / 1024 ),
   781 016C2 00D8 C        	CLR	program
   782 016C3 1C00 C        	RETL	@(0)
   783            C        
   784            C        
   785 016C4      C        AppConfirm_confirm:
   786            C      M 	LCALL	LibSendOneCommand
                      2  M  PAGE #( LIBSENDONECOMMAND ),
       016C4 1E81     2     PAGE ( LIBSENDONECOMMAND / 1024 ),
       016C5 12AF     1     CALL ( LIBSENDONECOMMAND % 1024 ),
                      2  M  PAGE #( $ ),
       016C6 1E85     2     PAGE ( $ / 1024 ),
   787 016C7 1C00 C        	RETL	@(0)
   788 016C8      C        AppConfirm_cancel:
   789 016C8 1C00 C        	RETL	@(0)
   790            C        
   791 016C9      C        AppDeleteAllMsg:
   792            C      M 	BANK	3
       016C9 0B84     1     BS  _RAM , 6 
       016CA 0BC4     1     BS  _RAM , 7 
   793            C      M 	SUBA	r3_totalmsg,r3_newmsg
       016CB 0426     1     MOV A, R3_NEWMSG 
       016CC 0127     1     SUB A, R3_TOTALMSG 
   794            C      M 	JPZ	AppNoMessage
       016CD 0C83     1     JBC  _STATUS , Z 
       016CE 1650     1     JMP  APPNOMESSAGE ,
   795 016CF 180F C        	MOV	A,@(STR_DeleteAll)
   796 016D0 1282 C        	CALL	AppConfirm
   797 016D1 1F00 C        	ADD	A,@(0)
   798            C      M 	JPZ	AppConfirm_cancel
       016D2 0C83     1     JBC  _STATUS , Z 
       016D3 16C8     1     JMP  APPCONFIRM_CANCEL ,
   799 016D4 184D C        	MOV	A,@(0x4d)
   800 016D5 16C4 C        	JMP	AppConfirm_confirm
   801            C        
   802            C        
   803 016D6      C        AppDeleteBook:
   804            C      M 	BANK	3
       016D6 0B84     1     BS  _RAM , 6 
       016D7 0BC4     1     BS  _RAM , 7 
   805 016D8 042B C        	MOV	A,r3_book
   806            C      M 	JPZ	AppNoContent
       016D9 0C83     1     JBC  _STATUS , Z 
       016DA 1652     1     JMP  APPNOCONTENT ,
   807 016DB 180F C        	MOV	A,@(STR_DeleteAll)
   808 016DC 1282 C        	CALL	AppConfirm
   809 016DD 1F00 C        	ADD	A,@(0)
   810            C      M 	JPZ	AppConfirm_cancel
       016DE 0C83     1     JBC  _STATUS , Z 
       016DF 16C8     1     JMP  APPCONFIRM_CANCEL ,
   811 016E0 1859 C        	MOV	A,@(0x59)
   812 016E1 16C4 C        	JMP	AppConfirm_confirm
   813            C        
   814 016E2      C        AppDeleteCall:
   815            C      M 	BANK	3
       016E2 0B84     1     BS  _RAM , 6 
       016E3 0BC4     1     BS  _RAM , 7 
   816 016E4 0429 C        	MOV	A,r3_totalcall
   817            C      M 	JPZ	AppNoContent
       016E5 0C83     1     JBC  _STATUS , Z 
       016E6 1652     1     JMP  APPNOCONTENT ,
   818 016E7 180F C        	MOV	A,@(STR_DeleteAll)
   819 016E8 1282 C        	CALL	AppConfirm
   820 016E9 1F00 C        	ADD	A,@(0)
   821            C      M 	JPZ	AppConfirm_cancel
       016EA 0C83     1     JBC  _STATUS , Z 
       016EB 16C8     1     JMP  APPCONFIRM_CANCEL ,
   822 016EC 185D C        	MOV	A,@(0x5d)
   823 016ED 16C4 C        	JMP	AppConfirm_confirm
   824            C        
   825 016EE      C        AppRestoreDefault:
   826 016EE 1814 C        	MOV	A,@(STR_RestoreDefault)
   827 016EF 1282 C        	CALL	AppConfirm
   828 016F0 1F00 C        	ADD	A,@(0)
   829            C      M 	JPZ	AppConfirm_cancel
       016F1 0C83     1     JBC  _STATUS , Z 
       016F2 16C8     1     JMP  APPCONFIRM_CANCEL ,
   830            C        	
   831            C      M 	LCALL	LibDefaultSetting
                      2  M  PAGE #( LIBDEFAULTSETTING ),
       016F3 1E81     2     PAGE ( LIBDEFAULTSETTING / 1024 ),
       016F4 1353     1     CALL ( LIBDEFAULTSETTING % 1024 ),
                      2  M  PAGE #( $ ),
       016F5 1E85     2     PAGE ( $ / 1024 ),
   832            C        	
   833 016F6 00E6 C        	CLR	r3_newmsg
   834 016F7 00E7 C        	CLR	r3_totalmsg
   835 016F8 00E8 C        	CLR	r3_newcall
   836 016F9 00E9 C        	CLR	r3_totalcall
   837 016FA 00EB C        	CLR	r3_book
   838 016FB 00EA C        	CLR	r3_dialedcall
   839            C      M 	BLOCK	1
       016FC 1842     1     MOV A,@((( 1 << 1 )+ VALUE_IOCA ))
       016FD 000A     1     IOW  _IOCA ,
   840            C      M 	MOV	_RC,@(128)
       016FE 1880     1     MOV A,@( 128 )
       016FF 004C     1     MOV  _RC ,A
   841            C      M 	MOV	cnt,@(229-128+1)
       01700 1866     1     MOV A,@((( 229 - 128 )+ 1 ))
       01701 0055     1     MOV  CNT ,A
   842 01702 00D3 C        	CLR	ax
   843            C      M 	LCALL	LibClearRam
                      2  M  PAGE #( LIBCLEARRAM ),
       01703 1E81     2     PAGE ( LIBCLEARRAM / 1024 ),
       01704 111D     1     CALL ( LIBCLEARRAM % 1024 ),
                      2  M  PAGE #( $ ),
       01705 1E85     2     PAGE ( $ / 1024 ),
   844            C        	
   845 01706 1861 C        	MOV	A,@(0x61)
   846 01707 16C4 C        	JMP	AppConfirm_confirm
   847            C        
   848            C        
   849            C        ORG	0x1800
   850            C        
   851            C        /*************************************************
   852            C        AppDialingPhone
   853            C        专用拨号程序
   854            C        初始化:	打开hook，拨号计时器清0。
   855            C        	如果拨号缓冲区中有号码，必须先等待5s。
   856            C        显示:	第二行显示清空，第三行显示拨号计时。
   857            C        待机:
   858            C        	按下数字键，拨号
   859            C        	按下flash，flash
   860            C        	按下redial，重拨
   861            C        	按下memo，录two way
   862            C        	处理数字键盘按键，并拨号。
   863            C        	
   864            C        	r2_id
   865            C        	r2_flag
   866            C        		.7	0- normal; 1- two way recording
   867            C        		.6	0- normal; 1- memory full
   868            C        		.5	0- normal; 1- flash
   869            C        		.1~.0	0- idle
   870            C        			1- handset
   871            C        			2- speakphone
   872            C        			3- handset+speakphone
   873            C        *************************************************/
   874 01800      C        AppDialingPhone:
   875            C      M 	BANK	2
       01800 0984     1     BC  _RAM , 6 
       01801 0BC4     1     BS  _RAM , 7 
   876            C      M 	BLOCK	3
       01802 1846     1     MOV A,@((( 3 << 1 )+ VALUE_IOCA ))
       01803 000A     1     IOW  _IOCA ,
   877            C      M 	JPB	sys_flag,PROGRAMINIT,AppDialingPhone_init
       01804 0CDD     1     JBC  SYS_FLAG , PROGRAMINIT 
       01805 1409     1     JMP  APPDIALINGPHONE_INIT ,
   878            C      M 	JPB	sys_flag,PROGRAMREIN,AppDialingPhone_rein
       01806 0D1D     1     JBC  SYS_FLAG , PROGRAMREIN 
       01807 1431     1     JMP  APPDIALINGPHONE_REIN ,
   879 01808 1446 C        	JMP	AppDialingPhone_idle
   880 01809      C        AppDialingPhone_init:
   881 01809 08DD C        	BC	sys_flag,PROGRAMINIT
   882 0180A 0A9D C        	BS	sys_flag,HOOKSTATUS
   883 0180B 00FE C        	CLR	r2_id
   884 0180C 00FF C        	CLR	r2_flag
   885            C      M 	BANK	3
       0180D 0B84     1     BS  _RAM , 6 
       0180E 0BC4     1     BS  _RAM , 7 
   886            C      M 	JPNB	r3_ogm,6,AppDialingPhone_init_0
       0180F 0FBC     1     JBS  R3_OGM , 6 
       01810 1414     1     JMP  APPDIALINGPHONE_INIT_0 ,
   887            C      M 	BANK	2
       01811 0984     1     BC  _RAM , 6 
       01812 0BC4     1     BS  _RAM , 7 
   888 01813 0BBF C        	BS	r2_flag,6
   889 01814      C        AppDialingPhone_init_0:
   890            C        	
   891 01814 0BC9 C        	BS	_P9,7				; 首先，摘机
   892            C      M 	LCALL	LibInitTimer
                      2  M  PAGE #( LIBINITTIMER ),
       01815 1E81     2     PAGE ( LIBINITTIMER / 1024 ),
       01816 11BC     1     CALL ( LIBINITTIMER % 1024 ),
                      2  M  PAGE #( $ ),
       01817 1E86     2     PAGE ( $ / 1024 ),
   893            C        	
   894            C      M 	BLOCK	3
       01818 1846     1     MOV A,@((( 3 << 1 )+ VALUE_IOCA ))
       01819 000A     1     IOW  _IOCA ,
   895 0181A 00CC C        	CLR	_RC
   896 0181B 00CD C        	CLR	_RD				; 初始化拨号状态
   897            C      M 	JPNB	sys_flag,DIALTYPE,$+2
       0181C 0F5D     1     JBS  SYS_FLAG , DIALTYPE 
       0181D 141F     1     JMP ( $ + 2 ),
   898 0181E 0B4D C        	BS	_RD,5				; 初始化的时候确定拨号类型
   899            C        	
   900 0181F 1232 C        	CALL	AppPhoneIdle			; 通话状态，也就是待机状态
   901            C        	
   902 01820 0011 C        	DISI
   903            C      M 	MOV	r2_tmr_dial,@(100)		; 拿起电话，必须等待400ms之后才能开始拨号。
       01821 1864     1     MOV A,@( 100 )
       01822 006A     1     MOV  R2_TMR_DIAL ,A
   904 01823 00EB C        	CLR	r2_tmr_dial1
   905 01824 0010 C        	ENI
   906            C        	
   907 01825 054C C        	INC	_RC
   908 01826 040D C        	MOV	A,_RD				; 查拨号区是否有其它程序存入的待拨号码。
   909            C      M 	JPZ	$+8
       01827 0C83     1     JBC  _STATUS , Z 
       01828 1430     1     JMP ( $ + 8 ),
   910 01829 00CC C        	CLR	_RC
   911 0182A 0BCD C        	BS	_RD,7
   912 0182B 0011 C        	DISI
   913 0182C 00EA C        	CLR	r2_tmr_dial
   914            C      M 	MOV	r2_tmr_dial1,@(5)		; 5s等待
       0182D 1805     1     MOV A,@( 5 )
       0182E 006B     1     MOV  R2_TMR_DIAL1 ,A
   915 0182F 0010 C        	ENI
   916            C        	
   917 01830 1431 C        	JMP	AppDialingPhone_display
   918 01831      C        AppDialingPhone_rein:				; 拨号过程中，不会调用其它程序
   919 01831      C        AppDialingPhone_display:
   920 01831 091D C        	BC	sys_flag,PROGRAMREIN
   921            C        	
   922            C      M 	MOV	_RC,@(200)
       01832 18C8     1     MOV A,@( 200 )
       01833 004C     1     MOV  _RC ,A
   923 01834 040D C        	MOV	A,_RD
   924            C      M 	JPNZ	AppDialingPhone_display_1
       01835 0E83     1     JBS  _STATUS , Z 
       01836 1439     1     JMP  APPDIALINGPHONE_DISPLAY_1 ,
   925            C      M 	PAGE	#(VGA)
       01837 1E83     1     PAGE ( VGA / 1024 ),
   926 01838 10DE C        	CALL	VgaBlankNum2
   927 01839      C        AppDialingPhone_display_1:
   928            C      M 	PAGE	#(VGA)
       01839 1E83     1     PAGE ( VGA / 1024 ),
   929 0183A 10E0 C        	CALL	VgaBlankChar
   930 0183B 1882 C        	MOV	A,@(STYLE_RIGHT)
   931 0183C 1016 C        	CALL	VgaNum2
   932 0183D 1076 C        	CALL	VgaDrawNum2
   933            C      M 	PAGE	#($)
       0183E 1E86     1     PAGE ( $ / 1024 ),
   934            C        	
   935            C      M 	LCALL	LibDisplayDialingStatus		; 显示拨号的状态
                      2  M  PAGE #( LIBDISPLAYDIALINGSTATUS ),
       0183F 1E81     2     PAGE ( LIBDISPLAYDIALINGSTATUS / 1024 ),
       01840 10F1     1     CALL ( LIBDISPLAYDIALINGSTATUS % 1024 ),
                      2  M  PAGE #( $ ),
       01841 1E86     2     PAGE ( $ / 1024 ),
   936 01842 1801 C        	MOV	A,@(1)
   937            C      M 	LCALL	LibDisplayTimer			; 显示拨号的时间
                      2  M  PAGE #( LIBDISPLAYTIMER ),
       01843 1E81     2     PAGE ( LIBDISPLAYTIMER / 1024 ),
       01844 11E5     1     CALL ( LIBDISPLAYTIMER % 1024 ),
                      2  M  PAGE #( $ ),
       01845 1E86     2     PAGE ( $ / 1024 ),
   938            C        
   939 01846      C        AppDialingPhone_idle:
   940            C      M 	JPB	r2_flag,5,AppDialingPhone_idle_1
       01846 0D7F     1     JBC  R2_FLAG , 5 
       01847 144C     1     JMP  APPDIALINGPHONE_IDLE_1 ,
   941            C      M 	PAGE	#(LibUpdateTimer)
       01848 1E81     1     PAGE ( LIBUPDATETIMER / 1024 ),
   942 01849 11C3 C        	CALL	LibUpdateTimer			; 指定bank2
   943 0184A 11E5 C        	CALL	LibDisplayTimer
   944            C      M 	PAGE	#($)
       0184B 1E86     1     PAGE ( $ / 1024 ),
   945 0184C      C        AppDialingPhone_idle_1:
   946            C      M 	BLOCK	3
       0184C 1846     1     MOV A,@((( 3 << 1 )+ VALUE_IOCA ))
       0184D 000A     1     IOW  _IOCA ,
   947 0184E 00CC C        	CLR	_RC
   948            C      M 	XORA	sys_msg,@(WM_KEYPRESS)
       0184F 1801     1     MOV A,@( WM_KEYPRESS )
       01850 031B     1     XOR A, SYS_MSG 
   949            C      M 	JPZ	AppDialingPhone_keypress
       01851 0C83     1     JBC  _STATUS , Z 
       01852 1464     1     JMP  APPDIALINGPHONE_KEYPRESS ,
   950            C      M 	XORA	sys_msg,@(WM_KEYRELEASE)
       01853 1803     1     MOV A,@( WM_KEYRELEASE )
       01854 031B     1     XOR A, SYS_MSG 
   951            C      M 	JPZ	AppDialingPhone_keyrelease
       01855 0C83     1     JBC  _STATUS , Z 
       01856 1511     1     JMP  APPDIALINGPHONE_KEYRELEASE ,
   952            C      M 	XORA	sys_msg,@(WM_HANDSET)
       01857 1806     1     MOV A,@( WM_HANDSET )
       01858 031B     1     XOR A, SYS_MSG 
   953            C      M 	JPZ	AppDialingPhone_handset
       01859 0C83     1     JBC  _STATUS , Z 
       0185A 14F4     1     JMP  APPDIALINGPHONE_HANDSET ,
   954            C      M 	XORA	sys_msg,@(WM_POWER)
       0185B 1805     1     MOV A,@( WM_POWER )
       0185C 031B     1     XOR A, SYS_MSG 
   955            C      M 	JPZ	AppDialingPhone_power
       0185D 0C83     1     JBC  _STATUS , Z 
       0185E 1513     1     JMP  APPDIALINGPHONE_POWER ,
   956            C      M 	XORA	sys_msg,@(WM_COMMAND)
       0185F 1807     1     MOV A,@( WM_COMMAND )
       01860 031B     1     XOR A, SYS_MSG 
   957            C      M 	JPZ	AppDialingPhone_command
       01861 0C83     1     JBC  _STATUS , Z 
       01862 151A     1     JMP  APPDIALINGPHONE_COMMAND ,
   958 01863 1580 C        	JMP	AppDialingPhone_dial
   959 01864      C        AppDialingPhone_keypress:
   960            C      M 	JPB	r2_flag,5,AppDialingPhone_dial
       01864 0D7F     1     JBC  R2_FLAG , 5 
       01865 1580     1     JMP  APPDIALINGPHONE_DIAL ,
   961            C      M 	JPB	r2_flag,7,AppDialingPhone_keypress_1
       01866 0DFF     1     JBC  R2_FLAG , 7 
       01867 146F     1     JMP  APPDIALINGPHONE_KEYPRESS_1 ,
   962            C      M 	JPB	r2_flag,6,AppDialingPhone_keypress_2	; memory full, 无法录
       01868 0DBF     1     JBC  R2_FLAG , 6 
       01869 1473     1     JMP  APPDIALINGPHONE_KEYPRESS_2 ,
   963            C      M 	XORA	sys_data,@(KEY_MEMO)
       0186A 1822     1     MOV A,@( KEY_MEMO )
       0186B 031C     1     XOR A, SYS_DATA 
   964            C      M 	JPZ	AppDialingPhone_twoway
       0186C 0C83     1     JBC  _STATUS , Z 
       0186D 14A0     1     JMP  APPDIALINGPHONE_TWOWAY ,
   965 0186E 1473 C        	JMP	AppDialingPhone_keypress_2
   966 0186F      C        AppDialingPhone_keypress_1:
   967            C      M 	XORA	sys_data,@(KEY_STOP)
       0186F 1816     1     MOV A,@( KEY_STOP )
       01870 031C     1     XOR A, SYS_DATA 
   968            C      M 	JPZ	AppDialingPhone_stop
       01871 0C83     1     JBC  _STATUS , Z 
       01872 14A5     1     JMP  APPDIALINGPHONE_STOP ,
   969 01873      C        AppDialingPhone_keypress_2:
   970            C      M 	XORA	sys_data,@(KEY_FLASH)
       01873 1814     1     MOV A,@( KEY_FLASH )
       01874 031C     1     XOR A, SYS_DATA 
   971            C      M 	JPZ	AppDialingPhone_flash
       01875 0C83     1     JBC  _STATUS , Z 
       01876 14AA     1     JMP  APPDIALINGPHONE_FLASH ,
   972            C      M 	XORA	sys_data,@(KEY_MUTE)
       01877 1823     1     MOV A,@( KEY_MUTE )
       01878 031C     1     XOR A, SYS_DATA 
   973            C      M 	JPZ	AppDialingPhone_mute
       01879 0C83     1     JBC  _STATUS , Z 
       0187A 14C6     1     JMP  APPDIALINGPHONE_MUTE ,
   974            C      M 	XORA	sys_data,@(KEY_SPK)
       0187B 1817     1     MOV A,@( KEY_SPK )
       0187C 031C     1     XOR A, SYS_DATA 
   975            C      M 	JPZ	AppDialingPhone_spk
       0187D 0C83     1     JBC  _STATUS , Z 
       0187E 14E6     1     JMP  APPDIALINGPHONE_SPK ,
   976            C      M 	XORA	sys_data,@(KEY_VOLA)
       0187F 1824     1     MOV A,@( KEY_VOLA )
       01880 031C     1     XOR A, SYS_DATA 
   977            C      M 	JPZ	AppDialingPhone_vola
       01881 0C83     1     JBC  _STATUS , Z 
       01882 1505     1     JMP  APPDIALINGPHONE_VOLA ,
   978            C      M 	XORA	sys_data,@(KEY_VOLS)
       01883 1825     1     MOV A,@( KEY_VOLS )
       01884 031C     1     XOR A, SYS_DATA 
   979            C      M 	JPZ	AppDialingPhone_vols
       01885 0C83     1     JBC  _STATUS , Z 
       01886 1509     1     JMP  APPDIALINGPHONE_VOLS ,
   980            C        	
   981            C      M 	LCALL	LibDialNumCheck
                      2  M  PAGE #( LIBDIALNUMCHECK ),
       01887 1E81     2     PAGE ( LIBDIALNUMCHECK / 1024 ),
       01888 1255     1     CALL ( LIBDIALNUMCHECK % 1024 ),
                      2  M  PAGE #( $ ),
       01889 1E86     2     PAGE ( $ / 1024 ),
   982 0188A 1F00 C        	ADD	A,@(0)
   983            C      M 	JPZ	AppDialingPhone_dial
       0188B 0C83     1     JBC  _STATUS , Z 
       0188C 1580     1     JMP  APPDIALINGPHONE_DIAL ,
   984 0188D 0053 C        	MOV	ax,A
   985 0188E 1B70 C        	XOR	A,@(112)
   986            C      M 	JPNZ	AppDialingPhone_key_1
       0188F 0E83     1     JBS  _STATUS , Z 
       01890 1493     1     JMP  APPDIALINGPHONE_KEY_1 ,
   987            C      M 	JPNB	_RD,7,AppDialingPhone_redial	; 重拨
       01891 0FCD     1     JBS  _RD , 7 
       01892 14D6     1     JMP  APPDIALINGPHONE_REDIAL ,
   988 01893      C        AppDialingPhone_key_1:
   989 01893 0B8D C        	BS	_RD,6
   990 01894 0413 C        	MOV	A,ax
   991            C      M 	LCALL	LibStoreDialNumber
                      2  M  PAGE #( LIBSTOREDIALNUMBER ),
       01895 1E81     2     PAGE ( LIBSTOREDIALNUMBER / 1024 ),
       01896 109A     1     CALL ( LIBSTOREDIALNUMBER % 1024 ),
                      2  M  PAGE #( $ ),
       01897 1E86     2     PAGE ( $ / 1024 ),
   992 01898 1F00 C        	ADD	A,@(0)
   993            C      M 	JPNZ	AppDialingPhone_dial
       01899 0E83     1     JBS  _STATUS , Z 
       0189A 1580     1     JMP  APPDIALINGPHONE_DIAL ,
   994 0189B 1801 C        	MOV	A,@(0x01)
   995            C      M 	LCALL	LibPromptBeep
                      2  M  PAGE #( LIBPROMPTBEEP ),
       0189C 1E81     2     PAGE ( LIBPROMPTBEEP / 1024 ),
       0189D 12D6     1     CALL ( LIBPROMPTBEEP % 1024 ),
                      2  M  PAGE #( $ ),
       0189E 1E86     2     PAGE ( $ / 1024 ),
   996 0189F 1580 C        	JMP	AppDialingPhone_dial
   997            C        
   998 018A0      C        AppDialingPhone_twoway:				; memo键按下
   999 018A0 1847 C        	MOV	A,@(0x47)			; two way record
  1000            C      M 	LCALL	LibSendOneCommand
                      2  M  PAGE #( LIBSENDONECOMMAND ),
       018A1 1E81     2     PAGE ( LIBSENDONECOMMAND / 1024 ),
       018A2 12AF     1     CALL ( LIBSENDONECOMMAND % 1024 ),
                      2  M  PAGE #( $ ),
       018A3 1E86     2     PAGE ( $ / 1024 ),
  1001 018A4 1580 C        	JMP	AppDialingPhone_dial
  1002            C        
  1003 018A5      C        AppDialingPhone_stop:
  1004 018A5 1854 C        	MOV	A,@(0x54)
  1005            C      M 	LCALL	LibSendOneCommand
                      2  M  PAGE #( LIBSENDONECOMMAND ),
       018A6 1E81     2     PAGE ( LIBSENDONECOMMAND / 1024 ),
       018A7 12AF     1     CALL ( LIBSENDONECOMMAND % 1024 ),
                      2  M  PAGE #( $ ),
       018A8 1E86     2     PAGE ( $ / 1024 ),
  1006 018A9 1542 C        	JMP	AppDialingPhone_return
  1007            C        
  1008 018AA      C        AppDialingPhone_flash:				; flash键按下
  1009            C      M 	LCALL	LibStoreRedialNumber
                      2  M  PAGE #( LIBSTOREREDIALNUMBER ),
       018AA 1E81     2     PAGE ( LIBSTOREREDIALNUMBER / 1024 ),
       018AB 10BD     1     CALL ( LIBSTOREREDIALNUMBER % 1024 ),
                      2  M  PAGE #( $ ),
       018AC 1E86     2     PAGE ( $ / 1024 ),
  1010 018AD 00CC C        	CLR	_RC
  1011            C      M 	AND	_RD,@(0xf8)
       018AE 18F8     1     MOV A,@( 248 )
       018AF 02CD     1     AND  _RD ,A
  1012            C      M 	ADD	_RD,@(0x04)			; 按下flash键，先mute
       018B0 1804     1     MOV A,@( 4 )
       018B1 03CD     1     ADD  _RD ,A
  1013            C      M 	PAGE	#(VGA)
       018B2 1E83     1     PAGE ( VGA / 1024 ),
  1014 018B3 1800 C        	MOV	A,@(0)
  1015 018B4 1016 C        	CALL	VgaNum2
  1016 018B5 1882 C        	MOV	A,@(STYLE_RIGHT)
  1017 018B6 1016 C        	CALL	VgaNum2
  1018 018B7 1076 C        	CALL	VgaDrawNum2
  1019 018B8 10DE C        	CALL	VgaBlankNum2
  1020 018B9 10E0 C        	CALL	VgaBlankChar
  1021            C      M 	PAGE	#(LibInitTimer)
       018BA 1E81     1     PAGE ( LIBINITTIMER / 1024 ),
  1022 018BB 11BC C        	CALL	LibInitTimer
  1023            C      M 	PAGE	#($)
       018BC 1E86     1     PAGE ( $ / 1024 ),
  1024 018BD 0B7F C        	BS	r2_flag,5
  1025            C      M 	JPNB	r2_flag,7,AppDialingPhone_mute1
       018BE 0FFF     1     JBS  R2_FLAG , 7 
       018BF 15B3     1     JMP  APPDIALINGPHONE_MUTE1 ,
  1026 018C0 09FF C        	BC	r2_flag,7
  1027 018C1 1854 C        	MOV	A,@(0x54)
  1028            C      M 	LCALL	LibSendOneCommand
                      2  M  PAGE #( LIBSENDONECOMMAND ),
       018C2 1E81     2     PAGE ( LIBSENDONECOMMAND / 1024 ),
       018C3 12AF     1     CALL ( LIBSENDONECOMMAND % 1024 ),
                      2  M  PAGE #( $ ),
       018C4 1E86     2     PAGE ( $ / 1024 ),
  1029 018C5 15B3 C        	JMP	AppDialingPhone_mute1
  1030 018C6      C        AppDialingPhone_mute:				; mute键按下
  1031            C      M 	INVB	_RD,4				; 改变mute状态
                      2  M  XOR  _RD ,@(( 1 << 4 ))
       018C6 1810     2     MOV A,@(( 1 << 4 ))
       018C7 034D     2     XOR  _RD ,A
  1032            C      M 	JPNB	hardware,HANDSET,AppDialingPhone_mute_handset	; 手柄拿起，mute手柄
       018C8 0FDF     1     JBS  HARDWARE , HANDSET 
       018C9 14CB     1     JMP  APPDIALINGPHONE_MUTE_HANDSET ,
  1033 018CA 14D5 C        	JMP	AppDialingPhone_mute_spk	; 否则mute免提
  1034 018CB      C        AppDialingPhone_mute_handset:
  1035            C      M 	ANDA	_RD,@(0x07)
       018CB 1807     1     MOV A,@( 7 )
       018CC 028D     1     AND A, _RD 
  1036            C      M 	JPNZ	AppDialingPhone_status		; 不在待机状态，本来就处于mute状态
       018CD 0E83     1     JBS  _STATUS , Z 
       018CE 157D     1     JMP  APPDIALINGPHONE_STATUS ,
  1037            C      M 	JPNB	_RD,4,AppDialingPhone_mute_handset_unmute
       018CF 0F0D     1     JBS  _RD , 4 
       018D0 14D3     1     JMP  APPDIALINGPHONE_MUTE_HANDSET_UNM ,
  1038 018D1 08C9 C        	BC	_P9,3				; handset, mute=0
  1039 018D2 157D C        	JMP	AppDialingPhone_status
  1040 018D3      C        AppDialingPhone_mute_handset_unmute:
  1041 018D3 0AC9 C        	BS	_P9,3
  1042 018D4 157D C        	JMP	AppDialingPhone_status
  1043 018D5      C        AppDialingPhone_mute_spk:
  1044            C        	/*
  1045            C        	COMMAND:这里向DSP发送SPK on命令
  1046            C        	*/
  1047 018D5 157D C        	JMP	AppDialingPhone_status
  1048 018D6      C        AppDialingPhone_redial:
  1049 018D6 00D5 C        	CLR	cnt
  1050 018D7      C        AppDialingPhone_redial_1:
  1051            C      M 	ADDA	cnt,@(99)
       018D7 1863     1     MOV A,@( 99 )
       018D8 0395     1     ADD A, CNT 
  1052 018D9 004C C        	MOV	_RC,A
  1053 018DA 040D C        	MOV	A,_RD
  1054            C      M 	JPZ	AppDialingPhone_dial
       018DB 0C83     1     JBC  _STATUS , Z 
       018DC 1580     1     JMP  APPDIALINGPHONE_DIAL ,
  1055            C      M 	LCALL	LibStoreDialNumber
                      2  M  PAGE #( LIBSTOREDIALNUMBER ),
       018DD 1E81     2     PAGE ( LIBSTOREDIALNUMBER / 1024 ),
       018DE 109A     1     CALL ( LIBSTOREDIALNUMBER % 1024 ),
                      2  M  PAGE #( $ ),
       018DF 1E86     2     PAGE ( $ / 1024 ),
  1056 018E0 0555 C        	INC	cnt
  1057            C      M 	SUBA	cnt,@(32)
       018E1 1820     1     MOV A,@( 32 )
       018E2 0115     1     SUB A, CNT 
  1058            C      M 	JPNC	AppDialingPhone_redial_1
       018E3 0E03     1     JBS  _STATUS , C 
       018E4 14D7     1     JMP  APPDIALINGPHONE_REDIAL_1 ,
  1059 018E5 1580 C        	JMP	AppDialingPhone_dial
  1060 018E6      C        AppDialingPhone_spk:				; SPK键按下
  1061            C      M 	JPNB	hardware,POWERSTATUS,AppDialingPhone_dial	; POWER down, SPK键按下无响应。
       018E6 0F9F     1     JBS  HARDWARE , POWERSTATUS 
       018E7 1580     1     JMP  APPDIALINGPHONE_DIAL ,
  1062 018E8      C        AppDialingPhone_spk_1:
  1063            C      M 	INVB	sys_flag,SPKPHONE		; 改变SPK状态
                      2  M  XOR  SYS_FLAG ,@(( 1 << SPKPHONE ))
       018E8 1840     2     MOV A,@(( 1 << SPKPHONE ))
       018E9 035D     2     XOR  SYS_FLAG ,A
  1064            C        	
  1065            C        	/*
  1066            C        	COMMAND:这里向DSP发送SPK ON/OFF命令，发送ON命令时同时需要将MUTE状态发送出去。
  1067            C        	*/
  1068            C      M 	JPNB	sys_flag,SPKPHONE,AppDialingPhone_spk_off
       018EA 0F9D     1     JBS  SYS_FLAG , SPKPHONE 
       018EB 14F0     1     JMP  APPDIALINGPHONE_SPK_OFF ,
  1069 018EC      C        AppDialingPhone_spk_on:
  1070            C      M 	JPB	hardware,HANDSET,AppDialingPhone_status	;ERROR: 手柄挂机状态，SPK摘机，没有这种情况，可以当出错处理。
       018EC 0DDF     1     JBC  HARDWARE , HANDSET 
       018ED 157D     1     JMP  APPDIALINGPHONE_STATUS ,
  1071 018EE      C        AppDialingPhone_handset_spk:			; 手柄摘机状态下按下SPK
  1072 018EE 1232 C        	CALL	AppPhoneIdle
  1073 018EF 157D C        	JMP	AppDialingPhone_status
  1074 018F0      C        AppDialingPhone_spk_off:
  1075            C      M 	JPB	hardware,HANDSET,AppDialingPhone_release	; 手柄挂机状态，SPK挂机，挂机
       018F0 0DDF     1     JBC  HARDWARE , HANDSET 
       018F1 1552     1     JMP  APPDIALINGPHONE_RELEASE ,
  1076 018F2 1232 C        	CALL	AppPhoneIdle
  1077 018F3 157D C        	JMP	AppDialingPhone_status
  1078            C        	
  1079 018F4      C        AppDialingPhone_handset:
  1080            C      M 	XORA	sys_data,@(HANDSET_ON)
       018F4 1800     1     MOV A,@( HANDSET_ON )
       018F5 031C     1     XOR A, SYS_DATA 
  1081            C      M 	JPZ	AppDialingPhone_handset_on
       018F6 0C83     1     JBC  _STATUS , Z 
       018F7 14FC     1     JMP  APPDIALINGPHONE_HANDSET_ON ,
  1082            C      M 	XORA	sys_data,@(HANDSET_OFF)
       018F8 1801     1     MOV A,@( HANDSET_OFF )
       018F9 031C     1     XOR A, SYS_DATA 
  1083            C      M 	JPZ	AppDialingPhone_handset_off
       018FA 0C83     1     JBC  _STATUS , Z 
       018FB 1500     1     JMP  APPDIALINGPHONE_HANDSET_OFF ,
  1084 018FC      C        AppDialingPhone_handset_on:			; 手柄挂机
  1085            C      M 	JPNB	sys_flag,SPKPHONE,AppDialingPhone_release	; SPK off状态，手柄挂机，挂机
       018FC 0F9D     1     JBS  SYS_FLAG , SPKPHONE 
       018FD 1552     1     JMP  APPDIALINGPHONE_RELEASE ,
  1086 018FE 1232 C        	CALL	AppPhoneIdle
  1087 018FF 157D C        	JMP	AppDialingPhone_status
  1088 01900      C        AppDialingPhone_handset_off:			; 手柄摘机
  1089            C      M 	JPNB	sys_flag,SPKPHONE,AppDialingPhone_status	;ERROR: SPK off状态，手柄摘机，没有这种情况，可以当出错处理。
       01900 0F9D     1     JBS  SYS_FLAG , SPKPHONE 
       01901 157D     1     JMP  APPDIALINGPHONE_STATUS ,
  1090 01902 099D C        	BC	sys_flag,SPKPHONE		; SPK on状态，手柄摘机，SPK转为OFF状态
  1091 01903 1232 C        	CALL	AppPhoneIdle
  1092 01904 157D C        	JMP	AppDialingPhone_status
  1093            C        
  1094 01905      C        AppDialingPhone_vola:
  1095            C      M 	JPB	sys_flag,SPKPHONE,AppDialingPhone_spk_vola
       01905 0D9D     1     JBC  SYS_FLAG , SPKPHONE 
       01906 150D     1     JMP  APPDIALINGPHONE_SPK_VOLA ,
  1096 01907 0949 C        	BC	_P9,5
  1097 01908 1580 C        	JMP	AppDialingPhone_dial
  1098 01909      C        AppDialingPhone_vols:
  1099            C      M 	JPB	sys_flag,SPKPHONE,AppDialingPhone_spk_vols
       01909 0D9D     1     JBC  SYS_FLAG , SPKPHONE 
       0190A 150D     1     JMP  APPDIALINGPHONE_SPK_VOLS ,
  1100 0190B 0B49 C        	BS	_P9,5
  1101 0190C 1580 C        	JMP	AppDialingPhone_dial
  1102 0190D      C        AppDialingPhone_spk_vola:
  1103 0190D      C        AppDialingPhone_spk_vols:
  1104            C      M 	LCALL	LibVolAdjust
                      2  M  PAGE #( LIBVOLADJUST ),
       0190D 1E81     2     PAGE ( LIBVOLADJUST / 1024 ),
       0190E 1332     1     CALL ( LIBVOLADJUST % 1024 ),
                      2  M  PAGE #( $ ),
       0190F 1E86     2     PAGE ( $ / 1024 ),
  1105 01910 1580 C        	JMP	AppDialingPhone_dial
  1106            C        
  1107 01911      C        AppDialingPhone_keyrelease:
  1108 01911 098D C        	BC	_RD,6				; 释放按键
  1109 01912 1580 C        	JMP	AppDialingPhone_dial
  1110            C        
  1111 01913      C        AppDialingPhone_power:
  1112            C      M 	XORA	sys_data,@(POWER_ON)
       01913 1800     1     MOV A,@( POWER_ON )
       01914 031C     1     XOR A, SYS_DATA 
  1113            C      M 	JPZ	AppDialingPhone_dial
       01915 0C83     1     JBC  _STATUS , Z 
       01916 1580     1     JMP  APPDIALINGPHONE_DIAL ,
  1114            C      M 	JPNB	sys_flag,SPKPHONE,AppDialingPhone_dial
       01917 0F9D     1     JBS  SYS_FLAG , SPKPHONE 
       01918 1580     1     JMP  APPDIALINGPHONE_DIAL ,
  1115 01919 14E8 C        	JMP	AppDialingPhone_spk_1		; SPK on状态，power down，SPK挂机。
  1116            C        
  1117 0191A      C        AppDialingPhone_command:
  1118            C      M 	XORA	sys_data,@(0x12)
       0191A 1812     1     MOV A,@( 18 )
       0191B 031C     1     XOR A, SYS_DATA 
  1119            C      M 	JPZ	AppDialingPhone_record
       0191C 0C83     1     JBC  _STATUS , Z 
       0191D 1529     1     JMP  APPDIALINGPHONE_RECORD ,
  1120            C      M 	JPNB	r2_flag,7,AppDialingPhone_dial
       0191E 0FFF     1     JBS  R2_FLAG , 7 
       0191F 1580     1     JMP  APPDIALINGPHONE_DIAL ,
  1121            C      M 	XORA	sys_data,@(0x13)
       01920 1813     1     MOV A,@( 19 )
       01921 031C     1     XOR A, SYS_DATA 
  1122            C      M 	JPZ	AppDialingPhone_return
       01922 0C83     1     JBC  _STATUS , Z 
       01923 1542     1     JMP  APPDIALINGPHONE_RETURN ,
  1123            C      M 	XORA	sys_data,@(0x18)
       01924 1818     1     MOV A,@( 24 )
       01925 031C     1     XOR A, SYS_DATA 
  1124            C      M 	JPZ	AppDialingPhone_mfull
       01926 0C83     1     JBC  _STATUS , Z 
       01927 1541     1     JMP  APPDIALINGPHONE_MFULL ,
  1125 01928 1580 C        	JMP	AppDialingPhone_dial
  1126 01929      C        AppDialingPhone_record:
  1127            C      M 	PAGE	#(VGA)
       01929 1E83     1     PAGE ( VGA / 1024 ),
  1128 0192A 10E0 C        	CALL	VgaBlankChar
  1129 0192B 1881 C        	MOV	A,@(STYLE_LEFT)
  1130 0192C 101C C        	CALL	VgaChar
  1131 0192D 1807 C        	MOV	A,@(STR_TwoWay)
  1132 0192E 114B C        	CALL	VgaString
  1133 0192F 1800 C        	MOV	A,@(0)
  1134 01930 101C C        	CALL	VgaChar
  1135 01931 1078 C        	CALL	VgaDrawChar
  1136            C      M 	PAGE	#($)
       01932 1E86     1     PAGE ( $ / 1024 ),
  1137 01933 0BFF C        	BS	r2_flag,7
  1138            C      M 	MOV	r2_msec_bak,r2_msec
       01934 042C     1     MOV A, R2_MSEC 
       01935 0070     1     MOV  R2_MSEC_BAK ,A
  1139            C      M 	MOV	r2_second_bak,r2_second
       01936 042D     1     MOV A, R2_SECOND 
       01937 0071     1     MOV  R2_SECOND_BAK ,A
  1140            C      M 	MOV	r2_minute_bak,r2_minute
       01938 042E     1     MOV A, R2_MINUTE 
       01939 0072     1     MOV  R2_MINUTE_BAK ,A
  1141            C      M 	MOV	r2_hour_bak,r2_hour
       0193A 042F     1     MOV A, R2_HOUR 
       0193B 0073     1     MOV  R2_HOUR_BAK ,A
  1142            C      M 	PAGE	#(LibInitTimer)
       0193C 1E81     1     PAGE ( LIBINITTIMER / 1024 ),
  1143 0193D 11BC C        	CALL	LibInitTimer
  1144 0193E 11E5 C        	CALL	LibDisplayTimer
  1145            C      M 	PAGE	#($)
       0193F 1E86     1     PAGE ( $ / 1024 ),
  1146 01940 1580 C        	JMP	AppDialingPhone_dial
  1147 01941      C        AppDialingPhone_mfull:
  1148 01941 0BBF C        	BS	r2_flag,6
  1149 01942      C        AppDialingPhone_return:
  1150            C      M 	PAGE	#(VGA)
       01942 1E83     1     PAGE ( VGA / 1024 ),
  1151 01943 10E0 C        	CALL	VgaBlankChar
  1152 01944 09FF C        	BC	r2_flag,7
  1153            C      M 	ADD	r2_msec,r2_msec_bak
       01945 0430     1     MOV A, R2_MSEC_BAK 
       01946 03EC     1     ADD  R2_MSEC ,A
  1154            C      M 	ADD	r2_second,r2_second_bak
       01947 0431     1     MOV A, R2_SECOND_BAK 
       01948 03ED     1     ADD  R2_SECOND ,A
  1155            C      M 	ADD	r2_minute,r2_minute_bak
       01949 0432     1     MOV A, R2_MINUTE_BAK 
       0194A 03EE     1     ADD  R2_MINUTE ,A
  1156            C      M 	ADD	r2_hour,r2_hour_bak
       0194B 0433     1     MOV A, R2_HOUR_BAK 
       0194C 03EF     1     ADD  R2_HOUR ,A
  1157            C      M 	PAGE	#(LibInitTimer)
       0194D 1E81     1     PAGE ( LIBINITTIMER / 1024 ),
  1158 0194E 1801 C        	MOV	A,@(1)
  1159 0194F 11E5 C        	CALL	LibDisplayTimer
  1160            C      M 	PAGE	#($)
       01950 1E86     1     PAGE ( $ / 1024 ),
  1161 01951 1580 C        	JMP	AppDialingPhone_dial
  1162            C        
  1163 01952      C        AppDialingPhone_release:
  1164            C      M 	MOV	_RB,@(0xff)			; 拨号停止
       01952 18FF     1     MOV A,@( 255 )
       01953 004B     1     MOV  _RB ,A
  1165            C      M 	JPNB	r2_flag,7,AppDialingPhone_release_1
       01954 0FFF     1     JBS  R2_FLAG , 7 
       01955 1568     1     JMP  APPDIALINGPHONE_RELEASE_1 ,
  1166            C      M 	PAGE	#(LibSendOneCommand)
       01956 1E81     1     PAGE ( LIBSENDONECOMMAND / 1024 ),
  1167 01957 1854 C        	MOV	A,@(0x54)
  1168 01958 12AF C        	CALL	LibSendOneCommand
  1169            C      M 	PAGE	#(VGA)
       01959 1E83     1     PAGE ( VGA / 1024 ),
  1170 0195A 10E0 C        	CALL	VgaBlankChar
  1171 0195B 09FF C        	BC	r2_flag,7
  1172            C      M 	ADD	r2_msec,r2_msec_bak
       0195C 0430     1     MOV A, R2_MSEC_BAK 
       0195D 03EC     1     ADD  R2_MSEC ,A
  1173            C      M 	ADD	r2_second,r2_second_bak
       0195E 0431     1     MOV A, R2_SECOND_BAK 
       0195F 03ED     1     ADD  R2_SECOND ,A
  1174            C      M 	ADD	r2_minute,r2_minute_bak
       01960 0432     1     MOV A, R2_MINUTE_BAK 
       01961 03EE     1     ADD  R2_MINUTE ,A
  1175            C      M 	ADD	r2_hour,r2_hour_bak
       01962 0433     1     MOV A, R2_HOUR_BAK 
       01963 03EF     1     ADD  R2_HOUR ,A
  1176            C      M 	PAGE	#(LibInitTimer)
       01964 1E81     1     PAGE ( LIBINITTIMER / 1024 ),
  1177 01965 1801 C        	MOV	A,@(1)
  1178 01966 11E5 C        	CALL	LibDisplayTimer
  1179            C      M 	PAGE	#($)
       01967 1E86     1     PAGE ( $ / 1024 ),
  1180 01968      C        AppDialingPhone_release_1:
  1181            C      M 	LCALL	LibStoreRedialNumber
                      2  M  PAGE #( LIBSTOREREDIALNUMBER ),
       01968 1E81     2     PAGE ( LIBSTOREREDIALNUMBER / 1024 ),
       01969 10BD     1     CALL ( LIBSTOREREDIALNUMBER % 1024 ),
                      2  M  PAGE #( $ ),
       0196A 1E86     2     PAGE ( $ / 1024 ),
  1182 0196B 0889 C        	BC	_P9,2
  1183 0196C 08C9 C        	BC	_P9,3
  1184 0196D 0909 C        	BC	_P9,4
  1185 0196E 09C9 C        	BC	_P9,7				; 挂机
  1186 0196F 089D C        	BC	sys_flag,HOOKSTATUS
  1187            C      M 	PAGE	#(VGA)
       01970 1E83     1     PAGE ( VGA / 1024 ),
  1188 01971 1800 C        	MOV	A,@(0)
  1189 01972 1016 C        	CALL	VgaNum2
  1190 01973 1076 C        	CALL	VgaDrawNum2
  1191            C      M 	PAGE	#($)
       01974 1E86     1     PAGE ( $ / 1024 ),
  1192 01975 1803 C        	MOV	A,@(PRO_AppDialingExit)		; 进入挂机显示延时5s。
  1193            C      M 	LCALL	LibPushProgram
                      2  M  PAGE #( LIBPUSHPROGRAM ),
       01976 1E81     2     PAGE ( LIBPUSHPROGRAM / 1024 ),
       01977 1000     1     CALL ( LIBPUSHPROGRAM % 1024 ),
                      2  M  PAGE #( $ ),
       01978 1E86     2     PAGE ( $ / 1024 ),
  1194            C      M 	LCALL	LibDisplayDialingStatus
                      2  M  PAGE #( LIBDISPLAYDIALINGSTATUS ),
       01979 1E81     2     PAGE ( LIBDISPLAYDIALINGSTATUS / 1024 ),
       0197A 10F1     1     CALL ( LIBDISPLAYDIALINGSTATUS % 1024 ),
                      2  M  PAGE #( $ ),
       0197B 1E86     2     PAGE ( $ / 1024 ),
  1195 0197C 1595 C        	JMP	AppDialingPhone_ret
  1196            C        
  1197 0197D      C        AppDialingPhone_status:
  1198            C      M 	LCALL	LibDisplayDialingStatus
                      2  M  PAGE #( LIBDISPLAYDIALINGSTATUS ),
       0197D 1E81     2     PAGE ( LIBDISPLAYDIALINGSTATUS / 1024 ),
       0197E 10F1     1     CALL ( LIBDISPLAYDIALINGSTATUS % 1024 ),
                      2  M  PAGE #( $ ),
       0197F 1E86     2     PAGE ( $ / 1024 ),
  1199 01980      C        AppDialingPhone_dial:
  1200            C      M 	BANK	2
       01980 0984     1     BC  _RAM , 6 
       01981 0BC4     1     BS  _RAM , 7 
  1201 01982 042B C        	MOV	A,r2_tmr_dial1
  1202            C      M 	JPNZ	AppDialingPhone_ret		; 拨号过程中的延时时间未到。
       01983 0E83     1     JBS  _STATUS , Z 
       01984 1595     1     JMP  APPDIALINGPHONE_RET ,
  1203 01985 042A C        	MOV	A,r2_tmr_dial
  1204            C      M 	JPNZ	AppDialingPhone_ret		; 拨号过程中的延时时间未到。
       01986 0E83     1     JBS  _STATUS , Z 
       01987 1595     1     JMP  APPDIALINGPHONE_RET ,
  1205            C        	
  1206            C      M 	BLOCK	3
       01988 1846     1     MOV A,@((( 3 << 1 )+ VALUE_IOCA ))
       01989 000A     1     IOW  _IOCA ,
  1207 0198A 00CC C        	CLR	_RC
  1208            C      M 	ANDA	_RD,@(0x07)
       0198B 1807     1     MOV A,@( 7 )
       0198C 028D     1     AND A, _RD 
  1209 0198D 0020 C        	TBL
  1210 0198E 1596 C        	JMP	AppDialingPhone_dial_idle	; 待机
  1211 0198F 15D5 C        	JMP	AppDialingPhone_dial_mute1	; 拨号前的mute
  1212 01990 15E6 C        	JMP	AppDialingPhone_dial_number	; 拨号
  1213 01991 15FB C        	JMP	AppDialingPhone_dial_mute2	; 拨号后的mute
  1214 01992 1604 C        	JMP	AppDialingPhone_dial_mute3	; flash前的mute
  1215 01993 161B C        	JMP	AppDialingPhone_dial_flash	; flash
  1216 01994 162A C        	JMP	AppDialingPhone_dial_mute4	; flash后的mute
  1217 01995      C        AppDialingPhone_ret:
  1218 01995 1C00 C        	RETL	@(0)				; 返回
  1219 01996      C        AppDialingPhone_dial_idle:			; 待机状态
  1220 01996 054C C        	INC	_RC
  1221 01997 040D C        	MOV	A,_RD
  1222            C      M 	JPZ	AppDialingPhone_ret		; 没有待拨号码
       01998 0C83     1     JBC  _STATUS , Z 
       01999 1595     1     JMP  APPDIALINGPHONE_RET ,
  1223 0199A 054C C        	INC	_RC
  1224            C      M 	PAGE	#(VGA)
       0199B 1E83     1     PAGE ( VGA / 1024 ),
  1225 0199C 040D C        	MOV	A,_RD
  1226 0199D 1016 C        	CALL	VgaNum2				; 显示号码
  1227 0199E 1076 C        	CALL	VgaDrawNum2
  1228            C      M 	PAGE	#($)
       0199F 1E86     1     PAGE ( $ / 1024 ),
  1229            C      M 	BLOCK	3
       019A0 1846     1     MOV A,@((( 3 << 1 )+ VALUE_IOCA ))
       019A1 000A     1     IOW  _IOCA ,
  1230            C      M 	MOV	_RC,@(2)
       019A2 1802     1     MOV A,@( 2 )
       019A3 004C     1     MOV  _RC ,A
  1231 019A4 040D C        	MOV	A,_RD
  1232            C      M 	LCALL	LibNumTone			; 对号码进行检查，同时转换
                      2  M  PAGE #( LIBNUMTONE ),
       019A5 1E81     2     PAGE ( LIBNUMTONE / 1024 ),
       019A6 125B     1     CALL ( LIBNUMTONE % 1024 ),
                      2  M  PAGE #( $ ),
       019A7 1E86     2     PAGE ( $ / 1024 ),
  1233 019A8 1F00 C        	ADD	A,@(0)
  1234            C      M 	JPZ	AppDialingPhone_dial_shiftnum	; 无效号码，将号码左移
       019A9 0C83     1     JBC  _STATUS , Z 
       019AA 15C5     1     JMP  APPDIALINGPHONE_DIAL_SHIFTNUM ,
  1235 019AB 1BFF C        	XOR	A,@(0xff)
  1236            C      M 	JPZ	AppDialingPhone_dial_pause	; pause
       019AC 0C83     1     JBC  _STATUS , Z 
       019AD 15BC     1     JMP  APPDIALINGPHONE_DIAL_PAUSE ,
  1237 019AE 00CC C        	CLR	_RC
  1238            C      M 	AND	_RD,@(0xf8)
       019AF 18F8     1     MOV A,@( 248 )
       019B0 02CD     1     AND  _RD ,A
  1239            C      M 	ADD	_RD,@(0x01)			; 有效号码，进入拨号前的mute
       019B1 1801     1     MOV A,@( 1 )
       019B2 03CD     1     ADD  _RD ,A
  1240 019B3      C        AppDialingPhone_mute1:
  1241 019B3 0011 C        	DISI
  1242            C      M 	MOV	r2_tmr_dial,@(5)
       019B4 1805     1     MOV A,@( 5 )
       019B5 006A     1     MOV  R2_TMR_DIAL ,A
  1243 019B6 00EB C        	CLR	r2_tmr_dial1
  1244 019B7 0010 C        	ENI
  1245 019B8 0889 C        	BC	_P9,2				; 不管spkphone处于哪种状态，拨号mute方式都一样。
  1246 019B9 08C9 C        	BC	_P9,3
  1247 019BA 0909 C        	BC	_P9,4
  1248 019BB 1595 C        	JMP	AppDialingPhone_ret
  1249 019BC      C        AppDialingPhone_dial_pause:
  1250 019BC 0011 C        	DISI
  1251 019BD 00EA C        	CLR	r2_tmr_dial
  1252            C      M 	BANK	3
       019BE 0B84     1     BS  _RAM , 6 
       019BF 0BC4     1     BS  _RAM , 7 
  1253 019C0 043B C        	MOV	A,r3_pausetime
  1254            C      M 	BANK	2
       019C1 0984     1     BC  _RAM , 6 
       019C2 0BC4     1     BS  _RAM , 7 
  1255 019C3 006B C        	MOV	r2_tmr_dial1,A			; pause time
  1256 019C4 0010 C        	ENI
  1257 019C5      C        AppDialingPhone_dial_shiftnum:
  1258            C      M 	MOV	_RC,@(1)
       019C5 1801     1     MOV A,@( 1 )
       019C6 004C     1     MOV  _RC ,A
  1259 019C7 01CD C        	DEC	_RD
  1260            C      M 	MOV	cnt,_RD
       019C8 040D     1     MOV A, _RD 
       019C9 0055     1     MOV  CNT ,A
  1261            C      M 	MOV	ax,@(3)
       019CA 1803     1     MOV A,@( 3 )
       019CB 0053     1     MOV  AX ,A
  1262            C      M 	MOV	bx,@(2)
       019CC 1802     1     MOV A,@( 2 )
       019CD 0056     1     MOV  BX ,A
  1263            C      M 	LCALL	LibCopyRam			; 将剩余的号码左移一位
                      2  M  PAGE #( LIBCOPYRAM ),
       019CE 1E81     2     PAGE ( LIBCOPYRAM / 1024 ),
       019CF 1126     1     CALL ( LIBCOPYRAM % 1024 ),
                      2  M  PAGE #( $ ),
       019D0 1E86     2     PAGE ( $ / 1024 ),
  1264 019D1 1595 C        	JMP	AppDialingPhone_ret
  1265 019D2      C        AppDialingPhone_dial_wait:			; wait状态
  1266            C      M 	AND	_RD,@(0xf8)			; wait时间到，进入idle状态
       019D2 18F8     1     MOV A,@( 248 )
       019D3 02CD     1     AND  _RD ,A
  1267 019D4 1595 C        	JMP	AppDialingPhone_ret
  1268 019D5      C        AppDialingPhone_dial_mute1:			; 拨号前的mute状态
  1269            C      M 	AND	_RD,@(0xf8)
       019D5 18F8     1     MOV A,@( 248 )
       019D6 02CD     1     AND  _RD ,A
  1270            C      M 	ADD	_RD,@(0x02)			; mute时间到，进入拨号状态
       019D7 1802     1     MOV A,@( 2 )
       019D8 03CD     1     ADD  _RD ,A
  1271 019D9 0011 C        	DISI
  1272            C      M 	MOV	r2_tmr_dial,@(25)		; 拨号100ms
       019DA 1819     1     MOV A,@( 25 )
       019DB 006A     1     MOV  R2_TMR_DIAL ,A
  1273 019DC 00EB C        	CLR	r2_tmr_dial1
  1274 019DD 0010 C        	ENI
  1275            C        	
  1276 019DE 054C C        	INC	_RC
  1277 019DF 054C C        	INC	_RC
  1278 019E0 040D C        	MOV	A,_RD
  1279            C      M 	LCALL	LibNumTone			; 对号码进行检查，同时转换
                      2  M  PAGE #( LIBNUMTONE ),
       019E1 1E81     2     PAGE ( LIBNUMTONE / 1024 ),
       019E2 125B     1     CALL ( LIBNUMTONE % 1024 ),
                      2  M  PAGE #( $ ),
       019E3 1E86     2     PAGE ( $ / 1024 ),
  1280 019E4 004B C        	MOV	_RB,A
  1281 019E5 1595 C        	JMP	AppDialingPhone_ret
  1282 019E6      C        AppDialingPhone_dial_number:			; 拨号状态
  1283            C      M 	JPNB	_RD,6,AppDialingPhone_dial_number_1	; 按键是否持续中
       019E6 0F8D     1     JBS  _RD , 6 
       019E7 15EE     1     JMP  APPDIALINGPHONE_DIAL_NUMBER_1 ,
  1284 019E8 054C C        	INC	_RC
  1285            C      M 	SUBA	_RD,@(2)
       019E9 1802     1     MOV A,@( 2 )
       019EA 010D     1     SUB A, _RD 
  1286            C      M 	JPC	AppDialingPhone_dial_number_1	; 不是最后一个号码
       019EB 0C03     1     JBC  _STATUS , C 
       019EC 15EE     1     JMP  APPDIALINGPHONE_DIAL_NUMBER_1 ,
  1287 019ED 1595 C        	JMP	AppDialingPhone_ret		; 最后一个号码，且拨号键按键持续中。
  1288 019EE      C        AppDialingPhone_dial_number_1:
  1289 019EE 00CC C        	CLR	_RC
  1290            C      M 	MOV	_RB,@(0xff)			; 停止拨号 (拨号100ms时间到，最后一个号码按键松起)
       019EF 18FF     1     MOV A,@( 255 )
       019F0 004B     1     MOV  _RB ,A
  1291            C      M 	AND	_RD,@(0xf8)
       019F1 18F8     1     MOV A,@( 248 )
       019F2 02CD     1     AND  _RD ,A
  1292            C      M 	ADD	_RD,@(0x03)			; 拨号完毕，进入拨号之后的MUTE时期。
       019F3 1803     1     MOV A,@( 3 )
       019F4 03CD     1     ADD  _RD ,A
  1293 019F5 0011 C        	DISI
  1294            C      M 	MOV	r2_tmr_dial,@(5)		; mute 20ms
       019F6 1805     1     MOV A,@( 5 )
       019F7 006A     1     MOV  R2_TMR_DIAL ,A
  1295 019F8 00EB C        	CLR	r2_tmr_dial1
  1296 019F9 0010 C        	ENI
  1297 019FA 15C5 C        	JMP	AppDialingPhone_dial_shiftnum	; 将剩余的号码左移一位
  1298 019FB      C        AppDialingPhone_dial_mute2:			; 拨号之后的mute状态，mute完回到talking状态的mute.
  1299            C      M 	AND	_RD,@(0xf8)			; mute完毕，延时60ms，进入idle
       019FB 18F8     1     MOV A,@( 248 )
       019FC 02CD     1     AND  _RD ,A
  1300 019FD 0011 C        	DISI
  1301            C      M 	MOV	r2_tmr_dial,@(15)		; delay 60ms
       019FE 180F     1     MOV A,@( 15 )
       019FF 006A     1     MOV  R2_TMR_DIAL ,A
  1302 01A00 00EB C        	CLR	r2_tmr_dial1
  1303 01A01 0010 C        	ENI
  1304 01A02      C        AppDialingPhone_mute2:
  1305            C        	
  1306 01A02 1232 C        	CALL	AppPhoneIdle			; 通话状态，也就是待机状态
  1307            C        	
  1308 01A03 1595 C        	JMP	AppDialingPhone_ret
  1309 01A04      C        AppDialingPhone_dial_mute3:			; flash前的mute
  1310            C      M 	AND	_RD,@(0xf8)
       01A04 18F8     1     MOV A,@( 248 )
       01A05 02CD     1     AND  _RD ,A
  1311            C      M 	ADD	_RD,@(0x05)
       01A06 1805     1     MOV A,@( 5 )
       01A07 03CD     1     ADD  _RD ,A
  1312 01A08 09C9 C        	BC	_P9,7				; on hook
  1313            C      M 	BANK	3
       01A09 0B84     1     BS  _RAM , 6 
       01A0A 0BC4     1     BS  _RAM , 7 
  1314            C      M 	MOV	ax,r3_flashtime
       01A0B 043A     1     MOV A, R3_FLASHTIME 
       01A0C 0053     1     MOV  AX ,A
  1315            C      M 	MOV	exa,@(25)
       01A0D 1819     1     MOV A,@( 25 )
       01A0E 0054     1     MOV  EXA ,A
  1316            C      M 	LCALL	LibMathHexMul
                      2  M  PAGE #( LIBMATHHEXMUL ),
       01A0F 1E81     2     PAGE ( LIBMATHHEXMUL / 1024 ),
       01A10 1063     1     CALL ( LIBMATHHEXMUL % 1024 ),
                      2  M  PAGE #( $ ),
       01A11 1E86     2     PAGE ( $ / 1024 ),
  1317            C      M 	BANK	2
       01A12 0984     1     BC  _RAM , 6 
       01A13 0BC4     1     BS  _RAM , 7 
  1318 01A14 0011 C        	DISI
  1319            C      M 	MOV	r2_tmr_dial,ax			; flash time
       01A15 0413     1     MOV A, AX 
       01A16 006A     1     MOV  R2_TMR_DIAL ,A
  1320            C      M 	MOV	r2_tmr_dial1,exa
       01A17 0414     1     MOV A, EXA 
       01A18 006B     1     MOV  R2_TMR_DIAL1 ,A
  1321 01A19 0010 C        	ENI
  1322 01A1A 1595 C        	JMP	AppDialingPhone_ret
  1323 01A1B      C        AppDialingPhone_dial_flash:			; flash
  1324            C      M 	AND	_RD,@(0xf8)
       01A1B 18F8     1     MOV A,@( 248 )
       01A1C 02CD     1     AND  _RD ,A
  1325            C      M 	ADD	_RD,@(0x06)
       01A1D 1806     1     MOV A,@( 6 )
       01A1E 03CD     1     ADD  _RD ,A
  1326 01A1F 0BC9 C        	BS	_P9,7				; off hook
  1327 01A20 0011 C        	DISI
  1328            C      M 	MOV	r2_tmr_dial,@(5)		; mute 20ms
       01A21 1805     1     MOV A,@( 5 )
       01A22 006A     1     MOV  R2_TMR_DIAL ,A
  1329 01A23 00EB C        	CLR	r2_tmr_dial1
  1330 01A24 0010 C        	ENI
  1331 01A25 097F C        	BC	r2_flag,5
  1332            C      M 	LCALL	LibDisplayTimer
                      2  M  PAGE #( LIBDISPLAYTIMER ),
       01A26 1E81     2     PAGE ( LIBDISPLAYTIMER / 1024 ),
       01A27 11E5     1     CALL ( LIBDISPLAYTIMER % 1024 ),
                      2  M  PAGE #( $ ),
       01A28 1E86     2     PAGE ( $ / 1024 ),
  1333 01A29 1595 C        	JMP	AppDialingPhone_ret
  1334 01A2A      C        AppDialingPhone_dial_mute4:			; flash后的mute
  1335            C      M 	AND	_RD,@(0xf8)
       01A2A 18F8     1     MOV A,@( 248 )
       01A2B 02CD     1     AND  _RD ,A
  1336 01A2C 0011 C        	DISI
  1337            C      M 	MOV	r2_tmr_dial,@(100)		; flash之后必须等待400ms之后才能开始拨号
       01A2D 1864     1     MOV A,@( 100 )
       01A2E 006A     1     MOV  R2_TMR_DIAL ,A
  1338 01A2F 00EB C        	CLR	r2_tmr_dial1
  1339 01A30 0010 C        	ENI
  1340 01A31 1602 C        	JMP	AppDialingPhone_mute2
  1341            C        
  1342 01A32      C        AppPhoneIdle:					; 通话的待机状态
  1343            C      M 	BLOCK	3
       01A32 1846     1     MOV A,@((( 3 << 1 )+ VALUE_IOCA ))
       01A33 000A     1     IOW  _IOCA ,
  1344 01A34 00CC C        	CLR	_RC
  1345 01A35 00D3 C        	CLR	ax
  1346            C      M 	ANDA	_RD,@(0x07)
       01A36 1807     1     MOV A,@( 7 )
       01A37 028D     1     AND A, _RD 
  1347            C      M 	JPNZ	AppPhoneIdle_1
       01A38 0E83     1     JBS  _STATUS , Z 
       01A39 1644     1     JMP  APPPHONEIDLE_1 ,
  1348            C      M 	JPB	hardware,7,$+3
       01A3A 0DDF     1     JBC  HARDWARE , 7 
       01A3B 163E     1     JMP ( $ + 3 ),
  1349 01A3C 0AD3 C        	BS	ax,3
  1350 01A3D 0B13 C        	BS	ax,4
  1351            C      M 	JPNB	sys_flag,SPKPHONE,$+2
       01A3E 0F9D     1     JBS  SYS_FLAG , SPKPHONE 
       01A3F 1641     1     JMP ( $ + 2 ),
  1352 01A40 0A93 C        	BS	ax,2
  1353            C      M 	JPNB	_RD,4,$+2
       01A41 0F0D     1     JBS  _RD , 4 
       01A42 1644     1     JMP ( $ + 2 ),
  1354 01A43 08D3 C        	BC	ax,3
  1355 01A44      C        AppPhoneIdle_1:
  1356            C      M 	AND	_P9,@(0xe3)
       01A44 18E3     1     MOV A,@( 227 )
       01A45 02C9     1     AND  _P9 ,A
  1357            C      M 	OR	_P9,ax
       01A46 0413     1     MOV A, AX 
       01A47 0249     1     OR  _P9 ,A
  1358 01A48 1C00 C        	RETL	@(0)
  1359            C        
  1360            C        /*************************************************
  1361            C        AppPreDial
  1362            C        预拨号码编辑程序
  1363            C        初始化:	
  1364            C        	
  1365            C        显示:	
  1366            C        *************************************************/
  1367 01A49      C        AppPreDial:
  1368            C      M 	JPB	sys_flag,PROGRAMINIT,AppPreDial_init
       01A49 0CDD     1     JBC  SYS_FLAG , PROGRAMINIT 
       01A4A 164E     1     JMP  APPPREDIAL_INIT ,
  1369            C      M 	JPB	sys_flag,PROGRAMREIN,AppPreDial_rein
       01A4B 0D1D     1     JBC  SYS_FLAG , PROGRAMREIN 
       01A4C 1667     1     JMP  APPPREDIAL_REIN ,
  1370 01A4D 1668 C        	JMP	AppPreDial_idle
  1371 01A4E      C        AppPreDial_init:
  1372 01A4E 08DD C        	BC	sys_flag,PROGRAMINIT
  1373            C      M 	BANK	2
       01A4F 0984     1     BC  _RAM , 6 
       01A50 0BC4     1     BS  _RAM , 7 
  1374            C      M 	BLOCK	3
       01A51 1846     1     MOV A,@((( 3 << 1 )+ VALUE_IOCA ))
       01A52 000A     1     IOW  _IOCA ,
  1375            C      M 	MOV	_RC,@(131)
       01A53 1883     1     MOV A,@( 131 )
       01A54 004C     1     MOV  _RC ,A
  1376 01A55 040D C        	MOV	A,_RD
  1377 01A56 0063 C        	MOV	r2_bx,A
  1378 01A57 0062 C        	MOV	r2_cnt,A
  1379 01A58 0562 C        	INC	r2_cnt
  1380 01A59 1342 C        	CALL	AppDisplayEditNumber
  1381            C      M 	PAGE	#(VGA)
       01A5A 1E83     1     PAGE ( VGA / 1024 ),
  1382 01A5B 10E0 C        	CALL	VgaBlankChar
  1383 01A5C 1881 C        	MOV	A,@(STYLE_LEFT)
  1384 01A5D 101C C        	CALL	VgaChar
  1385 01A5E 1821 C        	MOV	A,@(STR_PreHFdial)
  1386 01A5F 114B C        	CALL	VgaString
  1387 01A60 183A C        	MOV	A,@(58)
  1388 01A61 101C C        	CALL	VgaChar
  1389 01A62 1800 C        	MOV	A,@(0)
  1390 01A63 101C C        	CALL	VgaChar
  1391 01A64 1078 C        	CALL	VgaDrawChar
  1392            C      M 	PAGE	#($)
       01A65 1E86     1     PAGE ( $ / 1024 ),
  1393 01A66 1667 C        	JMP	AppPreDial_display
  1394 01A67      C        AppPreDial_rein:
  1395 01A67      C        AppPreDial_display:
  1396 01A67 091D C        	BC	sys_flag,PROGRAMREIN
  1397 01A68      C        AppPreDial_idle:
  1398            C      M 	LCALL	LibHookCheck
                      2  M  PAGE #( LIBHOOKCHECK ),
       01A68 1E81     2     PAGE ( LIBHOOKCHECK / 1024 ),
       01A69 10DB     1     CALL ( LIBHOOKCHECK % 1024 ),
                      2  M  PAGE #( $ ),
       01A6A 1E86     2     PAGE ( $ / 1024 ),
  1399 01A6B 1F00 C        	ADD	A,@(0)
  1400            C      M 	JPNZ	AppPreDial_offhook
       01A6C 0E83     1     JBS  _STATUS , Z 
       01A6D 1677     1     JMP  APPPREDIAL_OFFHOOK ,
  1401            C        	
  1402 01A6E 129A C        	CALL	AppEditNumber32
  1403 01A6F 1F00 C        	ADD	A,@(0)
  1404            C      M 	JPNZ	AppPreDial_number
       01A70 0E83     1     JBS  _STATUS , Z 
       01A71 168D     1     JMP  APPPREDIAL_NUMBER ,
  1405            C        	
  1406            C      M 	XORA	sys_msg,@(WM_KEYPRESS)
       01A72 1801     1     MOV A,@( WM_KEYPRESS )
       01A73 031B     1     XOR A, SYS_MSG 
  1407            C      M 	JPZ	AppPreDial_keypress
       01A74 0C83     1     JBC  _STATUS , Z 
       01A75 168F     1     JMP  APPPREDIAL_KEYPRESS ,
  1408 01A76      C        AppPreDial_idle_ret:
  1409 01A76 1C00 C        	RETL	@(0)
  1410            C        
  1411 01A77      C        AppPreDial_offhook:
  1412            C      M 	BLOCK	3
       01A77 1846     1     MOV A,@((( 3 << 1 )+ VALUE_IOCA ))
       01A78 000A     1     IOW  _IOCA ,
  1413 01A79 00D5 C        	CLR	cnt
  1414 01A7A      C        AppPreDial_offhook_store:
  1415            C      M 	MOV	_RC,@(131)
       01A7A 1883     1     MOV A,@( 131 )
       01A7B 004C     1     MOV  _RC ,A
  1416            C      M 	SUBA	cnt,_RD
       01A7C 040D     1     MOV A, _RD 
       01A7D 0115     1     SUB A, CNT 
  1417            C      M 	JPZ	AppPreDial_offhook_1
       01A7E 0C83     1     JBC  _STATUS , Z 
       01A7F 1688     1     JMP  APPPREDIAL_OFFHOOK_1 ,
  1418 01A80 0555 C        	INC	cnt
  1419            C      M 	ADD	_RC,cnt
       01A81 0415     1     MOV A, CNT 
       01A82 03CC     1     ADD  _RC ,A
  1420 01A83 040D C        	MOV	A,_RD
  1421            C      M 	LCALL	LibStoreDialNumber
                      2  M  PAGE #( LIBSTOREDIALNUMBER ),
       01A84 1E81     2     PAGE ( LIBSTOREDIALNUMBER / 1024 ),
       01A85 109A     1     CALL ( LIBSTOREDIALNUMBER % 1024 ),
                      2  M  PAGE #( $ ),
       01A86 1E86     2     PAGE ( $ / 1024 ),
  1422 01A87 167A C        	JMP	AppPreDial_offhook_store
  1423 01A88      C        AppPreDial_offhook_1:
  1424            C        	
  1425 01A88 1802 C        	MOV	A,@(PRO_AppDialingPhone)
  1426            C      M 	LCALL	LibPushProgram
                      2  M  PAGE #( LIBPUSHPROGRAM ),
       01A89 1E81     2     PAGE ( LIBPUSHPROGRAM / 1024 ),
       01A8A 1000     1     CALL ( LIBPUSHPROGRAM % 1024 ),
                      2  M  PAGE #( $ ),
       01A8B 1E86     2     PAGE ( $ / 1024 ),
  1427 01A8C 1C00 C        	RETL	@(0)
  1428            C        
  1429 01A8D      C        AppPreDial_number:
  1430 01A8D 1342 C        	CALL	AppDisplayEditNumber
  1431 01A8E 1C00 C        	RETL	@(0)
  1432            C        
  1433 01A8F      C        AppPreDial_keypress:
  1434            C      M 	XORA	sys_data,@(KEY_EXIT)
       01A8F 1816     1     MOV A,@( KEY_EXIT )
       01A90 031C     1     XOR A, SYS_DATA 
  1435            C      M 	JPZ	AppPreDial_exit
       01A91 0C83     1     JBC  _STATUS , Z 
       01A92 1694     1     JMP  APPPREDIAL_EXIT ,
  1436 01A93 1C00 C        	RETL	@(0)
  1437 01A94      C        AppPreDial_exit:
  1438            C      M 	PAGE	#(LibPushStack)
       01A94 1E81     1     PAGE ( LIBPUSHSTACK / 1024 ),
  1439 01A95 1020 C        	CALL	LibClearStack
  1440 01A96 1801 C        	MOV	A,@(PRO_AppIdle)
  1441 01A97 1000 C        	CALL	LibPushProgram
  1442            C      M 	PAGE	#(0)
       01A98 1E80     1     PAGE ( 0 / 1024 ),
  1443 01A99 1C00 C        	RETL	@(0)
  1444            C        
  1445            C        /*************************************************
  1446            C        号码编辑
  1447            C        编辑指针指向要编辑的号码，同时该号码闪烁，处于光标状态。
  1448            C        按下数字键在该号码的前面添加一个号码，后面号码依次右移，编辑指针仍然指向该号码，并且光标右移一位。
  1449            C        按下BACK键，删除前面的一位号码，前面的号码依次右移，光标位置不变。
  1450            C        按下DEL键，删除当前号码，后面依次左移，光标位置不变。
  1451            C        按下LEFT或者UP键，光标左移一位，当到达最左边时，号码右移，左边没有号码了，不做响应。
  1452            C        按下RIGHT或者DOWN键，光标右移一位，当光标到达最右边的下一位时，光标消失，号码左移，右边没有号码时，不做响应。
  1453            C        初始状态：
  1454            C            号码按靠右排列放在第二行数字区。
  1455            C            光标消失状态，号码编辑指针为最后一个号码的下一位。
  1456            C            r2_ax:	输入的编辑号码
  1457            C            r2_cnt:	处于编辑状态的号码的位置，屏幕的光标在这个号码上。
  1458            C            r2_bx:	显示屏右端号码的位置，号码在编辑区的位置
  1459            C        *************************************************/
  1460 01A9A      C        AppEditNumber32:
  1461            C      M 	BANK	2
       01A9A 0984     1     BC  _RAM , 6 
       01A9B 0BC4     1     BS  _RAM , 7 
  1462            C      M 	BLOCK	3
       01A9C 1846     1     MOV A,@((( 3 << 1 )+ VALUE_IOCA ))
       01A9D 000A     1     IOW  _IOCA ,
  1463 01A9E      C        AppEditNumber32_edit:
  1464            C      M 	MOV	_RC,@(131)
       01A9E 1883     1     MOV A,@( 131 )
       01A9F 004C     1     MOV  _RC ,A
  1465            C        	
  1466            C      M 	XORA	sys_msg,@(WM_KEYPRESS)
       01AA0 1801     1     MOV A,@( WM_KEYPRESS )
       01AA1 031B     1     XOR A, SYS_MSG 
  1467            C      M 	JPZ	AppEditNumber32_edit_key
       01AA2 0C83     1     JBC  _STATUS , Z 
       01AA3 16A5     1     JMP  APPEDITNUMBER32_EDIT_KEY ,
  1468 01AA4      C        AppEditNumber32_edit_ret:
  1469 01AA4 1C00 C        	RETL	@(0)
  1470 01AA5      C        AppEditNumber32_edit_key:
  1471            C        	
  1472            C      M 	XORA	sys_data,@(KEY_BACK)
       01AA5 1814     1     MOV A,@( KEY_BACK )
       01AA6 031C     1     XOR A, SYS_DATA 
  1473            C      M 	JPZ	AppEditNumber32_edit_back
       01AA7 0C83     1     JBC  _STATUS , Z 
       01AA8 16DC     1     JMP  APPEDITNUMBER32_EDIT_BACK ,
  1474            C      M 	XORA	sys_data,@(KEY_ERASE)
       01AA9 1823     1     MOV A,@( KEY_ERASE )
       01AAA 031C     1     XOR A, SYS_DATA 
  1475            C      M 	JPZ	AppEditNumber32_edit_erase
       01AAB 0C83     1     JBC  _STATUS , Z 
       01AAC 16F1     1     JMP  APPEDITNUMBER32_EDIT_ERASE ,
  1476            C      M 	XORA	sys_data,@(KEY_LEFT)
       01AAD 1826     1     MOV A,@( KEY_LEFT )
       01AAE 031C     1     XOR A, SYS_DATA 
  1477            C      M 	JPZ	AppEditNumber32_edit_left
       01AAF 0C83     1     JBC  _STATUS , Z 
       01AB0 1709     1     JMP  APPEDITNUMBER32_EDIT_LEFT ,
  1478            C      M 	XORA	sys_data,@(KEY_UP)
       01AB1 1824     1     MOV A,@( KEY_UP )
       01AB2 031C     1     XOR A, SYS_DATA 
  1479            C      M 	JPZ	AppEditNumber32_edit_left
       01AB3 0C83     1     JBC  _STATUS , Z 
       01AB4 1709     1     JMP  APPEDITNUMBER32_EDIT_LEFT ,
  1480            C      M 	XORA	sys_data,@(KEY_RIGHT)
       01AB5 1827     1     MOV A,@( KEY_RIGHT )
       01AB6 031C     1     XOR A, SYS_DATA 
  1481            C      M 	JPZ	AppEditNumber32_edit_right
       01AB7 0C83     1     JBC  _STATUS , Z 
       01AB8 170F     1     JMP  APPEDITNUMBER32_EDIT_RIGHT ,
  1482            C      M 	XORA	sys_data,@(KEY_DOWN)
       01AB9 1825     1     MOV A,@( KEY_DOWN )
       01ABA 031C     1     XOR A, SYS_DATA 
  1483            C      M 	JPZ	AppEditNumber32_edit_right
       01ABB 0C83     1     JBC  _STATUS , Z 
       01ABC 170F     1     JMP  APPEDITNUMBER32_EDIT_RIGHT ,
  1484            C        	
  1485            C      M 	LCALL	LibDialNumCheck
                      2  M  PAGE #( LIBDIALNUMCHECK ),
       01ABD 1E81     2     PAGE ( LIBDIALNUMCHECK / 1024 ),
       01ABE 1255     1     CALL ( LIBDIALNUMCHECK % 1024 ),
                      2  M  PAGE #( $ ),
       01ABF 1E86     2     PAGE ( $ / 1024 ),
  1486 01AC0 1F00 C        	ADD	A,@(0)
  1487            C      M 	JPZ	AppEditNumber32_edit_ret
       01AC1 0C83     1     JBC  _STATUS , Z 
       01AC2 16A4     1     JMP  APPEDITNUMBER32_EDIT_RET ,
  1488            C        ; 输入一个号码
  1489            C        ; 在光标位置出输入该号码，并将光标位置的原号码和其后的号码右移一位。
  1490            C        ; 同时光标右移一位，当光标=屏位置时，屏位置也要右移一位。
  1491 01AC3      C        AppEditNumber32_edit_num:
  1492 01AC3 0060 C        	MOV	r2_ax,A
  1493            C      M 	SUBA	_RD,@(32)
       01AC4 1820     1     MOV A,@( 32 )
       01AC5 010D     1     SUB A, _RD 
  1494            C      M 	JPC	AppEditNumber32_full		; 编辑长度到了32位，满，不能输入号码。
       01AC6 0C03     1     JBC  _STATUS , C 
       01AC7 1740     1     JMP  APPEDITNUMBER32_FULL ,
  1495 01AC8 054D C        	INC	_RD				; 输入一位号码，长度+1。
  1496            C      M 	ADDA	r2_cnt,@(131)			; 得到编辑位置
       01AC9 1883     1     MOV A,@( 131 )
       01ACA 03A2     1     ADD A, R2_CNT 
  1497 01ACB 0053 C        	MOV	ax,A				; 编辑位置的地址
  1498 01ACC 0056 C        	MOV	bx,A				; 编辑位置的下一位地址
  1499 01ACD 0556 C        	INC	bx
  1500            C      M 	SUBA	_RD,r2_cnt
       01ACE 0422     1     MOV A, R2_CNT 
       01ACF 010D     1     SUB A, _RD 
  1501 01AD0 0055 C        	MOV	cnt,A				; 右移的长度
  1502            C      M 	LCALL	LibCopyRam
                      2  M  PAGE #( LIBCOPYRAM ),
       01AD1 1E81     2     PAGE ( LIBCOPYRAM / 1024 ),
       01AD2 1126     1     CALL ( LIBCOPYRAM % 1024 ),
                      2  M  PAGE #( $ ),
       01AD3 1E86     2     PAGE ( $ / 1024 ),
  1503            C      M 	ADDA	r2_cnt,@(131)
       01AD4 1883     1     MOV A,@( 131 )
       01AD5 03A2     1     ADD A, R2_CNT 
  1504 01AD6 004C C        	MOV	_RC,A
  1505            C      M 	MOV	_RD,r2_ax
       01AD7 0420     1     MOV A, R2_AX 
       01AD8 004D     1     MOV  _RD ,A
  1506            C      M 	MOV	_RC,@(131)
       01AD9 1883     1     MOV A,@( 131 )
       01ADA 004C     1     MOV  _RC ,A
  1507 01ADB 170F C        	JMP	AppEditNumber32_edit_right	; 同时光标要右移。
  1508            C        ; 删除光标前面的一位号码
  1509            C        ; 删除前的号码，光标当前位的号码及其后的号码左移一位。
  1510            C        ; 光标相对编辑区位置左移，屏相对编辑区位置左移。光标显示位置不变。
  1511 01ADC      C        AppEditNumber32_edit_back:
  1512            C      M 	SUBA	r2_cnt,@(2)
       01ADC 1802     1     MOV A,@( 2 )
       01ADD 0122     1     SUB A, R2_CNT 
  1513            C      M 	JPNC	AppEditNumber32_edit_ret	; 光标位置在第一个号码处，无法删除前面的号码。
       01ADE 0E03     1     JBS  _STATUS , C 
       01ADF 16A4     1     JMP  APPEDITNUMBER32_EDIT_RET ,
  1514 01AE0 01CD C        	DEC	_RD				; 删除一个号码，长度-1
  1515            C      M 	ADDA	r2_cnt,@(131)
       01AE1 1883     1     MOV A,@( 131 )
       01AE2 03A2     1     ADD A, R2_CNT 
  1516 01AE3 0053 C        	MOV	ax,A
  1517 01AE4 0056 C        	MOV	bx,A
  1518 01AE5 01D6 C        	DEC	bx
  1519            C      M 	SUBA	_RD,r2_cnt
       01AE6 0422     1     MOV A, R2_CNT 
       01AE7 010D     1     SUB A, _RD 
  1520 01AE8 0055 C        	MOV	cnt,A
  1521 01AE9 0555 C        	INC	cnt
  1522 01AEA 0555 C        	INC	cnt
  1523            C      M 	LCALL	LibCopyRam
                      2  M  PAGE #( LIBCOPYRAM ),
       01AEB 1E81     2     PAGE ( LIBCOPYRAM / 1024 ),
       01AEC 1126     1     CALL ( LIBCOPYRAM % 1024 ),
                      2  M  PAGE #( $ ),
       01AED 1E86     2     PAGE ( $ / 1024 ),
  1524            C      M 	MOV	_RC,@(131)
       01AEE 1883     1     MOV A,@( 131 )
       01AEF 004C     1     MOV  _RC ,A
  1525 01AF0 1709 C        	JMP	AppEditNumber32_edit_left
  1526            C        
  1527 01AF1      C        AppEditNumber32_edit_erase:
  1528            C      M 	SUBA	_RD,r2_cnt
       01AF1 0422     1     MOV A, R2_CNT 
       01AF2 010D     1     SUB A, _RD 
  1529            C      M 	JPNC	AppEditNumber32_edit_ret	; 光标位置在最后一个号码的下一位，无法删除当前位。
       01AF3 0E03     1     JBS  _STATUS , C 
       01AF4 16A4     1     JMP  APPEDITNUMBER32_EDIT_RET ,
  1530 01AF5 01CD C        	DEC	_RD				; 删除一个号码，长度-1
  1531            C      M 	SUBA	_RD,r2_cnt
       01AF6 0422     1     MOV A, R2_CNT 
       01AF7 010D     1     SUB A, _RD 
  1532            C      M 	JPNC	AppEditNumber32_edit_screen	; 删除最后一位号码，不需要移位，直接调整屏幕。
       01AF8 0E03     1     JBS  _STATUS , C 
       01AF9 1714     1     JMP  APPEDITNUMBER32_EDIT_SCREEN ,
  1533            C      M 	ADDA	r2_cnt,@(131)
       01AFA 1883     1     MOV A,@( 131 )
       01AFB 03A2     1     ADD A, R2_CNT 
  1534 01AFC 0053 C        	MOV	ax,A
  1535 01AFD 0056 C        	MOV	bx,A
  1536 01AFE 0553 C        	INC	ax
  1537            C      M 	SUBA	_RD,r2_cnt
       01AFF 0422     1     MOV A, R2_CNT 
       01B00 010D     1     SUB A, _RD 
  1538 01B01 0055 C        	MOV	cnt,A
  1539 01B02 0555 C        	INC	cnt
  1540            C      M 	LCALL	LibCopyRam
                      2  M  PAGE #( LIBCOPYRAM ),
       01B03 1E81     2     PAGE ( LIBCOPYRAM / 1024 ),
       01B04 1126     1     CALL ( LIBCOPYRAM % 1024 ),
                      2  M  PAGE #( $ ),
       01B05 1E86     2     PAGE ( $ / 1024 ),
  1541            C      M 	MOV	_RC,@(131)
       01B06 1883     1     MOV A,@( 131 )
       01B07 004C     1     MOV  _RC ,A
  1542 01B08 1714 C        	JMP	AppEditNumber32_edit_screen	; 光标位置不变，直接调整屏幕。
  1543            C        	
  1544            C        
  1545            C        ; 光标左移，光标左移始终有一个显示。
  1546            C        ; 如果光标所在编辑区已经到达第一个号码，无法左移。
  1547 01B09      C        AppEditNumber32_edit_left:
  1548            C      M 	SUBA	r2_cnt,@(1)
       01B09 1801     1     MOV A,@( 1 )
       01B0A 0122     1     SUB A, R2_CNT 
  1549            C      M 	JPZ	AppEditNumber32_edit_ret	; 第一个号码，无法左移。
       01B0B 0C83     1     JBC  _STATUS , Z 
       01B0C 16A4     1     JMP  APPEDITNUMBER32_EDIT_RET ,
  1550 01B0D 01E2 C        	DEC	r2_cnt				; 光标左移。
  1551 01B0E 1714 C        	JMP	AppEditNumber32_edit_screen	; 调整屏幕
  1552            C        
  1553            C        ; 光标右移，可以移动到屏幕之外，这时r2_cnt=r2_bx，显示屏上没有光标。
  1554            C        ; 如果光标已经到达最后一个号码的下一位，无法右移。
  1555 01B0F      C        AppEditNumber32_edit_right:
  1556            C      M 	SUBA	_RD,r2_cnt
       01B0F 0422     1     MOV A, R2_CNT 
       01B10 010D     1     SUB A, _RD 
  1557            C      M 	JPNC	AppEditNumber32_edit_ret	; 最后一个号码的下一位，无法右移。
       01B11 0E03     1     JBS  _STATUS , C 
       01B12 16A4     1     JMP  APPEDITNUMBER32_EDIT_RET ,
  1558 01B13 0562 C        	INC	r2_cnt				; 光标右移
  1559            C        
  1560            C        ; 调整屏幕
  1561            C        ; 保证光标处于屏幕的2~15格的范围，例外：
  1562            C        ; 1. 第一个号码，光标在屏幕的第1格
  1563            C        ; 2. 最后一个号码，光标在屏幕的第16格
  1564            C        ; 3. 最后一个号码的下一位，光标在屏幕的17格(屏幕上没有光标)
  1565 01B14      C        AppEditNumber32_edit_screen:
  1566            C      M 	SUBA	_RD,r2_bx
       01B14 0423     1     MOV A, R2_BX 
       01B15 010D     1     SUB A, _RD 
  1567            C      M 	JPNC	AppEditNumber32_edit_screen_0	; 如果屏幕位置大于有效数据长度，屏幕位置定为最后一位。
       01B16 0E03     1     JBS  _STATUS , C 
       01B17 171D     1     JMP  APPEDITNUMBER32_EDIT_SCREEN_0 ,
  1568            C      M 	SUBA	_RD,@(17)
       01B18 1811     1     MOV A,@( 17 )
       01B19 010D     1     SUB A, _RD 
  1569            C      M 	JPNC	AppEditNumber32_edit_screen_0
       01B1A 0E03     1     JBS  _STATUS , C 
       01B1B 171D     1     JMP  APPEDITNUMBER32_EDIT_SCREEN_0 ,
  1570 01B1C 171F C        	JMP	$+3
  1571 01B1D      C        AppEditNumber32_edit_screen_0:
  1572            C      M 	MOV	r2_bx,_RD
       01B1D 040D     1     MOV A, _RD 
       01B1E 0063     1     MOV  R2_BX ,A
  1573            C        	
  1574            C      M 	SUBA	r2_bx,r2_cnt
       01B1F 0422     1     MOV A, R2_CNT 
       01B20 0123     1     SUB A, R2_BX 
  1575            C      M 	JPNC	AppEditNumber32_edit_screen_2	; 光标在屏幕的右端
       01B21 0E03     1     JBS  _STATUS , C 
       01B22 1735     1     JMP  APPEDITNUMBER32_EDIT_SCREEN_2 ,
  1576 01B23 1FF1 C        	ADD	A,@(256-15)
  1577            C      M 	JPC	AppEditNumber32_edit_screen_1	; 光标在屏幕的第2格左侧
       01B24 0C03     1     JBC  _STATUS , C 
       01B25 172A     1     JMP  APPEDITNUMBER32_EDIT_SCREEN_1 ,
  1578 01B26 1F0E C        	ADD	A,@(15-1)
  1579            C      M 	JPNC	AppEditNumber32_edit_screen_2	; 光标在屏幕的第15格右侧
       01B27 0E03     1     JBS  _STATUS , C 
       01B28 1735     1     JMP  APPEDITNUMBER32_EDIT_SCREEN_2 ,
  1580 01B29 173F C        	JMP	AppEditNumber32_edit_screen_ret
  1581 01B2A      C        AppEditNumber32_edit_screen_1:			; 光标在屏幕的第2格左侧。
  1582            C      M 	SUBA	r2_cnt,@(1)
       01B2A 1801     1     MOV A,@( 1 )
       01B2B 0122     1     SUB A, R2_CNT 
  1583            C      M 	JPZ	AppEditNumber32_edit_screen_1_1	; 第一个号码
       01B2C 0C83     1     JBC  _STATUS , Z 
       01B2D 1732     1     JMP  APPEDITNUMBER32_EDIT_SCREEN_1_1 ,
  1584            C      M 	ADDA	r2_cnt,@(14)			; 光标指到第二个号码处。
       01B2E 180E     1     MOV A,@( 14 )
       01B2F 03A2     1     ADD A, R2_CNT 
  1585 01B30 0063 C        	MOV	r2_bx,A
  1586 01B31 173F C        	JMP	AppEditNumber32_edit_screen_ret
  1587 01B32      C        AppEditNumber32_edit_screen_1_1:
  1588            C      M 	MOV	r2_bx,@(16)			; 第一屏。
       01B32 1810     1     MOV A,@( 16 )
       01B33 0063     1     MOV  R2_BX ,A
  1589 01B34 173F C        	JMP	AppEditNumber32_edit_screen_ret
  1590 01B35      C        AppEditNumber32_edit_screen_2:
  1591            C      M 	SUBA	r2_cnt,_RD
       01B35 040D     1     MOV A, _RD 
       01B36 0122     1     SUB A, R2_CNT 
  1592            C      M 	JPC	AppEditNumber32_edit_screen_2_1	; 最后一个号码或最后一个号码的下一位
       01B37 0C03     1     JBC  _STATUS , C 
       01B38 173D     1     JMP  APPEDITNUMBER32_EDIT_SCREEN_2_1 ,
  1593            C      M 	ADDA	r2_cnt,@(1)			; 光标指到第15个号码处。
       01B39 1801     1     MOV A,@( 1 )
       01B3A 03A2     1     ADD A, R2_CNT 
  1594 01B3B 0063 C        	MOV	r2_bx,A
  1595 01B3C 173F C        	JMP	AppEditNumber32_edit_screen_ret
  1596 01B3D      C        AppEditNumber32_edit_screen_2_1:
  1597            C      M 	MOV	r2_bx,_RD			; 最后一屏。
       01B3D 040D     1     MOV A, _RD 
       01B3E 0063     1     MOV  R2_BX ,A
  1598 01B3F      C        AppEditNumber32_edit_screen_ret:
  1599 01B3F 1C01 C        	RETL	@(1)
  1600            C        
  1601 01B40      C        AppEditNumber32_full:
  1602            C      M 	LJMP	AppEditFull
                      2  M  PAGE #( APPEDITFULL ),
       01B40 1E8A     2     PAGE ( APPEDITFULL / 1024 ),
       01B41 17A0     1     JMP ( APPEDITFULL % 1024 ),
  1603            C        
  1604 01B42      C        AppDisplayEditNumber:
  1605            C      M 	BANK	2
       01B42 0984     1     BC  _RAM , 6 
       01B43 0BC4     1     BS  _RAM , 7 
  1606            C      M 	LCALL	VgaBlankNum2			; 消除残影。
                      2  M  PAGE #( VGABLANKNUM2 ),
       01B44 1E83     2     PAGE ( VGABLANKNUM2 / 1024 ),
       01B45 10DE     1     CALL ( VGABLANKNUM2 % 1024 ),
                      2  M  PAGE #( $ ),
       01B46 1E86     2     PAGE ( $ / 1024 ),
  1607 01B47 1882 C        	MOV	A,@(STYLE_RIGHT)
  1608            C      M 	LCALL	VgaNum2
                      2  M  PAGE #( VGANUM2 ),
       01B48 1E83     2     PAGE ( VGANUM2 / 1024 ),
       01B49 1016     1     CALL ( VGANUM2 % 1024 ),
                      2  M  PAGE #( $ ),
       01B4A 1E86     2     PAGE ( $ / 1024 ),
  1609 01B4B 00E1 C        	CLR	r2_exa
  1610 01B4C      C        AppDisplayEditNumber_loop:
  1611            C      M 	SUBA	r2_exa,r2_bx
       01B4C 0423     1     MOV A, R2_BX 
       01B4D 0121     1     SUB A, R2_EXA 
  1612            C      M 	JPZ	AppDisplayEditNumber_end
       01B4E 0C83     1     JBC  _STATUS , Z 
       01B4F 175B     1     JMP  APPDISPLAYEDITNUMBER_END ,
  1613 01B50 0561 C        	INC	r2_exa
  1614            C      M 	BLOCK	3
       01B51 1846     1     MOV A,@((( 3 << 1 )+ VALUE_IOCA ))
       01B52 000A     1     IOW  _IOCA ,
  1615            C      M 	ADDA	r2_exa,@(131)
       01B53 1883     1     MOV A,@( 131 )
       01B54 03A1     1     ADD A, R2_EXA 
  1616 01B55 004C C        	MOV	_RC,A
  1617 01B56 040D C        	MOV	A,_RD
  1618            C      M 	LCALL	VgaNum2
                      2  M  PAGE #( VGANUM2 ),
       01B57 1E83     2     PAGE ( VGANUM2 / 1024 ),
       01B58 1016     1     CALL ( VGANUM2 % 1024 ),
                      2  M  PAGE #( $ ),
       01B59 1E86     2     PAGE ( $ / 1024 ),
  1619 01B5A 174C C        	JMP	AppDisplayEditNumber_loop
  1620 01B5B      C        AppDisplayEditNumber_end:
  1621 01B5B 1800 C        	MOV	A,@(0)
  1622            C      M 	LCALL	VgaNum2
                      2  M  PAGE #( VGANUM2 ),
       01B5C 1E83     2     PAGE ( VGANUM2 / 1024 ),
       01B5D 1016     1     CALL ( VGANUM2 % 1024 ),
                      2  M  PAGE #( $ ),
       01B5E 1E86     2     PAGE ( $ / 1024 ),
  1623            C      M 	LCALL	VgaDrawNum2
                      2  M  PAGE #( VGADRAWNUM2 ),
       01B5F 1E83     2     PAGE ( VGADRAWNUM2 / 1024 ),
       01B60 1076     1     CALL ( VGADRAWNUM2 % 1024 ),
                      2  M  PAGE #( $ ),
       01B61 1E86     2     PAGE ( $ / 1024 ),
  1624            C      M 	SUBA	r2_bx,r2_cnt
       01B62 0422     1     MOV A, R2_CNT 
       01B63 0123     1     SUB A, R2_BX 
  1625            C      M 	JPNC	AppDisplayEditNumber_end0
       01B64 0E03     1     JBS  _STATUS , C 
       01B65 1769     1     JMP  APPDISPLAYEDITNUMBER_END0 ,
  1626 01B66 1D0F C        	SUB	A,@(15)
  1627 01B67 1F20 C        	ADD	A,@(0x20)
  1628 01B68 176A C        	JMP	AppDisplayEditNumber_end1
  1629 01B69      C        AppDisplayEditNumber_end0:
  1630 01B69 1800 C        	MOV	A,@(0)
  1631 01B6A      C        AppDisplayEditNumber_end1:
  1632            C      M 	LCALL	LibStoreCursor
                      2  M  PAGE #( LIBSTORECURSOR ),
       01B6A 1E81     2     PAGE ( LIBSTORECURSOR / 1024 ),
       01B6B 1079     1     CALL ( LIBSTORECURSOR % 1024 ),
                      2  M  PAGE #( $ ),
       01B6C 1E86     2     PAGE ( $ / 1024 ),
  1633 01B6D 0012 C        	RET
  1634            C        
  1635            C        
  1636            C        
  1637            C        /*************************************************
  1638            C        AppDialingExit
  1639            C        专用拨号退出程序，挂机后退出到这里，显示通话信息5s。
  1640            C        初始化:	
  1641            C        	
  1642            C        显示:	
  1643            C        待机:	1. 处理hook监测程序
  1644            C        	2. 等待5s。
  1645            C        *************************************************/
  1646 01B6E      C        AppDialingExit:
  1647            C      M 	JPB	sys_flag,PROGRAMINIT,AppDialingExit_init
       01B6E 0CDD     1     JBC  SYS_FLAG , PROGRAMINIT 
       01B6F 1773     1     JMP  APPDIALINGEXIT_INIT ,
  1648            C      M 	JPB	sys_flag,PROGRAMREIN,AppDialingExit_rein
       01B70 0D1D     1     JBC  SYS_FLAG , PROGRAMREIN 
       01B71 1775     1     JMP  APPDIALINGEXIT_REIN ,
  1649 01B72 177B C        	JMP	AppDialingExit_idle
  1650 01B73      C        AppDialingExit_init:
  1651 01B73 08DD C        	BC	sys_flag,PROGRAMINIT
  1652 01B74 1775 C        	JMP	AppDialingExit_display
  1653 01B75      C        AppDialingExit_rein:
  1654 01B75      C        AppDialingExit_display:
  1655 01B75 091D C        	BC	sys_flag,PROGRAMREIN
  1656            C      M 	BANK	2
       01B76 0984     1     BC  _RAM , 6 
       01B77 0BC4     1     BS  _RAM , 7 
  1657 01B78 00EA C        	CLR	r2_tmr_dial
  1658            C      M 	MOV	r2_tmr_dial1,@(5)
       01B79 1805     1     MOV A,@( 5 )
       01B7A 006B     1     MOV  R2_TMR_DIAL1 ,A
  1659 01B7B      C        AppDialingExit_idle:
  1660            C      M 	LCALL	LibHookCheck
                      2  M  PAGE #( LIBHOOKCHECK ),
       01B7B 1E81     2     PAGE ( LIBHOOKCHECK / 1024 ),
       01B7C 10DB     1     CALL ( LIBHOOKCHECK % 1024 ),
                      2  M  PAGE #( $ ),
       01B7D 1E86     2     PAGE ( $ / 1024 ),
  1661 01B7E 1F00 C        	ADD	A,@(0)
  1662            C      M 	JPNZ	AppDialingExit_offhook
       01B7F 0E83     1     JBS  _STATUS , Z 
       01B80 17AE     1     JMP  APPDIALINGEXIT_OFFHOOK ,
  1663            C      M 	XORA	sys_msg,@(WM_KEYPRESS)
       01B81 1801     1     MOV A,@( WM_KEYPRESS )
       01B82 031B     1     XOR A, SYS_MSG 
  1664            C      M 	JPZ	AppDialingExit_key
       01B83 0C83     1     JBC  _STATUS , Z 
       01B84 1797     1     JMP  APPDIALINGEXIT_KEY ,
  1665            C      M 	XORA	sys_msg,@(WM_COMMAND)
       01B85 1807     1     MOV A,@( WM_COMMAND )
       01B86 031B     1     XOR A, SYS_MSG 
  1666            C      M 	JPZ	AppDialingExit_command
       01B87 0C83     1     JBC  _STATUS , Z 
       01B88 179C     1     JMP  APPDIALINGEXIT_COMMAND ,
  1667 01B89      C        AppDialingExit_ret:
  1668            C      M 	BANK	2
       01B89 0984     1     BC  _RAM , 6 
       01B8A 0BC4     1     BS  _RAM , 7 
  1669 01B8B 042A C        	MOV	A,r2_tmr_dial
  1670            C      M 	JPNZ	AppDialingExit_return_1
       01B8C 0E83     1     JBS  _STATUS , Z 
       01B8D 1796     1     JMP  APPDIALINGEXIT_RETURN_1 ,
  1671 01B8E 042B C        	MOV	A,r2_tmr_dial1
  1672            C      M 	JPNZ	AppDialingExit_return_1
       01B8F 0E83     1     JBS  _STATUS , Z 
       01B90 1796     1     JMP  APPDIALINGEXIT_RETURN_1 ,
  1673 01B91      C        AppDialingExit_return:
  1674            C      M 	PAGE	#(LibPushStack)
       01B91 1E81     1     PAGE ( LIBPUSHSTACK / 1024 ),
  1675 01B92 1020 C        	CALL	LibClearStack
  1676 01B93 1801 C        	MOV	A,@(PRO_AppIdle)
  1677 01B94 1000 C        	CALL	LibPushProgram
  1678            C      M 	PAGE	#(0)
       01B95 1E80     1     PAGE ( 0 / 1024 ),
  1679 01B96      C        AppDialingExit_return_1:
  1680 01B96 1C00 C        	RETL	@(0)
  1681 01B97      C        AppDialingExit_key:
  1682            C      M 	XORA	sys_data,@(KEY_EXIT)
       01B97 1816     1     MOV A,@( KEY_EXIT )
       01B98 031C     1     XOR A, SYS_DATA 
  1683            C      M 	JPZ	AppDialingExit_return
       01B99 0C83     1     JBC  _STATUS , Z 
       01B9A 1791     1     JMP  APPDIALINGEXIT_RETURN ,
  1684 01B9B 1789 C        	JMP	AppDialingExit_ret
  1685 01B9C      C        AppDialingExit_command:
  1686            C      M 	XORA	sys_data,@(0x19)
       01B9C 1819     1     MOV A,@( 25 )
       01B9D 031C     1     XOR A, SYS_DATA 
  1687            C      M 	JPZ	AppDialingExit_ringin
       01B9E 0C83     1     JBC  _STATUS , Z 
       01B9F 17AC     1     JMP  APPDIALINGEXIT_RINGIN ,
  1688            C      M 	XORA	sys_data,@(0x1a)
       01BA0 181A     1     MOV A,@( 26 )
       01BA1 031C     1     XOR A, SYS_DATA 
  1689            C      M 	JPZ	AppDialingExit_cid
       01BA2 0C83     1     JBC  _STATUS , Z 
       01BA3 17A5     1     JMP  APPDIALINGEXIT_CID ,
  1690 01BA4 1789 C        	JMP	AppDialingExit_ret
  1691 01BA5      C        AppDialingExit_cid:
  1692 01BA5 1801 C        	MOV	A,@(0x01)
  1693            C      M 	LCALL	LibGetCommand
                      2  M  PAGE #( LIBGETCOMMAND ),
       01BA6 1E81     2     PAGE ( LIBGETCOMMAND / 1024 ),
       01BA7 12B6     1     CALL ( LIBGETCOMMAND % 1024 ),
                      2  M  PAGE #( $ ),
       01BA8 1E86     2     PAGE ( $ / 1024 ),
  1694 01BA9 1F00 C        	ADD	A,@(0x00)
  1695            C      M 	JPNZ	AppDialingExit_ret
       01BAA 0E83     1     JBS  _STATUS , Z 
       01BAB 1789     1     JMP  APPDIALINGEXIT_RET ,
  1696 01BAC      C        AppDialingExit_ringin:
  1697 01BAC 00D8 C        	CLR	program
  1698 01BAD 1C01 C        	RETL	@(1)
  1699 01BAE      C        AppDialingExit_offhook:
  1700 01BAE 1802 C        	MOV	A,@(PRO_AppDialingPhone)		; 电话摘机，进入拨号程序
  1701            C      M 	LCALL	LibPushProgram
                      2  M  PAGE #( LIBPUSHPROGRAM ),
       01BAF 1E81     2     PAGE ( LIBPUSHPROGRAM / 1024 ),
       01BB0 1000     1     CALL ( LIBPUSHPROGRAM % 1024 ),
                      2  M  PAGE #( $ ),
       01BB1 1E86     2     PAGE ( $ / 1024 ),
  1702 01BB2 1C00 C        	RETL	@(0)
  1703            C        
  1704            C        
  1705            C        
  1706            C        ORG	0x1c00
  1707            C        
  1708            C        
  1709 01C00      C        AppMenuTab:
  1710 01C00 0020 C        	TBL
  1711            C        ; main menu
  1712            C      M 	DB	4,PRO_AppMenuMain	; 第一条是长度和本程序的ID
       01C01 1C04     1     RETL @( 4 ),
       01C02 1C08     1     RETL @( PRO_APPMENUMAIN ),
  1713            C      M 	DB	STR_CallList,PRO_AppCallList
       01C03 1C01     1     RETL @( STR_CALLLIST ),
       01C04 1C09     1     RETL @( PRO_APPCALLLIST ),
  1714            C      M 	DB	STR_PhoneBook,PRO_AppMenuPhoneBook
       01C05 1C02     1     RETL @( STR_PHONEBOOK ),
       01C06 1C0A     1     RETL @( PRO_APPMENUPHONEBOOK ),
  1715            C      M 	DB	STR_SystemSetting,PRO_AppMenuSystemSetting
       01C07 1C05     1     RETL @( STR_SYSTEMSETTING ),
       01C08 1C0C     1     RETL @( PRO_APPMENUSYSTEMSETTING ),
  1716            C      M 	DB	STR_DAM,PRO_AppMenuDAM
       01C09 1C06     1     RETL @( STR_DAM ),
       01C0A 1C0D     1     RETL @( PRO_APPMENUDAM ),
  1717            C        ; Phone book
  1718            C      M 	DB	3,PRO_AppMenuPhoneBook
       01C0B 1C03     1     RETL @( 3 ),
       01C0C 1C0A     1     RETL @( PRO_APPMENUPHONEBOOK ),
  1719            C      M 	DB	STR_BrowsePhonebook,PRO_AppBrowsePbook
       01C0D 1C0B     1     RETL @( STR_BROWSEPHONEBOOK ),
       01C0E 1C17     1     RETL @( PRO_APPBROWSEPBOOK ),
  1720            C      M 	DB	STR_EditPhonebook,PRO_AppNewBook
       01C0F 1C0E     1     RETL @( STR_EDITPHONEBOOK ),
       01C10 1C18     1     RETL @( PRO_APPNEWBOOK ),
  1721            C      M 	DB	STR_Deleteall,PRO_AppDeleteBook
       01C11 1C0F     1     RETL @( STR_DELETEALL ),
       01C12 1C19     1     RETL @( PRO_APPDELETEBOOK ),
  1722            C        ; System setting
  1723            C      M 	DB	5,PRO_AppMenuSystemSetting
       01C13 1C05     1     RETL @( 5 ),
       01C14 1C0C     1     RETL @( PRO_APPMENUSYSTEMSETTING ),
  1724            C      M 	DB	STR_ClockSetting,PRO_AppSetClock
       01C15 1C12     1     RETL @( STR_CLOCKSETTING ),
       01C16 1C1C     1     RETL @( PRO_APPSETCLOCK ),
  1725            C      M 	DB	STR_DateSetting,PRO_AppSetDate
       01C17 1C36     1     RETL @( STR_DATESETTING ),
       01C18 1C34     1     RETL @( PRO_APPSETDATE ),
  1726            C      M 	DB	STR_PhoneSetting,PRO_AppMenuPhoneSetting
       01C19 1C13     1     RETL @( STR_PHONESETTING ),
       01C1A 1C0E     1     RETL @( PRO_APPMENUPHONESETTING ),
  1727            C      M 	DB	STR_DAMSetting,PRO_AppSetDam
       01C1B 1C37     1     RETL @( STR_DAMSETTING ),
       01C1C 1C35     1     RETL @( PRO_APPSETDAM ),
  1728            C      M 	DB	STR_RestoreDefault,PRO_AppRestoreDefault
       01C1D 1C14     1     RETL @( STR_RESTOREDEFAULT ),
       01C1E 1C1D     1     RETL @( PRO_APPRESTOREDEFAULT ),
  1729            C        ; Phone Setting
  1730            C      M 	DB	6,PRO_AppMenuPhoneSetting
       01C1F 1C06     1     RETL @( 6 ),
       01C20 1C0E     1     RETL @( PRO_APPMENUPHONESETTING ),
  1731            C      M 	DB	STR_Ringmelody,PRO_AppSetRingMelody
       01C21 1C17     1     RETL @( STR_RINGMELODY ),
       01C22 1C1E     1     RETL @( PRO_APPSETRINGMELODY ),
  1732            C      M 	DB	STR_Ringvolume,PRO_AppSetRingVolume
       01C23 1C18     1     RETL @( STR_RINGVOLUME ),
       01C24 1C1F     1     RETL @( PRO_APPSETRINGVOLUME ),
  1733            C      M 	DB	STR_Areacode,PRO_AppSetAreaCode
       01C25 1C19     1     RETL @( STR_AREACODE ),
       01C26 1C20     1     RETL @( PRO_APPSETAREACODE ),
  1734            C      M 	DB	STR_Flashtime,PRO_AppSetFlashTime
       01C27 1C1A     1     RETL @( STR_FLASHTIME ),
       01C28 1C21     1     RETL @( PRO_APPSETFLASHTIME ),
  1735            C      M 	DB	STR_Pausetime,PRO_AppSetPauseTime
       01C29 1C1B     1     RETL @( STR_PAUSETIME ),
       01C2A 1C22     1     RETL @( PRO_APPSETPAUSETIME ),
  1736            C      M 	DB	STR_LCDcontrast,PRO_AppSetLcdContrast
       01C2B 1C1C     1     RETL @( STR_LCDCONTRAST ),
       01C2C 1C23     1     RETL @( PRO_APPSETLCDCONTRAST ),
  1737            C        ; Digital Answering Machine
  1738            C      M 	DB	3,PRO_AppMenuDAM
       01C2D 1C03     1     RETL @( 3 ),
       01C2E 1C0D     1     RETL @( PRO_APPMENUDAM ),
  1739            C      M 	DB	STR_Play,PRO_AppPlay
       01C2F 1C15     1     RETL @( STR_PLAY ),
       01C30 1C25     1     RETL @( PRO_APPPLAY ),
  1740            C      M 	DB	STR_Record,PRO_AppMenuRecord
       01C31 1C16     1     RETL @( STR_RECORD ),
       01C32 1C0F     1     RETL @( PRO_APPMENURECORD ),
  1741            C      M 	DB	STR_Deleteall,PRO_AppDeleteAllMsg
       01C33 1C0F     1     RETL @( STR_DELETEALL ),
       01C34 1C26     1     RETL @( PRO_APPDELETEALLMSG ),
  1742            C        ; record
  1743            C      M 	DB	3,PRO_AppMenuRecord
       01C35 1C03     1     RETL @( 3 ),
       01C36 1C0F     1     RETL @( PRO_APPMENURECORD ),
  1744            C      M 	DB	STR_MemoRecord,PRO_AppMemoRecord
       01C37 1C1E     1     RETL @( STR_MEMORECORD ),
       01C38 1C27     1     RETL @( PRO_APPMEMORECORD ),
  1745            C      M 	DB	STR_OGM1record,PRO_AppOgm1Record
       01C39 1C1F     1     RETL @( STR_OGM1RECORD ),
       01C3A 1C28     1     RETL @( PRO_APPOGM1RECORD ),
  1746            C      M 	DB	STR_OGM2record,PRO_AppOgm2Record
       01C3B 1C20     1     RETL @( STR_OGM2RECORD ),
       01C3C 1C29     1     RETL @( PRO_APPOGM2RECORD ),
  1747            C        ; Recorder ON
  1748            C      M 	DB	4,PRO_AppMenuRecorderOn
       01C3D 1C04     1     RETL @( 4 ),
       01C3E 1C11     1     RETL @( PRO_APPMENURECORDERON ),
  1749            C      M 	DB	STR_Setringdelay,PRO_AppSetRingDelay
       01C3F 1C3A     1     RETL @( STR_SETRINGDELAY ),
       01C40 1C36     1     RETL @( PRO_APPSETRINGDELAY ),
  1750            C      M 	DB	STR_Setremotecode,PRO_AppSetRemoteCode
       01C41 1C3B     1     RETL @( STR_SETREMOTECODE ),
       01C42 1C37     1     RETL @( PRO_APPSETREMOTECODE ),
  1751            C      M 	DB	STR_Setrecordtime,PRO_AppSetRecordTime
       01C43 1C3C     1     RETL @( STR_SETRECORDTIME ),
       01C44 1C38     1     RETL @( PRO_APPSETRECORDTIME ),
  1752            C      M 	DB	STR_SetOGM,PRO_AppOgmSelect
       01C45 1C3D     1     RETL @( STR_SETOGM ),
       01C46 1C2A     1     RETL @( PRO_APPOGMSELECT ),
  1753            C        
  1754            C        /*************************************************
  1755            C        AppMenuMain
  1756            C        主菜单
  1757            C        初始化:	
  1758            C        	
  1759            C        显示:	
  1760            C        待机:	1. Call List
  1761            C        	2. Phone Book
  1762            C        	3. System Setting
  1763            C        	4. Digital Answering Machine
  1764            C        *************************************************/
  1765 01C47      C        AppMenuMain:
  1766 01C47 1800 C        	MOV	A,@(0)
  1767 01C48 1455 C        	JMP	AppMenu
  1768            C        
  1769            C        /*************************************************
  1770            C        AppMenuPhoneBook
  1771            C        主菜单
  1772            C        初始化:	
  1773            C        	
  1774            C        显示:	
  1775            C        待机:	1. Browse Phonebook
  1776            C        	2. Edit Phonebook
  1777            C        	3. Delete all
  1778            C        *************************************************/
  1779 01C49      C        AppMenuPhoneBook:
  1780 01C49 1805 C        	MOV	A,@(5)
  1781 01C4A 1455 C        	JMP	AppMenu
  1782            C        
  1783            C        /*************************************************
  1784            C        AppMenuSystemSetting
  1785            C        主菜单
  1786            C        初始化:	
  1787            C        	
  1788            C        显示:	
  1789            C        待机:	1. Clock Setting
  1790            C        	2. Date Setting
  1791            C        	3. Phone Setting
  1792            C        	4. DAM Setting
  1793            C        	5. Restore Default
  1794            C        *************************************************/
  1795 01C4B      C        AppMenuSystemSetting:
  1796 01C4B 1809 C        	MOV	A,@(9)
  1797 01C4C 1455 C        	JMP	AppMenu
  1798            C        
  1799            C        /*************************************************
  1800            C        AppMenuPhoneSetting
  1801            C        主菜单
  1802            C        初始化:	
  1803            C        	
  1804            C        显示:	
  1805            C        待机:	1. Ring melody
  1806            C        	2. Ring volume
  1807            C        	3. Area code
  1808            C        	4. Flash time
  1809            C        	5. Pause time
  1810            C        	6. LCD contrast
  1811            C        *************************************************/
  1812 01C4D      C        AppMenuPhoneSetting:
  1813 01C4D 180F C        	MOV	A,@(15)
  1814 01C4E 1455 C        	JMP	AppMenu
  1815            C        
  1816            C        /*************************************************
  1817            C        AppMenuDAM
  1818            C        主菜单
  1819            C        初始化:	
  1820            C        	
  1821            C        显示:	
  1822            C        待机:	1. Play
  1823            C        	2. Record
  1824            C        	3. Delete all
  1825            C        *************************************************/
  1826 01C4F      C        AppMenuDAM:
  1827 01C4F 1816 C        	MOV	A,@(22)
  1828 01C50 1455 C        	JMP	AppMenu
  1829            C        
  1830            C        /*************************************************
  1831            C        AppMenuRecord
  1832            C        主菜单
  1833            C        初始化:	
  1834            C        	
  1835            C        显示:	
  1836            C        待机:	1. Memo Record
  1837            C        	2. OGM 1 record
  1838            C        	3. OGM 2 record
  1839            C        *************************************************/
  1840 01C51      C        AppMenuRecord:
  1841 01C51 181A C        	MOV	A,@(26)
  1842 01C52 1455 C        	JMP	AppMenu
  1843            C        
  1844            C        /*************************************************
  1845            C        AppMenuRecorderOn
  1846            C        主菜单
  1847            C        初始化:	
  1848            C        	
  1849            C        显示:	
  1850            C        待机:	1. Set ring delay
  1851            C        	2. Set remote code
  1852            C        	3. Set record time
  1853            C        	4. Set OGM
  1854            C        *************************************************/
  1855 01C53      C        AppMenuRecorderOn:
  1856 01C53 181E C        	MOV	A,@(30)
  1857 01C54 1455 C        	JMP	AppMenu
  1858            C        
  1859            C        /*************************************************
  1860            C        AppMenu
  1861            C        input:	acc	-- Table address
  1862            C        input:	r2_ax -- 菜单栏的显示字符串ID.
  1863            C        	r2_bx -- 按下ENTER键后进入的程序ID
  1864            C        	r2_cnt -- 菜单栏长度(共多少个可选菜单)
  1865            C        	r2_exb -- 本程序的程序ID(用于返回)
  1866            C        *************************************************/
  1867 01C55      C        AppMenu:
  1868            C      M 	BANK	2
       01C55 0984     1     BC  _RAM , 6 
       01C56 0BC4     1     BS  _RAM , 7 
  1869 01C57 0060 C        	MOV	r2_ax,A
  1870            C      M 	JPB	sys_flag,PROGRAMINIT,AppMenu_init
       01C58 0CDD     1     JBC  SYS_FLAG , PROGRAMINIT 
       01C59 145E     1     JMP  APPMENU_INIT ,
  1871            C      M 	JPB	sys_flag,PROGRAMREIN,AppMenu_rein
       01C5A 0D1D     1     JBC  SYS_FLAG , PROGRAMREIN 
       01C5B 1461     1     JMP  APPMENU_REIN ,
  1872 01C5C 1800 C        	MOV	A,@(0)
  1873 01C5D 146C C        	JMP	AppMenu_idle
  1874 01C5E      C        AppMenu_init:
  1875 01C5E 00FE C        	CLR	r2_id
  1876 01C5F 08DD C        	BC	sys_flag,PROGRAMINIT
  1877 01C60 146A C        	JMP	AppMenu_display
  1878 01C61      C        AppMenu_rein:
  1879            C      M 	PAGE	#(LibPushStack)
       01C61 1E81     1     PAGE ( LIBPUSHSTACK / 1024 ),
  1880 01C62 100C C        	CALL	LibPopStack
  1881 01C63 007E C        	MOV	r2_id,A
  1882 01C64 100C C        	CALL	LibPopStack
  1883 01C65 1079 C        	CALL	LibStoreCursor
  1884            C      M 	PAGE	#(VGA)
       01C66 1E83     1     PAGE ( VGA / 1024 ),
  1885 01C67 10DE C        	CALL	VgaBlankNum2
  1886 01C68 10E0 C        	CALL	VgaBlankChar
  1887            C      M 	PAGE	#($)
       01C69 1E87     1     PAGE ( $ / 1024 ),
  1888 01C6A      C        AppMenu_display:
  1889            C        	
  1890 01C6A 091D C        	BC	sys_flag,PROGRAMREIN
  1891 01C6B 1801 C        	MOV	A,@(1)
  1892 01C6C      C        AppMenu_idle:
  1893 01C6C 0053 C        	MOV	ax,A
  1894 01C6D 06A0 C        	RLCA	r2_ax
  1895 01C6E 1AFE C        	AND	A,@(0xfe)
  1896 01C6F 0056 C        	MOV	bx,A
  1897 01C70 1000 C        	CALL	AppMenuTab
  1898 01C71 0062 C        	MOV	r2_cnt,A
  1899 01C72 0413 C        	MOV	A,ax
  1900            C        
  1901            C        
  1902            C        ; input:	acc r2_ax,r2_bx,r2_cnt
  1903            C        ; output:	0 -- none
  1904            C        ;		!0 -- 该menu_id被确认，要求进入该menu_id的程序
  1905 01C73      C        AppMenuList:
  1906            C      M 	JPNZ	AppMenuList_display
       01C73 0E83     1     JBS  _STATUS , Z 
       01C74 14A9     1     JMP  APPMENULIST_DISPLAY ,
  1907            C      M 	XORA	sys_msg,@(WM_KEYPRESS)
       01C75 1801     1     MOV A,@( WM_KEYPRESS )
       01C76 031B     1     XOR A, SYS_MSG 
  1908            C      M 	JPZ	AppMenuList_key
       01C77 0C83     1     JBC  _STATUS , Z 
       01C78 147A     1     JMP  APPMENULIST_KEY ,
  1909 01C79 1C00 C        	RETL	@(0)
  1910 01C7A      C        AppMenuList_key:
  1911            C      M 	BANK	2
       01C7A 0984     1     BC  _RAM , 6 
       01C7B 0BC4     1     BS  _RAM , 7 
  1912            C      M 	XORA	sys_data,@(KEY_UP)
       01C7C 1824     1     MOV A,@( KEY_UP )
       01C7D 031C     1     XOR A, SYS_DATA 
  1913            C      M 	JPZ	AppMenuList_up
       01C7E 0C83     1     JBC  _STATUS , Z 
       01C7F 148D     1     JMP  APPMENULIST_UP ,
  1914            C      M 	XORA	sys_data,@(KEY_DOWN)
       01C80 1825     1     MOV A,@( KEY_DOWN )
       01C81 031C     1     XOR A, SYS_DATA 
  1915            C      M 	JPZ	AppMenuList_down
       01C82 0C83     1     JBC  _STATUS , Z 
       01C83 1494     1     JMP  APPMENULIST_DOWN ,
  1916            C      M 	XORA	sys_data,@(KEY_ENTER)
       01C84 1830     1     MOV A,@( KEY_ENTER )
       01C85 031C     1     XOR A, SYS_DATA 
  1917            C      M 	JPZ	AppMenuList_enter
       01C86 0C83     1     JBC  _STATUS , Z 
       01C87 149B     1     JMP  APPMENULIST_ENTER ,
  1918            C      M 	XORA	sys_data,@(KEY_EXIT)
       01C88 1816     1     MOV A,@( KEY_EXIT )
       01C89 031C     1     XOR A, SYS_DATA 
  1919            C      M 	JPZ	AppMenuList_exit
       01C8A 0C83     1     JBC  _STATUS , Z 
       01C8B 14A7     1     JMP  APPMENULIST_EXIT ,
  1920 01C8C 1C00 C        	RETL	@(0)
  1921 01C8D      C        AppMenuList_up:
  1922 01C8D 057E C        	INC	r2_id
  1923            C        	
  1924            C      M 	SUBA	r2_id,r2_cnt
       01C8E 0422     1     MOV A, R2_CNT 
       01C8F 013E     1     SUB A, R2_ID 
  1925            C      M 	JPNC	$+2
       01C90 0E03     1     JBS  _STATUS , C 
       01C91 1493     1     JMP ( $ + 2 ),
  1926 01C92 00FE C        	CLR	r2_id
  1927 01C93 14A9 C        	JMP	AppMenuList_display
  1928            C        	
  1929 01C94      C        AppMenuList_down:
  1930 01C94 043E C        	MOV	A,r2_id
  1931            C      M 	JPNZ	$+3
       01C95 0E83     1     JBS  _STATUS , Z 
       01C96 1499     1     JMP ( $ + 3 ),
  1932            C      M 	MOV	r2_id,r2_cnt
       01C97 0422     1     MOV A, R2_CNT 
       01C98 007E     1     MOV  R2_ID ,A
  1933 01C99 01FE C        	DEC	r2_id
  1934 01C9A 14A9 C        	JMP	AppMenuList_display
  1935            C        	
  1936 01C9B      C        AppMenuList_enter:
  1937 01C9B 10BE C        	CALL	AppMenuData
  1938            C        	
  1939            C      M 	PAGE	#(LibPushStack)
       01C9C 1E81     1     PAGE ( LIBPUSHSTACK / 1024 ),
  1940 01C9D 0419 C        	MOV	A,cursor
  1941 01C9E 1002 C        	CALL	LibPushStack
  1942 01C9F 043E C        	MOV	A,r2_id
  1943 01CA0 1002 C        	CALL	LibPushStack
  1944 01CA1 0424 C        	MOV	A,r2_exb
  1945 01CA2 1002 C        	CALL	LibPushStack
  1946 01CA3 0423 C        	MOV	A,r2_bx
  1947 01CA4 1000 C        	CALL	LibPushProgram
  1948            C      M 	PAGE	#($)
       01CA5 1E87     1     PAGE ( $ / 1024 ),
  1949 01CA6 1C00 C        	RETL	@(0)
  1950 01CA7      C        AppMenuList_exit:
  1951 01CA7 00D8 C        	CLR	program
  1952 01CA8 1C00 C        	RETL	@(0)
  1953 01CA9      C        AppMenuList_display:
  1954 01CA9 10BE C        	CALL	AppMenuData
  1955            C        
  1956            C      M 	PAGE	#(VGA)
       01CAA 1E83     1     PAGE ( VGA / 1024 ),
  1957 01CAB 10DE C        	CALL	VgaBlankNum2
  1958 01CAC 10E0 C        	CALL	VgaBlankChar
  1959 01CAD 1881 C        	MOV	A,@(STYLE_LEFT)
  1960 01CAE 1016 C        	CALL	VgaNum2
  1961            C      M 	ADDA	r2_id,@(49)
       01CAF 1831     1     MOV A,@( 49 )
       01CB0 03BE     1     ADD A, R2_ID 
  1962 01CB1 1016 C        	CALL	VgaNum2
  1963 01CB2 1800 C        	MOV	A,@(0)
  1964 01CB3 1016 C        	CALL	VgaNum2
  1965 01CB4 1076 C        	CALL	VgaDrawNum2
  1966 01CB5 1881 C        	MOV	A,@(STYLE_LEFT)
  1967 01CB6 101C C        	CALL	VgaChar
  1968 01CB7 0420 C        	MOV	A,r2_ax
  1969 01CB8 114B C        	CALL	VgaString
  1970 01CB9 1800 C        	MOV	A,@(0)
  1971 01CBA 101C C        	CALL	VgaChar
  1972 01CBB 1078 C        	CALL	VgaDrawChar
  1973            C      M 	PAGE	#($)
       01CBC 1E87     1     PAGE ( $ / 1024 ),
  1974 01CBD 1C00 C        	RETL	@(0)
  1975            C        
  1976 01CBE      C        AppMenuData:
  1977 01CBE 0556 C        	INC	bx
  1978 01CBF 0416 C        	MOV	A,bx
  1979 01CC0 1000 C        	CALL	AppMenuTab
  1980 01CC1 0064 C        	MOV	r2_exb,A
  1981 01CC2 0556 C        	INC	bx
  1982 01CC3 06BE C        	RLCA	r2_id
  1983 01CC4 1AFE C        	AND	A,@(0xfe)
  1984 01CC5 03D6 C        	ADD	bx,A
  1985 01CC6 0416 C        	MOV	A,bx
  1986 01CC7 1000 C        	CALL	AppMenuTab
  1987 01CC8 0060 C        	MOV	r2_ax,A
  1988 01CC9 0556 C        	INC	bx
  1989 01CCA 0416 C        	MOV	A,bx
  1990 01CCB 1000 C        	CALL	AppMenuTab
  1991 01CCC 0063 C        	MOV	r2_bx,A
  1992 01CCD 0012 C        	RET
  1993            C        
  1994            C        
  1995            C        /*************************************************
  1996            C        AppMenuPhone
  1997            C        在查看号码时按下menu键出现以下菜单:
  1998            C        1. Pre-dial
  1999            C        2. HF dialing
  2000            C        3. To Phonebook
  2001            C        4. Delete?
  2002            C        5. Delete all?
  2003            C        *************************************************/
  2004 01CCE      C        AppMenuPhone:
  2005            C      M 	BANK	3
       01CCE 0B84     1     BS  _RAM , 6 
       01CCF 0BC4     1     BS  _RAM , 7 
  2006            C      M 	JPB	sys_flag,PROGRAMINIT,AppMenuPhone_init
       01CD0 0CDD     1     JBC  SYS_FLAG , PROGRAMINIT 
       01CD1 14D5     1     JMP  APPMENUPHONE_INIT ,
  2007            C      M 	JPB	sys_flag,PROGRAMREIN,AppMenuPhone_rein
       01CD2 0D1D     1     JBC  SYS_FLAG , PROGRAMREIN 
       01CD3 14DA     1     JMP  APPMENUPHONE_REIN ,
  2008 01CD4 14DB C        	JMP	AppMenuPhone_idle
  2009 01CD5      C        AppMenuPhone_init:
  2010 01CD5 08DD C        	BC	sys_flag,PROGRAMINIT
  2011 01CD6 00FE C        	CLR	r3_id
  2012 01CD7 00FF C        	CLR	r3_flag
  2013 01CD8 00FD C        	CLR	r3_callmenu
  2014 01CD9 14DA C        	JMP	AppMenuPhone_display
  2015 01CDA      C        AppMenuPhone_rein:
  2016 01CDA      C        AppMenuPhone_display:
  2017 01CDA 1107 C        	CALL	AppMenuPhoneDisplay
  2018 01CDB      C        AppMenuPhone_idle:
  2019            C      M 	XORA	sys_msg,@(WM_KEYPRESS)
       01CDB 1801     1     MOV A,@( WM_KEYPRESS )
       01CDC 031B     1     XOR A, SYS_MSG 
  2020            C      M 	JPZ	AppMenuPhone_key
       01CDD 0C83     1     JBC  _STATUS , Z 
       01CDE 14E0     1     JMP  APPMENUPHONE_KEY ,
  2021 01CDF 1C00 C        	RETL	@(0)
  2022 01CE0      C        AppMenuPhone_key:
  2023            C      M 	XORA	sys_data,@(KEY_UP)
       01CE0 1824     1     MOV A,@( KEY_UP )
       01CE1 031C     1     XOR A, SYS_DATA 
  2024            C      M 	JPZ	AppMenuPhone_up
       01CE2 0C83     1     JBC  _STATUS , Z 
       01CE3 14F1     1     JMP  APPMENUPHONE_UP ,
  2025            C      M 	XORA	sys_data,@(KEY_DOWN)
       01CE4 1825     1     MOV A,@( KEY_DOWN )
       01CE5 031C     1     XOR A, SYS_DATA 
  2026            C      M 	JPZ	AppMenuPhone_down
       01CE6 0C83     1     JBC  _STATUS , Z 
       01CE7 14F8     1     JMP  APPMENUPHONE_DOWN ,
  2027            C      M 	XORA	sys_data,@(KEY_EXIT)
       01CE8 1816     1     MOV A,@( KEY_EXIT )
       01CE9 031C     1     XOR A, SYS_DATA 
  2028            C      M 	JPZ	AppMenuPhone_exit
       01CEA 0C83     1     JBC  _STATUS , Z 
       01CEB 14FF     1     JMP  APPMENUPHONE_EXIT ,
  2029            C      M 	XORA	sys_data,@(KEY_OK)
       01CEC 1830     1     MOV A,@( KEY_OK )
       01CED 031C     1     XOR A, SYS_DATA 
  2030            C      M 	JPZ	AppMenuPhone_ok
       01CEE 0C83     1     JBC  _STATUS , Z 
       01CEF 1515     1     JMP  APPMENUPHONE_OK ,
  2031 01CF0 1C00 C        	RETL	@(0)
  2032 01CF1      C        AppMenuPhone_up:
  2033 01CF1 057E C        	INC	r3_id
  2034            C      M 	SUBA	r3_id,@(5)
       01CF2 1805     1     MOV A,@( 5 )
       01CF3 013E     1     SUB A, R3_ID 
  2035            C      M 	JPNC	AppMenuPhoneDisplay
       01CF4 0E03     1     JBS  _STATUS , C 
       01CF5 1507     1     JMP  APPMENUPHONEDISPLAY ,
  2036 01CF6 00FE C        	CLR	r3_id
  2037 01CF7 1507 C        	JMP	AppMenuPhoneDisplay
  2038 01CF8      C        AppMenuPhone_down:
  2039 01CF8 043E C        	MOV	A,r3_id
  2040            C      M 	JPNZ	$+3
       01CF9 0E83     1     JBS  _STATUS , Z 
       01CFA 14FD     1     JMP ( $ + 3 ),
  2041            C      M 	MOV	r3_id,@(5)
       01CFB 1805     1     MOV A,@( 5 )
       01CFC 007E     1     MOV  R3_ID ,A
  2042 01CFD 01FE C        	DEC	r3_id
  2043 01CFE 1507 C        	JMP	AppMenuPhoneDisplay
  2044 01CFF      C        AppMenuPhone_exit:
  2045 01CFF 00D8 C        	CLR	program
  2046 01D00 1C00 C        	RETL	@(0)
  2047 01D01      C        TabAppMenuPhoneDisplay:
  2048 01D01 0020 C        	TBL
  2049 01D02 1C21 C        	RETL	@(STR_PreHFdial)
  2050 01D03 1C1D C        	RETL	@(STR_HFDialing)
  2051 01D04 1C4C C        	RETL	@(STR_ToPhonebook)
  2052 01D05 1C0A C        	RETL	@(STR_Delete)
  2053 01D06 1C0F C        	RETL	@(STR_Deleteall)
  2054 01D07      C        AppMenuPhoneDisplay:
  2055 01D07 043E C        	MOV	A,r3_id
  2056 01D08 1101 C        	CALL	TabAppMenuPhoneDisplay
  2057 01D09 0060 C        	MOV	r3_ax,A
  2058            C      M 	PAGE	#(VGA)
       01D0A 1E83     1     PAGE ( VGA / 1024 ),
  2059 01D0B 10E0 C        	CALL	VgaBlankChar
  2060 01D0C 1881 C        	MOV	A,@(STYLE_LEFT)
  2061 01D0D 101C C        	CALL	VgaChar
  2062 01D0E 0420 C        	MOV	A,r3_ax
  2063 01D0F 114B C        	CALL	VgaString
  2064 01D10 1800 C        	MOV	A,@(0)
  2065 01D11 101C C        	CALL	VgaChar
  2066 01D12 1078 C        	CALL	VgaDrawChar
  2067            C      M 	PAGE	#($)
       01D13 1E87     1     PAGE ( $ / 1024 ),
  2068 01D14 1C00 C        	RETL	@(0)
  2069 01D15      C        AppMenuPhone_ok:
  2070 01D15 043E C        	MOV	A,r3_id
  2071 01D16 0020 C        	TBL
  2072 01D17 151C C        	JMP	AppMenuPhone_predial
  2073 01D18 1521 C        	JMP	AppMenuPhone_hfdial
  2074 01D19 153C C        	JMP	AppMenuPhone_tophonebook
  2075 01D1A 1541 C        	JMP	AppMenuPhone_delete
  2076 01D1B 1543 C        	JMP	AppMenuPhone_deleteall
  2077 01D1C      C        AppMenuPhone_predial:
  2078 01D1C 1804 C        	MOV	A,@(PRO_AppPreDial)
  2079            C      M 	LCALL	LibPushProgram
                      2  M  PAGE #( LIBPUSHPROGRAM ),
       01D1D 1E81     2     PAGE ( LIBPUSHPROGRAM / 1024 ),
       01D1E 1000     1     CALL ( LIBPUSHPROGRAM % 1024 ),
                      2  M  PAGE #( $ ),
       01D1F 1E87     2     PAGE ( $ / 1024 ),
  2080 01D20 1C00 C        	RETL	@(0)
  2081 01D21      C        AppMenuPhone_hfdial:
  2082            C      M 	BLOCK	3
       01D21 1846     1     MOV A,@((( 3 << 1 )+ VALUE_IOCA ))
       01D22 000A     1     IOW  _IOCA ,
  2083 01D23 1883 C        	MOV	A,@(131)
  2084            C      M 	MOV	bx,_RD
       01D24 040D     1     MOV A, _RD 
       01D25 0056     1     MOV  BX ,A
  2085 01D26 00D5 C        	CLR	cnt
  2086 01D27      C        AppMenuPhone_hfdial_0:
  2087            C      M 	SUBA	cnt,bx
       01D27 0416     1     MOV A, BX 
       01D28 0115     1     SUB A, CNT 
  2088            C      M 	JPZ	AppMenuPhone_hfdial_1
       01D29 0C83     1     JBC  _STATUS , Z 
       01D2A 1536     1     JMP  APPMENUPHONE_HFDIAL_1 ,
  2089            C      M 	ADDA	cnt,@(132)
       01D2B 1884     1     MOV A,@( 132 )
       01D2C 0395     1     ADD A, CNT 
  2090 01D2D 004C C        	MOV	_RC,A
  2091 01D2E 040D C        	MOV	A,_RD
  2092            C      M 	JPZ	AppMenuPhone_hfdial_1
       01D2F 0C83     1     JBC  _STATUS , Z 
       01D30 1536     1     JMP  APPMENUPHONE_HFDIAL_1 ,
  2093            C      M 	LCALL	LibStoreDialNumber
                      2  M  PAGE #( LIBSTOREDIALNUMBER ),
       01D31 1E81     2     PAGE ( LIBSTOREDIALNUMBER / 1024 ),
       01D32 109A     1     CALL ( LIBSTOREDIALNUMBER % 1024 ),
                      2  M  PAGE #( $ ),
       01D33 1E87     2     PAGE ( $ / 1024 ),
  2094 01D34 0555 C        	INC	cnt
  2095 01D35 1527 C        	JMP	AppMenuPhone_hfdial_0
  2096 01D36      C        AppMenuPhone_hfdial_1:
  2097 01D36 0B9D C        	BS	sys_flag,SPKPHONE
  2098 01D37 1802 C        	MOV	A,@(PRO_AppDialingPhone)
  2099            C      M 	LCALL	LibPushProgram
                      2  M  PAGE #( LIBPUSHPROGRAM ),
       01D38 1E81     2     PAGE ( LIBPUSHPROGRAM / 1024 ),
       01D39 1000     1     CALL ( LIBPUSHPROGRAM % 1024 ),
                      2  M  PAGE #( $ ),
       01D3A 1E87     2     PAGE ( $ / 1024 ),
  2100 01D3B 1C00 C        	RETL	@(0)
  2101            C        	
  2102 01D3C      C        AppMenuPhone_tophonebook:
  2103 01D3C 1833 C        	MOV	A,@(PRO_AppEditBook)
  2104            C      M 	LCALL	LibPushProgram
                      2  M  PAGE #( LIBPUSHPROGRAM ),
       01D3D 1E81     2     PAGE ( LIBPUSHPROGRAM / 1024 ),
       01D3E 1000     1     CALL ( LIBPUSHPROGRAM % 1024 ),
                      2  M  PAGE #( $ ),
       01D3F 1E87     2     PAGE ( $ / 1024 ),
  2105 01D40 1C00 C        	RETL	@(0)
  2106 01D41      C        AppMenuPhone_delete:
  2107 01D41 0A3D C        	BS	r3_callmenu,0
  2108 01D42 14FF C        	JMP	AppMenuPhone_exit
  2109 01D43      C        AppMenuPhone_deleteall:
  2110 01D43 0A7D C        	BS	r3_callmenu,1
  2111 01D44 14FF C        	JMP	AppMenuPhone_exit
  2112            C        	
  2113            C        	
  2114            C        
  2115 01D45      C        AppCallList:
  2116 01D45 18E9 C        	MOV	A,@(r3_totalcall+0xc0)
  2117 01D46 1549 C        	JMP	AppLookOverCall
  2118 01D47      C        AppBrowsePbook:
  2119 01D47 18EB C        	MOV	A,@(r3_book+0xc0)
  2120 01D48 1549 C        	JMP	AppLookOverCall
  2121            C        
  2122            C        
  2123            C        /*************************************************
  2124            C        AppLookOverCall
  2125            C        查看号码
  2126            C        input:		acc 要查看的地址
  2127            C        初始化:	
  2128            C        
  2129            C        	
  2130            C        显示:	
  2131            C        待机:
  2132            C        	使用UP和DOWN键翻查。
  2133            C        	r3_id	翻查的ID号, =0 end of list
  2134            C        	r3_flag
  2135            C        		.7 =0, 取号码未完毕，不能按UP、DOWN键
  2136            C        		   =1, 可以按UP、DOWN键翻查。
  2137            C        		.6 =0, 分屏显示前16位
  2138            C        		   =1, 分屏显示后16位
  2139            C        		.5 =0, 号码正常显示,
  2140            C        		   =1, 号码分两屏显示。
  2141            C        		.4 =0, 人名正常显示
  2142            C        		   =1, 人名分两屏显示。
  2143            C        		.3 =0, normal
  2144            C        		   =1, 删除状态
  2145            C        	分屏显示时，按"LEFT","RIGHT"键可以快速看前一屏和后一屏
  2146            C        
  2147            C        note:
  2148            C        	因为dialed call长度为32位，所以不能存到phonebook中。
  2149            C        	
  2150            C        	
  2151            C        	
  2152            C        *************************************************/
  2153 01D49      C        AppLookOverCall:
  2154 01D49 0044 C        	MOV	_RSR,A
  2155 01D4A 1A3F C        	AND	A,@(0x3f)
  2156 01D4B 0060 C        	MOV	r3_ax,A
  2157            C      M 	JPB	sys_flag,PROGRAMINIT,AppLookOverCall_init
       01D4C 0CDD     1     JBC  SYS_FLAG , PROGRAMINIT 
       01D4D 1551     1     JMP  APPLOOKOVERCALL_INIT ,
  2158            C      M 	JPB	sys_flag,PROGRAMREIN,AppLookOverCall_rein
       01D4E 0D1D     1     JBC  SYS_FLAG , PROGRAMREIN 
       01D4F 1559     1     JMP  APPLOOKOVERCALL_REIN ,
  2159 01D50 1574 C        	JMP	AppLookOverCall_idle
  2160 01D51      C        AppLookOverCall_init:
  2161 01D51 08DD C        	BC	sys_flag,PROGRAMINIT
  2162 01D52 0400 C        	MOV	A,_R0
  2163            C      M 	JPZ	AppLookOverCall_none
       01D53 0C83     1     JBC  _STATUS , Z 
       01D54 1643     1     JMP  APPLOOKOVERCALL_NONE ,
  2164            C      M 	MOV	r3_id,@(1)			; 从第一条开始
       01D55 1801     1     MOV A,@( 1 )
       01D56 007E     1     MOV  R3_ID ,A
  2165 01D57 00FF C        	CLR	r3_flag
  2166 01D58 155F C        	JMP	AppLookOverCall_display
  2167 01D59      C        AppLookOverCall_rein:
  2168            C      M 	PAGE	#(LibPushStack)
       01D59 1E81     1     PAGE ( LIBPUSHSTACK / 1024 ),
  2169 01D5A 100C C        	CALL	LibPopStack
  2170 01D5B 007E C        	MOV	r3_id,A
  2171 01D5C 100C C        	CALL	LibPopStack
  2172 01D5D 007F C        	MOV	r3_flag,A
  2173            C      M 	PAGE	#($)
       01D5E 1E87     1     PAGE ( $ / 1024 ),
  2174 01D5F      C        AppLookOverCall_display:
  2175 01D5F 091D C        	BC	sys_flag,PROGRAMREIN
  2176            C        	
  2177 01D60 1263 C        	CALL	AppGetCallInfo			; 得到号码信息
  2178            C      M 	SUBA	r3_ax,@(r3_totalcall)
       01D61 1829     1     MOV A,@( R3_TOTALCALL )
       01D62 0120     1     SUB A, R3_AX 
  2179            C      M 	JPZ	AppLookOverCall_display_call
       01D63 0C83     1     JBC  _STATUS , Z 
       01D64 156F     1     JMP  APPLOOKOVERCALL_DISPLAY_CALL ,
  2180            C      M 	SUBA	r3_ax,@(r3_book)
       01D65 182B     1     MOV A,@( R3_BOOK )
       01D66 0120     1     SUB A, R3_AX 
  2181            C      M 	JPNZ	AppLookOverCall_idle
       01D67 0E83     1     JBS  _STATUS , Z 
       01D68 1574     1     JMP  APPLOOKOVERCALL_IDLE ,
  2182 01D69      C        AppLookOverCall_display_book:
  2183            C      M 	BANK	2
       01D69 0984     1     BC  _RAM , 6 
       01D6A 0BC4     1     BS  _RAM , 7 
  2184 01D6B 0A35 C        	BS	r2_stamp2,0
  2185 01D6C 0834 C        	BC	r2_stamp1,0
  2186 01D6D 0BDD C        	BS	sys_flag,STAMP
  2187 01D6E 1574 C        	JMP	AppLookOverCall_idle
  2188 01D6F      C        AppLookOverCall_display_call:
  2189            C      M 	BANK	2
       01D6F 0984     1     BC  _RAM , 6 
       01D70 0BC4     1     BS  _RAM , 7 
  2190 01D71 0A74 C        	BS	r2_stamp1,1
  2191 01D72 0834 C        	BC	r2_stamp1,0
  2192 01D73 0BDD C        	BS	sys_flag,STAMP
  2193 01D74      C        AppLookOverCall_idle:
  2194            C      M 	BANK	3
       01D74 0B84     1     BS  _RAM , 6 
       01D75 0BC4     1     BS  _RAM , 7 
  2195            C        	;ADDA	r3_ax,@(0xc0)
  2196            C        	;MOV	_RSR,A
  2197            C        	
  2198            C      M 	XORA	sys_msg,@(WM_KEYPRESS)
       01D76 1801     1     MOV A,@( WM_KEYPRESS )
       01D77 031B     1     XOR A, SYS_MSG 
  2199            C      M 	JPZ	AppLookOverCall_key
       01D78 0C83     1     JBC  _STATUS , Z 
       01D79 1598     1     JMP  APPLOOKOVERCALL_KEY ,
  2200            C      M 	XORA	sys_msg,@(WM_COMMAND)
       01D7A 1807     1     MOV A,@( WM_COMMAND )
       01D7B 031B     1     XOR A, SYS_MSG 
  2201            C      M 	JPZ	AppLookOverCall_command
       01D7C 0C83     1     JBC  _STATUS , Z 
       01D7D 15F8     1     JMP  APPLOOKOVERCALL_COMMAND ,
  2202 01D7E      C        AppLookOverCall_ret:
  2203            C      M 	BANK	3
       01D7E 0B84     1     BS  _RAM , 6 
       01D7F 0BC4     1     BS  _RAM , 7 
  2204            C      M 	JPNB	r3_flag,7,AppLookOverCall_ret_1
       01D80 0FFF     1     JBS  R3_FLAG , 7 
       01D81 158A     1     JMP  APPLOOKOVERCALL_RET_1 ,
  2205            C      M 	JPB	r3_flag,5,AppLookOverCall_ret_2
       01D82 0D7F     1     JBC  R3_FLAG , 5 
       01D83 158B     1     JMP  APPLOOKOVERCALL_RET_2 ,
  2206            C      M 	JPB	r3_flag,4,AppLookOverCall_ret_2
       01D84 0D3F     1     JBC  R3_FLAG , 4 
       01D85 158B     1     JMP  APPLOOKOVERCALL_RET_2 ,
  2207            C      M 	JPB	r3_callmenu,0,AppLookOverCall_erase
       01D86 0C3D     1     JBC  R3_CALLMENU , 0 
       01D87 15DE     1     JMP  APPLOOKOVERCALL_ERASE ,
  2208            C      M 	JPB	r3_callmenu,1,AppLookOverCall_eraseall
       01D88 0C7D     1     JBC  R3_CALLMENU , 1 
       01D89 15E2     1     JMP  APPLOOKOVERCALL_ERASEALL ,
  2209 01D8A      C        AppLookOverCall_ret_1:
  2210 01D8A 1C00 C        	RETL	@(0)
  2211 01D8B      C        AppLookOverCall_ret_2:
  2212            C      M 	BANK	2
       01D8B 0984     1     BC  _RAM , 6 
       01D8C 0BC4     1     BS  _RAM , 7 
  2213 01D8D 042B C        	MOV	A,r2_tmr_dial1
  2214            C      M 	JPNZ	AppLookOverCall_ret_1
       01D8E 0E83     1     JBS  _STATUS , Z 
       01D8F 158A     1     JMP  APPLOOKOVERCALL_RET_1 ,
  2215 01D90 042A C        	MOV	A,r2_tmr_dial
  2216            C      M 	JPNZ	AppLookOverCall_ret_1
       01D91 0E83     1     JBS  _STATUS , Z 
       01D92 158A     1     JMP  APPLOOKOVERCALL_RET_1 ,
  2217            C      M 	BANK	3
       01D93 0B84     1     BS  _RAM , 6 
       01D94 0BC4     1     BS  _RAM , 7 
  2218            C      M 	INVB	r3_flag,6
                      2  M  XOR  R3_FLAG ,@(( 1 << 6 ))
       01D95 1840     2     MOV A,@(( 1 << 6 ))
       01D96 037F     2     XOR  R3_FLAG ,A
  2219 01D97 1628 C        	JMP	AppLookOverCallDisplay
  2220 01D98      C        AppLookOverCall_key:
  2221            C      M 	XORA	sys_data,@(KEY_EXIT)
       01D98 1816     1     MOV A,@( KEY_EXIT )
       01D99 031C     1     XOR A, SYS_DATA 
  2222            C      M 	JPZ	AppLookOverCall_exit
       01D9A 0C83     1     JBC  _STATUS , Z 
       01D9B 15C5     1     JMP  APPLOOKOVERCALL_EXIT ,
  2223            C      M 	JPB	r3_flag,3,AppLookOverCall_ret
       01D9C 0CFF     1     JBC  R3_FLAG , 3 
       01D9D 157E     1     JMP  APPLOOKOVERCALL_RET ,
  2224            C      M 	JPNB	r3_flag,7,AppLookOverCall_ret
       01D9E 0FFF     1     JBS  R3_FLAG , 7 
       01D9F 157E     1     JMP  APPLOOKOVERCALL_RET ,
  2225            C      M 	JPB	r3_callmenu,0,AppLookOverCall_ret
       01DA0 0C3D     1     JBC  R3_CALLMENU , 0 
       01DA1 157E     1     JMP  APPLOOKOVERCALL_RET ,
  2226            C      M 	JPB	r3_callmenu,1,AppLookOverCall_ret
       01DA2 0C7D     1     JBC  R3_CALLMENU , 1 
       01DA3 157E     1     JMP  APPLOOKOVERCALL_RET ,
  2227            C      M 	XORA	sys_data,@(KEY_UP)
       01DA4 1824     1     MOV A,@( KEY_UP )
       01DA5 031C     1     XOR A, SYS_DATA 
  2228            C      M 	JPZ	AppLookOverCall_up
       01DA6 0C83     1     JBC  _STATUS , Z 
       01DA7 15CF     1     JMP  APPLOOKOVERCALL_UP ,
  2229            C      M 	XORA	sys_data,@(KEY_DOWN)
       01DA8 1825     1     MOV A,@( KEY_DOWN )
       01DA9 031C     1     XOR A, SYS_DATA 
  2230            C      M 	JPZ	AppLookOverCall_down
       01DAA 0C83     1     JBC  _STATUS , Z 
       01DAB 15D6     1     JMP  APPLOOKOVERCALL_DOWN ,
  2231 01DAC 043E C        	MOV	A,r3_id
  2232            C      M 	JPZ	AppLookOverCall_ret
       01DAD 0C83     1     JBC  _STATUS , Z 
       01DAE 157E     1     JMP  APPLOOKOVERCALL_RET ,
  2233            C      M 	XORA	sys_data,@(KEY_ERASE)
       01DAF 1823     1     MOV A,@( KEY_ERASE )
       01DB0 031C     1     XOR A, SYS_DATA 
  2234            C      M 	JPZ	AppLookOverCall_erase
       01DB1 0C83     1     JBC  _STATUS , Z 
       01DB2 15DE     1     JMP  APPLOOKOVERCALL_ERASE ,
  2235            C      M 	XORA	sys_data,@(KEY_MENU)
       01DB3 1830     1     MOV A,@( KEY_MENU )
       01DB4 031C     1     XOR A, SYS_DATA 
  2236            C      M 	JPZ	AppLookOverCall_menu
       01DB5 0C83     1     JBC  _STATUS , Z 
       01DB6 15E8     1     JMP  APPLOOKOVERCALL_MENU ,
  2237            C      M 	JPB	r3_flag,5,AppLookOverCall_key_1
       01DB7 0D7F     1     JBC  R3_FLAG , 5 
       01DB8 15BC     1     JMP  APPLOOKOVERCALL_KEY_1 ,
  2238            C      M 	JPB	r3_flag,4,AppLookOverCall_key_1
       01DB9 0D3F     1     JBC  R3_FLAG , 4 
       01DBA 15BC     1     JMP  APPLOOKOVERCALL_KEY_1 ,
  2239 01DBB 157E C        	JMP	AppLookOverCall_ret
  2240 01DBC      C        AppLookOverCall_key_1:				; 分屏显示时
  2241            C      M 	XORA	sys_data,@(KEY_LEFT)
       01DBC 1826     1     MOV A,@( KEY_LEFT )
       01DBD 031C     1     XOR A, SYS_DATA 
  2242            C      M 	JPZ	AppLookOverCall_left
       01DBE 0C83     1     JBC  _STATUS , Z 
       01DBF 15F4     1     JMP  APPLOOKOVERCALL_LEFT ,
  2243            C      M 	XORA	sys_data,@(KEY_RIGHT)
       01DC0 1827     1     MOV A,@( KEY_RIGHT )
       01DC1 031C     1     XOR A, SYS_DATA 
  2244            C      M 	JPZ	AppLookOverCall_right
       01DC2 0C83     1     JBC  _STATUS , Z 
       01DC3 15F6     1     JMP  APPLOOKOVERCALL_RIGHT ,
  2245 01DC4 157E C        	JMP	AppLookOverCall_ret
  2246 01DC5      C        AppLookOverCall_exit:
  2247 01DC5 00FD C        	CLR	r3_callmenu
  2248            C      M 	LCALL	LibClearDisplaySerialNumber
                      2  M  PAGE #( LIBCLEARDISPLAYSERIALNUMBER ),
       01DC6 1E81     2     PAGE ( LIBCLEARDISPLAYSERIALNUMBER / 1024 ),
       01DC7 1347     1     CALL ( LIBCLEARDISPLAYSERIALNUMBER % 1024 ),
                      2  M  PAGE #( $ ),
       01DC8 1E87     2     PAGE ( $ / 1024 ),
  2249            C      M 	BANK	2
       01DC9 0984     1     BC  _RAM , 6 
       01DCA 0BC4     1     BS  _RAM , 7 
  2250 01DCB 0835 C        	BC	r2_stamp2,0
  2251 01DCC 0BDD C        	BS	sys_flag,STAMP
  2252 01DCD 00D8 C        	CLR	program
  2253 01DCE 1C00 C        	RETL	@(0)
  2254 01DCF      C        AppLookOverCall_up:
  2255 01DCF 057E C        	INC	r3_id
  2256            C      M 	SUBA	_R0,r3_id
       01DD0 043E     1     MOV A, R3_ID 
       01DD1 0100     1     SUB A, _R0 
  2257            C      M 	JPC	AppGetCallInfo
       01DD2 0C03     1     JBC  _STATUS , C 
       01DD3 1663     1     JMP  APPGETCALLINFO ,
  2258 01DD4 00FE C        	CLR	r3_id
  2259 01DD5 1663 C        	JMP	AppGetCallInfo
  2260 01DD6      C        AppLookOverCall_down:
  2261 01DD6 043E C        	MOV	A,r3_id
  2262            C      M 	JPZ	AppLookOverCall_down_1
       01DD7 0C83     1     JBC  _STATUS , Z 
       01DD8 15DB     1     JMP  APPLOOKOVERCALL_DOWN_1 ,
  2263 01DD9 01FE C        	DEC	r3_id
  2264 01DDA 1663 C        	JMP	AppGetCallInfo
  2265 01DDB      C        AppLookOverCall_down_1:
  2266            C      M 	MOV	r3_id,_R0
       01DDB 0400     1     MOV A, _R0 
       01DDC 007E     1     MOV  R3_ID ,A
  2267 01DDD 1663 C        	JMP	AppGetCallInfo
  2268 01DDE      C        AppLookOverCall_erase:
  2269 01DDE 083D C        	BC	r3_callmenu,0
  2270 01DDF 043E C        	MOV	A,r3_id
  2271 01DE0 1248 C        	CALL	AppEraseCall
  2272 01DE1 1C00 C        	RETL	@(0)
  2273 01DE2      C        AppLookOverCall_eraseall:
  2274 01DE2 087D C        	BC	r3_callmenu,1
  2275 01DE3 1800 C        	MOV	A,@(0)
  2276 01DE4 1248 C        	CALL	AppEraseCall
  2277 01DE5 1C00 C        	RETL	@(0)
  2278            C        	
  2279 01DE6      C        AppLookOverCall_erased:
  2280 01DE6 08FF C        	BC	r3_flag,3
  2281 01DE7 1663 C        	JMP	AppGetCallInfo
  2282 01DE8      C        AppLookOverCall_menu:
  2283            C      M 	PAGE	#(AppCallerToEditor)
       01DE8 1E8B     1     PAGE ( APPCALLERTOEDITOR / 1024 ),
  2284 01DE9 10A0 C        	CALL	AppCallerToEditor
  2285            C      M 	PAGE	#(LibPushStack)
       01DEA 1E81     1     PAGE ( LIBPUSHSTACK / 1024 ),
  2286 01DEB 043F C        	MOV	A,r3_flag
  2287 01DEC 1002 C        	CALL	LibPushStack
  2288 01DED 043E C        	MOV	A,r3_id
  2289 01DEE 1002 C        	CALL	LibPushStack
  2290 01DEF 0418 C        	MOV	A,program
  2291 01DF0 1002 C        	CALL	LibPushStack
  2292 01DF1 180B C        	MOV	A,@(PRO_AppMenuPhone)
  2293 01DF2 1000 C        	CALL	LibPushProgram
  2294 01DF3 1C00 C        	RETL	@(0)
  2295 01DF4      C        AppLookOverCall_left:				; 按下"LEFT"显示到第一屏
  2296 01DF4 09BF C        	BC	r3_flag,6
  2297 01DF5 1628 C        	JMP	AppLookOverCallDisplay
  2298 01DF6      C        AppLookOverCall_right:				; 按下"RIGHT"显示到第二屏
  2299 01DF6 0BBF C        	BS	r3_flag,6
  2300 01DF7 1628 C        	JMP	AppLookOverCallDisplay
  2301 01DF8      C        AppLookOverCall_command:
  2302            C      M 	JPNB	r3_flag,3,AppLookOverCall_command_1
       01DF8 0EFF     1     JBS  R3_FLAG , 3 
       01DF9 1603     1     JMP  APPLOOKOVERCALL_COMMAND_1 ,
  2303            C      M 	XORA	sys_data,@(0x03)
       01DFA 1803     1     MOV A,@( 3 )
       01DFB 031C     1     XOR A, SYS_DATA 
  2304            C      M 	JPZ	AppLookOverCall_erased
       01DFC 0C83     1     JBC  _STATUS , Z 
       01DFD 15E6     1     JMP  APPLOOKOVERCALL_ERASED ,
  2305            C      M 	XORA	sys_data,@(0x05)
       01DFE 1805     1     MOV A,@( 5 )
       01DFF 031C     1     XOR A, SYS_DATA 
  2306            C      M 	JPZ	AppLookOverCall_erased
       01E00 0C83     1     JBC  _STATUS , Z 
       01E01 15E6     1     JMP  APPLOOKOVERCALL_ERASED ,
  2307 01E02 1C00 C        	RETL	@(0)
  2308            C        
  2309 01E03      C        AppLookOverCall_command_1:
  2310            C      M 	XORA	sys_data,@(0x1a)
       01E03 181A     1     MOV A,@( 26 )
       01E04 031C     1     XOR A, SYS_DATA 
  2311            C      M 	JPZ	AppLookOverCall_update
       01E05 0C83     1     JBC  _STATUS , Z 
       01E06 1608     1     JMP  APPLOOKOVERCALL_UPDATE ,
  2312 01E07 157E C        	JMP	AppLookOverCall_ret
  2313 01E08      C        AppLookOverCall_update:
  2314 01E08 00FF C        	CLR	r3_flag
  2315 01E09 0BFF C        	BS	r3_flag,7
  2316            C      M 	BLOCK	1
       01E0A 1842     1     MOV A,@((( 1 << 1 )+ VALUE_IOCA ))
       01E0B 000A     1     IOW  _IOCA ,
  2317            C        	
  2318            C      M 	MOV	_RC,@(8+4)
       01E0C 180C     1     MOV A,@(( 8 + 4 ))
       01E0D 004C     1     MOV  _RC ,A
  2319            C      M 	SUBA	_RD,@(17)
       01E0E 1811     1     MOV A,@( 17 )
       01E0F 010D     1     SUB A, _RD 
  2320            C      M 	JPNC	$+2
       01E10 0E03     1     JBS  _STATUS , C 
       01E11 1613     1     JMP ( $ + 2 ),
  2321 01E12 0B7F C        	BS	r3_flag,5
  2322            C        	
  2323            C      M 	MOV	ax,r3_id
       01E13 043E     1     MOV A, R3_ID 
       01E14 0053     1     MOV  AX ,A
  2324            C      M 	PAGE	#(LibMathHexToBcd)
       01E15 1E81     1     PAGE ( LIBMATHHEXTOBCD / 1024 ),
  2325 01E16 1037 C        	CALL	LibMathHexToBcd
  2326 01E17 0060 C        	MOV	r3_ax,A
  2327            C      M 	PAGE	#(VGA)
       01E18 1E83     1     PAGE ( VGA / 1024 ),
  2328 01E19 1882 C        	MOV	A,@(STYLE_RIGHT)
  2329 01E1A 1010 C        	CALL	VgaNum1
  2330 01E1B 0720 C        	SWAPA	r3_ax
  2331 01E1C 1A0F C        	AND	A,@(0x0f)
  2332 01E1D 1F30 C        	ADD	A,@(48)
  2333 01E1E 1010 C        	CALL	VgaNum1
  2334            C      M 	ANDA	r3_ax,@(0x0f)
       01E1F 180F     1     MOV A,@( 15 )
       01E20 02A0     1     AND A, R3_AX 
  2335 01E21 1F30 C        	ADD	A,@(48)
  2336 01E22 1010 C        	CALL	VgaNum1
  2337 01E23 1800 C        	MOV	A,@(0)
  2338 01E24 1010 C        	CALL	VgaNum1
  2339 01E25 1074 C        	CALL	VgaDrawNum1
  2340            C      M 	PAGE	#($)
       01E26 1E87     1     PAGE ( $ / 1024 ),
  2341            C        	
  2342 01E27 1628 C        	JMP	AppLookOverCallDisplay
  2343            C        	
  2344            C        
  2345 01E28      C        AppLookOverCallDisplay:
  2346            C      M 	BANK	2
       01E28 0984     1     BC  _RAM , 6 
       01E29 0BC4     1     BS  _RAM , 7 
  2347 01E2A 0011 C        	DISI
  2348 01E2B 00EA C        	CLR	r2_tmr_dial
  2349            C      M 	MOV	r2_tmr_dial1,@(2)		; 3秒换屏显示
       01E2C 1802     1     MOV A,@( 2 )
       01E2D 006B     1     MOV  R2_TMR_DIAL1 ,A
  2350 01E2E 0010 C        	ENI
  2351            C        	
  2352            C      M 	BANK	3
       01E2F 0B84     1     BS  _RAM , 6 
       01E30 0BC4     1     BS  _RAM , 7 
  2353            C      M 	ANDA	r3_flag,@(0x40)			; 换屏显示。
       01E31 1840     1     MOV A,@( 64 )
       01E32 02BF     1     AND A, R3_FLAG 
  2354 01E33 1920 C        	OR	A,@(0x20)			; 显示第三行
  2355            C      M 	LJMP	DisplayCallerPackage
                      2  M  PAGE #( DISPLAYCALLERPACKAGE ),
       01E34 1E8B     2     PAGE ( DISPLAYCALLERPACKAGE / 1024 ),
       01E35 15ED     1     JMP ( DISPLAYCALLERPACKAGE % 1024 ),
  2356            C        	
  2357            C        
  2358            C        
  2359            C        ;AppLookOverCallDisplay:
  2360            C        ;	BANK	2
  2361            C        ;	DISI
  2362            C        ;	CLR	r2_tmr_dial
  2363            C        ;	MOV	r2_tmr_dial1,@(3)		; 3秒换屏显示
  2364            C        ;	ENI
  2365            C        ;	
  2366            C        ;	BANK	3
  2367            C        ;	MOV	ax,r3_id
  2368            C        ;	PAGE	#(LibMathHexToBcd)
  2369            C        ;	CALL	LibMathHexToBcd
  2370            C        ;	MOV	r3_ax,A
  2371            C        ;	PAGE	#(VGA)
  2372            C        ;	MOV	A,@(STYLE_RIGHT)
  2373            C        ;	CALL	VgaNum1
  2374            C        ;	SWAPA	r3_ax
  2375            C        ;	AND	A,@(0x0f)
  2376            C        ;	ADD	A,@(48)
  2377            C        ;	CALL	VgaNum1
  2378            C        ;	ANDA	r3_ax,@(0x0f)
  2379            C        ;	ADD	A,@(48)
  2380            C        ;	CALL	VgaNum1
  2381            C        ;	MOV	A,@(0)
  2382            C        ;	CALL	VgaNum1
  2383            C        ;	CALL	VgaDrawNum1
  2384            C        ;	
  2385            C        ;	
  2386            C        ;	;PAGE	#(VGA)
  2387            C        ;	CALL	VgaBlankNum2
  2388            C        ;	CALL	VgaBlankChar
  2389            C        ;	
  2390            C        ;
  2391            C        ;AppLookOverCallDisplay_number:
  2392            C        ;	MOV	A,@(STYLE_LEFT)
  2393            C        ;	CALL	VgaNum2
  2394            C        ;	PAGE	#($)
  2395            C        ;	CLR	r3_cnt
  2396            C        ;	JPNB	r3_flag,5,AppLookOverCallDisplay_number_1
  2397            C        ;	JPB	r3_flag,6,AppLookOverCallDisplay_number_2
  2398            C        ;AppLookOverCallDisplay_number_1:
  2399            C        ;	MOV	r3_ax,@(8+4+1)			; 显示前16位号码
  2400            C        ;	JMP	AppLookOverCallDisplay_number_loop
  2401            C        ;AppLookOverCallDisplay_number_2:
  2402            C        ;	MOV	r3_ax,@(8+4+1+16)			; 显示后16位号码
  2403            C        ;AppLookOverCallDisplay_number_loop:
  2404            C        ;	CALL	AppLookOverCallDisplayValue
  2405            C        ;	JPZ	AppLookOverCallDisplay_number_end
  2406            C        ;	LCALL	VgaNum2
  2407            C        ;	JMP	AppLookOverCallDisplay_number_loop
  2408            C        ;	/*
  2409            C        ;	BLOCK	1
  2410            C        ;	ADDA	r3_cnt,r3_ax
  2411            C        ;	MOV	_RC,A
  2412            C        ;	MOV	A,_RD
  2413            C        ;	JPZ	AppLookOverCallDisplay_number_end
  2414            C        ;	LCALL	VgaNum2
  2415            C        ;	INC	r3_cnt
  2416            C        ;	SUBA	r3_cnt,@(16)
  2417            C        ;	JPNZ	AppLookOverCallDisplay_number_loop
  2418            C        ;	*/
  2419            C        ;AppLookOverCallDisplay_number_end:
  2420            C        ;	PAGE	#(VGA)
  2421            C        ;	CALL	VgaNum2
  2422            C        ;	CALL	VgaDrawNum2
  2423            C        ;
  2424            C        ;AppLookOverCallDisplay_name:
  2425            C        ;	MOV	A,@(STYLE_LEFT)
  2426            C        ;	CALL	VgaChar
  2427            C        ;	PAGE	#($)
  2428            C        ;	CLR	r3_cnt
  2429            C        ;	JPNB	r3_flag,4,AppLookOverCallDisplay_name_1
  2430            C        ;	JPB	r3_flag,6,AppLookOverCallDisplay_name_2
  2431            C        ;AppLookOverCallDisplay_name_1:
  2432            C        ;	MOV	r3_ax,@(8+4+1+32+1)		; 显示前16位人名
  2433            C        ;	JMP	AppLookOverCallDisplay_name_loop
  2434            C        ;AppLookOverCallDisplay_name_2:
  2435            C        ;	MOV	r3_ax,@(8+4+1+32+1)		; 显示后16位人名
  2436            C        ;AppLookOverCallDisplay_name_loop:
  2437            C        ;	CALL	AppLookOverCallDisplayValue
  2438            C        ;	JPZ	AppLookOverCallDisplay_name_end
  2439            C        ;	LCALL	VgaChar
  2440            C        ;	JMP	AppLookOverCallDisplay_name_loop
  2441            C        ;	/*
  2442            C        ;	BLOCK	1
  2443            C        ;	ADDA	r3_cnt,r3_ax
  2444            C        ;	MOV	_RC,A
  2445            C        ;	MOV	A,_RD
  2446            C        ;	JPZ	AppLookOverCallDisplay_name_end
  2447            C        ;	LCALL	VgaChar
  2448            C        ;	INC	r3_cnt
  2449            C        ;	SUBA	r3_cnt,@(16)
  2450            C        ;	JPNZ	AppLookOverCallDisplay_name_loop
  2451            C        ;	*/
  2452            C        ;AppLookOverCallDisplay_name_end:
  2453            C        ;	PAGE	#(VGA)
  2454            C        ;	CALL	VgaChar
  2455            C        ;	CALL	VgaDrawChar
  2456            C        ;	PAGE	#($)
  2457            C        ;	RETL	@(0)
  2458            C        ;
  2459            C        ;AppLookOverCallDisplayValue:
  2460            C        ;	BLOCK	1
  2461            C        ;	SUBA	r3_cnt,@(16)
  2462            C        ;	JPZ	AppLookOverCallDisplayValue_ret
  2463            C        ;	ADDA	r3_cnt,r3_ax
  2464            C        ;	MOV	_RC,A
  2465            C        ;	INC	r3_cnt
  2466            C        ;	MOV	A,_RD
  2467            C        ;AppLookOverCallDisplayValue_ret:
  2468            C        ;	RET
  2469            C        
  2470            C        
  2471 01E36      C        AppLookOverCall_end:
  2472            C      M 	PAGE	#(LibClearDisplaySerialNumber)
       01E36 1E81     1     PAGE ( LIBCLEARDISPLAYSERIALNUMBER / 1024 ),
  2473 01E37 1347 C        	CALL	LibClearDisplaySerialNumber
  2474            C      M 	PAGE	#(VGA)
       01E38 1E83     1     PAGE ( VGA / 1024 ),
  2475 01E39 10DE C        	CALL	VgaBlankNum2
  2476 01E3A 10E0 C        	CALL	VgaBlankChar
  2477 01E3B 1881 C        	MOV	A,@(STYLE_LEFT)
  2478 01E3C 101C C        	CALL	VgaChar
  2479 01E3D 184F C        	MOV	A,@(STR_EndOfList)
  2480 01E3E 114B C        	CALL	VgaString
  2481 01E3F 1800 C        	MOV	A,@(0)
  2482 01E40 101C C        	CALL	VgaChar
  2483 01E41 1078 C        	CALL	VgaDrawChar
  2484 01E42 1C00 C        	RETL	@(0)
  2485            C        
  2486 01E43      C        AppLookOverCall_none:
  2487            C      M 	PAGE	#(LibClearDisplaySerialNumber)
       01E43 1E81     1     PAGE ( LIBCLEARDISPLAYSERIALNUMBER / 1024 ),
  2488 01E44 1347 C        	CALL	LibClearDisplaySerialNumber
  2489 01E45 1807 C        	MOV	A,@(PRO_AppNoContent)
  2490 01E46 1000 C        	CALL	LibPushProgram
  2491 01E47 1C01 C        	RETL	@(1)
  2492            C        
  2493            C        	
  2494            C        	
  2495 01E48      C        AppEraseCall:
  2496 01E48 0063 C        	MOV	r3_bx,A
  2497            C      M 	SUBA	r3_ax,@(r3_totalcall)
       01E49 1829     1     MOV A,@( R3_TOTALCALL )
       01E4A 0120     1     SUB A, R3_AX 
  2498            C      M 	JPZ	AppEraseCall_totalcall
       01E4B 0C83     1     JBC  _STATUS , Z 
       01E4C 1656     1     JMP  APPERASECALL_TOTALCALL ,
  2499            C      M 	SUBA	r3_ax,@(r3_dialedcall)
       01E4D 182A     1     MOV A,@( R3_DIALEDCALL )
       01E4E 0120     1     SUB A, R3_AX 
  2500            C      M 	JPZ	AppEraseCall_dialedcall
       01E4F 0C83     1     JBC  _STATUS , Z 
       01E50 1658     1     JMP  APPERASECALL_DIALEDCALL ,
  2501            C      M 	SUBA	r3_ax,@(r3_book)
       01E51 182B     1     MOV A,@( R3_BOOK )
       01E52 0120     1     SUB A, R3_AX 
  2502            C      M 	JPZ	AppEraseCall_book
       01E53 0C83     1     JBC  _STATUS , Z 
       01E54 165A     1     JMP  APPERASECALL_BOOK ,
  2503 01E55 1662 C        	JMP	AppEraseCall_none
  2504 01E56      C        AppEraseCall_totalcall:
  2505 01E56 185D C        	MOV	A,@(0x5d)
  2506 01E57 165B C        	JMP	AppEraseCall_1
  2507 01E58      C        AppEraseCall_dialedcall:
  2508 01E58 185E C        	MOV	A,@(0x5e)
  2509 01E59 165B C        	JMP	AppEraseCall_1
  2510 01E5A      C        AppEraseCall_book:
  2511 01E5A 185F C        	MOV	A,@(0x5f)
  2512 01E5B      C        AppEraseCall_1:
  2513            C      M 	PAGE	#(IIC)
       01E5B 1E80     1     PAGE ( IIC / 1024 ),
  2514 01E5C 10A8 C        	CALL	IicSendData
  2515 01E5D 0423 C        	MOV	A,r3_bx
  2516 01E5E 10A8 C        	CALL	IicSendData
  2517 01E5F 10B3 C        	CALL	IicSer
  2518            C      M 	PAGE	#($)
       01E60 1E87     1     PAGE ( $ / 1024 ),
  2519            C        	;DEC	_R0
  2520 01E61 0AFF C        	BS	r3_flag,3
  2521 01E62      C        AppEraseCall_none:
  2522 01E62 1C00 C        	RETL	@(0)
  2523            C        	
  2524            C        
  2525 01E63      C        AppGetCallInfo:
  2526            C      M 	SUBA	_R0,r3_id
       01E63 043E     1     MOV A, R3_ID 
       01E64 0100     1     SUB A, _R0 
  2527            C      M 	JPC	AppGetCallInfo_0
       01E65 0C03     1     JBC  _STATUS , C 
       01E66 1669     1     JMP  APPGETCALLINFO_0 ,
  2528            C      M 	MOV	r3_id,_R0
       01E67 0400     1     MOV A, _R0 
       01E68 007E     1     MOV  R3_ID ,A
  2529 01E69      C        AppGetCallInfo_0:
  2530 01E69 0400 C        	MOV	A,_R0
  2531            C      M 	JPZ	AppLookOverCall_none
       01E6A 0C83     1     JBC  _STATUS , Z 
       01E6B 1643     1     JMP  APPLOOKOVERCALL_NONE ,
  2532 01E6C 043E C        	MOV	A,r3_id
  2533            C      M 	JPZ	AppLookOverCall_end
       01E6D 0C83     1     JBC  _STATUS , Z 
       01E6E 1636     1     JMP  APPLOOKOVERCALL_END ,
  2534            C      M 	SUBA	r3_ax,@(r3_totalcall)
       01E6F 1829     1     MOV A,@( R3_TOTALCALL )
       01E70 0120     1     SUB A, R3_AX 
  2535            C      M 	JPZ	AppGetCallInfo_answeredcall
       01E71 0C83     1     JBC  _STATUS , Z 
       01E72 167C     1     JMP  APPGETCALLINFO_ANSWEREDCALL ,
  2536            C      M 	SUBA	r3_ax,@(r3_dialedcall)
       01E73 182A     1     MOV A,@( R3_DIALEDCALL )
       01E74 0120     1     SUB A, R3_AX 
  2537            C      M 	JPZ	AppGetCallInfo_dialedcall
       01E75 0C83     1     JBC  _STATUS , Z 
       01E76 167E     1     JMP  APPGETCALLINFO_DIALEDCALL ,
  2538            C      M 	SUBA	r3_ax,@(r3_book)
       01E77 182B     1     MOV A,@( R3_BOOK )
       01E78 0120     1     SUB A, R3_AX 
  2539            C      M 	JPZ	AppGetCallInfo_book
       01E79 0C83     1     JBC  _STATUS , Z 
       01E7A 1680     1     JMP  APPGETCALLINFO_BOOK ,
  2540 01E7B 1643 C        	JMP	AppLookOverCall_none
  2541 01E7C      C        AppGetCallInfo_answeredcall:
  2542 01E7C 1857 C        	MOV	A,@(0x57)
  2543 01E7D 1681 C        	JMP	AppGetCallInfo_1
  2544 01E7E      C        AppGetCallInfo_dialedcall:
  2545 01E7E 1858 C        	MOV	A,@(0x58)
  2546 01E7F 1681 C        	JMP	AppGetCallInfo_1
  2547 01E80      C        AppGetCallInfo_book:
  2548 01E80 1859 C        	MOV	A,@(0x59)
  2549 01E81      C        AppGetCallInfo_1:
  2550            C      M 	PAGE	#(IIC)
       01E81 1E80     1     PAGE ( IIC / 1024 ),
  2551 01E82 10A8 C        	CALL	IicSendData
  2552 01E83 043E C        	MOV	A,r3_id
  2553 01E84 10A8 C        	CALL	IicSendData
  2554 01E85 10B3 C        	CALL	IicSer
  2555            C        	;PAGE	#($)
  2556 01E86 00FF C        	CLR	r3_flag
  2557            C      M 	PAGE	#(VGA)
       01E87 1E83     1     PAGE ( VGA / 1024 ),
  2558 01E88 10DE C        	CALL	VgaBlankNum2
  2559 01E89 10E0 C        	CALL	VgaBlankChar
  2560            C      M 	PAGE	#(LibClearDisplaySerialNumber)
       01E8A 1E81     1     PAGE ( LIBCLEARDISPLAYSERIALNUMBER / 1024 ),
  2561 01E8B 1347 C        	CALL	LibClearDisplaySerialNumber
  2562            C      M 	PAGE	#($)
       01E8C 1E87     1     PAGE ( $ / 1024 ),
  2563 01E8D      C        AppGetCallInfo_end:
  2564 01E8D 1C00 C        	RETL	@(0)
  2565            C        	
  2566            C        
  2567            C        
  2568 01E8E      C        AppMemory1:
  2569 01E8E 1880 C        	MOV	A,@(128)
  2570 01E8F 1693 C        	JMP	AppMemory
  2571 01E90      C        AppMemory2:
  2572 01E90 18A2 C        	MOV	A,@(162)
  2573 01E91 1693 C        	JMP	AppMemory
  2574 01E92      C        AppMemory3:
  2575 01E92 18C4 C        	MOV	A,@(196)
  2576 01E93      C        AppMemory:
  2577            C      M 	BANK	3
       01E93 0B84     1     BS  _RAM , 6 
       01E94 0BC4     1     BS  _RAM , 7 
  2578 01E95 007E C        	MOV	r3_id,A
  2579 01E96 0060 C        	MOV	r3_ax,A
  2580 01E97 004C C        	MOV	_RC,A
  2581            C      M 	BLOCK	1
       01E98 1842     1     MOV A,@((( 1 << 1 )+ VALUE_IOCA ))
       01E99 000A     1     IOW  _IOCA ,
  2582 01E9A 040D C        	MOV	A,_RD
  2583            C      M 	LJPZ	AppNone
       01E9B 0E83     1     JBS  _STATUS , Z 
       01E9C 169F     1     JMP ( $ + 3 ),
                      2  M  LJMP  APPNONE 
                      3  M  PAGE #( APPNONE ),
       01E9D 1E8B     3     PAGE ( APPNONE / 1024 ),
       01E9E 15E8     2     JMP ( APPNONE % 1024 ),
  2584            C      M 	JPB	sys_flag,PROGRAMINIT,AppMemory_init
       01E9F 0CDD     1     JBC  SYS_FLAG , PROGRAMINIT 
       01EA0 16A4     1     JMP  APPMEMORY_INIT ,
  2585            C      M 	JPB	sys_flag,PROGRAMREIN,AppMemory_rein
       01EA1 0D1D     1     JBC  SYS_FLAG , PROGRAMREIN 
       01EA2 16A6     1     JMP  APPMEMORY_REIN ,
  2586 01EA3 16DE C        	JMP	AppMemory_idle
  2587 01EA4      C        AppMemory_init:
  2588 01EA4 08DD C        	BC	sys_flag,PROGRAMINIT
  2589 01EA5 16A6 C        	JMP	AppMemory_display
  2590 01EA6      C        AppMemory_rein:
  2591 01EA6      C        AppMemory_display:
  2592 01EA6 091D C        	BC	sys_flag,PROGRAMREIN
  2593            C      M 	PAGE	#(VGA)
       01EA7 1E83     1     PAGE ( VGA / 1024 ),
  2594 01EA8 10DE C        	CALL	VgaBlankNum2
  2595 01EA9 10E0 C        	CALL	VgaBlankChar
  2596 01EAA 1882 C        	MOV	A,@(STYLE_RIGHT)
  2597 01EAB 1016 C        	CALL	VgaNum2
  2598            C      M 	PAGE	#($)
       01EAC 1E87     1     PAGE ( $ / 1024 ),
  2599 01EAD 0560 C        	INC	r3_ax
  2600 01EAE 00E2 C        	CLR	r3_cnt
  2601 01EAF      C        AppMemory_display_number:
  2602            C      M 	BLOCK	1
       01EAF 1842     1     MOV A,@((( 1 << 1 )+ VALUE_IOCA ))
       01EB0 000A     1     IOW  _IOCA ,
  2603            C      M 	ADDA	r3_ax,r3_cnt
       01EB1 0422     1     MOV A, R3_CNT 
       01EB2 03A0     1     ADD A, R3_AX 
  2604 01EB3 004C C        	MOV	_RC,A
  2605 01EB4 040D C        	MOV	A,_RD
  2606            C      M 	JPZ	AppMemory_display_number_end
       01EB5 0C83     1     JBC  _STATUS , Z 
       01EB6 16BF     1     JMP  APPMEMORY_DISPLAY_NUMBER_END ,
  2607            C      M 	LCALL	VgaNum2
                      2  M  PAGE #( VGANUM2 ),
       01EB7 1E83     2     PAGE ( VGANUM2 / 1024 ),
       01EB8 1016     1     CALL ( VGANUM2 % 1024 ),
                      2  M  PAGE #( $ ),
       01EB9 1E87     2     PAGE ( $ / 1024 ),
  2608 01EBA 0562 C        	INC	r3_cnt
  2609            C      M 	SUBA	r3_cnt,@(16)
       01EBB 1810     1     MOV A,@( 16 )
       01EBC 0122     1     SUB A, R3_CNT 
  2610            C      M 	JPNC	AppMemory_display_number
       01EBD 0E03     1     JBS  _STATUS , C 
       01EBE 16AF     1     JMP  APPMEMORY_DISPLAY_NUMBER ,
  2611 01EBF      C        AppMemory_display_number_end:
  2612            C      M 	PAGE	#(VGA)
       01EBF 1E83     1     PAGE ( VGA / 1024 ),
  2613 01EC0 1800 C        	MOV	A,@(0)
  2614 01EC1 1016 C        	CALL	VgaNum2
  2615 01EC2 1076 C        	CALL	VgaDrawNum2
  2616            C        	
  2617 01EC3 1881 C        	MOV	A,@(STYLE_LEFT)
  2618 01EC4 101C C        	CALL	VgaChar
  2619            C      M 	PAGE	#($)
       01EC5 1E87     1     PAGE ( $ / 1024 ),
  2620            C      M 	ADD	r3_ax,@(16)
       01EC6 1810     1     MOV A,@( 16 )
       01EC7 03E0     1     ADD  R3_AX ,A
  2621 01EC8 00E2 C        	CLR	r3_cnt
  2622 01EC9      C        AppMemory_display_char:
  2623            C      M 	BLOCK	1
       01EC9 1842     1     MOV A,@((( 1 << 1 )+ VALUE_IOCA ))
       01ECA 000A     1     IOW  _IOCA ,
  2624            C      M 	ADDA	r3_ax,r3_cnt
       01ECB 0422     1     MOV A, R3_CNT 
       01ECC 03A0     1     ADD A, R3_AX 
  2625 01ECD 004C C        	MOV	_RC,A
  2626 01ECE 040D C        	MOV	A,_RD
  2627            C      M 	JPZ	AppMemory_display_char_end
       01ECF 0C83     1     JBC  _STATUS , Z 
       01ED0 16D9     1     JMP  APPMEMORY_DISPLAY_CHAR_END ,
  2628            C      M 	LCALL	VgaChar
                      2  M  PAGE #( VGACHAR ),
       01ED1 1E83     2     PAGE ( VGACHAR / 1024 ),
       01ED2 101C     1     CALL ( VGACHAR % 1024 ),
                      2  M  PAGE #( $ ),
       01ED3 1E87     2     PAGE ( $ / 1024 ),
  2629 01ED4 0562 C        	INC	r3_cnt
  2630            C      M 	SUBA	r3_cnt,@(16)
       01ED5 1810     1     MOV A,@( 16 )
       01ED6 0122     1     SUB A, R3_CNT 
  2631            C      M 	JPNC	AppMemory_display_char
       01ED7 0E03     1     JBS  _STATUS , C 
       01ED8 16C9     1     JMP  APPMEMORY_DISPLAY_CHAR ,
  2632 01ED9      C        AppMemory_display_char_end:
  2633            C      M 	PAGE	#(VGA)
       01ED9 1E83     1     PAGE ( VGA / 1024 ),
  2634 01EDA 1800 C        	MOV	A,@(0)
  2635 01EDB 101C C        	CALL	VgaChar
  2636 01EDC 1078 C        	CALL	VgaDrawChar
  2637            C      M 	PAGE	#($)
       01EDD 1E87     1     PAGE ( $ / 1024 ),
  2638            C        	
  2639 01EDE      C        AppMemory_idle:
  2640            C      M 	JPB	r3_callmenu,0,AppMemory_erase
       01EDE 0C3D     1     JBC  R3_CALLMENU , 0 
       01EDF 16E7     1     JMP  APPMEMORY_ERASE ,
  2641            C      M 	JPB	r3_callmenu,1,AppMemory_eraseall
       01EE0 0C7D     1     JBC  R3_CALLMENU , 1 
       01EE1 16EF     1     JMP  APPMEMORY_ERASEALL ,
  2642            C      M 	XORA	sys_msg,@(WM_KEYPRESS)
       01EE2 1801     1     MOV A,@( WM_KEYPRESS )
       01EE3 031B     1     XOR A, SYS_MSG 
  2643            C      M 	JPZ	AppMemory_key
       01EE4 0C83     1     JBC  _STATUS , Z 
       01EE5 16F5     1     JMP  APPMEMORY_KEY ,
  2644            C        	;MOV	A,r2_tmr_dial1
  2645            C        	;JPNZ	AppMemory_ret
  2646            C        	;MOV	A,r2_tmr_dial
  2647            C        	;JPZ	AppMemory_exit
  2648 01EE6      C        AppMemory_ret:
  2649 01EE6 1C00 C        	RETL	@(0)
  2650 01EE7      C        AppMemory_erase:
  2651            C      M 	BLOCK	1
       01EE7 1842     1     MOV A,@((( 1 << 1 )+ VALUE_IOCA ))
       01EE8 000A     1     IOW  _IOCA ,
  2652            C      M 	MOV	_RC,r3_id
       01EE9 043E     1     MOV A, R3_ID 
       01EEA 004C     1     MOV  _RC ,A
  2653 01EEB 00CD C        	CLR	_RD
  2654 01EEC 083D C        	BC	r3_callmenu,0
  2655            C      M 	LJMP	AppNone
                      2  M  PAGE #( APPNONE ),
       01EED 1E8B     2     PAGE ( APPNONE / 1024 ),
       01EEE 15E8     1     JMP ( APPNONE % 1024 ),
  2656 01EEF      C        AppMemory_eraseall:
  2657 01EEF 087D C        	BC	r3_callmenu,1
  2658 01EF0 1801 C        	MOV	A,@(0x01)
  2659            C      M 	LCALL	LibPromptBeep
                      2  M  PAGE #( LIBPROMPTBEEP ),
       01EF1 1E81     2     PAGE ( LIBPROMPTBEEP / 1024 ),
       01EF2 12D6     1     CALL ( LIBPROMPTBEEP % 1024 ),
                      2  M  PAGE #( $ ),
       01EF3 1E87     2     PAGE ( $ / 1024 ),
  2660 01EF4 1C00 C        	RETL	@(0)
  2661 01EF5      C        AppMemory_key:
  2662            C      M 	XORA	sys_data,@(KEY_EXIT)
       01EF5 1816     1     MOV A,@( KEY_EXIT )
       01EF6 031C     1     XOR A, SYS_DATA 
  2663            C      M 	JPZ	AppMemory_exit
       01EF7 0C83     1     JBC  _STATUS , Z 
       01EF8 16FE     1     JMP  APPMEMORY_EXIT ,
  2664            C      M 	XORA	sys_data,@(KEY_MENU)
       01EF9 1830     1     MOV A,@( KEY_MENU )
       01EFA 031C     1     XOR A, SYS_DATA 
  2665            C      M 	JPZ	AppMemory_menu
       01EFB 0C83     1     JBC  _STATUS , Z 
       01EFC 1700     1     JMP  APPMEMORY_MENU ,
  2666 01EFD 1C00 C        	RETL	@(0)
  2667 01EFE      C        AppMemory_exit:
  2668 01EFE 00D8 C        	CLR	program
  2669 01EFF 1C00 C        	RETL	@(0)
  2670 01F00      C        AppMemory_menu:
  2671 01F00 043E C        	MOV	A,r3_id
  2672            C      M 	PAGE	#(AppMemoryToEditor)
       01F01 1E8B     1     PAGE ( APPMEMORYTOEDITOR / 1024 ),
  2673 01F02 1071 C        	CALL	AppMemoryToEditor
  2674            C      M 	PAGE	#(LibPushStack)
       01F03 1E81     1     PAGE ( LIBPUSHSTACK / 1024 ),
  2675 01F04 0418 C        	MOV	A,program
  2676 01F05 1002 C        	CALL	LibPushStack
  2677 01F06 180B C        	MOV	A,@(PRO_AppMenuPhone)
  2678 01F07 1000 C        	CALL	LibPushProgram
  2679            C      M 	PAGE	#($)
       01F08 1E87     1     PAGE ( $ / 1024 ),
  2680 01F09 1C00 C        	RETL	@(0)
  2681            C        
  2682            C        
  2683            C        /*************************************************
  2684            C        AppSetAreaCode
  2685            C        设置区域码
  2686            C        *************************************************/
  2687 01F0A      C        AppSetAreaCode:
  2688            C      M 	BANK	3
       01F0A 0B84     1     BS  _RAM , 6 
       01F0B 0BC4     1     BS  _RAM , 7 
  2689            C      M 	JPB	sys_flag,PROGRAMINIT,AppSetAreaCode_init
       01F0C 0CDD     1     JBC  SYS_FLAG , PROGRAMINIT 
       01F0D 1711     1     JMP  APPSETAREACODE_INIT ,
  2690            C      M 	JPB	sys_flag,PROGRAMREIN,AppSetAreaCode_rein
       01F0E 0D1D     1     JBC  SYS_FLAG , PROGRAMREIN 
       01F0F 1743     1     JMP  APPSETAREACODE_REIN ,
  2691 01F10 174F C        	JMP	AppSetAreaCode_idle
  2692 01F11      C        AppSetAreaCode_init:
  2693 01F11 08DD C        	BC	sys_flag,PROGRAMINIT
  2694 01F12 00FE C        	CLR	r3_id
  2695            C      M 	BLOCK	3
       01F13 1846     1     MOV A,@((( 3 << 1 )+ VALUE_IOCA ))
       01F14 000A     1     IOW  _IOCA ,
  2696            C      M 	MOV	_RC,@(233)
       01F15 18E9     1     MOV A,@( 233 )
       01F16 004C     1     MOV  _RC ,A
  2697 01F17 0732 C        	SWAPA	r3_areacode1
  2698 01F18 1A0F C        	AND	A,@(0x0f)
  2699 01F19 0053 C        	MOV	ax,A
  2700 01F1A 1D09 C        	SUB	A,@(9)
  2701            C      M 	JPNC	AppSetAreaCode_init_1
       01F1B 0E03     1     JBS  _STATUS , C 
       01F1C 1742     1     JMP  APPSETAREACODE_INIT_1 ,
  2702            C      M 	ADDA	ax,@(48)
       01F1D 1830     1     MOV A,@( 48 )
       01F1E 0393     1     ADD A, AX 
  2703 01F1F 004D C        	MOV	_RD,A
  2704 01F20 057E C        	INC	r3_id
  2705 01F21 054C C        	INC	_RC
  2706            C      M 	ANDA	r3_areacode1,@(0x0f)
       01F22 180F     1     MOV A,@( 15 )
       01F23 02B2     1     AND A, R3_AREACODE1 
  2707 01F24 0053 C        	MOV	ax,A
  2708 01F25 1D09 C        	SUB	A,@(9)
  2709            C      M 	JPNC	AppSetAreaCode_init_1
       01F26 0E03     1     JBS  _STATUS , C 
       01F27 1742     1     JMP  APPSETAREACODE_INIT_1 ,
  2710            C      M 	ADDA	ax,@(48)
       01F28 1830     1     MOV A,@( 48 )
       01F29 0393     1     ADD A, AX 
  2711 01F2A 004D C        	MOV	_RD,A
  2712 01F2B 057E C        	INC	r3_id
  2713 01F2C 054C C        	INC	_RC
  2714 01F2D 0733 C        	SWAPA	r3_areacode2
  2715 01F2E 1A0F C        	AND	A,@(0x0f)
  2716 01F2F 0053 C        	MOV	ax,A
  2717 01F30 1D09 C        	SUB	A,@(9)
  2718            C      M 	JPNC	AppSetAreaCode_init_1
       01F31 0E03     1     JBS  _STATUS , C 
       01F32 1742     1     JMP  APPSETAREACODE_INIT_1 ,
  2719            C      M 	ADDA	ax,@(48)
       01F33 1830     1     MOV A,@( 48 )
       01F34 0393     1     ADD A, AX 
  2720 01F35 004D C        	MOV	_RD,A
  2721 01F36 057E C        	INC	r3_id
  2722 01F37 054C C        	INC	_RC
  2723            C      M 	ANDA	r3_areacode2,@(0x0f)
       01F38 180F     1     MOV A,@( 15 )
       01F39 02B3     1     AND A, R3_AREACODE2 
  2724 01F3A 0053 C        	MOV	ax,A
  2725 01F3B 1D09 C        	SUB	A,@(9)
  2726            C      M 	JPNC	AppSetAreaCode_init_1
       01F3C 0E03     1     JBS  _STATUS , C 
       01F3D 1742     1     JMP  APPSETAREACODE_INIT_1 ,
  2727            C      M 	ADDA	ax,@(48)
       01F3E 1830     1     MOV A,@( 48 )
       01F3F 0393     1     ADD A, AX 
  2728 01F40 004D C        	MOV	_RD,A
  2729 01F41 057E C        	INC	r3_id
  2730 01F42      C        AppSetAreaCode_init_1:
  2731 01F42 1743 C        	JMP	AppSetAreaCode_display
  2732 01F43      C        AppSetAreaCode_rein:
  2733 01F43      C        AppSetAreaCode_display:
  2734 01F43 091D C        	BC	sys_flag,PROGRAMREIN
  2735            C      M 	PAGE	#(VGA)
       01F44 1E83     1     PAGE ( VGA / 1024 ),
  2736 01F45 10E0 C        	CALL	VgaBlankChar
  2737 01F46 1881 C        	MOV	A,@(STYLE_LEFT)
  2738 01F47 101C C        	CALL	VgaChar
  2739 01F48 1803 C        	MOV	A,@(STR_PleaseInput)
  2740 01F49 114B C        	CALL	VgaString
  2741 01F4A 1800 C        	MOV	A,@(0)
  2742 01F4B 101C C        	CALL	VgaChar
  2743 01F4C 1078 C        	CALL	VgaDrawChar
  2744            C      M 	PAGE	#($)
       01F4D 1E87     1     PAGE ( $ / 1024 ),
  2745 01F4E 13A6 C        	CALL	AppSetAreaCodeDisplay
  2746            C        	
  2747 01F4F      C        AppSetAreaCode_idle:
  2748            C        	;BANK	3
  2749            C      M 	BLOCK	3
       01F4F 1846     1     MOV A,@((( 3 << 1 )+ VALUE_IOCA ))
       01F50 000A     1     IOW  _IOCA ,
  2750            C      M 	XORA	sys_msg,@(WM_KEYPRESS)
       01F51 1801     1     MOV A,@( WM_KEYPRESS )
       01F52 031B     1     XOR A, SYS_MSG 
  2751 01F53 0E83 C        	JBS	_STATUS,Z
  2752 01F54 1C00 C        	RETL	@(0)
  2753 01F55      C        AppSetAreaCode_key:
  2754            C      M 	XORA	sys_data,@(KEY_EXIT)
       01F55 1816     1     MOV A,@( KEY_EXIT )
       01F56 031C     1     XOR A, SYS_DATA 
  2755            C      M 	JPZ	AppSetAreaCode_exit
       01F57 0C83     1     JBC  _STATUS , Z 
       01F58 17A4     1     JMP  APPSETAREACODE_EXIT ,
  2756            C      M 	XORA	sys_data,@(KEY_OK)
       01F59 1830     1     MOV A,@( KEY_OK )
       01F5A 031C     1     XOR A, SYS_DATA 
  2757            C      M 	JPZ	AppSetAreaCode_ok
       01F5B 0C83     1     JBC  _STATUS , Z 
       01F5C 1779     1     JMP  APPSETAREACODE_OK ,
  2758            C      M 	XORA	sys_data,@(KEY_BACK)
       01F5D 1814     1     MOV A,@( KEY_BACK )
       01F5E 031C     1     XOR A, SYS_DATA 
  2759            C      M 	JPZ	AppSetAreaCode_back
       01F5F 0C83     1     JBC  _STATUS , Z 
       01F60 1774     1     JMP  APPSETAREACODE_BACK ,
  2760            C      M 	LCALL	LibNumberCheck
                      2  M  PAGE #( LIBNUMBERCHECK ),
       01F61 1E81     2     PAGE ( LIBNUMBERCHECK / 1024 ),
       01F62 1217     1     CALL ( LIBNUMBERCHECK % 1024 ),
                      2  M  PAGE #( $ ),
       01F63 1E87     2     PAGE ( $ / 1024 ),
  2761 01F64 1F00 C        	ADD	A,@(0)
  2762 01F65 0C83 C        	JBC	_STATUS,Z
  2763 01F66 1C00 C        	RETL	@(0)
  2764 01F67      C        AppSetAreaCode_number:
  2765 01F67 0060 C        	MOV	r3_ax,A
  2766            C      M 	SUBA	r3_id,@(4)
       01F68 1804     1     MOV A,@( 4 )
       01F69 013E     1     SUB A, R3_ID 
  2767            C      M 	JPC	AppSetAreaCode_out
       01F6A 0C03     1     JBC  _STATUS , C 
       01F6B 1773     1     JMP  APPSETAREACODE_OUT ,
  2768            C      M 	ADDA	r3_id,@(233)
       01F6C 18E9     1     MOV A,@( 233 )
       01F6D 03BE     1     ADD A, R3_ID 
  2769 01F6E 004C C        	MOV	_RC,A
  2770            C      M 	MOV	_RD,r3_ax
       01F6F 0420     1     MOV A, R3_AX 
       01F70 004D     1     MOV  _RD ,A
  2771 01F71 057E C        	INC	r3_id
  2772 01F72 17A6 C        	JMP	AppSetAreaCodeDisplay
  2773 01F73      C        AppSetAreaCode_out:
  2774 01F73 1C00 C        	RETL	@(0)
  2775 01F74      C        AppSetAreaCode_back:
  2776 01F74 043E C        	MOV	A,r3_id
  2777            C      M 	JPZ	AppSetAreaCode_out
       01F75 0C83     1     JBC  _STATUS , Z 
       01F76 1773     1     JMP  APPSETAREACODE_OUT ,
  2778 01F77 01FE C        	DEC	r3_id
  2779 01F78 17A6 C        	JMP	AppSetAreaCodeDisplay
  2780 01F79      C        AppSetAreaCode_ok:
  2781 01F79 18FF C        	MOV	A,@(0xff)
  2782 01F7A 0072 C        	MOV	r3_areacode1,A
  2783 01F7B 0073 C        	MOV	r3_areacode2,A
  2784 01F7C 043E C        	MOV	A,r3_id
  2785            C      M 	JPZ	AppSetAreaCode_ok_1
       01F7D 0C83     1     JBC  _STATUS , Z 
       01F7E 17A3     1     JMP  APPSETAREACODE_OK_1 ,
  2786            C      M 	MOV	_RC,@(233)
       01F7F 18E9     1     MOV A,@( 233 )
       01F80 004C     1     MOV  _RC ,A
  2787            C      M 	AND	r3_areacode1,@(0xf0)
       01F81 18F0     1     MOV A,@( 240 )
       01F82 02F2     1     AND  R3_AREACODE1 ,A
  2788            C      M 	SUBA	_RD,@(48)
       01F83 1830     1     MOV A,@( 48 )
       01F84 010D     1     SUB A, _RD 
  2789 01F85 0272 C        	OR	r3_areacode1,A
  2790 01F86 0772 C        	SWAP	r3_areacode1
  2791 01F87 01FE C        	DEC	r3_id
  2792            C      M 	JPZ	AppSetAreaCode_ok_1
       01F88 0C83     1     JBC  _STATUS , Z 
       01F89 17A3     1     JMP  APPSETAREACODE_OK_1 ,
  2793 01F8A 054C C        	INC	_RC
  2794            C      M 	AND	r3_areacode1,@(0xf0)
       01F8B 18F0     1     MOV A,@( 240 )
       01F8C 02F2     1     AND  R3_AREACODE1 ,A
  2795            C      M 	SUBA	_RD,@(48)
       01F8D 1830     1     MOV A,@( 48 )
       01F8E 010D     1     SUB A, _RD 
  2796 01F8F 0272 C        	OR	r3_areacode1,A
  2797 01F90 01FE C        	DEC	r3_id
  2798            C      M 	JPZ	AppSetAreaCode_ok_1
       01F91 0C83     1     JBC  _STATUS , Z 
       01F92 17A3     1     JMP  APPSETAREACODE_OK_1 ,
  2799 01F93 054C C        	INC	_RC
  2800            C      M 	AND	r3_areacode2,@(0xf0)
       01F94 18F0     1     MOV A,@( 240 )
       01F95 02F3     1     AND  R3_AREACODE2 ,A
  2801            C      M 	SUBA	_RD,@(48)
       01F96 1830     1     MOV A,@( 48 )
       01F97 010D     1     SUB A, _RD 
  2802 01F98 0273 C        	OR	r3_areacode2,A
  2803 01F99 0773 C        	SWAP	r3_areacode2
  2804 01F9A 01FE C        	DEC	r3_id
  2805            C      M 	JPZ	AppSetAreaCode_ok_1
       01F9B 0C83     1     JBC  _STATUS , Z 
       01F9C 17A3     1     JMP  APPSETAREACODE_OK_1 ,
  2806 01F9D 054C C        	INC	_RC
  2807            C      M 	AND	r3_areacode2,@(0xf0)
       01F9E 18F0     1     MOV A,@( 240 )
       01F9F 02F3     1     AND  R3_AREACODE2 ,A
  2808            C      M 	SUBA	_RD,@(48)
       01FA0 1830     1     MOV A,@( 48 )
       01FA1 010D     1     SUB A, _RD 
  2809 01FA2 0273 C        	OR	r3_areacode2,A
  2810 01FA3      C        AppSetAreaCode_ok_1:
  2811 01FA3 0A9F C        	BS	hardware,SYNCSETTING
  2812 01FA4      C        AppSetAreaCode_exit:
  2813 01FA4 00D8 C        	CLR	program
  2814 01FA5 1C00 C        	RETL	@(0)
  2815 01FA6      C        AppSetAreaCodeDisplay:
  2816            C      M 	PAGE	#(VGA)
       01FA6 1E83     1     PAGE ( VGA / 1024 ),
  2817 01FA7 10DE C        	CALL	VgaBlankNum2
  2818 01FA8 1882 C        	MOV	A,@(STYLE_RIGHT)
  2819 01FA9 1016 C        	CALL	VgaNum2
  2820            C      M 	PAGE	#($)
       01FAA 1E87     1     PAGE ( $ / 1024 ),
  2821 01FAB 00E2 C        	CLR	r3_cnt
  2822 01FAC      C        AppSetAreaCodeDisplay_1:
  2823            C      M 	SUBA	r3_cnt,r3_id
       01FAC 043E     1     MOV A, R3_ID 
       01FAD 0122     1     SUB A, R3_CNT 
  2824            C      M 	JPC	AppSetAreaCodeDisplay_end
       01FAE 0C03     1     JBC  _STATUS , C 
       01FAF 17BB     1     JMP  APPSETAREACODEDISPLAY_END ,
  2825            C      M 	BLOCK	3
       01FB0 1846     1     MOV A,@((( 3 << 1 )+ VALUE_IOCA ))
       01FB1 000A     1     IOW  _IOCA ,
  2826            C      M 	ADDA	r3_cnt,@(233)
       01FB2 18E9     1     MOV A,@( 233 )
       01FB3 03A2     1     ADD A, R3_CNT 
  2827 01FB4 004C C        	MOV	_RC,A
  2828 01FB5 040D C        	MOV	A,_RD
  2829            C      M 	LCALL	VgaNum2
                      2  M  PAGE #( VGANUM2 ),
       01FB6 1E83     2     PAGE ( VGANUM2 / 1024 ),
       01FB7 1016     1     CALL ( VGANUM2 % 1024 ),
                      2  M  PAGE #( $ ),
       01FB8 1E87     2     PAGE ( $ / 1024 ),
  2830 01FB9 0562 C        	INC	r3_cnt
  2831 01FBA 17AC C        	JMP	AppSetAreaCodeDisplay_1
  2832 01FBB      C        AppSetAreaCodeDisplay_end:
  2833            C      M 	PAGE	#(VGA)
       01FBB 1E83     1     PAGE ( VGA / 1024 ),
  2834 01FBC 1800 C        	MOV	A,@(0)
  2835 01FBD 1016 C        	CALL	VgaNum2
  2836 01FBE 1076 C        	CALL	VgaDrawNum2
  2837            C      M 	PAGE	#($)
       01FBF 1E87     1     PAGE ( $ / 1024 ),
  2838 01FC0 1C00 C        	RETL	@(0)
  2839            C        
  2840            C        ORG	0x2000
  2841            C        /*************************************************
  2842            C        AppSetClock
  2843            C        设置时钟
  2844            C        初始化:	
  2845            C        	获取系统时间
  2846            C        	
  2847            C        显示:	
  2848            C        待机:
  2849            C        	1. 设置小时
  2850            C        	2. 设置分钟
  2851            C        	3. 设置秒
  2852            C        	
  2853            C        	r1_flag
  2854            C        		.7	=0 还没输入任何数值，这时显示随着时钟更新
  2855            C        			=1 开始设置，显示不更新
  2856            C        		.6	=0 不改变光标
  2857            C        			=1 改变光标
  2858            C        *************************************************/
  2859 02000      C        AppSetClock:
  2860            C      M 	BANK	1
       02000 0B84     1     BS  _RAM , 6 
       02001 09C4     1     BC  _RAM , 7 
  2861            C      M 	JPB	sys_flag,PROGRAMINIT,AppSetClock_init
       02002 0CDD     1     JBC  SYS_FLAG , PROGRAMINIT 
       02003 1408     1     JMP  APPSETCLOCK_INIT ,
  2862            C      M 	JPB	sys_flag,PROGRAMREIN,AppSetClock_rein
       02004 0D1D     1     JBC  SYS_FLAG , PROGRAMREIN 
       02005 1413     1     JMP  APPSETCLOCK_REIN ,
  2863 02006 1800 C        	MOV	A,@(0)
  2864 02007 141F C        	JMP	AppSetClock_idle
  2865 02008      C        AppSetClock_init:
  2866 02008 08DD C        	BC	sys_flag,PROGRAMINIT
  2867            C      M 	MOV	r1_second,r1_rtc_second
       02009 0426     1     MOV A, R1_RTC_SECOND 
       0200A 0071     1     MOV  R1_SECOND ,A
  2868            C      M 	MOV	r1_minute,r1_rtc_second
       0200B 0426     1     MOV A, R1_RTC_SECOND 
       0200C 0072     1     MOV  R1_MINUTE ,A
  2869            C      M 	MOV	r1_hour,r1_rtc_second
       0200D 0426     1     MOV A, R1_RTC_SECOND 
       0200E 0073     1     MOV  R1_HOUR ,A
  2870 0200F 10E1 C        	CALL	AppSetClock_htd
  2871 02010 00FE C        	CLR	r1_id
  2872 02011 00FF C        	CLR	r1_flag
  2873 02012 1416 C        	JMP	AppSetClock_display
  2874 02013      C        AppSetClock_rein:
  2875            C      M 	PAGE	#(LibPopStack)
       02013 1E81     1     PAGE ( LIBPOPSTACK / 1024 ),
  2876 02014 100C C        	CALL	LibPopStack
  2877 02015 1079 C        	CALL	LibStoreCursor
  2878 02016      C        AppSetClock_display:
  2879 02016 091D C        	BC	sys_flag,PROGRAMREIN
  2880            C      M 	PAGE	#(VGA)
       02017 1E83     1     PAGE ( VGA / 1024 ),
  2881 02018 10DE C        	CALL	VgaBlankNum2
  2882 02019 10E0 C        	CALL	VgaBlankChar
  2883 0201A 1837 C        	MOV	A,@(0x37)
  2884            C      M 	PAGE	#(LibStoreCursor)
       0201B 1E81     1     PAGE ( LIBSTORECURSOR / 1024 ),
  2885 0201C 1079 C        	CALL	LibStoreCursor
  2886            C      M 	PAGE	#($)
       0201D 1E88     1     PAGE ( $ / 1024 ),
  2887 0201E 1801 C        	MOV	A,@(1)
  2888 0201F      C        AppSetClock_idle:
  2889 0201F 0060 C        	MOV	r1_ax,A
  2890            C      M 	XORA	sys_msg,@(WM_KEYPRESS)
       02020 1801     1     MOV A,@( WM_KEYPRESS )
       02021 031B     1     XOR A, SYS_MSG 
  2891            C      M 	JPZ	AppSetClock_keypress
       02022 0C83     1     JBC  _STATUS , Z 
       02023 1435     1     JMP  APPSETCLOCK_KEYPRESS ,
  2892            C        	
  2893            C      M 	JPB	r1_flag,7,AppSetClock_idle_1
       02024 0DFF     1     JBC  R1_FLAG , 7 
       02025 1431     1     JMP  APPSETCLOCK_IDLE_1 ,
  2894            C      M 	JPNB	r1_rtc_flag,0,AppSetClock_idle_1
       02026 0E2E     1     JBS  R1_RTC_FLAG , 0 
       02027 1431     1     JMP  APPSETCLOCK_IDLE_1 ,
  2895 02028 082E C        	BC	r1_rtc_flag,0
  2896            C      M 	MOV	r1_second,r1_rtc_second
       02029 0426     1     MOV A, R1_RTC_SECOND 
       0202A 0071     1     MOV  R1_SECOND ,A
  2897            C      M 	MOV	r1_minute,r1_rtc_minute
       0202B 0427     1     MOV A, R1_RTC_MINUTE 
       0202C 0072     1     MOV  R1_MINUTE ,A
  2898            C      M 	MOV	r1_hour,r1_rtc_hour
       0202D 0428     1     MOV A, R1_RTC_HOUR 
       0202E 0073     1     MOV  R1_HOUR ,A
  2899 0202F 10E1 C        	CALL	AppSetClock_htd
  2900 02030 14AC C        	JMP	AppSetClockDisplay
  2901            C        	
  2902 02031      C        AppSetClock_idle_1:
  2903 02031 0420 C        	MOV	A,r1_ax
  2904            C      M 	JPNZ	AppSetClockDisplay
       02032 0E83     1     JBS  _STATUS , Z 
       02033 14AC     1     JMP  APPSETCLOCKDISPLAY ,
  2905 02034      C        AppSetClock_ret:
  2906 02034 1C00 C        	RETL	@(0)
  2907 02035      C        AppSetClock_keypress:
  2908            C      M 	XORA	sys_data,@(KEY_LEFT)
       02035 1826     1     MOV A,@( KEY_LEFT )
       02036 031C     1     XOR A, SYS_DATA 
  2909            C      M 	JPZ	AppSetClock_left
       02037 0C83     1     JBC  _STATUS , Z 
       02038 148F     1     JMP  APPSETCLOCK_LEFT ,
  2910            C      M 	XORA	sys_data,@(KEY_RIGHT)
       02039 1827     1     MOV A,@( KEY_RIGHT )
       0203A 031C     1     XOR A, SYS_DATA 
  2911            C      M 	JPZ	AppSetClock_right
       0203B 0C83     1     JBC  _STATUS , Z 
       0203C 1497     1     JMP  APPSETCLOCK_RIGHT ,
  2912            C      M 	XORA	sys_data,@(KEY_EXIT)
       0203D 1816     1     MOV A,@( KEY_EXIT )
       0203E 031C     1     XOR A, SYS_DATA 
  2913            C      M 	JPZ	AppSetClock_exit
       0203F 0C83     1     JBC  _STATUS , Z 
       02040 149F     1     JMP  APPSETCLOCK_EXIT ,
  2914            C      M 	XORA	sys_data,@(KEY_OK)
       02041 1830     1     MOV A,@( KEY_OK )
       02042 031C     1     XOR A, SYS_DATA 
  2915            C      M 	JPZ	AppSetClock_ok
       02043 0C83     1     JBC  _STATUS , Z 
       02044 14A1     1     JMP  APPSETCLOCK_OK ,
  2916            C      M 	LCALL	LibNumberCheck
                      2  M  PAGE #( LIBNUMBERCHECK ),
       02045 1E81     2     PAGE ( LIBNUMBERCHECK / 1024 ),
       02046 1217     1     CALL ( LIBNUMBERCHECK % 1024 ),
                      2  M  PAGE #( $ ),
       02047 1E88     2     PAGE ( $ / 1024 ),
  2917 02048 1F00 C        	ADD	A,@(0)
  2918            C      M 	JPZ	AppSetClock_ret
       02049 0C83     1     JBC  _STATUS , Z 
       0204A 1434     1     JMP  APPSETCLOCK_RET ,
  2919            C        
  2920 0204B      C        AppSetClock_num:
  2921 0204B 0060 C        	MOV	r1_ax,A
  2922            C      M 	SUB	r1_ax,@(48)
       0204C 1830     1     MOV A,@( 48 )
       0204D 0160     1     SUB  R1_AX ,A
  2923 0204E 0BFF C        	BS	r1_flag,7
  2924 0204F 043E C        	MOV	A,r1_id
  2925 02050 0020 C        	TBL
  2926 02051 1457 C        	JMP	AppSetClock_num_hour0
  2927 02052 145D C        	JMP	AppSetClock_num_hour1
  2928 02053 1463 C        	JMP	AppSetClock_num_minute0
  2929 02054 1469 C        	JMP	AppSetClock_num_minute1
  2930 02055 146F C        	JMP	AppSetClock_num_second0
  2931 02056 1475 C        	JMP	AppSetClock_num_second1
  2932 02057      C        AppSetClock_num_hour0:
  2933            C      M 	AND	r1_hour,@(0x0f)
       02057 180F     1     MOV A,@( 15 )
       02058 02F3     1     AND  R1_HOUR ,A
  2934 02059 0720 C        	SWAPA	r1_ax
  2935 0205A 1AF0 C        	AND	A,@(0xf0)
  2936 0205B 0273 C        	OR	r1_hour,A
  2937 0205C 147A C        	JMP	AppSetClock_adjust
  2938 0205D      C        AppSetClock_num_hour1:
  2939            C      M 	AND	r1_hour,@(0xf0)
       0205D 18F0     1     MOV A,@( 240 )
       0205E 02F3     1     AND  R1_HOUR ,A
  2940            C      M 	ANDA	r1_ax,@(0x0f)
       0205F 180F     1     MOV A,@( 15 )
       02060 02A0     1     AND A, R1_AX 
  2941 02061 0273 C        	OR	r1_hour,A
  2942 02062 147A C        	JMP	AppSetClock_adjust
  2943 02063      C        AppSetClock_num_minute0:
  2944            C      M 	AND	r1_minute,@(0x0f)
       02063 180F     1     MOV A,@( 15 )
       02064 02F2     1     AND  R1_MINUTE ,A
  2945 02065 0720 C        	SWAPA	r1_ax
  2946 02066 1AF0 C        	AND	A,@(0xf0)
  2947 02067 0272 C        	OR	r1_minute,A
  2948 02068 147A C        	JMP	AppSetClock_adjust
  2949 02069      C        AppSetClock_num_minute1:
  2950            C      M 	AND	r1_minute,@(0xf0)
       02069 18F0     1     MOV A,@( 240 )
       0206A 02F2     1     AND  R1_MINUTE ,A
  2951            C      M 	ANDA	r1_ax,@(0x0f)
       0206B 180F     1     MOV A,@( 15 )
       0206C 02A0     1     AND A, R1_AX 
  2952 0206D 0272 C        	OR	r1_minute,A
  2953 0206E 147A C        	JMP	AppSetClock_adjust
  2954 0206F      C        AppSetClock_num_second0:
  2955            C      M 	AND	r1_second,@(0x0f)
       0206F 180F     1     MOV A,@( 15 )
       02070 02F1     1     AND  R1_SECOND ,A
  2956 02071 0720 C        	SWAPA	r1_ax
  2957 02072 1AF0 C        	AND	A,@(0xf0)
  2958 02073 0271 C        	OR	r1_second,A
  2959 02074 147A C        	JMP	AppSetClock_adjust
  2960 02075      C        AppSetClock_num_second1:
  2961            C      M 	AND	r1_second,@(0xf0)
       02075 18F0     1     MOV A,@( 240 )
       02076 02F1     1     AND  R1_SECOND ,A
  2962            C      M 	ANDA	r1_ax,@(0x0f)
       02077 180F     1     MOV A,@( 15 )
       02078 02A0     1     AND A, R1_AX 
  2963 02079 0271 C        	OR	r1_second,A
  2964 0207A      C        AppSetClock_adjust:				; 对输入值进行校验
  2965 0207A 10F0 C        	CALL	AppSetClock_dth
  2966            C        	
  2967            C      M 	SUBA	r1_hour,@(24)
       0207B 1818     1     MOV A,@( 24 )
       0207C 0133     1     SUB A, R1_HOUR 
  2968            C      M 	JPNC	$+3
       0207D 0E03     1     JBS  _STATUS , C 
       0207E 1481     1     JMP ( $ + 3 ),
  2969            C      M 	MOV	r1_hour,@(23)
       0207F 1817     1     MOV A,@( 23 )
       02080 0073     1     MOV  R1_HOUR ,A
  2970            C      M 	SUBA	r1_minute,@(60)
       02081 183C     1     MOV A,@( 60 )
       02082 0132     1     SUB A, R1_MINUTE 
  2971            C      M 	JPNC	$+3
       02083 0E03     1     JBS  _STATUS , C 
       02084 1487     1     JMP ( $ + 3 ),
  2972            C      M 	MOV	r1_minute,@(59)
       02085 183B     1     MOV A,@( 59 )
       02086 0072     1     MOV  R1_MINUTE ,A
  2973            C      M 	SUBA	r1_second,@(60)
       02087 183C     1     MOV A,@( 60 )
       02088 0131     1     SUB A, R1_SECOND 
  2974            C      M 	JPNC	$+3
       02089 0E03     1     JBS  _STATUS , C 
       0208A 148D     1     JMP ( $ + 3 ),
  2975            C      M 	MOV	r1_second,@(59)
       0208B 183B     1     MOV A,@( 59 )
       0208C 0071     1     MOV  R1_SECOND ,A
  2976 0208D 10E1 C        	CALL	AppSetClock_htd
  2977 0208E 1497 C        	JMP	AppSetClock_right
  2978            C        	
  2979 0208F      C        AppSetClock_left:
  2980 0208F 043E C        	MOV	A,r1_id
  2981            C      M 	JPNZ	$+3
       02090 0E83     1     JBS  _STATUS , Z 
       02091 1494     1     JMP ( $ + 3 ),
  2982            C      M 	MOV	r1_id,@(6)
       02092 1806     1     MOV A,@( 6 )
       02093 007E     1     MOV  R1_ID ,A
  2983 02094 01FE C        	DEC	r1_id
  2984 02095 0BBF C        	BS	r1_flag,6
  2985 02096 14AC C        	JMP	AppSetClockDisplay
  2986 02097      C        AppSetClock_right:
  2987 02097 057E C        	INC	r1_id
  2988            C      M 	SUBA	r1_id,@(6)
       02098 1806     1     MOV A,@( 6 )
       02099 013E     1     SUB A, R1_ID 
  2989            C      M 	JPNC	$+2
       0209A 0E03     1     JBS  _STATUS , C 
       0209B 149D     1     JMP ( $ + 2 ),
  2990 0209C 00FE C        	CLR	r1_id
  2991 0209D 0BBF C        	BS	r1_flag,6
  2992 0209E 14AC C        	JMP	AppSetClockDisplay
  2993            C        
  2994 0209F      C        AppSetClock_exit:
  2995 0209F 00D8 C        	CLR	program
  2996 020A0 1C00 C        	RETL	@(0)
  2997 020A1      C        AppSetClock_ok:
  2998 020A1 10F0 C        	CALL	AppSetClock_dth
  2999            C        	
  3000            C      M 	MOV	r1_rtc_hour,r1_hour
       020A2 0433     1     MOV A, R1_HOUR 
       020A3 0068     1     MOV  R1_RTC_HOUR ,A
  3001            C      M 	MOV	r1_rtc_minute,r1_minute
       020A4 0432     1     MOV A, R1_MINUTE 
       020A5 0067     1     MOV  R1_RTC_MINUTE ,A
  3002            C      M 	MOV	r1_rtc_second,r1_second
       020A6 0431     1     MOV A, R1_SECOND 
       020A7 0066     1     MOV  R1_RTC_SECOND ,A
  3003 020A8 0A6E C        	BS	r1_rtc_flag,1
  3004 020A9 0A5F C        	BS	hardware,SYNCCLOCK		; 时钟同步
  3005            C        	
  3006 020AA 00D8 C        	CLR	program
  3007 020AB 1C00 C        	RETL	@(0)
  3008            C        
  3009 020AC      C        AppSetClockDisplay:
  3010            C      M 	PAGE	#(VGA)
       020AC 1E83     1     PAGE ( VGA / 1024 ),
  3011 020AD 1882 C        	MOV	A,@(STYLE_RIGHT)
  3012 020AE 101C C        	CALL	VgaChar
  3013 020AF 0733 C        	SWAPA	r1_hour
  3014 020B0 1A0F C        	AND	A,@(0x0f)
  3015 020B1 1F30 C        	ADD	A,@(48)
  3016 020B2 101C C        	CALL	VgaChar
  3017            C      M 	ANDA	r1_hour,@(0x0f)
       020B3 180F     1     MOV A,@( 15 )
       020B4 02B3     1     AND A, R1_HOUR 
  3018 020B5 1F30 C        	ADD	A,@(48)
  3019 020B6 101C C        	CALL	VgaChar
  3020 020B7 183A C        	MOV	A,@(58)
  3021 020B8 101C C        	CALL	VgaChar
  3022            C        	
  3023 020B9 0732 C        	SWAPA	r1_minute
  3024 020BA 1A0F C        	AND	A,@(0x0f)
  3025 020BB 1F30 C        	ADD	A,@(48)
  3026 020BC 101C C        	CALL	VgaChar
  3027            C      M 	ANDA	r1_minute,@(0x0f)
       020BD 180F     1     MOV A,@( 15 )
       020BE 02B2     1     AND A, R1_MINUTE 
  3028 020BF 1F30 C        	ADD	A,@(48)
  3029 020C0 101C C        	CALL	VgaChar
  3030 020C1 183A C        	MOV	A,@(58)
  3031 020C2 101C C        	CALL	VgaChar
  3032            C        	
  3033 020C3 0731 C        	SWAPA	r1_second
  3034 020C4 1A0F C        	AND	A,@(0x0f)
  3035 020C5 1F30 C        	ADD	A,@(48)
  3036 020C6 101C C        	CALL	VgaChar
  3037            C      M 	ANDA	r1_second,@(0x0f)
       020C7 180F     1     MOV A,@( 15 )
       020C8 02B1     1     AND A, R1_SECOND 
  3038 020C9 1F30 C        	ADD	A,@(48)
  3039 020CA 101C C        	CALL	VgaChar
  3040            C        	
  3041 020CB 1820 C        	MOV	A,@(32)
  3042 020CC 101C C        	CALL	VgaChar
  3043            C        	
  3044 020CD 1800 C        	MOV	A,@(0)
  3045 020CE 101C C        	CALL	VgaChar
  3046 020CF 1078 C        	CALL	VgaDrawChar
  3047            C      M 	PAGE	#($)
       020D0 1E88     1     PAGE ( $ / 1024 ),
  3048            C        
  3049            C      M 	JPNB	r1_flag,6,AppSetClockDisplay_ret
       020D1 0FBF     1     JBS  R1_FLAG , 6 
       020D2 14D9     1     JMP  APPSETCLOCKDISPLAY_RET ,
  3050 020D3 09BF C        	BC	r1_flag,6
  3051 020D4 043E C        	MOV	A,r1_id
  3052 020D5 10DA C        	CALL	AppSetClock_cursor
  3053            C      M 	LCALL	LibStoreCursor
                      2  M  PAGE #( LIBSTORECURSOR ),
       020D6 1E81     2     PAGE ( LIBSTORECURSOR / 1024 ),
       020D7 1079     1     CALL ( LIBSTORECURSOR % 1024 ),
                      2  M  PAGE #( $ ),
       020D8 1E88     2     PAGE ( $ / 1024 ),
  3054 020D9      C        AppSetClockDisplay_ret:
  3055 020D9 1C00 C        	RETL	@(0)
  3056            C        
  3057 020DA      C        AppSetClock_cursor:
  3058 020DA 0020 C        	TBL
  3059 020DB 1C37 C        	RETL	@(0x37)
  3060 020DC 1C38 C        	RETL	@(0x38)
  3061 020DD 1C3A C        	RETL	@(0x3a)
  3062 020DE 1C3B C        	RETL	@(0x3b)
  3063 020DF 1C3D C        	RETL	@(0x3d)
  3064 020E0 1C3E C        	RETL	@(0x3e)
  3065            C        	
  3066 020E1      C        AppSetClock_htd:
  3067            C      M 	PAGE	#(LibMathHexToBcd)
       020E1 1E81     1     PAGE ( LIBMATHHEXTOBCD / 1024 ),
  3068            C      M 	MOV	ax,r1_hour
       020E2 0433     1     MOV A, R1_HOUR 
       020E3 0053     1     MOV  AX ,A
  3069 020E4 1037 C        	CALL	LibMathHexToBcd
  3070 020E5 0073 C        	MOV	r1_hour,A
  3071            C      M 	MOV	ax,r1_minute
       020E6 0432     1     MOV A, R1_MINUTE 
       020E7 0053     1     MOV  AX ,A
  3072 020E8 1037 C        	CALL	LibMathHexToBcd
  3073 020E9 0072 C        	MOV	r1_minute,A
  3074            C      M 	MOV	ax,r1_second
       020EA 0431     1     MOV A, R1_SECOND 
       020EB 0053     1     MOV  AX ,A
  3075 020EC 1037 C        	CALL	LibMathHexToBcd
  3076 020ED 0071 C        	MOV	r1_second,A
  3077            C      M 	PAGE	#($)
       020EE 1E88     1     PAGE ( $ / 1024 ),
  3078 020EF 1C00 C        	RETL	@(0)
  3079            C        
  3080 020F0      C        AppSetClock_dth:
  3081            C      M 	PAGE	#(LibMathBcdToHex)
       020F0 1E81     1     PAGE ( LIBMATHBCDTOHEX / 1024 ),
  3082            C      M 	MOV	ax,r1_hour
       020F1 0433     1     MOV A, R1_HOUR 
       020F2 0053     1     MOV  AX ,A
  3083 020F3 1050 C        	CALL	LibMathBcdToHex
  3084 020F4 0073 C        	MOV	r1_hour,A
  3085            C      M 	MOV	ax,r1_minute
       020F5 0432     1     MOV A, R1_MINUTE 
       020F6 0053     1     MOV  AX ,A
  3086 020F7 1050 C        	CALL	LibMathBcdToHex
  3087 020F8 0072 C        	MOV	r1_minute,A
  3088            C      M 	MOV	ax,r1_second
       020F9 0431     1     MOV A, R1_SECOND 
       020FA 0053     1     MOV  AX ,A
  3089 020FB 1050 C        	CALL	LibMathBcdToHex
  3090 020FC 0071 C        	MOV	r1_second,A
  3091            C      M 	PAGE	#($)
       020FD 1E88     1     PAGE ( $ / 1024 ),
  3092 020FE 1C00 C        	RETL	@(0)
  3093            C        
  3094            C        
  3095            C        /*************************************************
  3096            C        AppSetDate
  3097            C        设置日期
  3098            C        初始化:	
  3099            C        	获取系统日期
  3100            C        	
  3101            C        显示:	
  3102            C        待机:
  3103            C        	1. 设置世纪
  3104            C        	2. 设置年份
  3105            C        	3. 设置月份
  3106            C        	4. 设置天
  3107            C        	
  3108            C        	r1_flag
  3109            C        		.7	=0 还没输入任何数值，这时显示随着时钟更新
  3110            C        			=1 开始设置，显示不更新
  3111            C        		.6	=0 不改变光标
  3112            C        			=1 改变光标
  3113            C        *************************************************/
  3114 020FF      C        AppSetDate:
  3115            C      M 	BANK	1
       020FF 0B84     1     BS  _RAM , 6 
       02100 09C4     1     BC  _RAM , 7 
  3116            C      M 	JPB	sys_flag,PROGRAMINIT,AppSetDate_init
       02101 0CDD     1     JBC  SYS_FLAG , PROGRAMINIT 
       02102 1507     1     JMP  APPSETDATE_INIT ,
  3117            C      M 	JPB	sys_flag,PROGRAMREIN,AppSetDate_rein
       02103 0D1D     1     JBC  SYS_FLAG , PROGRAMREIN 
       02104 1514     1     JMP  APPSETDATE_REIN ,
  3118 02105 1800 C        	MOV	A,@(0)
  3119 02106 1524 C        	JMP	AppSetDate_idle
  3120 02107      C        AppSetDate_init:
  3121 02107 08DD C        	BC	sys_flag,PROGRAMINIT
  3122            C      M 	MOV	r1_century,r1_rtc_century
       02108 042D     1     MOV A, R1_RTC_CENTURY 
       02109 0078     1     MOV  R1_CENTURY ,A
  3123            C      M 	MOV	r1_year,r1_rtc_year
       0210A 042C     1     MOV A, R1_RTC_YEAR 
       0210B 0077     1     MOV  R1_YEAR ,A
  3124            C      M 	MOV	r1_month,r1_rtc_month
       0210C 042B     1     MOV A, R1_RTC_MONTH 
       0210D 0076     1     MOV  R1_MONTH ,A
  3125            C      M 	MOV	r1_day,r1_rtc_day
       0210E 042A     1     MOV A, R1_RTC_DAY 
       0210F 0075     1     MOV  R1_DAY ,A
  3126 02110 1220 C        	CALL	AppSetDate_htd
  3127 02111 00FE C        	CLR	r1_id
  3128 02112 00FF C        	CLR	r1_flag
  3129 02113 151A C        	JMP	AppSetDate_display
  3130 02114      C        AppSetDate_rein:
  3131            C      M 	LCALL	LibPopStack
                      2  M  PAGE #( LIBPOPSTACK ),
       02114 1E81     2     PAGE ( LIBPOPSTACK / 1024 ),
       02115 100C     1     CALL ( LIBPOPSTACK % 1024 ),
                      2  M  PAGE #( $ ),
       02116 1E88     2     PAGE ( $ / 1024 ),
  3132            C      M 	LCALL	LibStoreCursor
                      2  M  PAGE #( LIBSTORECURSOR ),
       02117 1E81     2     PAGE ( LIBSTORECURSOR / 1024 ),
       02118 1079     1     CALL ( LIBSTORECURSOR % 1024 ),
                      2  M  PAGE #( $ ),
       02119 1E88     2     PAGE ( $ / 1024 ),
  3133 0211A      C        AppSetDate_display:
  3134 0211A 091D C        	BC	sys_flag,PROGRAMREIN
  3135            C      M 	PAGE	#(VGA)
       0211B 1E83     1     PAGE ( VGA / 1024 ),
  3136 0211C 10DE C        	CALL	VgaBlankNum2
  3137 0211D 10E0 C        	CALL	VgaBlankChar
  3138            C      M 	PAGE	#($)
       0211E 1E88     1     PAGE ( $ / 1024 ),
  3139 0211F 1831 C        	MOV	A,@(0x31)
  3140            C      M 	LCALL	LibStoreCursor
                      2  M  PAGE #( LIBSTORECURSOR ),
       02120 1E81     2     PAGE ( LIBSTORECURSOR / 1024 ),
       02121 1079     1     CALL ( LIBSTORECURSOR % 1024 ),
                      2  M  PAGE #( $ ),
       02122 1E88     2     PAGE ( $ / 1024 ),
  3141 02123 1801 C        	MOV	A,@(1)
  3142 02124      C        AppSetDate_idle:
  3143 02124 0060 C        	MOV	r1_ax,A
  3144            C      M 	XORA	sys_msg,@(WM_KEYPRESS)
       02125 1801     1     MOV A,@( WM_KEYPRESS )
       02126 031B     1     XOR A, SYS_MSG 
  3145            C      M 	JPZ	AppSetDate_keypress
       02127 0C83     1     JBC  _STATUS , Z 
       02128 153C     1     JMP  APPSETDATE_KEYPRESS ,
  3146            C        	
  3147            C      M 	JPB	r1_flag,7,AppSetDate_idle_1
       02129 0DFF     1     JBC  R1_FLAG , 7 
       0212A 1538     1     JMP  APPSETDATE_IDLE_1 ,
  3148            C      M 	JPNB	r1_rtc_flag,0,AppSetDate_idle_1
       0212B 0E2E     1     JBS  R1_RTC_FLAG , 0 
       0212C 1538     1     JMP  APPSETDATE_IDLE_1 ,
  3149 0212D 082E C        	BC	r1_rtc_flag,0
  3150            C      M 	MOV	r1_century,r1_rtc_century
       0212E 042D     1     MOV A, R1_RTC_CENTURY 
       0212F 0078     1     MOV  R1_CENTURY ,A
  3151            C      M 	MOV	r1_year,r1_rtc_year
       02130 042C     1     MOV A, R1_RTC_YEAR 
       02131 0077     1     MOV  R1_YEAR ,A
  3152            C      M 	MOV	r1_month,r1_rtc_month
       02132 042B     1     MOV A, R1_RTC_MONTH 
       02133 0076     1     MOV  R1_MONTH ,A
  3153            C      M 	MOV	r1_day,r1_rtc_day
       02134 042A     1     MOV A, R1_RTC_DAY 
       02135 0075     1     MOV  R1_DAY ,A
  3154 02136 1220 C        	CALL	AppSetDate_htd
  3155 02137 15DA C        	JMP	AppSetDateDisplay
  3156            C        	
  3157 02138      C        AppSetDate_idle_1:
  3158 02138 0420 C        	MOV	A,r1_ax
  3159            C      M 	JPNZ	AppSetDateDisplay
       02139 0E83     1     JBS  _STATUS , Z 
       0213A 15DA     1     JMP  APPSETDATEDISPLAY ,
  3160 0213B      C        AppSetDate_ret:
  3161 0213B 1C00 C        	RETL	@(0)
  3162 0213C      C        AppSetDate_keypress:
  3163            C      M 	XORA	sys_data,@(KEY_LEFT)
       0213C 1826     1     MOV A,@( KEY_LEFT )
       0213D 031C     1     XOR A, SYS_DATA 
  3164            C      M 	JPZ	AppSetDate_left
       0213E 0C83     1     JBC  _STATUS , Z 
       0213F 15B9     1     JMP  APPSETDATE_LEFT ,
  3165            C      M 	XORA	sys_data,@(KEY_RIGHT)
       02140 1827     1     MOV A,@( KEY_RIGHT )
       02141 031C     1     XOR A, SYS_DATA 
  3166            C      M 	JPZ	AppSetDate_right
       02142 0C83     1     JBC  _STATUS , Z 
       02143 15C1     1     JMP  APPSETDATE_RIGHT ,
  3167            C      M 	XORA	sys_data,@(KEY_EXIT)
       02144 1816     1     MOV A,@( KEY_EXIT )
       02145 031C     1     XOR A, SYS_DATA 
  3168            C      M 	JPZ	AppSetDate_exit
       02146 0C83     1     JBC  _STATUS , Z 
       02147 15C9     1     JMP  APPSETDATE_EXIT ,
  3169            C      M 	XORA	sys_data,@(KEY_OK)
       02148 1830     1     MOV A,@( KEY_OK )
       02149 031C     1     XOR A, SYS_DATA 
  3170            C      M 	JPZ	AppSetDate_ok
       0214A 0C83     1     JBC  _STATUS , Z 
       0214B 15CB     1     JMP  APPSETDATE_OK ,
  3171            C      M 	LCALL	LibNumberCheck
                      2  M  PAGE #( LIBNUMBERCHECK ),
       0214C 1E81     2     PAGE ( LIBNUMBERCHECK / 1024 ),
       0214D 1217     1     CALL ( LIBNUMBERCHECK % 1024 ),
                      2  M  PAGE #( $ ),
       0214E 1E88     2     PAGE ( $ / 1024 ),
  3172 0214F 1F00 C        	ADD	A,@(0)
  3173            C      M 	JPZ	AppSetDate_ret
       02150 0C83     1     JBC  _STATUS , Z 
       02151 153B     1     JMP  APPSETDATE_RET ,
  3174            C        
  3175 02152      C        AppSetDate_num:
  3176 02152 0060 C        	MOV	r1_ax,A
  3177            C      M 	SUB	r1_ax,@(48)
       02153 1830     1     MOV A,@( 48 )
       02154 0160     1     SUB  R1_AX ,A
  3178 02155 0BFF C        	BS	r1_flag,7
  3179 02156 043E C        	MOV	A,r1_id
  3180 02157 0020 C        	TBL
  3181 02158 1560 C        	JMP	AppSetDate_num_century0
  3182 02159 1566 C        	JMP	AppSetDate_num_century1
  3183 0215A 156C C        	JMP	AppSetDate_num_year0
  3184 0215B 1572 C        	JMP	AppSetDate_num_year1
  3185 0215C 1578 C        	JMP	AppSetDate_num_month0
  3186 0215D 157E C        	JMP	AppSetDate_num_month1
  3187 0215E 1584 C        	JMP	AppSetDate_num_day0
  3188 0215F 158A C        	JMP	AppSetDate_num_day1
  3189 02160      C        AppSetDate_num_century0:
  3190            C      M 	AND	r1_century,@(0x0f)
       02160 180F     1     MOV A,@( 15 )
       02161 02F8     1     AND  R1_CENTURY ,A
  3191 02162 0720 C        	SWAPA	r1_ax
  3192 02163 1AF0 C        	AND	A,@(0xf0)
  3193 02164 0278 C        	OR	r1_century,A
  3194 02165 158F C        	JMP	AppSetDate_adjust
  3195 02166      C        AppSetDate_num_century1:
  3196            C      M 	AND	r1_century,@(0xf0)
       02166 18F0     1     MOV A,@( 240 )
       02167 02F8     1     AND  R1_CENTURY ,A
  3197            C      M 	ANDA	r1_ax,@(0x0f)
       02168 180F     1     MOV A,@( 15 )
       02169 02A0     1     AND A, R1_AX 
  3198 0216A 0278 C        	OR	r1_century,A
  3199 0216B 158F C        	JMP	AppSetDate_adjust
  3200 0216C      C        AppSetDate_num_year0:
  3201            C      M 	AND	r1_year,@(0x0f)
       0216C 180F     1     MOV A,@( 15 )
       0216D 02F7     1     AND  R1_YEAR ,A
  3202 0216E 0720 C        	SWAPA	r1_ax
  3203 0216F 1AF0 C        	AND	A,@(0xf0)
  3204 02170 0277 C        	OR	r1_year,A
  3205 02171 158F C        	JMP	AppSetDate_adjust
  3206 02172      C        AppSetDate_num_year1:
  3207            C      M 	AND	r1_year,@(0xf0)
       02172 18F0     1     MOV A,@( 240 )
       02173 02F7     1     AND  R1_YEAR ,A
  3208            C      M 	ANDA	r1_ax,@(0x0f)
       02174 180F     1     MOV A,@( 15 )
       02175 02A0     1     AND A, R1_AX 
  3209 02176 0277 C        	OR	r1_year,A
  3210 02177 158F C        	JMP	AppSetDate_adjust
  3211 02178      C        AppSetDate_num_month0:
  3212            C      M 	AND	r1_month,@(0x0f)
       02178 180F     1     MOV A,@( 15 )
       02179 02F6     1     AND  R1_MONTH ,A
  3213 0217A 0720 C        	SWAPA	r1_ax
  3214 0217B 1AF0 C        	AND	A,@(0xf0)
  3215 0217C 0276 C        	OR	r1_month,A
  3216 0217D 158F C        	JMP	AppSetDate_adjust
  3217 0217E      C        AppSetDate_num_month1:
  3218            C      M 	AND	r1_month,@(0xf0)
       0217E 18F0     1     MOV A,@( 240 )
       0217F 02F6     1     AND  R1_MONTH ,A
  3219            C      M 	ANDA	r1_ax,@(0x0f)
       02180 180F     1     MOV A,@( 15 )
       02181 02A0     1     AND A, R1_AX 
  3220 02182 0276 C        	OR	r1_month,A
  3221 02183 158F C        	JMP	AppSetDate_adjust
  3222 02184      C        AppSetDate_num_day0:
  3223            C      M 	AND	r1_day,@(0x0f)
       02184 180F     1     MOV A,@( 15 )
       02185 02F5     1     AND  R1_DAY ,A
  3224 02186 0720 C        	SWAPA	r1_ax
  3225 02187 1AF0 C        	AND	A,@(0xf0)
  3226 02188 0275 C        	OR	r1_day,A
  3227 02189 158F C        	JMP	AppSetDate_adjust
  3228 0218A      C        AppSetDate_num_day1:
  3229            C      M 	AND	r1_day,@(0xf0)
       0218A 18F0     1     MOV A,@( 240 )
       0218B 02F5     1     AND  R1_DAY ,A
  3230            C      M 	ANDA	r1_ax,@(0x0f)
       0218C 180F     1     MOV A,@( 15 )
       0218D 02A0     1     AND A, R1_AX 
  3231 0218E 0275 C        	OR	r1_day,A
  3232 0218F      C        AppSetDate_adjust:				; 对输入值进行校验
  3233 0218F 1233 C        	CALL	AppSetDate_dth
  3234            C        	
  3235 02190 0436 C        	MOV	A,r1_month
  3236            C      M 	JPNZ	$+3
       02191 0E83     1     JBS  _STATUS , Z 
       02192 1595     1     JMP ( $ + 3 ),
  3237            C      M 	MOV	r1_month,@(1)
       02193 1801     1     MOV A,@( 1 )
       02194 0076     1     MOV  R1_MONTH ,A
  3238            C      M 	SUBA	r1_month,@(13)
       02195 180D     1     MOV A,@( 13 )
       02196 0136     1     SUB A, R1_MONTH 
  3239            C      M 	JPNC	$+3
       02197 0E03     1     JBS  _STATUS , C 
       02198 159B     1     JMP ( $ + 3 ),
  3240            C      M 	MOV	r1_month,@(12)
       02199 180C     1     MOV A,@( 12 )
       0219A 0076     1     MOV  R1_MONTH ,A
  3241            C        	
  3242 0219B 0435 C        	MOV	A,r1_day
  3243            C      M 	JPNZ	$+3
       0219C 0E83     1     JBS  _STATUS , Z 
       0219D 15A0     1     JMP ( $ + 3 ),
  3244            C      M 	MOV	r1_day,@(1)
       0219E 1801     1     MOV A,@( 1 )
       0219F 0075     1     MOV  R1_DAY ,A
  3245            C      M 	SUBA	r1_month,@(1)
       021A0 1801     1     MOV A,@( 1 )
       021A1 0136     1     SUB A, R1_MONTH 
  3246            C      M 	LCALL	TabMonth
                      2  M  PAGE #( TABMONTH ),
       021A2 1E8D     2     PAGE ( TABMONTH / 1024 ),
       021A3 1200     1     CALL ( TABMONTH % 1024 ),
                      2  M  PAGE #( $ ),
       021A4 1E88     2     PAGE ( $ / 1024 ),
  3247 021A5 0053 C        	MOV	ax,A
  3248            C      M 	SUBA	r1_month,@(2)
       021A6 1802     1     MOV A,@( 2 )
       021A7 0136     1     SUB A, R1_MONTH 
  3249            C      M 	JPNZ	$+5
       021A8 0E83     1     JBS  _STATUS , Z 
       021A9 15AE     1     JMP ( $ + 5 ),
  3250            C      M 	LCALL	LibLeapYear
                      2  M  PAGE #( LIBLEAPYEAR ),
       021AA 1E81     2     PAGE ( LIBLEAPYEAR / 1024 ),
       021AB 1325     1     CALL ( LIBLEAPYEAR % 1024 ),
                      2  M  PAGE #( $ ),
       021AC 1E88     2     PAGE ( $ / 1024 ),
  3251 021AD 03D3 C        	ADD	ax,A
  3252            C      M 	SUBA	ax,r1_day
       021AE 0435     1     MOV A, R1_DAY 
       021AF 0113     1     SUB A, AX 
  3253            C      M 	JPC	$+3
       021B0 0C03     1     JBC  _STATUS , C 
       021B1 15B4     1     JMP ( $ + 3 ),
  3254            C      M 	MOV	r1_day,ax
       021B2 0413     1     MOV A, AX 
       021B3 0075     1     MOV  R1_DAY ,A
  3255            C        	
  3256            C      M 	LCALL	LibWeekCheck
                      2  M  PAGE #( LIBWEEKCHECK ),
       021B4 1E81     2     PAGE ( LIBWEEKCHECK / 1024 ),
       021B5 12DE     1     CALL ( LIBWEEKCHECK % 1024 ),
                      2  M  PAGE #( $ ),
       021B6 1E88     2     PAGE ( $ / 1024 ),
  3257 021B7 1220 C        	CALL	AppSetDate_htd
  3258 021B8 15C1 C        	JMP	AppSetDate_right
  3259            C        	
  3260 021B9      C        AppSetDate_left:
  3261 021B9 043E C        	MOV	A,r1_id
  3262            C      M 	JPNZ	$+3
       021BA 0E83     1     JBS  _STATUS , Z 
       021BB 15BE     1     JMP ( $ + 3 ),
  3263            C      M 	MOV	r1_id,@(8)
       021BC 1808     1     MOV A,@( 8 )
       021BD 007E     1     MOV  R1_ID ,A
  3264 021BE 01FE C        	DEC	r1_id
  3265 021BF 0BBF C        	BS	r1_flag,6
  3266 021C0 15DA C        	JMP	AppSetDateDisplay
  3267 021C1      C        AppSetDate_right:
  3268 021C1 057E C        	INC	r1_id
  3269            C      M 	SUBA	r1_id,@(8)
       021C2 1808     1     MOV A,@( 8 )
       021C3 013E     1     SUB A, R1_ID 
  3270            C      M 	JPNC	$+2
       021C4 0E03     1     JBS  _STATUS , C 
       021C5 15C7     1     JMP ( $ + 2 ),
  3271 021C6 00FE C        	CLR	r1_id
  3272 021C7 0BBF C        	BS	r1_flag,6
  3273 021C8 15DA C        	JMP	AppSetDateDisplay
  3274            C        
  3275 021C9      C        AppSetDate_exit:
  3276 021C9 00D8 C        	CLR	program
  3277 021CA 1C00 C        	RETL	@(0)
  3278 021CB      C        AppSetDate_ok:
  3279 021CB 1233 C        	CALL	AppSetDate_dth
  3280            C        	
  3281            C      M 	MOV	r1_rtc_century,r1_century
       021CC 0438     1     MOV A, R1_CENTURY 
       021CD 006D     1     MOV  R1_RTC_CENTURY ,A
  3282            C      M 	MOV	r1_rtc_year,r1_year
       021CE 0437     1     MOV A, R1_YEAR 
       021CF 006C     1     MOV  R1_RTC_YEAR ,A
  3283            C      M 	MOV	r1_rtc_month,r1_month
       021D0 0436     1     MOV A, R1_MONTH 
       021D1 006B     1     MOV  R1_RTC_MONTH ,A
  3284            C      M 	MOV	r1_rtc_day,r1_day
       021D2 0435     1     MOV A, R1_DAY 
       021D3 006A     1     MOV  R1_RTC_DAY ,A
  3285            C      M 	MOV	r1_rtc_week,r1_week
       021D4 0434     1     MOV A, R1_WEEK 
       021D5 0069     1     MOV  R1_RTC_WEEK ,A
  3286 021D6 0A6E C        	BS	r1_rtc_flag,1
  3287 021D7 0A5F C        	BS	hardware,SYNCCLOCK		; 时钟同步
  3288            C        	
  3289 021D8 00D8 C        	CLR	program
  3290 021D9 1C00 C        	RETL	@(0)
  3291            C        
  3292 021DA      C        AppSetDateDisplay:
  3293            C      M 	PAGE	#(VGA)
       021DA 1E83     1     PAGE ( VGA / 1024 ),
  3294 021DB 1881 C        	MOV	A,@(STYLE_LEFT)
  3295 021DC 101C C        	CALL	VgaChar
  3296 021DD 1820 C        	MOV	A,@(32)
  3297 021DE 101C C        	CALL	VgaChar
  3298            C        	
  3299 021DF 0738 C        	SWAPA	r1_century
  3300 021E0 1A0F C        	AND	A,@(0x0f)
  3301 021E1 1F30 C        	ADD	A,@(48)
  3302 021E2 101C C        	CALL	VgaChar
  3303            C      M 	ANDA	r1_century,@(0x0f)
       021E3 180F     1     MOV A,@( 15 )
       021E4 02B8     1     AND A, R1_CENTURY 
  3304 021E5 1F30 C        	ADD	A,@(48)
  3305 021E6 101C C        	CALL	VgaChar
  3306 021E7 0737 C        	SWAPA	r1_year
  3307 021E8 1A0F C        	AND	A,@(0x0f)
  3308 021E9 1F30 C        	ADD	A,@(48)
  3309 021EA 101C C        	CALL	VgaChar
  3310            C      M 	ANDA	r1_year,@(0x0f)
       021EB 180F     1     MOV A,@( 15 )
       021EC 02B7     1     AND A, R1_YEAR 
  3311 021ED 1F30 C        	ADD	A,@(48)
  3312 021EE 101C C        	CALL	VgaChar
  3313 021EF 182D C        	MOV	A,@(45)
  3314 021F0 101C C        	CALL	VgaChar
  3315            C        	
  3316 021F1 0736 C        	SWAPA	r1_month
  3317 021F2 1A0F C        	AND	A,@(0x0f)
  3318 021F3 1F30 C        	ADD	A,@(48)
  3319 021F4 101C C        	CALL	VgaChar
  3320            C      M 	ANDA	r1_month,@(0x0f)
       021F5 180F     1     MOV A,@( 15 )
       021F6 02B6     1     AND A, R1_MONTH 
  3321 021F7 1F30 C        	ADD	A,@(48)
  3322 021F8 101C C        	CALL	VgaChar
  3323 021F9 182D C        	MOV	A,@(45)
  3324 021FA 101C C        	CALL	VgaChar
  3325            C        	
  3326 021FB 0735 C        	SWAPA	r1_day
  3327 021FC 1A0F C        	AND	A,@(0x0f)
  3328 021FD 1F30 C        	ADD	A,@(48)
  3329 021FE 101C C        	CALL	VgaChar
  3330            C      M 	ANDA	r1_day,@(0x0f)
       021FF 180F     1     MOV A,@( 15 )
       02200 02B5     1     AND A, R1_DAY 
  3331 02201 1F30 C        	ADD	A,@(48)
  3332 02202 101C C        	CALL	VgaChar
  3333            C        	
  3334 02203 1820 C        	MOV	A,@(32)
  3335 02204 101C C        	CALL	VgaChar
  3336            C        	
  3337            C      M 	ADDA	r1_week,@(STR_Sun)
       02205 183E     1     MOV A,@( STR_SUN )
       02206 03B4     1     ADD A, R1_WEEK 
  3338 02207 114B C        	CALL	VgaString
  3339            C        	
  3340 02208 182E C        	MOV	A,@(46)
  3341 02209 101C C        	CALL	VgaChar
  3342            C        	
  3343 0220A 1800 C        	MOV	A,@(0)
  3344 0220B 101C C        	CALL	VgaChar
  3345 0220C 1078 C        	CALL	VgaDrawChar
  3346            C      M 	PAGE	#($)
       0220D 1E88     1     PAGE ( $ / 1024 ),
  3347            C        
  3348            C      M 	JPNB	r1_flag,6,AppSetDateDisplay_ret
       0220E 0FBF     1     JBS  R1_FLAG , 6 
       0220F 1616     1     JMP  APPSETDATEDISPLAY_RET ,
  3349 02210 09BF C        	BC	r1_flag,6
  3350 02211 043E C        	MOV	A,r1_id
  3351 02212 1217 C        	CALL	AppSetDate_cursor
  3352            C      M 	LCALL	LibStoreCursor
                      2  M  PAGE #( LIBSTORECURSOR ),
       02213 1E81     2     PAGE ( LIBSTORECURSOR / 1024 ),
       02214 1079     1     CALL ( LIBSTORECURSOR % 1024 ),
                      2  M  PAGE #( $ ),
       02215 1E88     2     PAGE ( $ / 1024 ),
  3353 02216      C        AppSetDateDisplay_ret:
  3354 02216 1C00 C        	RETL	@(0)
  3355            C        
  3356 02217      C        AppSetDate_cursor:
  3357 02217 0020 C        	TBL
  3358 02218 1C31 C        	RETL	@(0x31)
  3359 02219 1C32 C        	RETL	@(0x32)
  3360 0221A 1C33 C        	RETL	@(0x33)
  3361 0221B 1C34 C        	RETL	@(0x34)
  3362 0221C 1C36 C        	RETL	@(0x36)
  3363 0221D 1C37 C        	RETL	@(0x37)
  3364 0221E 1C39 C        	RETL	@(0x39)
  3365 0221F 1C3A C        	RETL	@(0x3a)
  3366            C        	
  3367 02220      C        AppSetDate_htd:
  3368            C      M 	PAGE	#(LibMathHexToBcd)
       02220 1E81     1     PAGE ( LIBMATHHEXTOBCD / 1024 ),
  3369            C      M 	MOV	ax,r1_century
       02221 0438     1     MOV A, R1_CENTURY 
       02222 0053     1     MOV  AX ,A
  3370 02223 1037 C        	CALL	LibMathHexToBcd
  3371 02224 0078 C        	MOV	r1_century,A
  3372            C      M 	MOV	ax,r1_year
       02225 0437     1     MOV A, R1_YEAR 
       02226 0053     1     MOV  AX ,A
  3373 02227 1037 C        	CALL	LibMathHexToBcd
  3374 02228 0077 C        	MOV	r1_year,A
  3375            C      M 	MOV	ax,r1_month
       02229 0436     1     MOV A, R1_MONTH 
       0222A 0053     1     MOV  AX ,A
  3376 0222B 1037 C        	CALL	LibMathHexToBcd
  3377 0222C 0076 C        	MOV	r1_month,A
  3378            C      M 	MOV	ax,r1_day
       0222D 0435     1     MOV A, R1_DAY 
       0222E 0053     1     MOV  AX ,A
  3379 0222F 1037 C        	CALL	LibMathHexToBcd
  3380 02230 0075 C        	MOV	r1_day,A
  3381            C      M 	PAGE	#($)
       02231 1E88     1     PAGE ( $ / 1024 ),
  3382 02232 1C00 C        	RETL	@(0)
  3383            C        
  3384 02233      C        AppSetDate_dth:
  3385            C      M 	PAGE	#(LibMathBcdToHex)
       02233 1E81     1     PAGE ( LIBMATHBCDTOHEX / 1024 ),
  3386            C      M 	MOV	ax,r1_century
       02234 0438     1     MOV A, R1_CENTURY 
       02235 0053     1     MOV  AX ,A
  3387 02236 1050 C        	CALL	LibMathBcdToHex
  3388 02237 0078 C        	MOV	r1_century,A
  3389            C      M 	MOV	ax,r1_year
       02238 0437     1     MOV A, R1_YEAR 
       02239 0053     1     MOV  AX ,A
  3390 0223A 1050 C        	CALL	LibMathBcdToHex
  3391 0223B 0077 C        	MOV	r1_year,A
  3392            C      M 	MOV	ax,r1_month
       0223C 0436     1     MOV A, R1_MONTH 
       0223D 0053     1     MOV  AX ,A
  3393 0223E 1050 C        	CALL	LibMathBcdToHex
  3394 0223F 0076 C        	MOV	r1_month,A
  3395            C      M 	MOV	ax,r1_day
       02240 0435     1     MOV A, R1_DAY 
       02241 0053     1     MOV  AX ,A
  3396 02242 1050 C        	CALL	LibMathBcdToHex
  3397 02243 0075 C        	MOV	r1_day,A
  3398            C      M 	PAGE	#($)
       02244 1E88     1     PAGE ( $ / 1024 ),
  3399 02245 1C00 C        	RETL	@(0)
  3400            C        
  3401            C        
  3402            C        
  3403            C        
  3404            C        
  3405            C        
  3406            C        
  3407            C        /*************************************************
  3408            C        input:	ax:  当前值
  3409            C        	bx:  该调整值能调整的最小值
  3410            C        	exb: 该调整值能调整的最大值
  3411            C        output:	acc
  3412            C        	0 -- 无变化 (以下按键没有按下)
  3413            C        	1 -- 当前值被改变 (ax=改变后的值)(UP/DOWN)
  3414            C        	2 -- 左移 (LEFT)
  3415            C        	3 -- 右移 (RIGHT)
  3416            C        	4 -- 确认 (OK)
  3417            C        	5 -- 取消 (EXIT)
  3418            C        note:
  3419            C        	必须是按键下才能调用
  3420            C        *************************************************/
  3421 02246      C        AppSetValue:
  3422            C      M 	XORA	sys_data,@(KEY_UP)
       02246 1824     1     MOV A,@( KEY_UP )
       02247 031C     1     XOR A, SYS_DATA 
  3423            C      M 	JPZ	AppSetValue_up
       02248 0C83     1     JBC  _STATUS , Z 
       02249 165F     1     JMP  APPSETVALUE_UP ,
  3424            C      M 	XORA	sys_data,@(KEY_DOWN)
       0224A 1825     1     MOV A,@( KEY_DOWN )
       0224B 031C     1     XOR A, SYS_DATA 
  3425            C      M 	JPZ	AppSetValue_down
       0224C 0C83     1     JBC  _STATUS , Z 
       0224D 1668     1     JMP  APPSETVALUE_DOWN ,
  3426            C      M 	XORA	sys_data,@(KEY_LEFT)
       0224E 1826     1     MOV A,@( KEY_LEFT )
       0224F 031C     1     XOR A, SYS_DATA 
  3427            C      M 	JPZ	AppSetValue_left
       02250 0C83     1     JBC  _STATUS , Z 
       02251 1671     1     JMP  APPSETVALUE_LEFT ,
  3428            C      M 	XORA	sys_data,@(KEY_RIGHT)
       02252 1827     1     MOV A,@( KEY_RIGHT )
       02253 031C     1     XOR A, SYS_DATA 
  3429            C      M 	JPZ	AppSetValue_right
       02254 0C83     1     JBC  _STATUS , Z 
       02255 1672     1     JMP  APPSETVALUE_RIGHT ,
  3430            C      M 	XORA	sys_data,@(KEY_OK)
       02256 1830     1     MOV A,@( KEY_OK )
       02257 031C     1     XOR A, SYS_DATA 
  3431            C      M 	JPZ	AppSetValue_ok
       02258 0C83     1     JBC  _STATUS , Z 
       02259 1673     1     JMP  APPSETVALUE_OK ,
  3432            C      M 	XORA	sys_data,@(KEY_EXIT)
       0225A 1816     1     MOV A,@( KEY_EXIT )
       0225B 031C     1     XOR A, SYS_DATA 
  3433            C      M 	JPZ	AppSetValue_exit
       0225C 0C83     1     JBC  _STATUS , Z 
       0225D 1674     1     JMP  APPSETVALUE_EXIT ,
  3434 0225E 1C00 C        	RETL	@(0)
  3435 0225F      C        AppSetValue_up:
  3436            C      M 	SUBA	ax,exb
       0225F 0417     1     MOV A, EXB 
       02260 0113     1     SUB A, AX 
  3437            C      M 	JPC	$+3
       02261 0C03     1     JBC  _STATUS , C 
       02262 1665     1     JMP ( $ + 3 ),
  3438 02263 0553 C        	INC	ax
  3439 02264 1670 C        	JMP	AppSetValue_value
  3440            C      M 	MOV	ax,bx				; 当前值超过最大值，赋最小值
       02265 0416     1     MOV A, BX 
       02266 0053     1     MOV  AX ,A
  3441 02267 1670 C        	JMP	AppSetValue_value
  3442 02268      C        AppSetValue_down:
  3443            C      M 	SUBA	bx,ax
       02268 0413     1     MOV A, AX 
       02269 0116     1     SUB A, BX 
  3444            C      M 	JPC	$+3
       0226A 0C03     1     JBC  _STATUS , C 
       0226B 166E     1     JMP ( $ + 3 ),
  3445 0226C 01D3 C        	DEC	ax
  3446 0226D 1670 C        	JMP	AppSetValue_value
  3447            C      M 	MOV	ax,exb				; 当前值超过最小值，赋最大值
       0226E 0417     1     MOV A, EXB 
       0226F 0053     1     MOV  AX ,A
  3448 02270      C        AppSetValue_value:
  3449 02270 1C01 C        	RETL	@(1)
  3450 02271      C        AppSetValue_left:
  3451 02271 1C02 C        	RETL	@(2)
  3452 02272      C        AppSetValue_right:
  3453 02272 1C03 C        	RETL	@(3)
  3454 02273      C        AppSetValue_ok:
  3455 02273 1C04 C        	RETL	@(4)
  3456 02274      C        AppSetValue_exit:
  3457 02274 1C05 C        	RETL	@(5)
  3458            C        
  3459            C        /*************************************************
  3460            C        AppSetBank3
  3461            C        
  3462            C        input:	_RSR,acc
  3463            C        	_RSR	bank3 要调整的寄存器
  3464            C        	acc	高4位	最小值
  3465            C        		低4位	最大值
  3466            C        output:	acc
  3467            C        	0 -- 无变化 (以下按键没有按下)
  3468            C        	1 -- 当前值被改变 (ax=改变后的值)(UP/DOWN)
  3469            C        	2 -- 左移 (LEFT)
  3470            C        	3 -- 右移 (RIGHT)
  3471            C        	4 -- 确认 (OK)
  3472            C        	5 -- 取消 (EXIT)
  3473            C        note:	检测UP、DOWN、LEFT、RIGHT、OK、EXIT按键
  3474            C        *************************************************/
  3475 02275      C        AppSetBank3:
  3476            C      M 	BANK	3
       02275 0B84     1     BS  _RAM , 6 
       02276 0BC4     1     BS  _RAM , 7 
  3477 02277 0063 C        	MOV	r3_bx,A
  3478            C      M 	JPB	sys_flag,PROGRAMINIT,AppSetBank3_init
       02278 0CDD     1     JBC  SYS_FLAG , PROGRAMINIT 
       02279 167E     1     JMP  APPSETBANK3_INIT ,
  3479            C      M 	JPB	sys_flag,PROGRAMREIN,AppSetBank3_rein
       0227A 0D1D     1     JBC  SYS_FLAG , PROGRAMREIN 
       0227B 1683     1     JMP  APPSETBANK3_REIN ,
  3480 0227C 1800 C        	MOV	A,@(0)
  3481 0227D 1689 C        	JMP	AppSetBank3_idle
  3482 0227E      C        AppSetBank3_init:
  3483 0227E 08DD C        	BC	sys_flag,PROGRAMINIT
  3484 0227F 00FF C        	CLR	r3_flag
  3485            C      M 	MOV	r3_id,_R0
       02280 0400     1     MOV A, _R0 
       02281 007E     1     MOV  R3_ID ,A
  3486 02282 1683 C        	JMP	AppSetBank3_display
  3487 02283      C        AppSetBank3_rein:
  3488 02283      C        AppSetBank3_display:
  3489 02283 091D C        	BC	sys_flag,PROGRAMREIN
  3490            C      M 	PAGE	#(VGA)
       02284 1E83     1     PAGE ( VGA / 1024 ),
  3491 02285 10DE C        	CALL	VgaBlankNum2
  3492 02286 10E0 C        	CALL	VgaBlankChar
  3493            C      M 	PAGE	#($)
       02287 1E88     1     PAGE ( $ / 1024 ),
  3494 02288 1801 C        	MOV	A,@(1)
  3495 02289      C        AppSetBank3_idle:
  3496 02289 0060 C        	MOV	r3_ax,A
  3497            C        	
  3498            C      M 	XORA	sys_msg,@(WM_KEYPRESS)
       0228A 1801     1     MOV A,@( WM_KEYPRESS )
       0228B 031B     1     XOR A, SYS_MSG 
  3499            C      M 	JPZ	AppSetBank3_keypress
       0228C 0C83     1     JBC  _STATUS , Z 
       0228D 1695     1     JMP  APPSETBANK3_KEYPRESS ,
  3500 0228E      C        AppSetBank3_ret:
  3501            C      M 	SUBA	r3_ax,@(4)
       0228E 1804     1     MOV A,@( 4 )
       0228F 0120     1     SUB A, R3_AX 
  3502            C      M 	JPNZ	$+2
       02290 0E83     1     JBS  _STATUS , Z 
       02291 1693     1     JMP ( $ + 2 ),
  3503 02292 0A9F C        	BS	hardware,SYNCSETTING
  3504 02293 0420 C        	MOV	A,r3_ax
  3505 02294 0012 C        	RET
  3506 02295      C        AppSetBank3_keypress:
  3507            C      M 	MOV	ax,r3_id
       02295 043E     1     MOV A, R3_ID 
       02296 0053     1     MOV  AX ,A
  3508 02297 0723 C        	SWAPA	r3_bx
  3509 02298 1A0F C        	AND	A,@(0x0f)
  3510 02299 0056 C        	MOV	bx,A
  3511            C      M 	ANDA	r3_bx,@(0x0f)
       0229A 180F     1     MOV A,@( 15 )
       0229B 02A3     1     AND A, R3_BX 
  3512 0229C 0057 C        	MOV	exb,A
  3513 0229D 1246 C        	CALL	AppSetValue
  3514 0229E 1F00 C        	ADD	A,@(0)
  3515            C      M 	JPZ	AppSetBank3_ret
       0229F 0C83     1     JBC  _STATUS , Z 
       022A0 168E     1     JMP  APPSETBANK3_RET ,
  3516 022A1 0060 C        	MOV	r3_ax,A
  3517 022A2 1D01 C        	SUB	A,@(1)
  3518            C      M 	JPNZ	AppSetBank3_ret
       022A3 0E83     1     JBS  _STATUS , Z 
       022A4 168E     1     JMP  APPSETBANK3_RET ,
  3519            C      M 	MOV	r3_id,ax
       022A5 0413     1     MOV A, AX 
       022A6 007E     1     MOV  R3_ID ,A
  3520 022A7 168E C        	JMP	AppSetBank3_ret
  3521            C        
  3522            C        /*************************************************
  3523            C        AppSetRingMelody
  3524            C        设置铃声类型
  3525            C        初始化:	
  3526            C        	获取当前的铃声
  3527            C        	
  3528            C        显示:	
  3529            C        待机:
  3530            C        	r3_ringmelody
  3531            C        	=0	没有铃声，无法设置
  3532            C        	=!0	铃声ID
  3533            C        	1.  Jingle
  3534            C        	2.  Baby Elephant
  3535            C        	3.  Bonanza
  3536            C        	4.  Choopeta
  3537            C        	5.  For Elise
  3538            C        	6.  Marche Turque
  3539            C        	7.  A Little Night
  3540            C        	8.  Smoke On Water
  3541            C        	9.  The Entertainer
  3542            C        	10. Final Countdown
  3543            C        	11. Twin Peaks
  3544            C        	12. Zorba Le Grec
  3545            C        *************************************************/
  3546 022A8      C        AppSetRingMelody:
  3547            C      M 	BANK	3
       022A8 0B84     1     BS  _RAM , 6 
       022A9 0BC4     1     BS  _RAM , 7 
  3548            C      M 	MOV	_RSR,@(r3_ringmelody)
       022AA 1836     1     MOV A,@( R3_RINGMELODY )
       022AB 0044     1     MOV  _RSR ,A
  3549 022AC 181C C        	MOV	A,@(0x1c)
  3550 022AD 1275 C        	CALL	AppSetBank3
  3551 022AE 0020 C        	TBL
  3552 022AF 1C00 C        	RETL	@(0)
  3553 022B0 16BD C        	JMP	AppSetRingMelody_display
  3554 022B1 1C00 C        	RETL	@(0)
  3555 022B2 1C00 C        	RETL	@(0)
  3556 022B3 16B5 C        	JMP	AppSetRingMelody_ok
  3557 022B4 16B7 C        	JMP	AppSetRingMelody_exit
  3558            C        
  3559 022B5      C        AppSetRingMelody_ok:
  3560            C      M 	MOV	r3_ringmelody,r3_id
       022B5 043E     1     MOV A, R3_ID 
       022B6 0076     1     MOV  R3_RINGMELODY ,A
  3561 022B7      C        AppSetRingMelody_exit:
  3562 022B7 1854 C        	MOV	A,@(0x54)
  3563            C      M 	LCALL	LibSendOneCommand
                      2  M  PAGE #( LIBSENDONECOMMAND ),
       022B8 1E81     2     PAGE ( LIBSENDONECOMMAND / 1024 ),
       022B9 12AF     1     CALL ( LIBSENDONECOMMAND % 1024 ),
                      2  M  PAGE #( $ ),
       022BA 1E88     2     PAGE ( $ / 1024 ),
  3564 022BB 00D8 C        	CLR	program
  3565 022BC 1C00 C        	RETL	@(0)
  3566 022BD      C        AppSetRingMelody_display:
  3567            C      M 	MOV	ax,r3_id
       022BD 043E     1     MOV A, R3_ID 
       022BE 0053     1     MOV  AX ,A
  3568            C      M 	PAGE	#(LibMathHexToBcd)
       022BF 1E81     1     PAGE ( LIBMATHHEXTOBCD / 1024 ),
  3569 022C0 1037 C        	CALL	LibMathHexToBcd
  3570 022C1 0060 C        	MOV	r3_ax,A
  3571            C      M 	SUBA	r3_id,@(1)
       022C2 1801     1     MOV A,@( 1 )
       022C3 013E     1     SUB A, R3_ID 
  3572            C      M 	PAGE	#(TabRingMelody)
       022C4 1E8D     1     PAGE ( TABRINGMELODY / 1024 ),
  3573 022C5 1216 C        	CALL	TabRingMelody
  3574 022C6 0063 C        	MOV	r3_bx,A
  3575            C        	
  3576            C      M 	PAGE	#(VGA)
       022C7 1E83     1     PAGE ( VGA / 1024 ),
  3577 022C8 10DE C        	CALL	VgaBlankNum2
  3578 022C9 10E0 C        	CALL	VgaBlankChar
  3579            C        	
  3580 022CA 1881 C        	MOV	A,@(STYLE_LEFT)
  3581 022CB 1016 C        	CALL	VgaNum2
  3582 022CC 0720 C        	SWAPA	r3_ax
  3583 022CD 1A0F C        	AND	A,@(0x0f)
  3584 022CE 1F30 C        	ADD	A,@(48)
  3585 022CF 1016 C        	CALL	VgaNum2
  3586            C      M 	ANDA	r3_ax,@(0x0f)
       022D0 180F     1     MOV A,@( 15 )
       022D1 02A0     1     AND A, R3_AX 
  3587 022D2 1F30 C        	ADD	A,@(48)
  3588 022D3 1016 C        	CALL	VgaNum2
  3589 022D4 1800 C        	MOV	A,@(0)
  3590 022D5 1016 C        	CALL	VgaNum2
  3591 022D6 1076 C        	CALL	VgaDrawNum2
  3592            C        	
  3593 022D7 1881 C        	MOV	A,@(STYLE_LEFT)
  3594 022D8 101C C        	CALL	VgaChar
  3595 022D9 0423 C        	MOV	A,r3_bx
  3596 022DA 114B C        	CALL	VgaString
  3597 022DB 1800 C        	MOV	A,@(0)
  3598 022DC 101C C        	CALL	VgaChar
  3599 022DD 1078 C        	CALL	VgaDrawChar
  3600            C        	
  3601            C      M 	PAGE	#(IIC)
       022DE 1E80     1     PAGE ( IIC / 1024 ),
  3602 022DF 1853 C        	MOV	A,@(0x53)
  3603 022E0 10A8 C        	CALL	IicSendData
  3604 022E1 043E C        	MOV	A,r3_id
  3605 022E2 10A8 C        	CALL	IicSendData
  3606 022E3 10B3 C        	CALL	IicSer
  3607            C      M 	PAGE	#($)
       022E4 1E88     1     PAGE ( $ / 1024 ),
  3608 022E5 1C00 C        	RETL	@(0)
  3609            C        
  3610            C        
  3611            C        	
  3612            C        
  3613            C        
  3614            C        /*************************************************
  3615            C        AppSetRingVolume
  3616            C        设置铃声音量
  3617            C        初始化:	
  3618            C        	获取当前的铃声音量
  3619            C        	
  3620            C        显示:	
  3621            C        待机:
  3622            C        	r3_ringvolume
  3623            C        	共5档，最小档为OFF
  3624            C        *************************************************/
  3625 022E6      C        AppSetRingVolume:
  3626            C      M 	MOV	_RSR,@(r3_ringvolume)
       022E6 1837     1     MOV A,@( R3_RINGVOLUME )
       022E7 0044     1     MOV  _RSR ,A
  3627 022E8 1804 C        	MOV	A,@(0x04)
  3628 022E9 1275 C        	CALL	AppSetBank3
  3629 022EA 0020 C        	TBL
  3630 022EB 1C00 C        	RETL	@(0)
  3631 022EC 16F5 C        	JMP	AppSetRingVolume_display
  3632 022ED 1C00 C        	RETL	@(0)
  3633 022EE 1C00 C        	RETL	@(0)
  3634 022EF 16F1 C        	JMP	AppSetRingVolume_ok
  3635 022F0 16F3 C        	JMP	AppSetRingVolume_exit
  3636            C        
  3637 022F1      C        AppSetRingVolume_ok:
  3638            C      M 	MOV	r3_ringvolume,r3_id
       022F1 043E     1     MOV A, R3_ID 
       022F2 0077     1     MOV  R3_RINGVOLUME ,A
  3639 022F3      C        AppSetRingVolume_exit:
  3640 022F3 00D8 C        	CLR	program
  3641 022F4 1C00 C        	RETL	@(0)
  3642 022F5      C        AppSetRingVolume_display:
  3643            C        	
  3644            C      M 	PAGE	#(VGA)
       022F5 1E83     1     PAGE ( VGA / 1024 ),
  3645 022F6 10DE C        	CALL	VgaBlankNum2
  3646 022F7 10E0 C        	CALL	VgaBlankChar
  3647            C        	
  3648 022F8 1881 C        	MOV	A,@(STYLE_LEFT)
  3649 022F9 101C C        	CALL	VgaChar
  3650 022FA 1818 C        	MOV	A,@(STR_Ringvolume)
  3651 022FB 114B C        	CALL	VgaString
  3652 022FC 1820 C        	MOV	A,@(32)
  3653 022FD 101C C        	CALL	VgaChar
  3654            C      M 	PAGE	#($)
       022FE 1E88     1     PAGE ( $ / 1024 ),
  3655 022FF 043E C        	MOV	A,r3_id
  3656            C      M 	JPZ	AppSetRingVolume_display_off
       02300 0C83     1     JBC  _STATUS , Z 
       02301 171F     1     JMP  APPSETRINGVOLUME_DISPLAY_OFF ,
  3657 02302 1807 C        	MOV	A,@(7)
  3658            C      M 	LCALL	VgaChar
                      2  M  PAGE #( VGACHAR ),
       02303 1E83     2     PAGE ( VGACHAR / 1024 ),
       02304 101C     1     CALL ( VGACHAR % 1024 ),
                      2  M  PAGE #( $ ),
       02305 1E88     2     PAGE ( $ / 1024 ),
  3659            C      M 	SUBA	r3_id,@(1)
       02306 1801     1     MOV A,@( 1 )
       02307 013E     1     SUB A, R3_ID 
  3660            C      M 	JPZ	AppSetRingVolume_display_end
       02308 0C83     1     JBC  _STATUS , Z 
       02309 1723     1     JMP  APPSETRINGVOLUME_DISPLAY_END ,
  3661 0230A 1809 C        	MOV	A,@(9)
  3662            C      M 	LCALL	VgaChar
                      2  M  PAGE #( VGACHAR ),
       0230B 1E83     2     PAGE ( VGACHAR / 1024 ),
       0230C 101C     1     CALL ( VGACHAR % 1024 ),
                      2  M  PAGE #( $ ),
       0230D 1E88     2     PAGE ( $ / 1024 ),
  3663            C      M 	SUBA	r3_id,@(2)
       0230E 1802     1     MOV A,@( 2 )
       0230F 013E     1     SUB A, R3_ID 
  3664            C      M 	JPZ	AppSetRingVolume_display_end
       02310 0C83     1     JBC  _STATUS , Z 
       02311 1723     1     JMP  APPSETRINGVOLUME_DISPLAY_END ,
  3665 02312 180B C        	MOV	A,@(11)
  3666            C      M 	LCALL	VgaChar
                      2  M  PAGE #( VGACHAR ),
       02313 1E83     2     PAGE ( VGACHAR / 1024 ),
       02314 101C     1     CALL ( VGACHAR % 1024 ),
                      2  M  PAGE #( $ ),
       02315 1E88     2     PAGE ( $ / 1024 ),
  3667            C      M 	SUBA	r3_id,@(3)
       02316 1803     1     MOV A,@( 3 )
       02317 013E     1     SUB A, R3_ID 
  3668            C      M 	JPZ	AppSetRingVolume_display_end
       02318 0C83     1     JBC  _STATUS , Z 
       02319 1723     1     JMP  APPSETRINGVOLUME_DISPLAY_END ,
  3669 0231A 180D C        	MOV	A,@(13)
  3670            C      M 	LCALL	VgaChar
                      2  M  PAGE #( VGACHAR ),
       0231B 1E83     2     PAGE ( VGACHAR / 1024 ),
       0231C 101C     1     CALL ( VGACHAR % 1024 ),
                      2  M  PAGE #( $ ),
       0231D 1E88     2     PAGE ( $ / 1024 ),
  3671 0231E 1723 C        	JMP	AppSetRingVolume_display_end
  3672 0231F      C        AppSetRingVolume_display_off:
  3673 0231F 1830 C        	MOV	A,@(STR_OFF)
  3674            C      M 	LCALL	VgaString
                      2  M  PAGE #( VGASTRING ),
       02320 1E83     2     PAGE ( VGASTRING / 1024 ),
       02321 114B     1     CALL ( VGASTRING % 1024 ),
                      2  M  PAGE #( $ ),
       02322 1E88     2     PAGE ( $ / 1024 ),
  3675 02323      C        AppSetRingVolume_display_end:
  3676            C      M 	PAGE	#(VGA)
       02323 1E83     1     PAGE ( VGA / 1024 ),
  3677 02324 1800 C        	MOV	A,@(0)
  3678 02325 101C C        	CALL	VgaChar
  3679 02326 1078 C        	CALL	VgaDrawChar
  3680            C      M 	PAGE	#($)
       02327 1E88     1     PAGE ( $ / 1024 ),
  3681 02328 1C00 C        	RETL	@(0)
  3682            C        
  3683            C        
  3684            C        /*************************************************
  3685            C        AppSetFlashTime
  3686            C        设置flash时间
  3687            C        初始化:	
  3688            C        	获取当前的flash时间
  3689            C        	
  3690            C        显示:	
  3691            C        待机:
  3692            C        	r3_flashtime
  3693            C        	100ms
  3694            C        	200ms
  3695            C        	300ms
  3696            C        	400ms
  3697            C        	500ms
  3698            C        	600ms
  3699            C        	700ms
  3700            C        	800ms
  3701            C        	900ms
  3702            C        *************************************************/
  3703 02329      C        AppSetFlashTime:
  3704            C      M 	BANK	3
       02329 0B84     1     BS  _RAM , 6 
       0232A 0BC4     1     BS  _RAM , 7 
  3705 0232B 043A C        	MOV	A,r3_flashtime
  3706            C      M 	LJPZ	AppNone
       0232C 0E83     1     JBS  _STATUS , Z 
       0232D 1730     1     JMP ( $ + 3 ),
                      2  M  LJMP  APPNONE 
                      3  M  PAGE #( APPNONE ),
       0232E 1E8B     3     PAGE ( APPNONE / 1024 ),
       0232F 15E8     2     JMP ( APPNONE % 1024 ),
  3707            C      M 	MOV	_RSR,@(r3_flashtime)
       02330 183A     1     MOV A,@( R3_FLASHTIME )
       02331 0044     1     MOV  _RSR ,A
  3708 02332 1819 C        	MOV	A,@(0x19)
  3709 02333 1275 C        	CALL	AppSetBank3
  3710 02334 0020 C        	TBL
  3711 02335 1C00 C        	RETL	@(0)
  3712 02336 173F C        	JMP	AppSetFlashTime_display
  3713 02337 1C00 C        	RETL	@(0)
  3714 02338 1C00 C        	RETL	@(0)
  3715 02339 173B C        	JMP	AppSetFlashTime_ok
  3716 0233A 173D C        	JMP	AppSetFlashTime_exit
  3717            C        
  3718 0233B      C        AppSetFlashTime_ok:
  3719            C      M 	MOV	r3_flashtime,r3_id
       0233B 043E     1     MOV A, R3_ID 
       0233C 007A     1     MOV  R3_FLASHTIME ,A
  3720 0233D      C        AppSetFlashTime_exit:
  3721 0233D 00D8 C        	CLR	program
  3722 0233E 1C00 C        	RETL	@(0)
  3723 0233F      C        AppSetFlashTime_display:
  3724            C        	
  3725            C      M 	PAGE	#(VGA)
       0233F 1E83     1     PAGE ( VGA / 1024 ),
  3726 02340 10DE C        	CALL	VgaBlankNum2
  3727 02341 10E0 C        	CALL	VgaBlankChar
  3728            C        	
  3729 02342 1881 C        	MOV	A,@(STYLE_LEFT)
  3730 02343 101C C        	CALL	VgaChar
  3731 02344 181A C        	MOV	A,@(STR_Flashtime)
  3732 02345 114B C        	CALL	VgaString
  3733 02346 183A C        	MOV	A,@(58)
  3734 02347 101C C        	CALL	VgaChar
  3735            C      M 	ADDA	r3_id,@(48)
       02348 1830     1     MOV A,@( 48 )
       02349 03BE     1     ADD A, R3_ID 
  3736 0234A 101C C        	CALL	VgaChar
  3737 0234B 1830 C        	MOV	A,@(48)
  3738 0234C 101C C        	CALL	VgaChar
  3739 0234D 1830 C        	MOV	A,@(48)
  3740 0234E 101C C        	CALL	VgaChar
  3741 0234F 186D C        	MOV	A,@(109)
  3742 02350 101C C        	CALL	VgaChar
  3743 02351 1873 C        	MOV	A,@(115)
  3744 02352 101C C        	CALL	VgaChar
  3745 02353 1800 C        	MOV	A,@(0)
  3746 02354 101C C        	CALL	VgaChar
  3747 02355 1078 C        	CALL	VgaDrawChar
  3748            C      M 	PAGE	#($)
       02356 1E88     1     PAGE ( $ / 1024 ),
  3749 02357 1C00 C        	RETL	@(0)
  3750            C        
  3751            C        
  3752            C        /*************************************************
  3753            C        AppSetPauseTime
  3754            C        设置pause时间
  3755            C        初始化:	
  3756            C        	获取当前的pause时间
  3757            C        	
  3758            C        显示:	
  3759            C        待机:
  3760            C        	r3_flashtime
  3761            C        	1s
  3762            C        	2s
  3763            C        	3s
  3764            C        	4s
  3765            C        	5s
  3766            C        	6s
  3767            C        *************************************************/
  3768 02358      C        AppSetPauseTime:
  3769            C      M 	BANK	3
       02358 0B84     1     BS  _RAM , 6 
       02359 0BC4     1     BS  _RAM , 7 
  3770 0235A 043B C        	MOV	A,r3_pausetime
  3771            C      M 	LJPZ	AppNone
       0235B 0E83     1     JBS  _STATUS , Z 
       0235C 175F     1     JMP ( $ + 3 ),
                      2  M  LJMP  APPNONE 
                      3  M  PAGE #( APPNONE ),
       0235D 1E8B     3     PAGE ( APPNONE / 1024 ),
       0235E 15E8     2     JMP ( APPNONE % 1024 ),
  3772            C      M 	MOV	_RSR,@(r3_pausetime)
       0235F 183B     1     MOV A,@( R3_PAUSETIME )
       02360 0044     1     MOV  _RSR ,A
  3773 02361 1816 C        	MOV	A,@(0x16)
  3774 02362 1275 C        	CALL	AppSetBank3
  3775 02363 0020 C        	TBL
  3776 02364 1C00 C        	RETL	@(0)
  3777 02365 176E C        	JMP	AppSetPauseTime_display
  3778 02366 1C00 C        	RETL	@(0)
  3779 02367 1C00 C        	RETL	@(0)
  3780 02368 176A C        	JMP	AppSetPauseTime_ok
  3781 02369 176C C        	JMP	AppSetPauseTime_exit
  3782            C        
  3783 0236A      C        AppSetPauseTime_ok:
  3784            C      M 	MOV	r3_pausetime,r3_id
       0236A 043E     1     MOV A, R3_ID 
       0236B 007B     1     MOV  R3_PAUSETIME ,A
  3785 0236C      C        AppSetPauseTime_exit:
  3786 0236C 00D8 C        	CLR	program
  3787 0236D 1C00 C        	RETL	@(0)
  3788 0236E      C        AppSetPauseTime_display:
  3789            C        	
  3790            C      M 	PAGE	#(VGA)
       0236E 1E83     1     PAGE ( VGA / 1024 ),
  3791 0236F 10DE C        	CALL	VgaBlankNum2
  3792 02370 10E0 C        	CALL	VgaBlankChar
  3793            C        	
  3794 02371 1881 C        	MOV	A,@(STYLE_LEFT)
  3795 02372 101C C        	CALL	VgaChar
  3796 02373 181B C        	MOV	A,@(STR_Pausetime)
  3797 02374 114B C        	CALL	VgaString
  3798 02375 183A C        	MOV	A,@(58)
  3799 02376 101C C        	CALL	VgaChar
  3800            C      M 	ADDA	r3_id,@(48)
       02377 1830     1     MOV A,@( 48 )
       02378 03BE     1     ADD A, R3_ID 
  3801 02379 101C C        	CALL	VgaChar
  3802 0237A 1873 C        	MOV	A,@(115)
  3803 0237B 101C C        	CALL	VgaChar
  3804 0237C 1800 C        	MOV	A,@(0)
  3805 0237D 101C C        	CALL	VgaChar
  3806 0237E 1078 C        	CALL	VgaDrawChar
  3807            C      M 	PAGE	#($)
       0237F 1E88     1     PAGE ( $ / 1024 ),
  3808 02380 1C00 C        	RETL	@(0)
  3809            C        
  3810            C        
  3811            C        /*************************************************
  3812            C        AppSetLcdContrast
  3813            C        设置pause时间
  3814            C        初始化:	
  3815            C        	获取当前的pause时间
  3816            C        	
  3817            C        显示:	
  3818            C        待机:
  3819            C        	r3_contrast
  3820            C        	20%
  3821            C        	30%
  3822            C        	40%
  3823            C        	50%
  3824            C        	60%
  3825            C        	70%
  3826            C        	80%
  3827            C        *************************************************/
  3828 02381      C        AppSetLcdContrast:
  3829            C        	;BANK	3
  3830            C        	;MOV	A,r3_contrast
  3831            C        	;LJPZ	AppNone
  3832            C      M 	MOV	_RSR,@(r3_contrast+0xc0)
       02381 18F4     1     MOV A,@(( R3_CONTRAST + 192 ))
       02382 0044     1     MOV  _RSR ,A
  3833 02383 1828 C        	MOV	A,@(0x28)
  3834 02384 1275 C        	CALL	AppSetBank3
  3835 02385 0020 C        	TBL
  3836 02386 1C00 C        	RETL	@(0)
  3837 02387 1794 C        	JMP	AppSetLcdContrast_display
  3838 02388 1C00 C        	RETL	@(0)
  3839 02389 1C00 C        	RETL	@(0)
  3840 0238A 178C C        	JMP	AppSetLcdContrast_ok
  3841 0238B 178E C        	JMP	AppSetLcdContrast_exit
  3842            C        
  3843 0238C      C        AppSetLcdContrast_ok:
  3844            C      M 	MOV	r3_contrast,r3_id
       0238C 043E     1     MOV A, R3_ID 
       0238D 0074     1     MOV  R3_CONTRAST ,A
  3845 0238E      C        AppSetLcdContrast_exit:
  3846 0238E 0434 C        	MOV	A,r3_contrast
  3847            C      M 	LCALL	LibLcdContrast
                      2  M  PAGE #( LIBLCDCONTRAST ),
       0238F 1E81     2     PAGE ( LIBLCDCONTRAST / 1024 ),
       02390 1087     1     CALL ( LIBLCDCONTRAST % 1024 ),
                      2  M  PAGE #( $ ),
       02391 1E88     2     PAGE ( $ / 1024 ),
  3848 02392 00D8 C        	CLR	program
  3849 02393 1C00 C        	RETL	@(0)
  3850 02394      C        AppSetLcdContrast_display:
  3851 02394 043E C        	MOV	A,r3_id
  3852            C      M 	LCALL	LibLcdContrast
                      2  M  PAGE #( LIBLCDCONTRAST ),
       02395 1E81     2     PAGE ( LIBLCDCONTRAST / 1024 ),
       02396 1087     1     CALL ( LIBLCDCONTRAST % 1024 ),
                      2  M  PAGE #( $ ),
       02397 1E88     2     PAGE ( $ / 1024 ),
  3853            C        	
  3854            C      M 	PAGE	#(VGA)
       02398 1E83     1     PAGE ( VGA / 1024 ),
  3855 02399 10DE C        	CALL	VgaBlankNum2
  3856 0239A 10E0 C        	CALL	VgaBlankChar
  3857            C        	
  3858 0239B 1881 C        	MOV	A,@(STYLE_LEFT)
  3859 0239C 101C C        	CALL	VgaChar
  3860 0239D 181C C        	MOV	A,@(STR_LCDcontrast)
  3861 0239E 114B C        	CALL	VgaString
  3862 0239F 183A C        	MOV	A,@(58)
  3863 023A0 101C C        	CALL	VgaChar
  3864            C      M 	ADDA	r3_id,@(48)
       023A1 1830     1     MOV A,@( 48 )
       023A2 03BE     1     ADD A, R3_ID 
  3865 023A3 101C C        	CALL	VgaChar
  3866 023A4 1830 C        	MOV	A,@(48)
  3867 023A5 101C C        	CALL	VgaChar
  3868 023A6 1825 C        	MOV	A,@(37)
  3869 023A7 101C C        	CALL	VgaChar
  3870 023A8 1873 C        	MOV	A,@(115)
  3871 023A9 101C C        	CALL	VgaChar
  3872 023AA 1800 C        	MOV	A,@(0)
  3873 023AB 101C C        	CALL	VgaChar
  3874 023AC 1078 C        	CALL	VgaDrawChar
  3875            C      M 	PAGE	#($)
       023AD 1E88     1     PAGE ( $ / 1024 ),
  3876 023AE 1C00 C        	RETL	@(0)
  3877            C        
  3878            C        
  3879            C        /*************************************************
  3880            C        AppSetDam
  3881            C        设置答录机
  3882            C        初始化:	
  3883            C        显示:	
  3884            C        待机:
  3885            C        *************************************************/
  3886 023AF      C        AppSetDam:
  3887            C      M 	BANK	3
       023AF 0B84     1     BS  _RAM , 6 
       023B0 0BC4     1     BS  _RAM , 7 
  3888            C      M 	JPB	sys_flag,PROGRAMINIT,AppSetDam_init
       023B1 0CDD     1     JBC  SYS_FLAG , PROGRAMINIT 
       023B2 17B6     1     JMP  APPSETDAM_INIT ,
  3889            C      M 	JPB	sys_flag,PROGRAMREIN,AppSetDam_rein
       023B3 0D1D     1     JBC  SYS_FLAG , PROGRAMREIN 
       023B4 17BA     1     JMP  APPSETDAM_REIN ,
  3890 023B5 17BF C        	JMP	AppSetDam_idle
  3891 023B6      C        AppSetDam_init:
  3892 023B6 08DD C        	BC	sys_flag,PROGRAMINIT
  3893            C      M 	MOV	r3_flag,r3_ogm
       023B7 043C     1     MOV A, R3_OGM 
       023B8 007F     1     MOV  R3_FLAG ,A
  3894 023B9 17BA C        	JMP	AppSetDam_display
  3895 023BA      C        AppSetDam_rein:
  3896 023BA      C        AppSetDam_display:
  3897 023BA 091D C        	BC	sys_flag,PROGRAMREIN
  3898            C      M 	LCALL	VgaBlankNum2
                      2  M  PAGE #( VGABLANKNUM2 ),
       023BB 1E83     2     PAGE ( VGABLANKNUM2 / 1024 ),
       023BC 10DE     1     CALL ( VGABLANKNUM2 % 1024 ),
                      2  M  PAGE #( $ ),
       023BD 1E88     2     PAGE ( $ / 1024 ),
  3899 023BE 13E4 C        	CALL	AppSetDamDisplay
  3900 023BF      C        AppSetDam_idle:
  3901            C      M 	XORA	sys_msg,@(WM_KEYPRESS)
       023BF 1801     1     MOV A,@( WM_KEYPRESS )
       023C0 031B     1     XOR A, SYS_MSG 
  3902 023C1 0E83 C        	JBS	_STATUS,Z
  3903 023C2 1C00 C        	RETL	@(0)
  3904 023C3      C        AppSetDam_key:
  3905            C      M 	XORA	sys_data,@(KEY_UP)
       023C3 1824     1     MOV A,@( KEY_UP )
       023C4 031C     1     XOR A, SYS_DATA 
  3906            C      M 	JPZ	AppSetDam_up
       023C5 0C83     1     JBC  _STATUS , Z 
       023C6 17D4     1     JMP  APPSETDAM_UP ,
  3907            C      M 	XORA	sys_data,@(KEY_DOWN)
       023C7 1825     1     MOV A,@( KEY_DOWN )
       023C8 031C     1     XOR A, SYS_DATA 
  3908            C      M 	JPZ	AppSetDam_down
       023C9 0C83     1     JBC  _STATUS , Z 
       023CA 17D4     1     JMP  APPSETDAM_DOWN ,
  3909            C      M 	XORA	sys_data,@(KEY_OK)
       023CB 1830     1     MOV A,@( KEY_OK )
       023CC 031C     1     XOR A, SYS_DATA 
  3910            C      M 	JPZ	AppSetDam_ok
       023CD 0C83     1     JBC  _STATUS , Z 
       023CE 17D7     1     JMP  APPSETDAM_OK ,
  3911            C      M 	XORA	sys_data,@(KEY_EXIT)
       023CF 1816     1     MOV A,@( KEY_EXIT )
       023D0 031C     1     XOR A, SYS_DATA 
  3912            C      M 	JPZ	AppSetDam_exit
       023D1 0C83     1     JBC  _STATUS , Z 
       023D2 17E2     1     JMP  APPSETDAM_EXIT ,
  3913 023D3 1C00 C        	RETL	@(0)
  3914 023D4      C        AppSetDam_up:
  3915 023D4      C        AppSetDam_down:
  3916            C      M 	INVB	r3_flag,7
                      2  M  XOR  R3_FLAG ,@(( 1 << 7 ))
       023D4 1880     2     MOV A,@(( 1 << 7 ))
       023D5 037F     2     XOR  R3_FLAG ,A
  3917 023D6 17E4 C        	JMP	AppSetDamDisplay
  3918 023D7      C        AppSetDam_ok:
  3919            C      M 	AND	r3_ogm,@(~(1<<7))
       023D7 187F     1     MOV A,@((~( 1 << 7 )))
       023D8 02FC     1     AND  R3_OGM ,A
  3920            C      M 	ANDA	r3_flag,@(1<<7)
       023D9 1880     1     MOV A,@(( 1 << 7 ))
       023DA 02BF     1     AND A, R3_FLAG 
  3921 023DB 027C C        	OR	r3_ogm,A
  3922            C      M 	JPB	r3_flag,7,AppSetDam_exit
       023DC 0DFF     1     JBC  R3_FLAG , 7 
       023DD 17E2     1     JMP  APPSETDAM_EXIT ,
  3923 023DE 1811 C        	MOV	A,@(PRO_AppMenuRecorderOn)
  3924            C      M 	PAGE	#(LibPushProgram)
       023DF 1E81     1     PAGE ( LIBPUSHPROGRAM / 1024 ),
  3925 023E0 1000 C        	CALL	LibPushProgram
  3926 023E1 1C00 C        	RETL	@(0)
  3927 023E2      C        AppSetDam_exit:
  3928 023E2 00D8 C        	CLR	program
  3929 023E3 1C00 C        	RETL	@(0)
  3930 023E4      C        AppSetDamDisplay:
  3931            C      M 	JPB	r3_flag,7,AppSetDamDisplay_off
       023E4 0DFF     1     JBC  R3_FLAG , 7 
       023E5 17E8     1     JMP  APPSETDAMDISPLAY_OFF ,
  3932 023E6 1838 C        	MOV	A,@(STR_RecorderON)
  3933 023E7 17E9 C        	JMP	AppSetDamDisplay_1
  3934 023E8      C        AppSetDamDisplay_off:
  3935 023E8 1839 C        	MOV	A,@(STR_RecorderOFF)
  3936 023E9      C        AppSetDamDisplay_1:
  3937 023E9 0060 C        	MOV	r3_ax,A
  3938            C      M 	PAGE	#(VGA)
       023EA 1E83     1     PAGE ( VGA / 1024 ),
  3939 023EB 10E0 C        	CALL	VgaBlankChar
  3940 023EC 1881 C        	MOV	A,@(STYLE_LEFT)
  3941 023ED 101C C        	CALL	VgaChar
  3942 023EE 0420 C        	MOV	A,r3_ax
  3943 023EF 114B C        	CALL	VgaString
  3944 023F0 1800 C        	MOV	A,@(0)
  3945 023F1 101C C        	CALL	VgaChar
  3946 023F2 1078 C        	CALL	VgaDrawChar
  3947            C      M 	PAGE	#($)
       023F3 1E88     1     PAGE ( $ / 1024 ),
  3948 023F4 1C00 C        	RETL	@(0)
  3949            C        
  3950            C        ORG	0x2400
  3951            C        	
  3952            C        
  3953            C        
  3954            C        /*************************************************
  3955            C        AppPlay
  3956            C        播放(按下PLAY键)
  3957            C        初始化:	
  3958            C        	向DSP发送播放命令
  3959            C        显示:	
  3960            C        待机:	
  3961            C        	r3_flag		播放时的标志位
  3962            C        	.7		0-no message
  3963            C        	.6		0-play 1-pause
  3964            C        	.5		0-old  1-new
  3965            C        	.4		0-memo 1-icm
  3966            C        	
  3967            C        *************************************************/
  3968 02400      C        AppPlay:
  3969            C      M 	JPB	sys_flag,PROGRAMINIT,AppPlay_init
       02400 0CDD     1     JBC  SYS_FLAG , PROGRAMINIT 
       02401 1405     1     JMP  APPPLAY_INIT ,
  3970            C      M 	JPB	sys_flag,PROGRAMREIN,AppPlay_rein
       02402 0D1D     1     JBC  SYS_FLAG , PROGRAMREIN 
       02403 1416     1     JMP  APPPLAY_REIN ,
  3971 02404 1418 C        	JMP	AppPlay_idle
  3972 02405      C        AppPlay_init:
  3973 02405 08DD C        	BC	sys_flag,PROGRAMINIT
  3974 02406 1841 C        	MOV	A,@(0x41)			; play
  3975            C      M 	PAGE	#(LibSendOneCommand)
       02407 1E81     1     PAGE ( LIBSENDONECOMMAND / 1024 ),
  3976 02408 12AF C        	CALL	LibSendOneCommand
  3977 02409 11BC C        	CALL	LibInitTimer
  3978            C      M 	PAGE	#($)
       0240A 1E89     1     PAGE ( $ / 1024 ),
  3979            C      M 	BANK	3
       0240B 0B84     1     BS  _RAM , 6 
       0240C 0BC4     1     BS  _RAM , 7 
  3980 0240D 0427 C        	MOV	A,r3_totalmsg
  3981            C      M 	JPZ	AppPlay_nomessage
       0240E 0C83     1     JBC  _STATUS , Z 
       0240F 147E     1     JMP  APPPLAY_NOMESSAGE ,
  3982 02410 00FF C        	CLR	r3_flag
  3983 02411 00FE C        	CLR	r3_id
  3984 02412 0426 C        	MOV	A,r3_newmsg
  3985 02413 0E83 C        	JBS	_STATUS,Z
  3986 02414 0B7F C        	BS	r3_flag,5
  3987 02415 1416 C        	JMP	AppPlay_display
  3988 02416      C        AppPlay_rein:
  3989 02416      C        AppPlay_display:
  3990 02416 091D C        	BC	sys_flag,PROGRAMREIN
  3991 02417 1083 C        	CALL	AppDisplayPlayMessage
  3992 02418      C        AppPlay_idle:
  3993            C      M 	BANK	3
       02418 0B84     1     BS  _RAM , 6 
       02419 0BC4     1     BS  _RAM , 7 
  3994            C      M 	JPB	r3_flag,6,AppPlay_idle_1
       0241A 0DBF     1     JBC  R3_FLAG , 6 
       0241B 1423     1     JMP  APPPLAY_IDLE_1 ,
  3995 0241C 043E C        	MOV	A,r3_id
  3996            C      M 	JPZ	AppPlay_idle_1
       0241D 0C83     1     JBC  _STATUS , Z 
       0241E 1423     1     JMP  APPPLAY_IDLE_1 ,
  3997            C      M 	PAGE	#(LibUpdateTimer)
       0241F 1E81     1     PAGE ( LIBUPDATETIMER / 1024 ),
  3998 02420 11C3 C        	CALL	LibUpdateTimer
  3999 02421 11E5 C        	CALL	LibDisplayTimer
  4000            C      M 	PAGE	#($)
       02422 1E89     1     PAGE ( $ / 1024 ),
  4001 02423      C        AppPlay_idle_1:
  4002            C      M 	BANK	3
       02423 0B84     1     BS  _RAM , 6 
       02424 0BC4     1     BS  _RAM , 7 
  4003            C      M 	XORA	sys_msg,@(WM_KEYPRESS)
       02425 1801     1     MOV A,@( WM_KEYPRESS )
       02426 031B     1     XOR A, SYS_MSG 
  4004            C      M 	JPZ	AppPlay_keypress
       02427 0C83     1     JBC  _STATUS , Z 
       02428 142E     1     JMP  APPPLAY_KEYPRESS ,
  4005            C      M 	XORA	sys_msg,@(WM_COMMAND)
       02429 1807     1     MOV A,@( WM_COMMAND )
       0242A 031B     1     XOR A, SYS_MSG 
  4006            C      M 	JPZ	AppPlay_command
       0242B 0C83     1     JBC  _STATUS , Z 
       0242C 145C     1     JMP  APPPLAY_COMMAND ,
  4007 0242D 1C00 C        	RETL	@(0)
  4008 0242E      C        AppPlay_keypress:
  4009            C      M 	XORA	sys_data,@(KEY_PLAY)
       0242E 1820     1     MOV A,@( KEY_PLAY )
       0242F 031C     1     XOR A, SYS_DATA 
  4010            C      M 	JPZ	AppPlay_play
       02430 0C83     1     JBC  _STATUS , Z 
       02431 1446     1     JMP  APPPLAY_PLAY ,
  4011            C      M 	XORA	sys_data,@(KEY_STOP)
       02432 1816     1     MOV A,@( KEY_STOP )
       02433 031C     1     XOR A, SYS_DATA 
  4012            C      M 	JPZ	AppPlay_stop
       02434 0C83     1     JBC  _STATUS , Z 
       02435 1451     1     JMP  APPPLAY_STOP ,
  4013            C      M 	XORA	sys_data,@(KEY_LEFT)
       02436 1826     1     MOV A,@( KEY_LEFT )
       02437 031C     1     XOR A, SYS_DATA 
  4014            C      M 	JPZ	AppPlay_left
       02438 0C83     1     JBC  _STATUS , Z 
       02439 1453     1     JMP  APPPLAY_LEFT ,
  4015            C      M 	XORA	sys_data,@(KEY_RIGHT)
       0243A 1827     1     MOV A,@( KEY_RIGHT )
       0243B 031C     1     XOR A, SYS_DATA 
  4016            C      M 	JPZ	AppPlay_right
       0243C 0C83     1     JBC  _STATUS , Z 
       0243D 1455     1     JMP  APPPLAY_RIGHT ,
  4017            C      M 	XORA	sys_data,@(KEY_ERASE)
       0243E 1823     1     MOV A,@( KEY_ERASE )
       0243F 031C     1     XOR A, SYS_DATA 
  4018            C      M 	JPZ	AppPlay_erase
       02440 0C83     1     JBC  _STATUS , Z 
       02441 1457     1     JMP  APPPLAY_ERASE ,
  4019            C      M 	LCALL	LibVolAdjust
                      2  M  PAGE #( LIBVOLADJUST ),
       02442 1E81     2     PAGE ( LIBVOLADJUST / 1024 ),
       02443 1332     1     CALL ( LIBVOLADJUST % 1024 ),
                      2  M  PAGE #( $ ),
       02444 1E89     2     PAGE ( $ / 1024 ),
  4020 02445 1C00 C        	RETL	@(0)
  4021 02446      C        AppPlay_play:
  4022            C      M 	INVB	r3_flag,6
                      2  M  XOR  R3_FLAG ,@(( 1 << 6 ))
       02446 1840     2     MOV A,@(( 1 << 6 ))
       02447 037F     2     XOR  R3_FLAG ,A
  4023            C      M 	JPB	r3_flag,6,AppPlay_pause
       02448 0DBF     1     JBC  R3_FLAG , 6 
       02449 144C     1     JMP  APPPLAY_PAUSE ,
  4024 0244A 1841 C        	MOV	A,@(0x41)			; play
  4025 0244B 144D C        	JMP	AppPlay_play_1
  4026 0244C      C        AppPlay_pause:
  4027 0244C 1842 C        	MOV	A,@(0x42)			; pause
  4028 0244D      C        AppPlay_play_1:
  4029            C      M 	LCALL	LibSendOneCommand
                      2  M  PAGE #( LIBSENDONECOMMAND ),
       0244D 1E81     2     PAGE ( LIBSENDONECOMMAND / 1024 ),
       0244E 12AF     1     CALL ( LIBSENDONECOMMAND % 1024 ),
                      2  M  PAGE #( $ ),
       0244F 1E89     2     PAGE ( $ / 1024 ),
  4030 02450 1483 C        	JMP	AppDisplayPlayMessage
  4031 02451      C        AppPlay_stop:
  4032 02451 1854 C        	MOV	A,@(0x54)			; stop
  4033 02452 1459 C        	JMP	AppPlay_send
  4034 02453      C        AppPlay_left:
  4035 02453 1844 C        	MOV	A,@(0x44)			; repeat/previous
  4036 02454 1459 C        	JMP	AppPlay_send
  4037 02455      C        AppPlay_right:
  4038 02455 1843 C        	MOV	A,@(0x43)			; skip
  4039 02456 1459 C        	JMP	AppPlay_send
  4040 02457      C        AppPlay_erase:
  4041 02457 184C C        	MOV	A,@(0x4c)			; erase
  4042 02458 1459 C        	JMP	AppPlay_send
  4043 02459      C        AppPlay_send:
  4044            C      M 	PAGE	#(LibSendOneCommand)
       02459 1E81     1     PAGE ( LIBSENDONECOMMAND / 1024 ),
  4045 0245A 12AF C        	CALL	LibSendOneCommand
  4046 0245B 1C00 C        	RETL	@(0)
  4047 0245C      C        AppPlay_command:
  4048            C      M 	XORA	sys_data,@(0x13)		; return to idle
       0245C 1813     1     MOV A,@( 19 )
       0245D 031C     1     XOR A, SYS_DATA 
  4049            C      M 	JPZ	AppPlay_exit
       0245E 0C83     1     JBC  _STATUS , Z 
       0245F 1469     1     JMP  APPPLAY_EXIT ,
  4050            C      M 	XORA	sys_data,@(0x10)		; msg serial
       02460 1810     1     MOV A,@( 16 )
       02461 031C     1     XOR A, SYS_DATA 
  4051            C      M 	JPZ	AppPlay_id
       02462 0C83     1     JBC  _STATUS , Z 
       02463 146B     1     JMP  APPPLAY_ID ,
  4052            C      M 	XORA	sys_data,@(0x11)		; msg type
       02464 1811     1     MOV A,@( 17 )
       02465 031C     1     XOR A, SYS_DATA 
  4053            C      M 	JPZ	AppPlay_type
       02466 0C83     1     JBC  _STATUS , Z 
       02467 1473     1     JMP  APPPLAY_TYPE ,
  4054 02468 1C00 C        	RETL	@(0)
  4055 02469      C        AppPlay_exit:
  4056 02469 00D8 C        	CLR	program
  4057 0246A 1C00 C        	RETL	@(0)
  4058 0246B      C        AppPlay_id:
  4059 0246B 1801 C        	MOV	A,@(1)
  4060            C      M 	PAGE	#(LibGetCommand)
       0246C 1E81     1     PAGE ( LIBGETCOMMAND / 1024 ),
  4061 0246D 12B6 C        	CALL	LibGetCommand
  4062 0246E 007E C        	MOV	r3_id,A
  4063 0246F 09BF C        	BC	r3_flag,6
  4064 02470 11BC C        	CALL	LibInitTimer			; 一个新的msg播放，重新计时
  4065            C      M 	PAGE	#($)
       02471 1E89     1     PAGE ( $ / 1024 ),
  4066 02472 1483 C        	JMP	AppDisplayPlayMessage
  4067 02473      C        AppPlay_type:
  4068            C      M 	BANK	3
       02473 0B84     1     BS  _RAM , 6 
       02474 0BC4     1     BS  _RAM , 7 
  4069 02475 097F C        	BC	r3_flag,5
  4070 02476 1801 C        	MOV	A,@(1)
  4071            C      M 	LCALL	LibGetCommand
                      2  M  PAGE #( LIBGETCOMMAND ),
       02477 1E81     2     PAGE ( LIBGETCOMMAND / 1024 ),
       02478 12B6     1     CALL ( LIBGETCOMMAND % 1024 ),
                      2  M  PAGE #( $ ),
       02479 1E89     2     PAGE ( $ / 1024 ),
  4072            C      M 	JPNZ	$+2
       0247A 0E83     1     JBS  _STATUS , Z 
       0247B 147D     1     JMP ( $ + 2 ),
  4073 0247C 0B7F C        	BS	r3_flag,5
  4074 0247D 1483 C        	JMP	AppDisplayPlayMessage
  4075            C        
  4076 0247E      C        AppPlay_nomessage:
  4077 0247E 1824 C        	MOV	A,@(PRO_AppNoMessage)
  4078            C      M 	LCALL	LibPushProgram
                      2  M  PAGE #( LIBPUSHPROGRAM ),
       0247F 1E81     2     PAGE ( LIBPUSHPROGRAM / 1024 ),
       02480 1000     1     CALL ( LIBPUSHPROGRAM % 1024 ),
                      2  M  PAGE #( $ ),
       02481 1E89     2     PAGE ( $ / 1024 ),
  4079 02482 1C01 C        	RETL	@(1)
  4080            C        	
  4081            C        
  4082 02483      C        AppDisplayPlayMessage:
  4083            C      M 	BANK	2
       02483 0984     1     BC  _RAM , 6 
       02484 0BC4     1     BS  _RAM , 7 
  4084            C      M 	MOV	ax,r2_stamp2
       02485 0435     1     MOV A, R2_STAMP2 
       02486 0053     1     MOV  AX ,A
  4085            C      M 	BANK	3
       02487 0B84     1     BS  _RAM , 6 
       02488 0BC4     1     BS  _RAM , 7 
  4086            C      M 	AND	ax,@(0xe7)
       02489 18E7     1     MOV A,@( 231 )
       0248A 02D3     1     AND  AX ,A
  4087            C      M 	JPB	r3_flag,6,$+3
       0248B 0DBF     1     JBC  R3_FLAG , 6 
       0248C 148F     1     JMP ( $ + 3 ),
  4088 0248D 0AD3 C        	BS	ax,3
  4089 0248E 1490 C        	JMP	$+2
  4090 0248F 0B13 C        	BS	ax,4
  4091            C      M 	BANK	2
       02490 0984     1     BC  _RAM , 6 
       02491 0BC4     1     BS  _RAM , 7 
  4092            C      M 	MOV	r2_stamp2,ax
       02492 0413     1     MOV A, AX 
       02493 0075     1     MOV  R2_STAMP2 ,A
  4093 02494 0BDD C        	BS	sys_flag,STAMP
  4094            C        
  4095            C      M 	PAGE	#(VGA)
       02495 1E83     1     PAGE ( VGA / 1024 ),
  4096 02496 10DE C        	CALL	VgaBlankNum2
  4097 02497 10E0 C        	CALL	VgaBlankChar
  4098            C      M 	PAGE	#($)
       02498 1E89     1     PAGE ( $ / 1024 ),
  4099            C      M 	BANK	3
       02499 0B84     1     BS  _RAM , 6 
       0249A 0BC4     1     BS  _RAM , 7 
  4100 0249B 043E C        	MOV	A,r3_id
  4101            C      M 	JPZ	AppDisplayPlayMessage_1
       0249C 0C83     1     JBC  _STATUS , Z 
       0249D 14B2     1     JMP  APPDISPLAYPLAYMESSAGE_1 ,
  4102 0249E 0053 C        	MOV	ax,A
  4103            C      M 	LCALL	LibMathHexToBcd
                      2  M  PAGE #( LIBMATHHEXTOBCD ),
       0249F 1E81     2     PAGE ( LIBMATHHEXTOBCD / 1024 ),
       024A0 1037     1     CALL ( LIBMATHHEXTOBCD % 1024 ),
                      2  M  PAGE #( $ ),
       024A1 1E89     2     PAGE ( $ / 1024 ),
  4104 024A2 0060 C        	MOV	r3_ax,A
  4105            C      M 	PAGE	#(VGA)
       024A3 1E83     1     PAGE ( VGA / 1024 ),
  4106 024A4 1881 C        	MOV	A,@(STYLE_LEFT)
  4107 024A5 1016 C        	CALL	VgaNum2
  4108 024A6 0720 C        	SWAPA	r3_ax
  4109 024A7 1A0F C        	AND	A,@(0x0f)
  4110 024A8 1F30 C        	ADD	A,@(48)
  4111 024A9 1016 C        	CALL	VgaNum2
  4112            C      M 	ANDA	r3_ax,@(0x0f)
       024AA 180F     1     MOV A,@( 15 )
       024AB 02A0     1     AND A, R3_AX 
  4113 024AC 1F30 C        	ADD	A,@(48)
  4114 024AD 1016 C        	CALL	VgaNum2
  4115 024AE 1800 C        	MOV	A,@(0)
  4116 024AF 1016 C        	CALL	VgaNum2
  4117 024B0 1076 C        	CALL	VgaDrawNum2
  4118            C      M 	PAGE	#($)
       024B1 1E89     1     PAGE ( $ / 1024 ),
  4119 024B2      C        AppDisplayPlayMessage_1:
  4120 024B2 1881 C        	MOV	A,@(STYLE_LEFT)
  4121            C      M 	LCALL	VgaChar
                      2  M  PAGE #( VGACHAR ),
       024B3 1E83     2     PAGE ( VGACHAR / 1024 ),
       024B4 101C     1     CALL ( VGACHAR % 1024 ),
                      2  M  PAGE #( $ ),
       024B5 1E89     2     PAGE ( $ / 1024 ),
  4122            C      M 	JPB	r3_flag,6,AppDisplayPlayMessage_pause
       024B6 0DBF     1     JBC  R3_FLAG , 6 
       024B7 14BA     1     JMP  APPDISPLAYPLAYMESSAGE_PAUSE ,
  4123 024B8 1815 C        	MOV	A,@(STR_Play)
  4124 024B9 14BB C        	JMP	AppDisplayPlayMessage_2
  4125 024BA      C        AppDisplayPlayMessage_pause:
  4126 024BA 1832 C        	MOV	A,@(STR_Pause)
  4127 024BB      C        AppDisplayPlayMessage_2:
  4128            C      M 	PAGE	#(VGA)
       024BB 1E83     1     PAGE ( VGA / 1024 ),
  4129 024BC 114B C        	CALL	VgaString
  4130 024BD 1800 C        	MOV	A,@(0)
  4131 024BE 101C C        	CALL	VgaChar
  4132 024BF 1078 C        	CALL	VgaDrawChar
  4133            C      M 	PAGE	#($)
       024C0 1E89     1     PAGE ( $ / 1024 ),
  4134 024C1 043E C        	MOV	A,r3_id
  4135            C      M 	JPZ	AppDisplayPlayMessage_3
       024C2 0C83     1     JBC  _STATUS , Z 
       024C3 14C8     1     JMP  APPDISPLAYPLAYMESSAGE_3 ,
  4136 024C4 1801 C        	MOV	A,@(1)
  4137            C      M 	LCALL	LibDisplayTimer
                      2  M  PAGE #( LIBDISPLAYTIMER ),
       024C5 1E81     2     PAGE ( LIBDISPLAYTIMER / 1024 ),
       024C6 11E5     1     CALL ( LIBDISPLAYTIMER % 1024 ),
                      2  M  PAGE #( $ ),
       024C7 1E89     2     PAGE ( $ / 1024 ),
  4138 024C8      C        AppDisplayPlayMessage_3:
  4139 024C8 1C00 C        	RETL	@(0)
  4140            C        	
  4141            C        
  4142            C        /*************************************************
  4143            C        AppOgmSelect
  4144            C        OGM选择(按下OGM键)
  4145            C        初始化:	
  4146            C        	
  4147            C        显示:	
  4148            C        待机:	
  4149            C        *************************************************/
  4150 024C9      C        AppOgmSelect:
  4151            C      M 	BANK	3
       024C9 0B84     1     BS  _RAM , 6 
       024CA 0BC4     1     BS  _RAM , 7 
  4152            C      M 	JPB	sys_flag,PROGRAMINIT,AppOgmSelect_init
       024CB 0CDD     1     JBC  SYS_FLAG , PROGRAMINIT 
       024CC 14D0     1     JMP  APPOGMSELECT_INIT ,
  4153            C      M 	JPB	sys_flag,PROGRAMREIN,AppOgmSelect_rein
       024CD 0D1D     1     JBC  SYS_FLAG , PROGRAMREIN 
       024CE 14D5     1     JMP  APPOGMSELECT_REIN ,
  4154 024CF 14F0 C        	JMP	AppOgmSelect_idle
  4155 024D0      C        AppOgmSelect_init:
  4156 024D0 08DD C        	BC	sys_flag,PROGRAMINIT
  4157            C      M 	ANDA	r3_ogm,@(0x0f)
       024D1 180F     1     MOV A,@( 15 )
       024D2 02BC     1     AND A, R3_OGM 
  4158 024D3 007E C        	MOV	r3_id,A
  4159 024D4 14D8 C        	JMP	AppOgmSelect_display
  4160 024D5      C        AppOgmSelect_rein:
  4161            C      M 	PAGE	#(LibPushStack)
       024D5 1E81     1     PAGE ( LIBPUSHSTACK / 1024 ),
  4162 024D6 100C C        	CALL	LibPopStack
  4163 024D7 007E C        	MOV	r3_id,A
  4164 024D8      C        AppOgmSelect_display:
  4165 024D8 091D C        	BC	sys_flag,PROGRAMREIN
  4166            C      M 	PAGE	#(VGA)
       024D9 1E83     1     PAGE ( VGA / 1024 ),
  4167 024DA 10DE C        	CALL	VgaBlankNum2
  4168 024DB 10E0 C        	CALL	VgaBlankChar
  4169 024DC 1881 C        	MOV	A,@(STYLE_LEFT)
  4170 024DD 101C C        	CALL	VgaChar
  4171 024DE 1833 C        	MOV	A,@(STR_OGM)
  4172 024DF 114B C        	CALL	VgaString
  4173 024E0 1831 C        	MOV	A,@(48+1)
  4174 024E1 101C C        	CALL	VgaChar
  4175 024E2 1800 C        	MOV	A,@(0)
  4176 024E3 101C C        	CALL	VgaChar
  4177 024E4 1078 C        	CALL	VgaDrawChar
  4178 024E5 1882 C        	MOV	A,@(STYLE_RIGHT)
  4179 024E6 101C C        	CALL	VgaChar
  4180 024E7 1833 C        	MOV	A,@(STR_OGM)
  4181 024E8 114B C        	CALL	VgaString
  4182 024E9 1832 C        	MOV	A,@(48+2)
  4183 024EA 101C C        	CALL	VgaChar
  4184 024EB 1800 C        	MOV	A,@(0)
  4185 024EC 101C C        	CALL	VgaChar
  4186 024ED 1078 C        	CALL	VgaDrawChar
  4187            C      M 	PAGE	#($)
       024EE 1E89     1     PAGE ( $ / 1024 ),
  4188 024EF 113F C        	CALL	AppOgmSelectDisplay
  4189 024F0      C        AppOgmSelect_idle:
  4190            C        	
  4191            C      M 	XORA	sys_msg,@(WM_KEYPRESS)
       024F0 1801     1     MOV A,@( WM_KEYPRESS )
       024F1 031B     1     XOR A, SYS_MSG 
  4192 024F2 0E83 C        	JBS	_STATUS,Z
  4193 024F3 1C00 C        	RETL	@(0)
  4194            C        
  4195 024F4      C        AppOgmSelect_key:
  4196            C      M 	XORA	sys_data,@(KEY_LEFT)
       024F4 1826     1     MOV A,@( KEY_LEFT )
       024F5 031C     1     XOR A, SYS_DATA 
  4197            C      M 	JPZ	AppOgmSelect_change
       024F6 0C83     1     JBC  _STATUS , Z 
       024F7 150D     1     JMP  APPOGMSELECT_CHANGE ,
  4198            C      M 	XORA	sys_data,@(KEY_RIGHT)
       024F8 1827     1     MOV A,@( KEY_RIGHT )
       024F9 031C     1     XOR A, SYS_DATA 
  4199            C      M 	JPZ	AppOgmSelect_change
       024FA 0C83     1     JBC  _STATUS , Z 
       024FB 150D     1     JMP  APPOGMSELECT_CHANGE ,
  4200            C      M 	XORA	sys_data,@(KEY_OK)
       024FC 1830     1     MOV A,@( KEY_OK )
       024FD 031C     1     XOR A, SYS_DATA 
  4201            C      M 	JPZ	AppOgmSelect_ok
       024FE 0C83     1     JBC  _STATUS , Z 
       024FF 1515     1     JMP  APPOGMSELECT_OK ,
  4202            C      M 	XORA	sys_data,@(KEY_PLAY)
       02500 1820     1     MOV A,@( KEY_PLAY )
       02501 031C     1     XOR A, SYS_DATA 
  4203            C      M 	JPZ	AppOgmSelect_play
       02502 0C83     1     JBC  _STATUS , Z 
       02503 151D     1     JMP  APPOGMSELECT_PLAY ,
  4204            C      M 	XORA	sys_data,@(KEY_OGM)
       02504 1821     1     MOV A,@( KEY_OGM )
       02505 031C     1     XOR A, SYS_DATA 
  4205            C      M 	JPZ	AppOgmSelect_record
       02506 0C83     1     JBC  _STATUS , Z 
       02507 1533     1     JMP  APPOGMSELECT_RECORD ,
  4206            C      M 	XORA	sys_data,@(KEY_EXIT)
       02508 1816     1     MOV A,@( KEY_EXIT )
       02509 031C     1     XOR A, SYS_DATA 
  4207            C      M 	JPZ	AppOgmSelect_exit
       0250A 0C83     1     JBC  _STATUS , Z 
       0250B 151A     1     JMP  APPOGMSELECT_EXIT ,
  4208 0250C 1C00 C        	RETL	@(0)
  4209 0250D      C        AppOgmSelect_change:
  4210 0250D 057E C        	INC	r3_id
  4211            C      M 	SUBA	r3_id,@(3)
       0250E 1803     1     MOV A,@( 3 )
       0250F 013E     1     SUB A, R3_ID 
  4212            C      M 	JPNC	$+3
       02510 0E03     1     JBS  _STATUS , C 
       02511 1514     1     JMP ( $ + 3 ),
  4213            C      M 	MOV	r3_id,@(1)
       02512 1801     1     MOV A,@( 1 )
       02513 007E     1     MOV  R3_ID ,A
  4214 02514 153F C        	JMP	AppOgmSelectDisplay
  4215 02515      C        AppOgmSelect_ok:
  4216            C      M 	AND	r3_ogm,@(0xf0)
       02515 18F0     1     MOV A,@( 240 )
       02516 02FC     1     AND  R3_OGM ,A
  4217            C      M 	ADD	r3_ogm,r3_id			; 确认后保存ogm
       02517 043E     1     MOV A, R3_ID 
       02518 03FC     1     ADD  R3_OGM ,A
  4218 02519 0A9F C        	BS	hardware,SYNCSETTING		; 发送设置
  4219 0251A      C        AppOgmSelect_exit:
  4220 0251A 00D8 C        	CLR	program				; 退出程序
  4221 0251B 114F C        	CALL	AppOgmSelectDisplay_return
  4222 0251C 1C00 C        	RETL	@(0)
  4223 0251D      C        AppOgmSelect_play:
  4224            C      M 	SUBA	r3_id,@(1)
       0251D 1801     1     MOV A,@( 1 )
       0251E 013E     1     SUB A, R3_ID 
  4225            C      M 	JPZ	AppOgmSelect_play_1
       0251F 0C83     1     JBC  _STATUS , Z 
       02520 1525     1     JMP  APPOGMSELECT_PLAY_1 ,
  4226 02521 1D01 C        	SUB	A,@(1)
  4227            C      M 	JPZ	AppOgmSelect_play_2
       02522 0C83     1     JBC  _STATUS , Z 
       02523 1527     1     JMP  APPOGMSELECT_PLAY_2 ,
  4228 02524 1C00 C        	RETL	@(0)
  4229 02525      C        AppOgmSelect_play_1:
  4230 02525 182B C        	MOV	A,@(PRO_AppOgm1Play)
  4231 02526 1528 C        	JMP	AppOgmSelect_play_ret
  4232 02527      C        AppOgmSelect_play_2:
  4233 02527 182C C        	MOV	A,@(PRO_AppOgm2Play)
  4234 02528      C        AppOgmSelect_play_ret:
  4235 02528      C        AppOgmSelect_record_ret:
  4236 02528 0060 C        	MOV	r3_ax,A
  4237            C      M 	PAGE	#(LibPushStack)
       02529 1E81     1     PAGE ( LIBPUSHSTACK / 1024 ),
  4238 0252A 043E C        	MOV	A,r3_id
  4239 0252B 1002 C        	CALL	LibPushStack
  4240 0252C 182A C        	MOV	A,@(PRO_AppOgmSelect)
  4241 0252D 1002 C        	CALL	LibPushStack
  4242 0252E 0420 C        	MOV	A,r3_ax
  4243 0252F 1000 C        	CALL	LibPushProgram
  4244            C      M 	PAGE	#($)
       02530 1E89     1     PAGE ( $ / 1024 ),
  4245 02531 114F C        	CALL	AppOgmSelectDisplay_return
  4246 02532 1C00 C        	RETL	@(0)
  4247            C        
  4248 02533      C        AppOgmSelect_record:
  4249            C      M 	SUBA	r3_id,@(1)
       02533 1801     1     MOV A,@( 1 )
       02534 013E     1     SUB A, R3_ID 
  4250            C      M 	JPZ	AppOgmSelect_record_1
       02535 0C83     1     JBC  _STATUS , Z 
       02536 153B     1     JMP  APPOGMSELECT_RECORD_1 ,
  4251 02537 1D01 C        	SUB	A,@(1)
  4252            C      M 	JPZ	AppOgmSelect_record_2
       02538 0C83     1     JBC  _STATUS , Z 
       02539 153D     1     JMP  APPOGMSELECT_RECORD_2 ,
  4253 0253A 1C00 C        	RETL	@(0)
  4254 0253B      C        AppOgmSelect_record_1:
  4255 0253B 1828 C        	MOV	A,@(PRO_AppOgm1Record)
  4256 0253C 1528 C        	JMP	AppOgmSelect_record_ret
  4257 0253D      C        AppOgmSelect_record_2:
  4258 0253D 1829 C        	MOV	A,@(PRO_AppOgm2Record)
  4259 0253E 1528 C        	JMP	AppOgmSelect_record_ret
  4260            C        
  4261 0253F      C        AppOgmSelectDisplay:
  4262 0253F 00E0 C        	CLR	r3_ax
  4263 02540 00E3 C        	CLR	r3_bx
  4264            C      M 	SUBA	r3_id,@(1)
       02541 1801     1     MOV A,@( 1 )
       02542 013E     1     SUB A, R3_ID 
  4265            C      M 	JPZ	AppOgmSelectDisplay_1
       02543 0C83     1     JBC  _STATUS , Z 
       02544 1549     1     JMP  APPOGMSELECTDISPLAY_1 ,
  4266 02545 1D01 C        	SUB	A,@(1)
  4267            C      M 	JPZ	AppOgmSelectDisplay_2
       02546 0C83     1     JBC  _STATUS , Z 
       02547 154C     1     JMP  APPOGMSELECTDISPLAY_2 ,
  4268 02548 1551 C        	JMP	AppOgmSelectDisplay_3
  4269 02549      C        AppOgmSelectDisplay_1:
  4270            C      M 	MOV	r3_ax,@(0x80)
       02549 1880     1     MOV A,@( 128 )
       0254A 0060     1     MOV  R3_AX ,A
  4271 0254B 1551 C        	JMP	AppOgmSelectDisplay_3
  4272 0254C      C        AppOgmSelectDisplay_2:
  4273            C      M 	MOV	r3_bx,@(0x80)
       0254C 1880     1     MOV A,@( 128 )
       0254D 0063     1     MOV  R3_BX ,A
  4274 0254E 1551 C        	JMP	AppOgmSelectDisplay_3
  4275 0254F      C        AppOgmSelectDisplay_return:
  4276 0254F 00E0 C        	CLR	r3_ax
  4277 02550 00E3 C        	CLR	r3_bx
  4278            C        	
  4279 02551      C        AppOgmSelectDisplay_3:
  4280            C      M 	PAGE	#(VGA)
       02551 1E83     1     PAGE ( VGA / 1024 ),
  4281            C      M 	ADDA	r3_ax,@(0x00+0x00+0x07)
       02552 1807     1     MOV A,@((( 0 + 0 )+ 7 ))
       02553 03A0     1     ADD A, R3_AX 
  4282 02554 1103 C        	CALL	VgaFlash
  4283            C      M 	ADDA	r3_ax,@(0x00+0x10+0x07)
       02555 1817     1     MOV A,@((( 0 + 16 )+ 7 ))
       02556 03A0     1     ADD A, R3_AX 
  4284 02557 1103 C        	CALL	VgaFlash
  4285            C      M 	ADDA	r3_ax,@(0x00+0x20+0x07)
       02558 1827     1     MOV A,@((( 0 + 32 )+ 7 ))
       02559 03A0     1     ADD A, R3_AX 
  4286 0255A 1103 C        	CALL	VgaFlash
  4287            C      M 	ADDA	r3_ax,@(0x00+0x30+0x07)
       0255B 1837     1     MOV A,@((( 0 + 48 )+ 7 ))
       0255C 03A0     1     ADD A, R3_AX 
  4288 0255D 1103 C        	CALL	VgaFlash
  4289            C      M 	ADDA	r3_bx,@(0x00+0x40+0x08)
       0255E 1848     1     MOV A,@((( 0 + 64 )+ 8 ))
       0255F 03A3     1     ADD A, R3_BX 
  4290 02560 1103 C        	CALL	VgaFlash
  4291            C      M 	ADDA	r3_bx,@(0x00+0x50+0x08)
       02561 1858     1     MOV A,@((( 0 + 80 )+ 8 ))
       02562 03A3     1     ADD A, R3_BX 
  4292 02563 1103 C        	CALL	VgaFlash
  4293            C      M 	ADDA	r3_bx,@(0x00+0x60+0x08)
       02564 1868     1     MOV A,@((( 0 + 96 )+ 8 ))
       02565 03A3     1     ADD A, R3_BX 
  4294 02566 1103 C        	CALL	VgaFlash
  4295            C      M 	ADDA	r3_bx,@(0x00+0x70+0x08)
       02567 1878     1     MOV A,@((( 0 + 112 )+ 8 ))
       02568 03A3     1     ADD A, R3_BX 
  4296 02569 1103 C        	CALL	VgaFlash
  4297            C      M 	PAGE	#($)
       0256A 1E89     1     PAGE ( $ / 1024 ),
  4298 0256B 1C00 C        	RETL	@(0)
  4299            C        	
  4300            C        	
  4301            C        /*************************************************
  4302            C        AppOneMessage
  4303            C        input:		acc
  4304            C        		.7	0-record 1-play
  4305            C        		.3~.0	0 - memo
  4306            C        			!0 - ogm
  4307            C        录memo/OGM，回放memo/OGM
  4308            C        初始化:	
  4309            C        	向DSP发送录音/放音命令
  4310            C        显示:	
  4311            C        待机:	
  4312            C        	r3_id		录音/放音的类型
  4313            C        		.7	0-record 1-play
  4314            C        		.3~.0	0 - memo
  4315            C        			!0 - ogm
  4316            C        
  4317            C        	r3_flag		录音时的标志位
  4318            C        	.7		0-none 1-recording/playing
  4319            C        *************************************************/
  4320 0256C      C        AppOneMessage:
  4321            C      M 	BANK	3
       0256C 0B84     1     BS  _RAM , 6 
       0256D 0BC4     1     BS  _RAM , 7 
  4322 0256E 0060 C        	MOV	r3_ax,A
  4323            C      M 	JPB	sys_flag,PROGRAMINIT,AppOneMessage_init
       0256F 0CDD     1     JBC  SYS_FLAG , PROGRAMINIT 
       02570 1574     1     JMP  APPONEMESSAGE_INIT ,
  4324            C      M 	JPB	sys_flag,PROGRAMREIN,AppOneMessage_rein
       02571 0D1D     1     JBC  SYS_FLAG , PROGRAMREIN 
       02572 1591     1     JMP  APPONEMESSAGE_REIN ,
  4325 02573 159B C        	JMP	AppOneMessage_idle
  4326 02574      C        AppOneMessage_init:
  4327 02574 08DD C        	BC	sys_flag,PROGRAMINIT
  4328 02575 00FF C        	CLR	r3_flag
  4329            C      M 	MOV	r3_id,r3_ax
       02576 0420     1     MOV A, R3_AX 
       02577 007E     1     MOV  R3_ID ,A
  4330 02578 1A0F C        	AND	A,@(0x0f)
  4331            C      M 	JPNZ	AppOneMessage_init_ogm
       02579 0E83     1     JBS  _STATUS , Z 
       0257A 1582     1     JMP  APPONEMESSAGE_INIT_OGM ,
  4332 0257B      C        AppOneMessage_init_memo:
  4333            C      M 	JPB	r3_id,7,AppOneMessage_init_1	; 回放不用发送播放命令
       0257B 0DFE     1     JBC  R3_ID , 7 
       0257C 158D     1     JMP  APPONEMESSAGE_INIT_1 ,
  4334 0257D 1846 C        	MOV	A,@(0x46)			; record memo
  4335            C      M 	LCALL	LibSendOneCommand
                      2  M  PAGE #( LIBSENDONECOMMAND ),
       0257E 1E81     2     PAGE ( LIBSENDONECOMMAND / 1024 ),
       0257F 12AF     1     CALL ( LIBSENDONECOMMAND % 1024 ),
                      2  M  PAGE #( $ ),
       02580 1E89     2     PAGE ( $ / 1024 ),
  4336 02581 158D C        	JMP	AppOneMessage_init_1
  4337 02582      C        AppOneMessage_init_ogm:
  4338            C      M 	JPB	r3_id,7,$+3			; 回放
       02582 0DFE     1     JBC  R3_ID , 7 
       02583 1586     1     JMP ( $ + 3 ),
  4339 02584 184B C        	MOV	A,@(0x4b)			; record ogm
  4340 02585 1587 C        	JMP	$+2
  4341 02586 184A C        	MOV	A,@(0x4a)			; play ogm
  4342            C      M 	PAGE	#(IIC)
       02587 1E80     1     PAGE ( IIC / 1024 ),
  4343 02588 10A8 C        	CALL	IicSendData
  4344            C      M 	ANDA	r3_id,@(0x0f)
       02589 180F     1     MOV A,@( 15 )
       0258A 02BE     1     AND A, R3_ID 
  4345 0258B 10A8 C        	CALL	IicSendData
  4346 0258C 10B3 C        	CALL	IicSer
  4347 0258D      C        AppOneMessage_init_1:
  4348            C      M 	PAGE	#(LibInitTimer)
       0258D 1E81     1     PAGE ( LIBINITTIMER / 1024 ),
  4349 0258E 11BC C        	CALL	LibInitTimer
  4350            C      M 	PAGE	#($)
       0258F 1E89     1     PAGE ( $ / 1024 ),
  4351 02590 1591 C        	JMP	AppOneMessage_display
  4352 02591      C        AppOneMessage_rein:
  4353 02591      C        AppOneMessage_display:
  4354 02591 091D C        	BC	sys_flag,PROGRAMREIN
  4355 02592 11FD C        	CALL	AppOneMessageDisplay
  4356            C      M 	BANK	3
       02593 0B84     1     BS  _RAM , 6 
       02594 0BC4     1     BS  _RAM , 7 
  4357            C      M 	JPNB	r3_id,7,AppOneMessage_idle
       02595 0FFE     1     JBS  R3_ID , 7 
       02596 159B     1     JMP  APPONEMESSAGE_IDLE ,
  4358 02597 1801 C        	MOV	A,@(1)
  4359            C      M 	LCALL	LibDisplayTimer
                      2  M  PAGE #( LIBDISPLAYTIMER ),
       02598 1E81     2     PAGE ( LIBDISPLAYTIMER / 1024 ),
       02599 11E5     1     CALL ( LIBDISPLAYTIMER % 1024 ),
                      2  M  PAGE #( $ ),
       0259A 1E89     2     PAGE ( $ / 1024 ),
  4360 0259B      C        AppOneMessage_idle:
  4361            C      M 	BANK	3
       0259B 0B84     1     BS  _RAM , 6 
       0259C 0BC4     1     BS  _RAM , 7 
  4362            C      M 	JPB	r3_id,7,AppOneMessage_idle_1	; play, 直接计时
       0259D 0DFE     1     JBC  R3_ID , 7 
       0259E 15A1     1     JMP  APPONEMESSAGE_IDLE_1 ,
  4363            C      M 	JPNB	r3_flag,7,AppOneMessage_idle_2	; record, 等到开始录音时才计时
       0259F 0FFF     1     JBS  R3_FLAG , 7 
       025A0 15A7     1     JMP  APPONEMESSAGE_IDLE_2 ,
  4364 025A1      C        AppOneMessage_idle_1:
  4365            C      M 	PAGE	#(LibUpdateTimer)
       025A1 1E81     1     PAGE ( LIBUPDATETIMER / 1024 ),
  4366 025A2 11C3 C        	CALL	LibUpdateTimer
  4367 025A3 11E5 C        	CALL	LibDisplayTimer
  4368            C      M 	PAGE	#($)
       025A4 1E89     1     PAGE ( $ / 1024 ),
  4369            C      M 	BANK	3
       025A5 0B84     1     BS  _RAM , 6 
       025A6 0BC4     1     BS  _RAM , 7 
  4370 025A7      C        AppOneMessage_idle_2:
  4371            C      M 	XORA	sys_msg,@(WM_KEYPRESS)
       025A7 1801     1     MOV A,@( WM_KEYPRESS )
       025A8 031B     1     XOR A, SYS_MSG 
  4372            C      M 	JPZ	AppOneMessage_key
       025A9 0C83     1     JBC  _STATUS , Z 
       025AA 15B0     1     JMP  APPONEMESSAGE_KEY ,
  4373            C      M 	XORA	sys_msg,@(WM_COMMAND)
       025AB 1807     1     MOV A,@( WM_COMMAND )
       025AC 031B     1     XOR A, SYS_MSG 
  4374            C      M 	JPZ	AppOneMessage_command
       025AD 0C83     1     JBC  _STATUS , Z 
       025AE 15E6     1     JMP  APPONEMESSAGE_COMMAND ,
  4375 025AF 1C00 C        	RETL	@(0)
  4376 025B0      C        AppOneMessage_key:
  4377            C      M 	XORA	sys_data,@(KEY_STOP)
       025B0 1816     1     MOV A,@( KEY_STOP )
       025B1 031C     1     XOR A, SYS_DATA 
  4378            C      M 	JPZ	AppOneMessage_key_stop
       025B2 0C83     1     JBC  _STATUS , Z 
       025B3 15C8     1     JMP  APPONEMESSAGE_KEY_STOP ,
  4379            C      M 	JPB	r3_id,7,AppOneMessage_key_play
       025B4 0DFE     1     JBC  R3_ID , 7 
       025B5 15C3     1     JMP  APPONEMESSAGE_KEY_PLAY ,
  4380 025B6 043E C        	MOV	A,r3_id
  4381            C      M 	JPZ	AppOneMessage_key_memo
       025B7 0C83     1     JBC  _STATUS , Z 
       025B8 15BE     1     JMP  APPONEMESSAGE_KEY_MEMO ,
  4382            C      M 	XORA	sys_data,@(KEY_OGM)
       025B9 1821     1     MOV A,@( KEY_OGM )
       025BA 031C     1     XOR A, SYS_DATA 
  4383            C      M 	JPZ	AppOneMessage_key_stop
       025BB 0C83     1     JBC  _STATUS , Z 
       025BC 15C8     1     JMP  APPONEMESSAGE_KEY_STOP ,
  4384 025BD 1C00 C        	RETL	@(0)
  4385 025BE      C        AppOneMessage_key_memo:
  4386            C      M 	XORA	sys_data,@(KEY_MEMO)
       025BE 1822     1     MOV A,@( KEY_MEMO )
       025BF 031C     1     XOR A, SYS_DATA 
  4387            C      M 	JPZ	AppOneMessage_key_stop
       025C0 0C83     1     JBC  _STATUS , Z 
       025C1 15C8     1     JMP  APPONEMESSAGE_KEY_STOP ,
  4388 025C2 1C00 C        	RETL	@(0)
  4389 025C3      C        AppOneMessage_key_play:
  4390            C      M 	XORA	sys_data,@(KEY_ERASE)
       025C3 1823     1     MOV A,@( KEY_ERASE )
       025C4 031C     1     XOR A, SYS_DATA 
  4391            C      M 	JPZ	AppOneMessage_erase
       025C5 0C83     1     JBC  _STATUS , Z 
       025C6 15E2     1     JMP  APPONEMESSAGE_ERASE ,
  4392 025C7 1C00 C        	RETL	@(0)
  4393 025C8      C        AppOneMessage_key_stop:
  4394 025C8 1854 C        	MOV	A,@(0x54)			; stop
  4395            C      M 	LCALL	LibSendOneCommand
                      2  M  PAGE #( LIBSENDONECOMMAND ),
       025C9 1E81     2     PAGE ( LIBSENDONECOMMAND / 1024 ),
       025CA 12AF     1     CALL ( LIBSENDONECOMMAND % 1024 ),
                      2  M  PAGE #( $ ),
       025CB 1E89     2     PAGE ( $ / 1024 ),
  4396 025CC      C        AppOneMessage_stop:
  4397            C      M 	JPB	r3_id,7,AppOneMessage_stop_ret	; play, 停止后回到上一状态
       025CC 0DFE     1     JBC  R3_ID , 7 
       025CD 15E0     1     JMP  APPONEMESSAGE_STOP_RET ,
  4398 025CE 043E C        	MOV	A,r3_id
  4399            C      M 	JPZ	AppOneMessage_stop_memo
       025CF 0C83     1     JBC  _STATUS , Z 
       025D0 15D8     1     JMP  APPONEMESSAGE_STOP_MEMO ,
  4400 025D1 1D01 C        	SUB	A,@(1)
  4401            C      M 	JPZ	AppOneMessage_stop_ogm1
       025D2 0C83     1     JBC  _STATUS , Z 
       025D3 15DA     1     JMP  APPONEMESSAGE_STOP_OGM1 ,
  4402 025D4 1F01 C        	ADD	A,@(1)
  4403            C      M 	JPZ	AppOneMessage_stop_ogm2
       025D5 0C83     1     JBC  _STATUS , Z 
       025D6 15DC     1     JMP  APPONEMESSAGE_STOP_OGM2 ,
  4404 025D7 15E0 C        	JMP	AppOneMessage_stop_ret
  4405 025D8      C        AppOneMessage_stop_memo:
  4406 025D8 182D C        	MOV	A,@(PRO_AppMemoPlay)
  4407 025D9 15DD C        	JMP	AppOneMessage_stop_1
  4408 025DA      C        AppOneMessage_stop_ogm1:
  4409 025DA 182B C        	MOV	A,@(PRO_AppOgm1Play)
  4410 025DB 15DD C        	JMP	AppOneMessage_stop_1
  4411 025DC      C        AppOneMessage_stop_ogm2:
  4412 025DC 182C C        	MOV	A,@(PRO_AppOgm2Play)
  4413            C        	;JMP	AppOneMessage_stop_1
  4414 025DD      C        AppOneMessage_stop_1:
  4415            C      M 	LCALL	LibPushProgram
                      2  M  PAGE #( LIBPUSHPROGRAM ),
       025DD 1E81     2     PAGE ( LIBPUSHPROGRAM / 1024 ),
       025DE 1000     1     CALL ( LIBPUSHPROGRAM % 1024 ),
                      2  M  PAGE #( $ ),
       025DF 1E89     2     PAGE ( $ / 1024 ),
  4416 025E0      C        AppOneMessage_stop_ret:
  4417 025E0 00D8 C        	CLR	program
  4418 025E1 1C00 C        	RETL	@(0)
  4419            C        
  4420 025E2      C        AppOneMessage_erase:
  4421 025E2 184C C        	MOV	A,@(0x4c)
  4422            C      M 	PAGE	#(LibSendOneCommand)
       025E3 1E81     1     PAGE ( LIBSENDONECOMMAND / 1024 ),
  4423 025E4 12AF C        	CALL	LibSendOneCommand
  4424 025E5 1C00 C        	RETL	@(0)
  4425            C        
  4426 025E6      C        AppOneMessage_command:
  4427            C      M 	XORA	sys_data,@(0x18)
       025E6 1818     1     MOV A,@( 24 )
       025E7 031C     1     XOR A, SYS_DATA 
  4428            C      M 	JPZ	AppOneMessage_mfull
       025E8 0C83     1     JBC  _STATUS , Z 
       025E9 15F3     1     JMP  APPONEMESSAGE_MFULL ,
  4429            C      M 	XORA	sys_data,@(0x12)
       025EA 1812     1     MOV A,@( 18 )
       025EB 031C     1     XOR A, SYS_DATA 
  4430            C      M 	JPZ	AppOneMessage_start
       025EC 0C83     1     JBC  _STATUS , Z 
       025ED 15F7     1     JMP  APPONEMESSAGE_START ,
  4431            C      M 	XORA	sys_data,@(0x13)
       025EE 1813     1     MOV A,@( 19 )
       025EF 031C     1     XOR A, SYS_DATA 
  4432            C      M 	JPZ	AppOneMessage_return
       025F0 0C83     1     JBC  _STATUS , Z 
       025F1 15FC     1     JMP  APPONEMESSAGE_RETURN ,
  4433 025F2 1C00 C        	RETL	@(0)
  4434 025F3      C        AppOneMessage_mfull:
  4435 025F3 0BBC C        	BS	r3_ogm,6
  4436 025F4 09FF C        	BC	r3_flag,7
  4437 025F5 1C00 C        	RETL	@(0)
  4438 025F6 15CC C        	JMP	AppOneMessage_stop
  4439 025F7      C        AppOneMessage_start:
  4440 025F7 0BFF C        	BS	r3_flag,7
  4441 025F8 1801 C        	MOV	A,@(1)
  4442            C      M 	PAGE	#(LibDisplayTimer)
       025F9 1E81     1     PAGE ( LIBDISPLAYTIMER / 1024 ),
  4443 025FA 11E5 C        	CALL	LibDisplayTimer
  4444 025FB 1C00 C        	RETL	@(0)
  4445 025FC      C        AppOneMessage_return:
  4446 025FC 15CC C        	JMP	AppOneMessage_stop
  4447            C        
  4448 025FD      C        AppOneMessageDisplay:
  4449            C      M 	BANK	3
       025FD 0B84     1     BS  _RAM , 6 
       025FE 0BC4     1     BS  _RAM , 7 
  4450            C      M 	PAGE	#(VGA)
       025FF 1E83     1     PAGE ( VGA / 1024 ),
  4451 02600 10DE C        	CALL	VgaBlankNum2
  4452 02601 10E0 C        	CALL	VgaBlankChar
  4453 02602 1881 C        	MOV	A,@(STYLE_LEFT)
  4454 02603 101C C        	CALL	VgaChar
  4455            C      M 	PAGE	#($)
       02604 1E89     1     PAGE ( $ / 1024 ),
  4456            C      M 	ANDA	r3_id,@(0x0f)
       02605 180F     1     MOV A,@( 15 )
       02606 02BE     1     AND A, R3_ID 
  4457            C      M 	JPZ	AppOneMessageDisplay_memo
       02607 0C83     1     JBC  _STATUS , Z 
       02608 1612     1     JMP  APPONEMESSAGEDISPLAY_MEMO ,
  4458            C      M 	PAGE	#(VGA)
       02609 1E83     1     PAGE ( VGA / 1024 ),
  4459 0260A 1833 C        	MOV	A,@(STR_OGM)
  4460 0260B 114B C        	CALL	VgaString
  4461            C      M 	ANDA	r3_id,@(0x0f)
       0260C 180F     1     MOV A,@( 15 )
       0260D 02BE     1     AND A, R3_ID 
  4462 0260E 1F30 C        	ADD	A,@(48)
  4463 0260F 101C C        	CALL	VgaChar
  4464            C      M 	PAGE	#($)
       02610 1E89     1     PAGE ( $ / 1024 ),
  4465 02611 1616 C        	JMP	AppOneMessageDisplay_1
  4466 02612      C        AppOneMessageDisplay_memo:
  4467 02612 1834 C        	MOV	A,@(STR_Memo)
  4468            C      M 	LCALL	VgaString
                      2  M  PAGE #( VGASTRING ),
       02613 1E83     2     PAGE ( VGASTRING / 1024 ),
       02614 114B     1     CALL ( VGASTRING % 1024 ),
                      2  M  PAGE #( $ ),
       02615 1E89     2     PAGE ( $ / 1024 ),
  4469 02616      C        AppOneMessageDisplay_1:
  4470            C      M 	PAGE	#(VGA)
       02616 1E83     1     PAGE ( VGA / 1024 ),
  4471 02617 1800 C        	MOV	A,@(0)
  4472 02618 101C C        	CALL	VgaChar
  4473 02619 1078 C        	CALL	VgaDrawChar
  4474            C      M 	PAGE	#($)
       0261A 1E89     1     PAGE ( $ / 1024 ),
  4475 0261B 1C00 C        	RETL	@(0)
  4476            C        
  4477            C        
  4478            C        
  4479 0261C      C        AppMemoRecord:
  4480 0261C 1800 C        	MOV	A,@(0x00)
  4481 0261D 156C C        	JMP	AppOneMessage
  4482            C        
  4483 0261E      C        AppOgm1Record:
  4484 0261E 1801 C        	MOV	A,@(0x01)
  4485 0261F 156C C        	JMP	AppOneMessage
  4486            C        
  4487 02620      C        AppOgm2Record:
  4488 02620 1802 C        	MOV	A,@(0x02)
  4489 02621 156C C        	JMP	AppOneMessage
  4490            C        
  4491 02622      C        AppMemoPlay:
  4492 02622 1880 C        	MOV	A,@(0x80)
  4493 02623 156C C        	JMP	AppOneMessage
  4494 02624      C        AppOgm1Play:
  4495 02624 1881 C        	MOV	A,@(0x81)
  4496 02625 156C C        	JMP	AppOneMessage
  4497 02626      C        AppOgm2Play:
  4498 02626 1882 C        	MOV	A,@(0x82)
  4499 02627 156C C        	JMP	AppOneMessage
  4500            C        
  4501            C        
  4502            C        
  4503            C        
  4504            C        /*************************************************
  4505            C        AppSetRingDelay
  4506            C        设置铃声次数
  4507            C        共3种，2 4 6
  4508            C        *************************************************/
  4509 02628      C        AppSetRingDelay:
  4510            C      M 	BANK	3
       02628 0B84     1     BS  _RAM , 6 
       02629 0BC4     1     BS  _RAM , 7 
  4511            C      M 	JPB	sys_flag,PROGRAMINIT,AppSetRingDelay_init
       0262A 0CDD     1     JBC  SYS_FLAG , PROGRAMINIT 
       0262B 162F     1     JMP  APPSETRINGDELAY_INIT ,
  4512            C      M 	JPB	sys_flag,PROGRAMREIN,AppSetRingDelay_rein
       0262C 0D1D     1     JBC  SYS_FLAG , PROGRAMREIN 
       0262D 1635     1     JMP  APPSETRINGDELAY_REIN ,
  4513 0262E 1654 C        	JMP	AppSetRingDelay_idle
  4514 0262F      C        AppSetRingDelay_init:
  4515 0262F 08DD C        	BC	sys_flag,PROGRAMINIT
  4516 02630 0638 C        	RRCA	r3_ringdelay
  4517 02631 1A03 C        	AND	A,@(0x03)
  4518 02632 007E C        	MOV	r3_id,A
  4519 02633 00FF C        	CLR	r3_flag
  4520 02634 1635 C        	JMP	AppSetRingDelay_display
  4521 02635      C        AppSetRingDelay_rein:
  4522 02635      C        AppSetRingDelay_display:
  4523            C      M 	PAGE	#(VGA)
       02635 1E83     1     PAGE ( VGA / 1024 ),
  4524 02636 10DE C        	CALL	VgaBlankNum2
  4525 02637 1881 C        	MOV	A,@(STYLE_LEFT)
  4526 02638 1016 C        	CALL	VgaNum2
  4527 02639 1820 C        	MOV	A,@(32)
  4528 0263A 1016 C        	CALL	VgaNum2
  4529 0263B 1832 C        	MOV	A,@(50)
  4530 0263C 1016 C        	CALL	VgaNum2
  4531 0263D 1820 C        	MOV	A,@(32)
  4532 0263E 1016 C        	CALL	VgaNum2
  4533 0263F 1834 C        	MOV	A,@(52)
  4534 02640 1016 C        	CALL	VgaNum2
  4535 02641 1820 C        	MOV	A,@(32)
  4536 02642 1016 C        	CALL	VgaNum2
  4537 02643 1836 C        	MOV	A,@(54)
  4538 02644 1016 C        	CALL	VgaNum2
  4539 02645 1800 C        	MOV	A,@(0)
  4540 02646 1016 C        	CALL	VgaNum2
  4541 02647 1076 C        	CALL	VgaDrawNum2
  4542 02648 10E0 C        	CALL	VgaBlankChar
  4543 02649 1881 C        	MOV	A,@(STYLE_LEFT)
  4544 0264A 101C C        	CALL	VgaChar
  4545 0264B 1820 C        	MOV	A,@(32)
  4546 0264C 101C C        	CALL	VgaChar
  4547 0264D 184B C        	MOV	A,@(STR_RingTimes)
  4548 0264E 114B C        	CALL	VgaString
  4549 0264F 1800 C        	MOV	A,@(0)
  4550 02650 101C C        	CALL	VgaChar
  4551 02651 1078 C        	CALL	VgaDrawChar
  4552            C      M 	PAGE	#($)
       02652 1E89     1     PAGE ( $ / 1024 ),
  4553 02653 127F C        	CALL	AppSetRingDelayDisplay
  4554 02654      C        AppSetRingDelay_idle:
  4555            C      M 	XORA	sys_msg,@(WM_KEYPRESS)
       02654 1801     1     MOV A,@( WM_KEYPRESS )
       02655 031B     1     XOR A, SYS_MSG 
  4556 02656 0E83 C        	JBS	_STATUS,Z
  4557 02657 1C00 C        	RETL	@(0)
  4558 02658      C        AppSetRingDelay_key:
  4559            C      M 	XORA	sys_data,@(KEY_UP)
       02658 1824     1     MOV A,@( KEY_UP )
       02659 031C     1     XOR A, SYS_DATA 
  4560            C      M 	JPZ	AppSetRingDelay_up
       0265A 0C83     1     JBC  _STATUS , Z 
       0265B 1669     1     JMP  APPSETRINGDELAY_UP ,
  4561            C      M 	XORA	sys_data,@(KEY_DOWN)
       0265C 1825     1     MOV A,@( KEY_DOWN )
       0265D 031C     1     XOR A, SYS_DATA 
  4562            C      M 	JPZ	AppSetRingDelay_down
       0265E 0C83     1     JBC  _STATUS , Z 
       0265F 1671     1     JMP  APPSETRINGDELAY_DOWN ,
  4563            C      M 	XORA	sys_data,@(KEY_EXIT)
       02660 1816     1     MOV A,@( KEY_EXIT )
       02661 031C     1     XOR A, SYS_DATA 
  4564            C      M 	JPZ	AppSetRingDelay_exit
       02662 0C83     1     JBC  _STATUS , Z 
       02663 167B     1     JMP  APPSETRINGDELAY_EXIT ,
  4565            C      M 	XORA	sys_data,@(KEY_OK)
       02664 1830     1     MOV A,@( KEY_OK )
       02665 031C     1     XOR A, SYS_DATA 
  4566            C      M 	JPZ	AppSetRingDelay_ok
       02666 0C83     1     JBC  _STATUS , Z 
       02667 1677     1     JMP  APPSETRINGDELAY_OK ,
  4567 02668 1C00 C        	RETL	@(0)
  4568 02669      C        AppSetRingDelay_up:
  4569 02669 057E C        	INC	r3_id
  4570            C      M 	SUBA	r3_id,@(4)
       0266A 1804     1     MOV A,@( 4 )
       0266B 013E     1     SUB A, R3_ID 
  4571            C      M 	JPNC	AppSetRingDelayDisplay
       0266C 0E03     1     JBS  _STATUS , C 
       0266D 167F     1     JMP  APPSETRINGDELAYDISPLAY ,
  4572            C      M 	MOV	r3_id,@(1)
       0266E 1801     1     MOV A,@( 1 )
       0266F 007E     1     MOV  R3_ID ,A
  4573 02670 167F C        	JMP	AppSetRingDelayDisplay
  4574 02671      C        AppSetRingDelay_down:
  4575 02671 01FE C        	DEC	r3_id
  4576            C      M 	JPNZ	AppSetRingDelayDisplay
       02672 0E83     1     JBS  _STATUS , Z 
       02673 167F     1     JMP  APPSETRINGDELAYDISPLAY ,
  4577            C      M 	MOV	r3_id,@(3)
       02674 1803     1     MOV A,@( 3 )
       02675 007E     1     MOV  R3_ID ,A
  4578 02676 167F C        	JMP	AppSetRingDelayDisplay
  4579 02677      C        AppSetRingDelay_ok:
  4580 02677 06BE C        	RLCA	r3_id
  4581 02678 1A06 C        	AND	A,@(0x06)
  4582 02679 0078 C        	MOV	r3_ringdelay,A
  4583 0267A 0A9F C        	BS	hardware,SYNCSETTING		; 同步设置
  4584 0267B      C        AppSetRingDelay_exit:
  4585 0267B 00FE C        	CLR	r3_id
  4586 0267C 127F C        	CALL	AppSetRingDelayDisplay
  4587 0267D 00D8 C        	CLR	program
  4588 0267E 1C00 C        	RETL	@(0)
  4589 0267F      C        AppSetRingDelayDisplay:
  4590            C      M 	PAGE	#(VGA)
       0267F 1E83     1     PAGE ( VGA / 1024 ),
  4591 02680 1817 C        	MOV	A,@(0x17)
  4592 02681 1103 C        	CALL	VgaFlash
  4593 02682 1837 C        	MOV	A,@(0x37)
  4594 02683 1103 C        	CALL	VgaFlash
  4595 02684 1857 C        	MOV	A,@(0x57)
  4596 02685 1103 C        	CALL	VgaFlash
  4597            C      M 	PAGE	#($)
       02686 1E89     1     PAGE ( $ / 1024 ),
  4598 02687 043E C        	MOV	A,r3_id
  4599            C      M 	JPZ	AppSetRingDelayDisplay_ret
       02688 0C83     1     JBC  _STATUS , Z 
       02689 1693     1     JMP  APPSETRINGDELAYDISPLAY_RET ,
  4600 0268A 06BE C        	RLCA	r3_id
  4601 0268B 1A06 C        	AND	A,@(0x06)
  4602 0268C 0053 C        	MOV	ax,A
  4603 0268D 01D3 C        	DEC	ax
  4604 0268E 0713 C        	SWAPA	ax
  4605 0268F 1F87 C        	ADD	A,@(0x87)
  4606            C      M 	PAGE	#(VGA)
       02690 1E83     1     PAGE ( VGA / 1024 ),
  4607 02691 1103 C        	CALL	VgaFlash
  4608            C      M 	PAGE	#($)
       02692 1E89     1     PAGE ( $ / 1024 ),
  4609 02693      C        AppSetRingDelayDisplay_ret:
  4610 02693 1C00 C        	RETL	@(0)
  4611            C        
  4612            C        
  4613            C        
  4614            C        /*************************************************
  4615            C        AppSetRemoteCode
  4616            C        设置遥控密码，4位
  4617            C        
  4618            C        r3_id
  4619            C        r3_flag
  4620            C        	.7	=0 第一次输入状态 =1 确认状态
  4621            C        *************************************************/
  4622 02694      C        AppSetRemoteCode:
  4623            C      M 	BANK	3
       02694 0B84     1     BS  _RAM , 6 
       02695 0BC4     1     BS  _RAM , 7 
  4624            C      M 	JPB	sys_flag,PROGRAMINIT,AppSetRemoteCode_init
       02696 0CDD     1     JBC  SYS_FLAG , PROGRAMINIT 
       02697 169B     1     JMP  APPSETREMOTECODE_INIT ,
  4625            C      M 	JPB	sys_flag,PROGRAMREIN,AppSetRemoteCode_rein
       02698 0D1D     1     JBC  SYS_FLAG , PROGRAMREIN 
       02699 169F     1     JMP  APPSETREMOTECODE_REIN ,
  4626 0269A 16A4 C        	JMP	AppSetRemoteCode_idle
  4627 0269B      C        AppSetRemoteCode_init:
  4628 0269B 08DD C        	BC	sys_flag,PROGRAMINIT
  4629 0269C 00FE C        	CLR	r3_id
  4630 0269D 00FF C        	CLR	r3_flag
  4631 0269E 169F C        	JMP	AppSetRemoteCode_display
  4632 0269F      C        AppSetRemoteCode_rein:
  4633 0269F      C        AppSetRemoteCode_display:
  4634 0269F 091D C        	BC	sys_flag,PROGRAMREIN
  4635            C      M 	LCALL	VgaBlankNum2
                      2  M  PAGE #( VGABLANKNUM2 ),
       026A0 1E83     2     PAGE ( VGABLANKNUM2 / 1024 ),
       026A1 10DE     1     CALL ( VGABLANKNUM2 % 1024 ),
                      2  M  PAGE #( $ ),
       026A2 1E89     2     PAGE ( $ / 1024 ),
  4636 026A3 12FD C        	CALL	AppSetRemoteCodeDisplay
  4637 026A4      C        AppSetRemoteCode_idle:
  4638            C      M 	XORA	sys_msg,@(WM_KEYPRESS)
       026A4 1801     1     MOV A,@( WM_KEYPRESS )
       026A5 031B     1     XOR A, SYS_MSG 
  4639 026A6 0E83 C        	JBS	_STATUS,Z
  4640 026A7 1C00 C        	RETL	@(0)
  4641 026A8      C        AppSetRemoteCode_key:
  4642            C      M 	XORA	sys_data,@(KEY_OK)
       026A8 1830     1     MOV A,@( KEY_OK )
       026A9 031C     1     XOR A, SYS_DATA 
  4643            C      M 	JPZ	AppSetRemoteCode_ok
       026AA 0C83     1     JBC  _STATUS , Z 
       026AB 16CB     1     JMP  APPSETREMOTECODE_OK ,
  4644            C      M 	XORA	sys_data,@(KEY_EXIT)
       026AC 1816     1     MOV A,@( KEY_EXIT )
       026AD 031C     1     XOR A, SYS_DATA 
  4645            C      M 	JPZ	AppSetRemoteCode_exit
       026AE 0C83     1     JBC  _STATUS , Z 
       026AF 16F2     1     JMP  APPSETREMOTECODE_EXIT ,
  4646            C      M 	LCALL	LibNumberCheck
                      2  M  PAGE #( LIBNUMBERCHECK ),
       026B0 1E81     2     PAGE ( LIBNUMBERCHECK / 1024 ),
       026B1 1217     1     CALL ( LIBNUMBERCHECK % 1024 ),
                      2  M  PAGE #( $ ),
       026B2 1E89     2     PAGE ( $ / 1024 ),
  4647 026B3 1F00 C        	ADD	A,@(0)
  4648 026B4 0C83 C        	JBC	_STATUS,Z
  4649 026B5 1C00 C        	RETL	@(0)
  4650 026B6      C        AppSetRemoteCode_number:
  4651 026B6 0060 C        	MOV	r3_ax,A
  4652            C      M 	SUBA	r3_id,@(4)
       026B7 1804     1     MOV A,@( 4 )
       026B8 013E     1     SUB A, R3_ID 
  4653            C      M 	JPC	AppSetRemoteCode_err
       026B9 0C03     1     JBC  _STATUS , C 
       026BA 16F8     1     JMP  APPSETREMOTECODE_ERR ,
  4654            C      M 	BLOCK	3
       026BB 1846     1     MOV A,@((( 3 << 1 )+ VALUE_IOCA ))
       026BC 000A     1     IOW  _IOCA ,
  4655            C      M 	ADDA	r3_id,@(233)
       026BD 18E9     1     MOV A,@( 233 )
       026BE 03BE     1     ADD A, R3_ID 
  4656 026BF 004C C        	MOV	_RC,A
  4657            C      M 	JPB	r3_flag,7,AppSetRemoteCode_confirm
       026C0 0DFF     1     JBC  R3_FLAG , 7 
       026C1 16C5     1     JMP  APPSETREMOTECODE_CONFIRM ,
  4658            C      M 	MOV	_RD,r3_ax
       026C2 0420     1     MOV A, R3_AX 
       026C3 004D     1     MOV  _RD ,A
  4659 026C4 16C9 C        	JMP	AppSetRemoteCode_number_1
  4660 026C5      C        AppSetRemoteCode_confirm:
  4661            C      M 	XORA	_RD,r3_ax
       026C5 0420     1     MOV A, R3_AX 
       026C6 030D     1     XOR A, _RD 
  4662            C      M 	JPNZ	AppSetRemoteCode_fail
       026C7 0E83     1     JBS  _STATUS , Z 
       026C8 16F6     1     JMP  APPSETREMOTECODE_FAIL ,
  4663 026C9      C        AppSetRemoteCode_number_1:
  4664 026C9 057E C        	INC	r3_id
  4665 026CA 16FD C        	JMP	AppSetRemoteCodeDisplay
  4666 026CB      C        AppSetRemoteCode_ok:
  4667            C      M 	JPB	r3_flag,7,AppSetRemoteCode_ok_1
       026CB 0DFF     1     JBC  R3_FLAG , 7 
       026CC 16D4     1     JMP  APPSETREMOTECODE_OK_1 ,
  4668            C      M 	SUBA	r3_id,@(4)
       026CD 1804     1     MOV A,@( 4 )
       026CE 013E     1     SUB A, R3_ID 
  4669            C      M 	JPNC	AppSetRemoteCode_err
       026CF 0E03     1     JBS  _STATUS , C 
       026D0 16F8     1     JMP  APPSETREMOTECODE_ERR ,
  4670 026D1 0BFF C        	BS	r3_flag,7
  4671 026D2 00FE C        	CLR	r3_id
  4672 026D3 16FD C        	JMP	AppSetRemoteCodeDisplay
  4673 026D4      C        AppSetRemoteCode_ok_1:
  4674            C      M 	SUBA	r3_id,@(4)
       026D4 1804     1     MOV A,@( 4 )
       026D5 013E     1     SUB A, R3_ID 
  4675            C      M 	JPNC	AppSetRemoteCode_fail
       026D6 0E03     1     JBS  _STATUS , C 
       026D7 16F6     1     JMP  APPSETREMOTECODE_FAIL ,
  4676            C      M 	BLOCK	3
       026D8 1846     1     MOV A,@((( 3 << 1 )+ VALUE_IOCA ))
       026D9 000A     1     IOW  _IOCA ,
  4677            C      M 	MOV	_RC,@(233)
       026DA 18E9     1     MOV A,@( 233 )
       026DB 004C     1     MOV  _RC ,A
  4678            C      M 	SUBA	_RD,@(48)
       026DC 1830     1     MOV A,@( 48 )
       026DD 010D     1     SUB A, _RD 
  4679 026DE 0070 C        	MOV	r3_remotecode1,A
  4680 026DF 0770 C        	SWAP	r3_remotecode1
  4681 026E0 054C C        	INC	_RC
  4682            C      M 	SUBA	_RD,@(48)
       026E1 1830     1     MOV A,@( 48 )
       026E2 010D     1     SUB A, _RD 
  4683 026E3 03F0 C        	ADD	r3_remotecode1,A
  4684 026E4 054C C        	INC	_RC
  4685            C      M 	SUBA	_RD,@(48)
       026E5 1830     1     MOV A,@( 48 )
       026E6 010D     1     SUB A, _RD 
  4686 026E7 0071 C        	MOV	r3_remotecode2,A
  4687 026E8 0771 C        	SWAP	r3_remotecode2
  4688 026E9 054C C        	INC	_RC
  4689            C      M 	SUBA	_RD,@(48)
       026EA 1830     1     MOV A,@( 48 )
       026EB 010D     1     SUB A, _RD 
  4690 026EC 03F1 C        	ADD	r3_remotecode2,A
  4691 026ED 0A9F C        	BS	hardware,SYNCSETTING
  4692 026EE 1839 C        	MOV	A,@(PRO_AppSuccessfull)
  4693            C      M 	PAGE	#(LibPushProgram)
       026EF 1E81     1     PAGE ( LIBPUSHPROGRAM / 1024 ),
  4694 026F0 1000 C        	CALL	LibPushProgram
  4695 026F1 1C00 C        	RETL	@(0)
  4696 026F2      C        AppSetRemoteCode_exit:
  4697 026F2 1801 C        	MOV	A,@(0x01)
  4698            C      M 	LCALL	LibPromptBeep
                      2  M  PAGE #( LIBPROMPTBEEP ),
       026F3 1E81     2     PAGE ( LIBPROMPTBEEP / 1024 ),
       026F4 12D6     1     CALL ( LIBPROMPTBEEP % 1024 ),
                      2  M  PAGE #( $ ),
       026F5 1E89     2     PAGE ( $ / 1024 ),
  4699 026F6      C        AppSetRemoteCode_fail:
  4700 026F6 00D8 C        	CLR	program
  4701 026F7 1C00 C        	RETL	@(0)
  4702 026F8      C        AppSetRemoteCode_err:
  4703 026F8 1801 C        	MOV	A,@(0x01)
  4704            C      M 	LCALL	LibPromptBeep
                      2  M  PAGE #( LIBPROMPTBEEP ),
       026F9 1E81     2     PAGE ( LIBPROMPTBEEP / 1024 ),
       026FA 12D6     1     CALL ( LIBPROMPTBEEP % 1024 ),
                      2  M  PAGE #( $ ),
       026FB 1E89     2     PAGE ( $ / 1024 ),
  4705 026FC 1C00 C        	RETL	@(0)
  4706 026FD      C        AppSetRemoteCodeDisplay:
  4707            C      M 	JPB	r3_flag,7,AppSetRemoteCodeDisplay_1
       026FD 0DFF     1     JBC  R3_FLAG , 7 
       026FE 1701     1     JMP  APPSETREMOTECODEDISPLAY_1 ,
  4708 026FF 1810 C        	MOV	A,@(STR_Input)
  4709 02700 1702 C        	JMP	AppSetRemoteCodeDisplay_2
  4710 02701      C        AppSetRemoteCodeDisplay_1:
  4711 02701 1811 C        	MOV	A,@(STR_Again)
  4712 02702      C        AppSetRemoteCodeDisplay_2:
  4713 02702 0060 C        	MOV	r3_ax,A
  4714            C      M 	PAGE	#(VGA)
       02703 1E83     1     PAGE ( VGA / 1024 ),
  4715 02704 10E0 C        	CALL	VgaBlankChar
  4716 02705 1881 C        	MOV	A,@(STYLE_LEFT)
  4717 02706 101C C        	CALL	VgaChar
  4718 02707 0420 C        	MOV	A,r3_ax
  4719 02708 114B C        	CALL	VgaString
  4720 02709 183A C        	MOV	A,@(58)
  4721 0270A 101C C        	CALL	VgaChar
  4722            C      M 	PAGE	#($)
       0270B 1E89     1     PAGE ( $ / 1024 ),
  4723            C      M 	MOV	r3_cnt,r3_id
       0270C 043E     1     MOV A, R3_ID 
       0270D 0062     1     MOV  R3_CNT ,A
  4724 0270E      C        AppSetRemoteCodeDisplay_3:
  4725 0270E 0422 C        	MOV	A,r3_cnt
  4726            C      M 	JPZ	AppSetRemoteCodeDisplay_end
       0270F 0C83     1     JBC  _STATUS , Z 
       02710 1717     1     JMP  APPSETREMOTECODEDISPLAY_END ,
  4727 02711 182A C        	MOV	A,@(42)
  4728            C      M 	LCALL	VgaChar
                      2  M  PAGE #( VGACHAR ),
       02712 1E83     2     PAGE ( VGACHAR / 1024 ),
       02713 101C     1     CALL ( VGACHAR % 1024 ),
                      2  M  PAGE #( $ ),
       02714 1E89     2     PAGE ( $ / 1024 ),
  4729 02715 01E2 C        	DEC	r3_cnt
  4730 02716 170E C        	JMP	AppSetRemoteCodeDisplay_3
  4731 02717      C        AppSetRemoteCodeDisplay_end:
  4732            C      M 	PAGE	#(VGA)
       02717 1E83     1     PAGE ( VGA / 1024 ),
  4733 02718 1800 C        	MOV	A,@(0)
  4734 02719 101C C        	CALL	VgaChar
  4735 0271A 1078 C        	CALL	VgaDrawChar
  4736            C      M 	PAGE	#($)
       0271B 1E89     1     PAGE ( $ / 1024 ),
  4737 0271C 1C00 C        	RETL	@(0)
  4738            C        
  4739            C        
  4740            C        /*************************************************
  4741            C        AppSetRecordTime
  4742            C        设置录音时间，即压缩比。
  4743            C        
  4744            C        r3_flag
  4745            C        	.7	=0 low; =1 high
  4746            C        
  4747            C        *************************************************/
  4748 0271D      C        AppSetRecordTime:
  4749            C      M 	BANK	3
       0271D 0B84     1     BS  _RAM , 6 
       0271E 0BC4     1     BS  _RAM , 7 
  4750            C      M 	JPB	sys_flag,PROGRAMINIT,AppSetRecordTime_init
       0271F 0CDD     1     JBC  SYS_FLAG , PROGRAMINIT 
       02720 1724     1     JMP  APPSETRECORDTIME_INIT ,
  4751            C      M 	JPB	sys_flag,PROGRAMREIN,AppSetRecordTime_rein
       02721 0D1D     1     JBC  SYS_FLAG , PROGRAMREIN 
       02722 172C     1     JMP  APPSETRECORDTIME_REIN ,
  4752 02723 1731 C        	JMP	AppSetRecordTime_idle
  4753 02724      C        AppSetRecordTime_init:
  4754 02724 08DD C        	BC	sys_flag,PROGRAMINIT
  4755 02725 00FF C        	CLR	r3_flag
  4756            C      M 	SUBA	r3_rate,@(5)
       02726 1805     1     MOV A,@( 5 )
       02727 0139     1     SUB A, R3_RATE 
  4757            C      M 	JPNC	AppSetRecordTime_display
       02728 0E03     1     JBS  _STATUS , C 
       02729 172C     1     JMP  APPSETRECORDTIME_DISPLAY ,
  4758 0272A 0BFF C        	BS	r3_flag,7
  4759 0272B 172C C        	JMP	AppSetRecordTime_display
  4760 0272C      C        AppSetRecordTime_rein:
  4761 0272C      C        AppSetRecordTime_display:
  4762 0272C 091D C        	BC	sys_flag,PROGRAMREIN
  4763            C      M 	LCALL	VgaBlankNum2
                      2  M  PAGE #( VGABLANKNUM2 ),
       0272D 1E83     2     PAGE ( VGABLANKNUM2 / 1024 ),
       0272E 10DE     1     CALL ( VGABLANKNUM2 % 1024 ),
                      2  M  PAGE #( $ ),
       0272F 1E89     2     PAGE ( $ / 1024 ),
  4764 02730 1353 C        	CALL	AppSetRecordTimeDisplay
  4765 02731      C        AppSetRecordTime_idle:
  4766            C      M 	XORA	sys_msg,@(WM_KEYPRESS)
       02731 1801     1     MOV A,@( WM_KEYPRESS )
       02732 031B     1     XOR A, SYS_MSG 
  4767            C      M 	JPZ	AppSetRecordTime_key
       02733 0C83     1     JBC  _STATUS , Z 
       02734 1736     1     JMP  APPSETRECORDTIME_KEY ,
  4768 02735 1C00 C        	RETL	@(0)
  4769 02736      C        AppSetRecordTime_key:
  4770            C      M 	XORA	sys_data,@(KEY_UP)
       02736 1824     1     MOV A,@( KEY_UP )
       02737 031C     1     XOR A, SYS_DATA 
  4771            C      M 	JPZ	AppSetRecordTime_up
       02738 0C83     1     JBC  _STATUS , Z 
       02739 1747     1     JMP  APPSETRECORDTIME_UP ,
  4772            C      M 	XORA	sys_data,@(KEY_DOWN)
       0273A 1825     1     MOV A,@( KEY_DOWN )
       0273B 031C     1     XOR A, SYS_DATA 
  4773            C      M 	JPZ	AppSetRecordTime_down
       0273C 0C83     1     JBC  _STATUS , Z 
       0273D 1747     1     JMP  APPSETRECORDTIME_DOWN ,
  4774            C      M 	XORA	sys_data,@(KEY_OK)
       0273E 1830     1     MOV A,@( KEY_OK )
       0273F 031C     1     XOR A, SYS_DATA 
  4775            C      M 	JPZ	AppSetRecordTime_ok
       02740 0C83     1     JBC  _STATUS , Z 
       02741 174A     1     JMP  APPSETRECORDTIME_OK ,
  4776            C      M 	XORA	sys_data,@(KEY_EXIT)
       02742 1816     1     MOV A,@( KEY_EXIT )
       02743 031C     1     XOR A, SYS_DATA 
  4777            C      M 	JPZ	AppSetRecordTime_exit
       02744 0C83     1     JBC  _STATUS , Z 
       02745 1751     1     JMP  APPSETRECORDTIME_EXIT ,
  4778 02746 1C00 C        	RETL	@(0)
  4779 02747      C        AppSetRecordTime_up:
  4780 02747      C        AppSetRecordTime_down:
  4781            C      M 	INVB	r3_flag,7
                      2  M  XOR  R3_FLAG ,@(( 1 << 7 ))
       02747 1880     2     MOV A,@(( 1 << 7 ))
       02748 037F     2     XOR  R3_FLAG ,A
  4782 02749 1753 C        	JMP	AppSetRecordTimeDisplay
  4783 0274A      C        AppSetRecordTime_ok:
  4784 0274A 0A9F C        	BS	hardware,SYNCSETTING
  4785            C      M 	JPB	r3_flag,7,AppSetRecordTime_ok_1
       0274B 0DFF     1     JBC  R3_FLAG , 7 
       0274C 174F     1     JMP  APPSETRECORDTIME_OK_1 ,
  4786 0274D 1801 C        	MOV	A,@(1)
  4787 0274E 1750 C        	JMP	AppSetRecordTime_ok_2
  4788 0274F      C        AppSetRecordTime_ok_1:
  4789 0274F 1805 C        	MOV	A,@(5)
  4790 02750      C        AppSetRecordTime_ok_2:
  4791 02750 0079 C        	MOV	r3_rate,A
  4792 02751      C        AppSetRecordTime_exit:
  4793 02751 00D8 C        	CLR	program
  4794 02752 1C00 C        	RETL	@(0)
  4795 02753      C        AppSetRecordTimeDisplay:
  4796            C      M 	JPB	r3_flag,7,AppSetRecordTimeDisplay_1
       02753 0DFF     1     JBC  R3_FLAG , 7 
       02754 1757     1     JMP  APPSETRECORDTIMEDISPLAY_1 ,
  4797 02755 1809 C        	MOV	A,@(STR_LowQuality)
  4798 02756 1758 C        	JMP	AppSetRecordTimeDisplay_2
  4799 02757      C        AppSetRecordTimeDisplay_1:
  4800 02757 1808 C        	MOV	A,@(STR_HighQuality)
  4801 02758      C        AppSetRecordTimeDisplay_2:
  4802 02758 0060 C        	MOV	r3_ax,A
  4803            C      M 	PAGE	#(VGA)
       02759 1E83     1     PAGE ( VGA / 1024 ),
  4804 0275A 10E0 C        	CALL	VgaBlankChar
  4805 0275B 1881 C        	MOV	A,@(STYLE_LEFT)
  4806 0275C 101C C        	CALL	VgaChar
  4807 0275D 0420 C        	MOV	A,r3_ax
  4808 0275E 114B C        	CALL	VgaString
  4809 0275F 1800 C        	MOV	A,@(0)
  4810 02760 101C C        	CALL	VgaChar
  4811 02761 1078 C        	CALL	VgaDrawChar
  4812            C      M 	PAGE	#($)
       02762 1E89     1     PAGE ( $ / 1024 ),
  4813 02763 1C00 C        	RETL	@(0)
  4814            C        	
  4815            C        
  4816            C        /*************************************************
  4817            C        AppOnoffSelect
  4818            C        改变答录机on/off状态
  4819            C        初始化:	
  4820            C        显示:	
  4821            C        待机:
  4822            C        *************************************************/
  4823 02764      C        AppOnoffSelect:
  4824            C      M 	BANK	3
       02764 0B84     1     BS  _RAM , 6 
       02765 0BC4     1     BS  _RAM , 7 
  4825            C      M 	JPB	sys_flag,PROGRAMINIT,AppOnoffSelect_init
       02766 0CDD     1     JBC  SYS_FLAG , PROGRAMINIT 
       02767 176B     1     JMP  APPONOFFSELECT_INIT ,
  4826            C      M 	JPB	sys_flag,PROGRAMREIN,AppOnoffSelect_rein
       02768 0D1D     1     JBC  SYS_FLAG , PROGRAMREIN 
       02769 176F     1     JMP  APPONOFFSELECT_REIN ,
  4827 0276A 1771 C        	JMP	AppOnoffSelect_idle
  4828 0276B      C        AppOnoffSelect_init:
  4829 0276B 08DD C        	BC	sys_flag,PROGRAMINIT
  4830            C      M 	INVB	r3_ogm,7
                      2  M  XOR  R3_OGM ,@(( 1 << 7 ))
       0276C 1880     2     MOV A,@(( 1 << 7 ))
       0276D 037C     2     XOR  R3_OGM ,A
  4831 0276E 176F C        	JMP	AppOnoffSelect_display
  4832 0276F      C        AppOnoffSelect_rein:
  4833 0276F      C        AppOnoffSelect_display:
  4834 0276F 091D C        	BC	sys_flag,PROGRAMREIN
  4835 02770 13A1 C        	CALL	AppOnoffSelectDisplay
  4836            C        	
  4837            C        	
  4838 02771      C        AppOnoffSelect_idle:
  4839            C      M 	XORA	sys_msg,@(WM_KEYPRESS)
       02771 1801     1     MOV A,@( WM_KEYPRESS )
       02772 031B     1     XOR A, SYS_MSG 
  4840            C      M 	JPZ	AppOnoffSelect_key
       02773 0C83     1     JBC  _STATUS , Z 
       02774 1786     1     JMP  APPONOFFSELECT_KEY ,
  4841            C      M 	BANK	2
       02775 0984     1     BC  _RAM , 6 
       02776 0BC4     1     BS  _RAM , 7 
  4842 02777 042B C        	MOV	A,r2_tmr_dial1
  4843            C      M 	JPNZ	AppOnoffSelect_ret
       02778 0E83     1     JBS  _STATUS , Z 
       02779 1785     1     JMP  APPONOFFSELECT_RET ,
  4844 0277A 042A C        	MOV	A,r2_tmr_dial
  4845            C      M 	JPNZ	AppOnoffSelect_ret
       0277B 0E83     1     JBS  _STATUS , Z 
       0277C 1785     1     JMP  APPONOFFSELECT_RET ,
  4846 0277D      C        AppOnoffSelect_ok:
  4847            C      M 	BANK	3
       0277D 0B84     1     BS  _RAM , 6 
       0277E 0BC4     1     BS  _RAM , 7 
  4848            C      M 	JPB	r3_ogm,7,AppOnoffSelect_exit	; off状态，2s后自动退出
       0277F 0DFC     1     JBC  R3_OGM , 7 
       02780 179E     1     JMP  APPONOFFSELECT_EXIT ,
  4849 02781 1811 C        	MOV	A,@(PRO_AppMenuRecorderOn)	; on状态，2s后自动进入设置菜单
  4850            C      M 	PAGE	#(LibPushProgram)
       02782 1E81     1     PAGE ( LIBPUSHPROGRAM / 1024 ),
  4851 02783 1000 C        	CALL	LibPushProgram
  4852 02784 0A9F C        	BS	hardware,SYNCSETTING
  4853 02785      C        AppOnoffSelect_ret:
  4854 02785 1C00 C        	RETL	@(0)
  4855 02786      C        AppOnoffSelect_key:
  4856            C      M 	XORA	sys_data,@(KEY_UP)
       02786 1824     1     MOV A,@( KEY_UP )
       02787 031C     1     XOR A, SYS_DATA 
  4857            C      M 	JPZ	AppOnoffSelect_adjust
       02788 0C83     1     JBC  _STATUS , Z 
       02789 179B     1     JMP  APPONOFFSELECT_ADJUST ,
  4858            C      M 	XORA	sys_data,@(KEY_DOWN)
       0278A 1825     1     MOV A,@( KEY_DOWN )
       0278B 031C     1     XOR A, SYS_DATA 
  4859            C      M 	JPZ	AppOnoffSelect_adjust
       0278C 0C83     1     JBC  _STATUS , Z 
       0278D 179B     1     JMP  APPONOFFSELECT_ADJUST ,
  4860            C      M 	XORA	sys_data,@(KEY_ONOFF)
       0278E 1823     1     MOV A,@( KEY_ONOFF )
       0278F 031C     1     XOR A, SYS_DATA 
  4861            C      M 	JPZ	AppOnoffSelect_adjust
       02790 0C83     1     JBC  _STATUS , Z 
       02791 179B     1     JMP  APPONOFFSELECT_ADJUST ,
  4862            C      M 	XORA	sys_data,@(KEY_EXIT)
       02792 1816     1     MOV A,@( KEY_EXIT )
       02793 031C     1     XOR A, SYS_DATA 
  4863            C      M 	JPZ	AppOnoffSelect_exit
       02794 0C83     1     JBC  _STATUS , Z 
       02795 179E     1     JMP  APPONOFFSELECT_EXIT ,
  4864            C      M 	XORA	sys_data,@(KEY_MENU)
       02796 1830     1     MOV A,@( KEY_MENU )
       02797 031C     1     XOR A, SYS_DATA 
  4865            C      M 	JPZ	AppOnoffSelect_ok
       02798 0C83     1     JBC  _STATUS , Z 
       02799 177D     1     JMP  APPONOFFSELECT_OK ,
  4866 0279A 1C00 C        	RETL	@(0)
  4867 0279B      C        AppOnoffSelect_adjust:
  4868            C      M 	INVB	r3_ogm,7
                      2  M  XOR  R3_OGM ,@(( 1 << 7 ))
       0279B 1880     2     MOV A,@(( 1 << 7 ))
       0279C 037C     2     XOR  R3_OGM ,A
  4869 0279D 17A1 C        	JMP	AppOnoffSelectDisplay
  4870 0279E      C        AppOnoffSelect_exit:
  4871 0279E 00D8 C        	CLR	program
  4872 0279F 0A9F C        	BS	hardware,SYNCSETTING
  4873 027A0 1C00 C        	RETL	@(0)
  4874            C        
  4875 027A1      C        AppOnoffSelectDisplay:
  4876            C      M 	JPB	r3_ogm,7,AppOnoffSelectDisplay_off
       027A1 0DFC     1     JBC  R3_OGM , 7 
       027A2 17A5     1     JMP  APPONOFFSELECTDISPLAY_OFF ,
  4877 027A3 1838 C        	MOV	A,@(STR_RecorderON)
  4878 027A4 17A6 C        	JMP	AppOnoffSelectDisplay_1
  4879 027A5      C        AppOnoffSelectDisplay_off:
  4880 027A5 1839 C        	MOV	A,@(STR_RecorderOFF)
  4881 027A6      C        AppOnoffSelectDisplay_1:
  4882 027A6 0060 C        	MOV	r3_ax,A
  4883            C      M 	PAGE	#(VGA)
       027A7 1E83     1     PAGE ( VGA / 1024 ),
  4884 027A8 10DE C        	CALL	VgaBlankNum2
  4885 027A9 10E0 C        	CALL	VgaBlankChar
  4886 027AA 1881 C        	MOV	A,@(STYLE_LEFT)
  4887 027AB 101C C        	CALL	VgaChar
  4888 027AC 0420 C        	MOV	A,r3_ax
  4889 027AD 114B C        	CALL	VgaString
  4890 027AE 1800 C        	MOV	A,@(0)
  4891 027AF 101C C        	CALL	VgaChar
  4892 027B0 1078 C        	CALL	VgaDrawChar
  4893            C      M 	PAGE	#($)
       027B1 1E89     1     PAGE ( $ / 1024 ),
  4894            C        	
  4895            C      M 	BANK	2
       027B2 0984     1     BC  _RAM , 6 
       027B3 0BC4     1     BS  _RAM , 7 
  4896 027B4 0011 C        	DISI
  4897 027B5 00EA C        	CLR	r2_tmr_dial
  4898            C      M 	MOV	r2_tmr_dial1,@(2)
       027B6 1802     1     MOV A,@( 2 )
       027B7 006B     1     MOV  R2_TMR_DIAL1 ,A
  4899 027B8 0010 C        	ENI
  4900 027B9 1C00 C        	RETL	@(0)
  4901            C        
  4902            C        ORG	0x2800
  4903            C        
  4904            C        /*************************************************
  4905            C        AppNewBook
  4906            C        增加一个电话本记录
  4907            C        初始化编辑区，一个新的电话本。
  4908            C        *************************************************/
  4909 02800      C        AppNewBook:
  4910            C      M 	BLOCK	3
       02800 1846     1     MOV A,@((( 3 << 1 )+ VALUE_IOCA ))
       02801 000A     1     IOW  _IOCA ,
  4911 02802 00D3 C        	CLR	ax
  4912            C      M 	MOV	_RC,@(131)
       02803 1883     1     MOV A,@( 131 )
       02804 004C     1     MOV  _RC ,A
  4913            C      M 	MOV	cnt,@(68)
       02805 1844     1     MOV A,@( 68 )
       02806 0055     1     MOV  CNT ,A
  4914            C      M 	PAGE	#(LibPushStack)
       02807 1E81     1     PAGE ( LIBPUSHSTACK / 1024 ),
  4915 02808 111D C        	CALL	LibClearRam			; 属于phonebook
  4916 02809 1833 C        	MOV	A,@(PRO_AppEditBook)
  4917 0280A 1000 C        	CALL	LibPushProgram
  4918            C      M 	PAGE	#($)
       0280B 1E8A     1     PAGE ( $ / 1024 ),
  4919 0280C 1C00 C        	RETL	@(0)
  4920            C        
  4921            C        /*************************************************
  4922            C        AppEditBook
  4923            C        编辑一个电话本记录
  4924            C        初始化:	
  4925            C        
  4926            C        	
  4927            C        显示:	
  4928            C        待机:
  4929            C        	号码16位
  4930            C        	人名16位
  4931            C        	
  4932            C        	LEFT	- 光标左移一位
  4933            C        	RIGHT	- 光标右移一位
  4934            C        	BACK	- 删除光标前面一位
  4935            C        	ERASE	- 删除光标当前位
  4936            C        	
  4937            C        	r2_flag:
  4938            C        		.7	=0 first display (初始化第一次光标的位置)
  4939            C        		.6	=0 大写		(编辑人名)
  4940            C        			=1 小写
  4941            C        		.5	=0 人名确定
  4942            C        			=1 人名备选中	(编辑人名)
  4943            C        		.4	=0 normal
  4944            C        			=1 searching
  4945            C        		.1~.0
  4946            C        			=0 edit number
  4947            C        			=1 edit name
  4948            C        			=2 edit music
  4949            C        	r2_cnt	- 编辑位置
  4950            C        
  4951            C        *************************************************/
  4952 0280D      C        AppEditBook:
  4953            C      M 	JPB	sys_flag,PROGRAMINIT,AppEditBook_init
       0280D 0CDD     1     JBC  SYS_FLAG , PROGRAMINIT 
       0280E 1412     1     JMP  APPEDITBOOK_INIT ,
  4954            C      M 	JPB	sys_flag,PROGRAMREIN,AppEditBook_rein
       0280F 0D1D     1     JBC  SYS_FLAG , PROGRAMREIN 
       02810 1417     1     JMP  APPEDITBOOK_REIN ,
  4955 02811 1419 C        	JMP	AppEditBook_idle
  4956 02812      C        AppEditBook_init:
  4957 02812 08DD C        	BC	sys_flag,PROGRAMINIT
  4958            C      M 	BANK	2
       02813 0984     1     BC  _RAM , 6 
       02814 0BC4     1     BS  _RAM , 7 
  4959 02815 00FF C        	CLR	r2_flag
  4960 02816 1417 C        	JMP	AppEditBook_display
  4961 02817      C        AppEditBook_rein:
  4962 02817      C        AppEditBook_display:
  4963 02817 091D C        	BC	sys_flag,PROGRAMREIN
  4964 02818 1154 C        	CALL	AppEditBookDisplay
  4965 02819      C        AppEditBook_idle:
  4966            C      M 	BANK	2
       02819 0984     1     BC  _RAM , 6 
       0281A 0BC4     1     BS  _RAM , 7 
  4967            C      M 	BLOCK	3
       0281B 1846     1     MOV A,@((( 3 << 1 )+ VALUE_IOCA ))
       0281C 000A     1     IOW  _IOCA ,
  4968            C      M 	MOV	_RC,@(198)
       0281D 18C6     1     MOV A,@( 198 )
       0281E 004C     1     MOV  _RC ,A
  4969            C      M 	MOV	r2_id,_RD
       0281F 040D     1     MOV A, _RD 
       02820 007E     1     MOV  R2_ID ,A
  4970            C        	
  4971            C      M 	XORA	sys_msg,@(WM_KEYPRESS)
       02821 1801     1     MOV A,@( WM_KEYPRESS )
       02822 031B     1     XOR A, SYS_MSG 
  4972            C      M 	JPZ	AppEditBook_key
       02823 0C83     1     JBC  _STATUS , Z 
       02824 1449     1     JMP  APPEDITBOOK_KEY ,
  4973            C      M 	XORA	sys_msg,@(WM_COMMAND)
       02825 1807     1     MOV A,@( WM_COMMAND )
       02826 031B     1     XOR A, SYS_MSG 
  4974            C      M 	JPZ	AppEditBook_command
       02827 0C83     1     JBC  _STATUS , Z 
       02828 1439     1     JMP  APPEDITBOOK_COMMAND ,
  4975 02829      C        AppEditBook_idle_1:
  4976            C      M 	ANDA	r2_flag,@(3)
       02829 1803     1     MOV A,@( 3 )
       0282A 02BF     1     AND A, R2_FLAG 
  4977 0282B 0020 C        	TBL
  4978 0282C 1430 C        	JMP	AppEditBook_number
  4979 0282D 1432 C        	JMP	AppEditBook_name
  4980 0282E 1434 C        	JMP	AppEditBook_music
  4981 0282F 1438 C        	JMP	AppEditBook_ret
  4982 02830      C        AppEditBook_number:
  4983 02830 1216 C        	CALL	AppEditNumber
  4984 02831 1435 C        	JMP	AppEditBook_idle_2
  4985 02832      C        AppEditBook_name:
  4986 02832 128A C        	CALL	AppEditName
  4987 02833 1435 C        	JMP	AppEditBook_idle_2
  4988 02834      C        AppEditBook_music:
  4989 02834 136B C        	CALL	AppEditMusic
  4990 02835      C        AppEditBook_idle_2:
  4991 02835 1F00 C        	ADD	A,@(0)
  4992            C      M 	JPNZ	AppEditBookDisplay
       02836 0E83     1     JBS  _STATUS , Z 
       02837 1554     1     JMP  APPEDITBOOKDISPLAY ,
  4993 02838      C        AppEditBook_ret:
  4994 02838 1C00 C        	RETL	@(0)
  4995 02839      C        AppEditBook_command:
  4996            C      M 	XORA	sys_data,@(0x1a)
       02839 181A     1     MOV A,@( 26 )
       0283A 031C     1     XOR A, SYS_DATA 
  4997            C      M 	JPNZ	AppEditBook_idle_1
       0283B 0E83     1     JBS  _STATUS , Z 
       0283C 1429     1     JMP  APPEDITBOOK_IDLE_1 ,
  4998 0283D 1801 C        	MOV	A,@(1)
  4999            C      M 	LCALL	LibGetCommand
                      2  M  PAGE #( LIBGETCOMMAND ),
       0283E 1E81     2     PAGE ( LIBGETCOMMAND / 1024 ),
       0283F 12B6     1     CALL ( LIBGETCOMMAND % 1024 ),
                      2  M  PAGE #( $ ),
       02840 1E8A     2     PAGE ( $ / 1024 ),
  5000 02841 1D04 C        	SUB	A,@(0x04)
  5001            C      M 	JPNZ	AppEditBook_idle_1
       02842 0E83     1     JBS  _STATUS , Z 
       02843 1429     1     JMP  APPEDITBOOK_IDLE_1 ,
  5002 02844 093F C        	BC	r2_flag,4
  5003            C      M 	LCALL	AppCallerToEditor
                      2  M  PAGE #( APPCALLERTOEDITOR ),
       02845 1E8B     2     PAGE ( APPCALLERTOEDITOR / 1024 ),
       02846 10A0     1     CALL ( APPCALLERTOEDITOR % 1024 ),
                      2  M  PAGE #( $ ),
       02847 1E8A     2     PAGE ( $ / 1024 ),
  5004 02848 1554 C        	JMP	AppEditBookDisplay
  5005 02849      C        AppEditBook_key:
  5006            C      M 	XORA	sys_data,@(KEY_EXIT)
       02849 1816     1     MOV A,@( KEY_EXIT )
       0284A 031C     1     XOR A, SYS_DATA 
  5007            C      M 	JPZ	AppEditBook_exit
       0284B 0C83     1     JBC  _STATUS , Z 
       0284C 1454     1     JMP  APPEDITBOOK_EXIT ,
  5008            C      M 	JPB	r2_flag,4,AppEditBook_ret
       0284D 0D3F     1     JBC  R2_FLAG , 4 
       0284E 1438     1     JMP  APPEDITBOOK_RET ,
  5009            C      M 	XORA	sys_data,@(KEY_OK)
       0284F 1830     1     MOV A,@( KEY_OK )
       02850 031C     1     XOR A, SYS_DATA 
  5010            C      M 	JPZ	AppEditBook_ok
       02851 0C83     1     JBC  _STATUS , Z 
       02852 145C     1     JMP  APPEDITBOOK_OK ,
  5011 02853 1429 C        	JMP	AppEditBook_idle_1
  5012 02854      C        AppEditBook_exit:
  5013            C      M 	PAGE	#(LibSendOneCommand)
       02854 1E81     1     PAGE ( LIBSENDONECOMMAND / 1024 ),
  5014 02855 1854 C        	MOV	A,@(0x54)
  5015 02856 12AF C        	CALL	LibSendOneCommand
  5016 02857 1800 C        	MOV	A,@(0x00)
  5017 02858 1079 C        	CALL	LibStoreCursor
  5018            C      M 	PAGE	#($)
       02859 1E8A     1     PAGE ( $ / 1024 ),
  5019 0285A 00D8 C        	CLR	program
  5020 0285B 1C00 C        	RETL	@(0)
  5021 0285C      C        AppEditBook_ok:
  5022            C      M 	ANDA	r2_flag,@(3)
       0285C 1803     1     MOV A,@( 3 )
       0285D 02BF     1     AND A, R2_FLAG 
  5023 0285E 0020 C        	TBL
  5024 0285F 1463 C        	JMP	AppEditBook_ok_number
  5025 02860 1474 C        	JMP	AppEditBook_ok_name
  5026 02861 148B C        	JMP	AppEditBook_ok_music
  5027 02862 1438 C        	JMP	AppEditBook_ret
  5028 02863      C        AppEditBook_ok_number:
  5029            C      M 	MOV	_RC,@(131)
       02863 1883     1     MOV A,@( 131 )
       02864 004C     1     MOV  _RC ,A
  5030 02865 040D C        	MOV	A,_RD				; 没有号码
  5031            C      M 	JPZ	AppEditBook_ret			; 不能按OK
       02866 0C83     1     JBC  _STATUS , Z 
       02867 1438     1     JMP  APPEDITBOOK_RET ,
  5032 02868 09FF C        	BC	r2_flag,7
  5033 02869 057F C        	INC	r2_flag
  5034 0286A 043E C        	MOV	A,r2_id
  5035            C      M 	JPNZ	AppEditBookDisplay
       0286B 0E83     1     JBS  _STATUS , Z 
       0286C 1554     1     JMP  APPEDITBOOKDISPLAY ,
  5036 0286D 0B3F C        	BS	r2_flag,4
  5037 0286E 10FD C        	CALL	AppSendEditorPackage
  5038 0286F 185A C        	MOV	A,@(0x5a)
  5039            C      M 	LCALL	LibSendOneCommand
                      2  M  PAGE #( LIBSENDONECOMMAND ),
       02870 1E81     2     PAGE ( LIBSENDONECOMMAND / 1024 ),
       02871 12AF     1     CALL ( LIBSENDONECOMMAND % 1024 ),
                      2  M  PAGE #( $ ),
       02872 1E8A     2     PAGE ( $ / 1024 ),
  5040 02873 1C00 C        	RETL	@(0)
  5041 02874      C        AppEditBook_ok_name:
  5042            C      M 	MOV	_RC,@(164)
       02874 18A4     1     MOV A,@( 164 )
       02875 004C     1     MOV  _RC ,A
  5043 02876 040D C        	MOV	A,_RD
  5044            C      M 	JPZ	AppEditBook_ret			; 没有人名，不能按OK键
       02877 0C83     1     JBC  _STATUS , Z 
       02878 1438     1     JMP  APPEDITBOOK_RET ,
  5045 02879 09FF C        	BC	r2_flag,7
  5046 0287A 057F C        	INC	r2_flag
  5047            C      M 	MOV	_RC,@(197)
       0287B 18C5     1     MOV A,@( 197 )
       0287C 004C     1     MOV  _RC ,A
  5048 0287D 040D C        	MOV	A,_RD
  5049            C      M 	JPNZ	AppEditBook_ok_name_1
       0287E 0E83     1     JBS  _STATUS , Z 
       0287F 1482     1     JMP  APPEDITBOOK_OK_NAME_1 ,
  5050            C      M 	MOV	_RD,@(DEFAULT_ringmelody)
       02880 1801     1     MOV A,@( DEFAULT_RINGMELODY )
       02881 004D     1     MOV  _RD ,A
  5051 02882      C        AppEditBook_ok_name_1:
  5052 02882 0054 C        	MOV	exa,A
  5053            C      M 	PAGE	#(IIC)
       02883 1E80     1     PAGE ( IIC / 1024 ),
  5054 02884 1853 C        	MOV	A,@(0x53)
  5055 02885 10A8 C        	CALL	IicSendData
  5056 02886 0414 C        	MOV	A,exa
  5057 02887 10A8 C        	CALL	IicSendData
  5058 02888 10B3 C        	CALL	IicSer
  5059            C      M 	PAGE	#($)
       02889 1E8A     1     PAGE ( $ / 1024 ),
  5060 0288A 1554 C        	JMP	AppEditBookDisplay
  5061 0288B      C        AppEditBook_ok_music:				; 在选择music时按OK键，保存。
  5062 0288B 1854 C        	MOV	A,@(0x54)			; 先停止播放music
  5063            C      M 	LCALL	LibSendOneCommand
                      2  M  PAGE #( LIBSENDONECOMMAND ),
       0288C 1E81     2     PAGE ( LIBSENDONECOMMAND / 1024 ),
       0288D 12AF     1     CALL ( LIBSENDONECOMMAND % 1024 ),
                      2  M  PAGE #( $ ),
       0288E 1E8A     2     PAGE ( $ / 1024 ),
  5064            C        	
  5065 0288F      C        AppEditBook_save:
  5066 0288F 043E C        	MOV	A,r2_id
  5067            C      M 	JPZ	AppEditBook_save_ok
       02890 0C83     1     JBC  _STATUS , Z 
       02891 1493     1     JMP  APPEDITBOOK_SAVE_OK ,
  5068 02892 10A5 C        	CALL	AppEditorToMemory
  5069            C        
  5070            C        
  5071 02893      C        AppEditBook_save_ok:
  5072            C        	
  5073 02893 10FD C        	CALL	AppSendEditorPackage		; 发送编辑包
  5074            C      M 	BLOCK	3
       02894 1846     1     MOV A,@((( 3 << 1 )+ VALUE_IOCA ))
       02895 000A     1     IOW  _IOCA ,
  5075            C      M 	MOV	_RC,@(198)
       02896 18C6     1     MOV A,@( 198 )
       02897 004C     1     MOV  _RC ,A
  5076            C      M 	MOV	bx,_RD
       02898 040D     1     MOV A, _RD 
       02899 0056     1     MOV  BX ,A
  5077            C      M 	PAGE	#(IIC)
       0289A 1E80     1     PAGE ( IIC / 1024 ),
  5078 0289B 1852 C        	MOV	A,@(0x52)
  5079 0289C 10A8 C        	CALL	IicSendData
  5080 0289D 0416 C        	MOV	A,bx
  5081 0289E 10A8 C        	CALL	IicSendData
  5082 0289F 10B3 C        	CALL	IicSer
  5083            C        	
  5084            C      M 	PAGE	#(LibPushProgram)
       028A0 1E81     1     PAGE ( LIBPUSHPROGRAM / 1024 ),
  5085 028A1 1839 C        	MOV	A,@(PRO_AppSuccessfull)		; 保存完毕，显示成功
  5086 028A2 1000 C        	CALL	LibPushProgram
  5087            C      M 	PAGE	#($)
       028A3 1E8A     1     PAGE ( $ / 1024 ),
  5088 028A4 1C00 C        	RETL	@(0)
  5089            C        
  5090            C        
  5091 028A5      C        AppEditorToMemory:
  5092 028A5 0053 C        	MOV	ax,A
  5093 028A6 0020 C        	TBL
  5094 028A7 14AB C        	JMP	AppEditorToMemory_ret
  5095 028A8 14AC C        	JMP	AppEditorToMemory_m1
  5096 028A9 14AE C        	JMP	AppEditorToMemory_m2
  5097 028AA 14B0 C        	JMP	AppEditorToMemory_m3
  5098 028AB      C        AppEditorToMemory_ret:
  5099 028AB 1C00 C        	RETL	@(0)
  5100 028AC      C        AppEditorToMemory_m1:
  5101 028AC 1880 C        	MOV	A,@(128)
  5102 028AD 14B1 C        	JMP	AppEditorToMemory_1
  5103 028AE      C        AppEditorToMemory_m2:
  5104 028AE 18A2 C        	MOV	A,@(162)
  5105 028AF 14B1 C        	JMP	AppEditorToMemory_1
  5106 028B0      C        AppEditorToMemory_m3:
  5107 028B0 18C4 C        	MOV	A,@(196)
  5108 028B1      C        AppEditorToMemory_1:
  5109 028B1 004C C        	MOV	_RC,A
  5110 028B2 0056 C        	MOV	bx,A
  5111            C      M 	BLOCK	1
       028B3 1842     1     MOV A,@((( 1 << 1 )+ VALUE_IOCA ))
       028B4 000A     1     IOW  _IOCA ,
  5112            C      M 	MOV	_RD,ax
       028B5 0413     1     MOV A, AX 
       028B6 004D     1     MOV  _RD ,A
  5113 028B7 00D5 C        	CLR	cnt
  5114 028B8 0556 C        	INC	bx
  5115 028B9      C        AppEditorToMemory_number:
  5116            C      M 	BLOCK	3
       028B9 1846     1     MOV A,@((( 3 << 1 )+ VALUE_IOCA ))
       028BA 000A     1     IOW  _IOCA ,
  5117            C      M 	MOV	_RC,@(131)
       028BB 1883     1     MOV A,@( 131 )
       028BC 004C     1     MOV  _RC ,A
  5118            C      M 	SUBA	_RD,cnt
       028BD 0415     1     MOV A, CNT 
       028BE 010D     1     SUB A, _RD 
  5119            C      M 	JPZ	AppEditorToMemory_number_end
       028BF 0C83     1     JBC  _STATUS , Z 
       028C0 14D2     1     JMP  APPEDITORTOMEMORY_NUMBER_END ,
  5120            C      M 	ADDA	cnt,@(132)
       028C1 1884     1     MOV A,@( 132 )
       028C2 0395     1     ADD A, CNT 
  5121 028C3 004C C        	MOV	_RC,A
  5122            C      M 	MOV	ax,_RD
       028C4 040D     1     MOV A, _RD 
       028C5 0053     1     MOV  AX ,A
  5123            C      M 	BLOCK	1
       028C6 1842     1     MOV A,@((( 1 << 1 )+ VALUE_IOCA ))
       028C7 000A     1     IOW  _IOCA ,
  5124            C      M 	ADDA	bx,cnt
       028C8 0415     1     MOV A, CNT 
       028C9 0396     1     ADD A, BX 
  5125 028CA 004C C        	MOV	_RC,A
  5126            C      M 	MOV	_RD,ax
       028CB 0413     1     MOV A, AX 
       028CC 004D     1     MOV  _RD ,A
  5127 028CD 0555 C        	INC	cnt
  5128            C      M 	SUBA	cnt,@(16)
       028CE 1810     1     MOV A,@( 16 )
       028CF 0115     1     SUB A, CNT 
  5129            C      M 	JPNC	AppEditorToMemory_number
       028D0 0E03     1     JBS  _STATUS , C 
       028D1 14B9     1     JMP  APPEDITORTOMEMORY_NUMBER ,
  5130 028D2      C        AppEditorToMemory_number_end:
  5131            C      M 	ADD	bx,@(16)
       028D2 1810     1     MOV A,@( 16 )
       028D3 03D6     1     ADD  BX ,A
  5132 028D4 00D5 C        	CLR	cnt
  5133 028D5      C        AppEditorToMemory_name:
  5134            C      M 	BLOCK	3
       028D5 1846     1     MOV A,@((( 3 << 1 )+ VALUE_IOCA ))
       028D6 000A     1     IOW  _IOCA ,
  5135            C      M 	MOV	_RC,@(164)
       028D7 18A4     1     MOV A,@( 164 )
       028D8 004C     1     MOV  _RC ,A
  5136            C      M 	SUBA	_RD,cnt
       028D9 0415     1     MOV A, CNT 
       028DA 010D     1     SUB A, _RD 
  5137            C      M 	JPZ	AppEditorToMemory_name_end
       028DB 0C83     1     JBC  _STATUS , Z 
       028DC 14EE     1     JMP  APPEDITORTOMEMORY_NAME_END ,
  5138            C      M 	ADDA	cnt,@(165)
       028DD 18A5     1     MOV A,@( 165 )
       028DE 0395     1     ADD A, CNT 
  5139 028DF 004C C        	MOV	_RC,A
  5140            C      M 	MOV	ax,_RD
       028E0 040D     1     MOV A, _RD 
       028E1 0053     1     MOV  AX ,A
  5141            C      M 	BLOCK	1
       028E2 1842     1     MOV A,@((( 1 << 1 )+ VALUE_IOCA ))
       028E3 000A     1     IOW  _IOCA ,
  5142            C      M 	ADDA	bx,cnt
       028E4 0415     1     MOV A, CNT 
       028E5 0396     1     ADD A, BX 
  5143 028E6 004C C        	MOV	_RC,A
  5144            C      M 	MOV	_RD,ax
       028E7 0413     1     MOV A, AX 
       028E8 004D     1     MOV  _RD ,A
  5145 028E9 0555 C        	INC	cnt
  5146            C      M 	SUBA	cnt,@(16)
       028EA 1810     1     MOV A,@( 16 )
       028EB 0115     1     SUB A, CNT 
  5147            C      M 	JPNC	AppEditorToMemory_name
       028EC 0E03     1     JBS  _STATUS , C 
       028ED 14D5     1     JMP  APPEDITORTOMEMORY_NAME ,
  5148 028EE      C        AppEditorToMemory_name_end:
  5149            C      M 	ADD	bx,@(16)
       028EE 1810     1     MOV A,@( 16 )
       028EF 03D6     1     ADD  BX ,A
  5150            C      M 	BLOCK	3
       028F0 1846     1     MOV A,@((( 3 << 1 )+ VALUE_IOCA ))
       028F1 000A     1     IOW  _IOCA ,
  5151            C      M 	MOV	_RC,@(197)
       028F2 18C5     1     MOV A,@( 197 )
       028F3 004C     1     MOV  _RC ,A
  5152            C      M 	MOV	ax,_RD
       028F4 040D     1     MOV A, _RD 
       028F5 0053     1     MOV  AX ,A
  5153            C      M 	BLOCK	1
       028F6 1842     1     MOV A,@((( 1 << 1 )+ VALUE_IOCA ))
       028F7 000A     1     IOW  _IOCA ,
  5154            C      M 	MOV	_RC,bx
       028F8 0416     1     MOV A, BX 
       028F9 004C     1     MOV  _RC ,A
  5155            C      M 	MOV	_RD,ax
       028FA 0413     1     MOV A, AX 
       028FB 004D     1     MOV  _RD ,A
  5156 028FC 1C00 C        	RETL	@(0)
  5157            C        
  5158            C        
  5159 028FD      C        AppSendEditorPackage:				; 将编辑区的号码、人名等信息打包发给DSP。
  5160            C      M 	BANK	1
       028FD 0B84     1     BS  _RAM , 6 
       028FE 09C4     1     BC  _RAM , 7 
  5161            C      M 	BLOCK	3
       028FF 1846     1     MOV A,@((( 3 << 1 )+ VALUE_IOCA ))
       02900 000A     1     IOW  _IOCA ,
  5162            C      M 	MOV	_RC,@(131)
       02901 1883     1     MOV A,@( 131 )
       02902 004C     1     MOV  _RC ,A
  5163            C      M 	MOV	r1_cnt,_RD
       02903 040D     1     MOV A, _RD 
       02904 0062     1     MOV  R1_CNT ,A
  5164            C      M 	MOV	_RC,@(197)
       02905 18C5     1     MOV A,@( 197 )
       02906 004C     1     MOV  _RC ,A
  5165            C      M 	MOV	r1_ax,_RD
       02907 040D     1     MOV A, _RD 
       02908 0060     1     MOV  R1_AX ,A
  5166 02909      C        AppSendEditorPackage_time:
  5167            C      M 	PAGE	#(IIC)
       02909 1E80     1     PAGE ( IIC / 1024 ),
  5168 0290A 1880 C        	MOV	A,@(0x80)
  5169 0290B 10A8 C        	CALL	IicSendData
  5170 0290C 042B C        	MOV	A,r1_rtc_month
  5171 0290D 10A8 C        	CALL	IicSendData
  5172 0290E 042A C        	MOV	A,r1_rtc_day
  5173 0290F 10A8 C        	CALL	IicSendData
  5174 02910 0428 C        	MOV	A,r1_rtc_hour
  5175 02911 10A8 C        	CALL	IicSendData
  5176 02912 0427 C        	MOV	A,r1_rtc_minute
  5177 02913 10A8 C        	CALL	IicSendData
  5178 02914 0422 C        	MOV	A,r1_cnt
  5179 02915 10A8 C        	CALL	IicSendData
  5180            C      M 	PAGE	#($)
       02916 1E8A     1     PAGE ( $ / 1024 ),
  5181            C        
  5182 02917 00D5 C        	CLR	cnt
  5183 02918      C        AppSendEditorPackage_number:
  5184 02918 0555 C        	INC	cnt
  5185            C      M 	SUBA	r1_cnt,cnt
       02919 0415     1     MOV A, CNT 
       0291A 0122     1     SUB A, R1_CNT 
  5186            C      M 	JPNC	AppSendEditorPackage_number_1
       0291B 0E03     1     JBS  _STATUS , C 
       0291C 1524     1     JMP  APPSENDEDITORPACKAGE_NUMBER_1 ,
  5187            C      M 	BLOCK	3
       0291D 1846     1     MOV A,@((( 3 << 1 )+ VALUE_IOCA ))
       0291E 000A     1     IOW  _IOCA ,
  5188            C      M 	ADDA	cnt,@(131)
       0291F 1883     1     MOV A,@( 131 )
       02920 0395     1     ADD A, CNT 
  5189 02921 004C C        	MOV	_RC,A
  5190 02922 040D C        	MOV	A,_RD
  5191 02923 1525 C        	JMP	$+2
  5192 02924      C        AppSendEditorPackage_number_1:
  5193 02924 1800 C        	MOV	A,@(0)
  5194            C      M 	LCALL	IicSendData
                      2  M  PAGE #( IICSENDDATA ),
       02925 1E80     2     PAGE ( IICSENDDATA / 1024 ),
       02926 10A8     1     CALL ( IICSENDDATA % 1024 ),
                      2  M  PAGE #( $ ),
       02927 1E8A     2     PAGE ( $ / 1024 ),
  5195            C      M 	SUBA	cnt,@(32)
       02928 1820     1     MOV A,@( 32 )
       02929 0115     1     SUB A, CNT 
  5196            C      M 	JPNC	AppSendEditorPackage_number
       0292A 0E03     1     JBS  _STATUS , C 
       0292B 1518     1     JMP  APPSENDEDITORPACKAGE_NUMBER ,
  5197            C        	
  5198            C      M 	BLOCK	3
       0292C 1846     1     MOV A,@((( 3 << 1 )+ VALUE_IOCA ))
       0292D 000A     1     IOW  _IOCA ,
  5199            C      M 	MOV	_RC,@(164)
       0292E 18A4     1     MOV A,@( 164 )
       0292F 004C     1     MOV  _RC ,A
  5200            C      M 	MOV	r1_cnt,_RD
       02930 040D     1     MOV A, _RD 
       02931 0062     1     MOV  R1_CNT ,A
  5201            C      M 	LCALL	IicSendData
                      2  M  PAGE #( IICSENDDATA ),
       02932 1E80     2     PAGE ( IICSENDDATA / 1024 ),
       02933 10A8     1     CALL ( IICSENDDATA % 1024 ),
                      2  M  PAGE #( $ ),
       02934 1E8A     2     PAGE ( $ / 1024 ),
  5202            C        	
  5203 02935 00D5 C        	CLR	cnt
  5204 02936      C        AppSendEditorPackage_name:
  5205 02936 0555 C        	INC	cnt
  5206            C      M 	SUBA	r1_cnt,cnt
       02937 0415     1     MOV A, CNT 
       02938 0122     1     SUB A, R1_CNT 
  5207            C      M 	JPNC	AppSendEditorPackage_name_1
       02939 0E03     1     JBS  _STATUS , C 
       0293A 1542     1     JMP  APPSENDEDITORPACKAGE_NAME_1 ,
  5208            C      M 	BLOCK	3
       0293B 1846     1     MOV A,@((( 3 << 1 )+ VALUE_IOCA ))
       0293C 000A     1     IOW  _IOCA ,
  5209            C      M 	ADDA	cnt,@(164)
       0293D 18A4     1     MOV A,@( 164 )
       0293E 0395     1     ADD A, CNT 
  5210 0293F 004C C        	MOV	_RC,A
  5211 02940 040D C        	MOV	A,_RD
  5212 02941 1543 C        	JMP	$+2
  5213 02942      C        AppSendEditorPackage_name_1:
  5214 02942 1800 C        	MOV	A,@(0)
  5215            C      M 	LCALL	IicSendData
                      2  M  PAGE #( IICSENDDATA ),
       02943 1E80     2     PAGE ( IICSENDDATA / 1024 ),
       02944 10A8     1     CALL ( IICSENDDATA % 1024 ),
                      2  M  PAGE #( $ ),
       02945 1E8A     2     PAGE ( $ / 1024 ),
  5216            C      M 	SUBA	cnt,@(16)
       02946 1810     1     MOV A,@( 16 )
       02947 0115     1     SUB A, CNT 
  5217            C      M 	JPNC	AppSendEditorPackage_name
       02948 0E03     1     JBS  _STATUS , C 
       02949 1536     1     JMP  APPSENDEDITORPACKAGE_NAME ,
  5218            C        	
  5219            C      M 	PAGE	#(IIC)
       0294A 1E80     1     PAGE ( IIC / 1024 ),
  5220 0294B 0420 C        	MOV	A,r1_ax
  5221 0294C 10A8 C        	CALL	IicSendData
  5222 0294D 1800 C        	MOV	A,@(0)				; RPT
  5223 0294E 10A8 C        	CALL	IicSendData
  5224 0294F 1880 C        	MOV	A,@(0x80)
  5225 02950 10A8 C        	CALL	IicSendData
  5226 02951 10B3 C        	CALL	IicSer
  5227            C      M 	PAGE	#($)
       02952 1E8A     1     PAGE ( $ / 1024 ),
  5228 02953 1C00 C        	RETL	@(0)
  5229            C        
  5230            C        
  5231            C        
  5232 02954      C        AppEditBookDisplay:
  5233 02954 1800 C        	MOV	A,@(0)
  5234            C      M 	LCALL	LibStoreCursor
                      2  M  PAGE #( LIBSTORECURSOR ),
       02955 1E81     2     PAGE ( LIBSTORECURSOR / 1024 ),
       02956 1079     1     CALL ( LIBSTORECURSOR % 1024 ),
                      2  M  PAGE #( $ ),
       02957 1E8A     2     PAGE ( $ / 1024 ),
  5235            C      M 	BANK	2
       02958 0984     1     BC  _RAM , 6 
       02959 0BC4     1     BS  _RAM , 7 
  5236            C      M 	BLOCK	3
       0295A 1846     1     MOV A,@((( 3 << 1 )+ VALUE_IOCA ))
       0295B 000A     1     IOW  _IOCA ,
  5237            C      M 	ANDA	r2_flag,@(3)
       0295C 1803     1     MOV A,@( 3 )
       0295D 02BF     1     AND A, R2_FLAG 
  5238 0295E 0020 C        	TBL
  5239 0295F 1563 C        	JMP	AppEditBookDisplayNumber
  5240 02960 159E C        	JMP	AppEditBookDisplayName
  5241 02961 15EB C        	JMP	AppEditBookDisplayMusic
  5242 02962 1615 C        	JMP	AppEditBookDisplay_ret
  5243            C        
  5244 02963      C        AppEditBookDisplayNumber:
  5245            C      M 	MOV	_RC,@(131)
       02963 1883     1     MOV A,@( 131 )
       02964 004C     1     MOV  _RC ,A
  5246 02965 040D C        	MOV	A,_RD
  5247            C      M 	JPB	r2_flag,7,AppEditBookDisplayNumber_1
       02966 0DFF     1     JBC  R2_FLAG , 7 
       02967 1576     1     JMP  APPEDITBOOKDISPLAYNUMBER_1 ,
  5248 02968 0062 C        	MOV	r2_cnt,A
  5249 02969 0562 C        	INC	r2_cnt
  5250 0296A 0BFF C        	BS	r2_flag,7
  5251            C      M 	PAGE	#(VGA)
       0296B 1E83     1     PAGE ( VGA / 1024 ),
  5252 0296C 10DE C        	CALL	VgaBlankNum2
  5253 0296D 10E0 C        	CALL	VgaBlankChar
  5254 0296E 1881 C        	MOV	A,@(STYLE_LEFT)
  5255 0296F 101C C        	CALL	VgaChar
  5256 02970 180C C        	MOV	A,@(STR_InputNumber)
  5257 02971 114B C        	CALL	VgaString
  5258 02972 1800 C        	MOV	A,@(0)
  5259 02973 101C C        	CALL	VgaChar
  5260 02974 1078 C        	CALL	VgaDrawChar
  5261            C      M 	PAGE	#($)
       02975 1E8A     1     PAGE ( $ / 1024 ),
  5262 02976      C        AppEditBookDisplayNumber_1:
  5263            C      M 	PAGE	#(VGA)
       02976 1E83     1     PAGE ( VGA / 1024 ),
  5264 02977 10DE C        	CALL	VgaBlankNum2
  5265 02978 1881 C        	MOV	A,@(STYLE_LEFT)
  5266 02979 1016 C        	CALL	VgaNum2
  5267            C      M 	PAGE	#($)
       0297A 1E8A     1     PAGE ( $ / 1024 ),
  5268 0297B 00E0 C        	CLR	r2_ax
  5269 0297C      C        AppEditBookDisplayNumber_loop:
  5270            C      M 	BLOCK	3
       0297C 1846     1     MOV A,@((( 3 << 1 )+ VALUE_IOCA ))
       0297D 000A     1     IOW  _IOCA ,
  5271            C      M 	MOV	_RC,@(131)
       0297E 1883     1     MOV A,@( 131 )
       0297F 004C     1     MOV  _RC ,A
  5272            C      M 	SUBA	r2_ax,_RD
       02980 040D     1     MOV A, _RD 
       02981 0120     1     SUB A, R2_AX 
  5273            C      M 	JPC	AppEditBookDisplayNumber_end
       02982 0C03     1     JBC  _STATUS , C 
       02983 158E     1     JMP  APPEDITBOOKDISPLAYNUMBER_END ,
  5274 02984 0560 C        	INC	r2_ax
  5275            C      M 	ADD	_RC,r2_ax
       02985 0420     1     MOV A, R2_AX 
       02986 03CC     1     ADD  _RC ,A
  5276 02987 040D C        	MOV	A,_RD
  5277            C      M 	JPZ	AppEditBookDisplayNumber_end
       02988 0C83     1     JBC  _STATUS , Z 
       02989 158E     1     JMP  APPEDITBOOKDISPLAYNUMBER_END ,
  5278            C      M 	LCALL	VgaNum2
                      2  M  PAGE #( VGANUM2 ),
       0298A 1E83     2     PAGE ( VGANUM2 / 1024 ),
       0298B 1016     1     CALL ( VGANUM2 % 1024 ),
                      2  M  PAGE #( $ ),
       0298C 1E8A     2     PAGE ( $ / 1024 ),
  5279 0298D 157C C        	JMP	AppEditBookDisplayNumber_loop
  5280 0298E      C        AppEditBookDisplayNumber_end:
  5281            C      M 	PAGE	#(VGA)
       0298E 1E83     1     PAGE ( VGA / 1024 ),
  5282 0298F 1800 C        	MOV	A,@(0)
  5283 02990 1016 C        	CALL	VgaNum2
  5284 02991 1076 C        	CALL	VgaDrawNum2
  5285            C      M 	PAGE	#($)
       02992 1E8A     1     PAGE ( $ / 1024 ),
  5286            C        	
  5287            C      M 	SUBA	r2_cnt,@(17)
       02993 1811     1     MOV A,@( 17 )
       02994 0122     1     SUB A, R2_CNT 
  5288            C      M 	JPC	AppEditBookDisplayNumber_2
       02995 0C03     1     JBC  _STATUS , C 
       02996 159D     1     JMP  APPEDITBOOKDISPLAYNUMBER_2 ,
  5289            C      M 	SUBA	r2_cnt,@(1)
       02997 1801     1     MOV A,@( 1 )
       02998 0122     1     SUB A, R2_CNT 
  5290 02999 1F20 C        	ADD	A,@(0x20)
  5291            C      M 	LCALL	LibStoreCursor			; 光标位置
                      2  M  PAGE #( LIBSTORECURSOR ),
       0299A 1E81     2     PAGE ( LIBSTORECURSOR / 1024 ),
       0299B 1079     1     CALL ( LIBSTORECURSOR % 1024 ),
                      2  M  PAGE #( $ ),
       0299C 1E8A     2     PAGE ( $ / 1024 ),
  5292 0299D      C        AppEditBookDisplayNumber_2:
  5293 0299D 1C00 C        	RETL	@(0)
  5294            C        
  5295 0299E      C        AppEditBookDisplayName:
  5296            C      M 	MOV	_RC,@(164)
       0299E 18A4     1     MOV A,@( 164 )
       0299F 004C     1     MOV  _RC ,A
  5297 029A0 040D C        	MOV	A,_RD
  5298            C      M 	JPB	r2_flag,7,AppEditBookDisplayName_1
       029A1 0DFF     1     JBC  R2_FLAG , 7 
       029A2 15C3     1     JMP  APPEDITBOOKDISPLAYNAME_1 ,
  5299 029A3 0062 C        	MOV	r2_cnt,A
  5300 029A4 0562 C        	INC	r2_cnt
  5301 029A5 0BFF C        	BS	r2_flag,7
  5302            C      M 	PAGE	#(VGA)
       029A6 1E83     1     PAGE ( VGA / 1024 ),
  5303 029A7 10DE C        	CALL	VgaBlankNum2
  5304 029A8 1881 C        	MOV	A,@(STYLE_LEFT)
  5305 029A9 1016 C        	CALL	VgaNum2
  5306            C      M 	PAGE	#($)
       029AA 1E8A     1     PAGE ( $ / 1024 ),
  5307 029AB 00E0 C        	CLR	r2_ax
  5308 029AC      C        AppEditBookDisplayName_1_loop:
  5309            C      M 	BLOCK	3
       029AC 1846     1     MOV A,@((( 3 << 1 )+ VALUE_IOCA ))
       029AD 000A     1     IOW  _IOCA ,
  5310            C      M 	MOV	_RC,@(131)
       029AE 1883     1     MOV A,@( 131 )
       029AF 004C     1     MOV  _RC ,A
  5311            C      M 	SUBA	r2_ax,_RD
       029B0 040D     1     MOV A, _RD 
       029B1 0120     1     SUB A, R2_AX 
  5312            C      M 	JPC	AppEditBookDisplayName_1_end
       029B2 0C03     1     JBC  _STATUS , C 
       029B3 15BE     1     JMP  APPEDITBOOKDISPLAYNAME_1_END ,
  5313 029B4 0560 C        	INC	r2_ax
  5314            C      M 	ADD	_RC,r2_ax
       029B5 0420     1     MOV A, R2_AX 
       029B6 03CC     1     ADD  _RC ,A
  5315 029B7 040D C        	MOV	A,_RD
  5316            C      M 	JPZ	AppEditBookDisplayName_1_end
       029B8 0C83     1     JBC  _STATUS , Z 
       029B9 15BE     1     JMP  APPEDITBOOKDISPLAYNAME_1_END ,
  5317            C      M 	LCALL	VgaNum2
                      2  M  PAGE #( VGANUM2 ),
       029BA 1E83     2     PAGE ( VGANUM2 / 1024 ),
       029BB 1016     1     CALL ( VGANUM2 % 1024 ),
                      2  M  PAGE #( $ ),
       029BC 1E8A     2     PAGE ( $ / 1024 ),
  5318 029BD 15AC C        	JMP	AppEditBookDisplayName_1_loop
  5319 029BE      C        AppEditBookDisplayName_1_end:
  5320            C      M 	PAGE	#(VGA)
       029BE 1E83     1     PAGE ( VGA / 1024 ),
  5321 029BF 1800 C        	MOV	A,@(0)
  5322 029C0 1016 C        	CALL	VgaNum2
  5323 029C1 1076 C        	CALL	VgaDrawNum2
  5324            C      M 	PAGE	#($)
       029C2 1E8A     1     PAGE ( $ / 1024 ),
  5325 029C3      C        AppEditBookDisplayName_1:
  5326            C        	;MOV	A,r2_cnt
  5327            C        	;JPZ	AppEditBookDisplayName_none
  5328            C      M 	PAGE	#(VGA)
       029C3 1E83     1     PAGE ( VGA / 1024 ),
  5329 029C4 10E0 C        	CALL	VgaBlankChar
  5330 029C5 1881 C        	MOV	A,@(STYLE_LEFT)
  5331 029C6 101C C        	CALL	VgaChar
  5332            C      M 	PAGE	#($)
       029C7 1E8A     1     PAGE ( $ / 1024 ),
  5333 029C8 00E0 C        	CLR	r2_ax
  5334 029C9      C        AppEditBookDisplayName_loop:
  5335            C      M 	BLOCK	3
       029C9 1846     1     MOV A,@((( 3 << 1 )+ VALUE_IOCA ))
       029CA 000A     1     IOW  _IOCA ,
  5336            C      M 	MOV	_RC,@(164)
       029CB 18A4     1     MOV A,@( 164 )
       029CC 004C     1     MOV  _RC ,A
  5337            C      M 	SUBA	r2_ax,_RD
       029CD 040D     1     MOV A, _RD 
       029CE 0120     1     SUB A, R2_AX 
  5338            C      M 	JPC	AppEditBookDisplayName_end
       029CF 0C03     1     JBC  _STATUS , C 
       029D0 15DB     1     JMP  APPEDITBOOKDISPLAYNAME_END ,
  5339 029D1 0560 C        	INC	r2_ax
  5340            C      M 	ADD	_RC,r2_ax
       029D2 0420     1     MOV A, R2_AX 
       029D3 03CC     1     ADD  _RC ,A
  5341 029D4 040D C        	MOV	A,_RD
  5342            C      M 	JPZ	AppEditBookDisplayName_end
       029D5 0C83     1     JBC  _STATUS , Z 
       029D6 15DB     1     JMP  APPEDITBOOKDISPLAYNAME_END ,
  5343            C      M 	LCALL	VgaChar
                      2  M  PAGE #( VGACHAR ),
       029D7 1E83     2     PAGE ( VGACHAR / 1024 ),
       029D8 101C     1     CALL ( VGACHAR % 1024 ),
                      2  M  PAGE #( $ ),
       029D9 1E8A     2     PAGE ( $ / 1024 ),
  5344 029DA 15C9 C        	JMP	AppEditBookDisplayName_loop
  5345 029DB      C        AppEditBookDisplayName_end:
  5346            C      M 	PAGE	#(VGA)
       029DB 1E83     1     PAGE ( VGA / 1024 ),
  5347 029DC 1800 C        	MOV	A,@(0)
  5348 029DD 101C C        	CALL	VgaChar
  5349 029DE 1078 C        	CALL	VgaDrawChar
  5350            C      M 	PAGE	#($)
       029DF 1E8A     1     PAGE ( $ / 1024 ),
  5351            C      M 	SUBA	r2_cnt,@(17)
       029E0 1811     1     MOV A,@( 17 )
       029E1 0122     1     SUB A, R2_CNT 
  5352            C      M 	JPC	AppEditBookDisplayName_2
       029E2 0C03     1     JBC  _STATUS , C 
       029E3 15EA     1     JMP  APPEDITBOOKDISPLAYNAME_2 ,
  5353            C      M 	SUBA	r2_cnt,@(1)
       029E4 1801     1     MOV A,@( 1 )
       029E5 0122     1     SUB A, R2_CNT 
  5354 029E6 1F30 C        	ADD	A,@(0x30)
  5355            C      M 	LCALL	LibStoreCursor			; 光标位置
                      2  M  PAGE #( LIBSTORECURSOR ),
       029E7 1E81     2     PAGE ( LIBSTORECURSOR / 1024 ),
       029E8 1079     1     CALL ( LIBSTORECURSOR % 1024 ),
                      2  M  PAGE #( $ ),
       029E9 1E8A     2     PAGE ( $ / 1024 ),
  5356 029EA      C        AppEditBookDisplayName_none:
  5357 029EA      C        AppEditBookDisplayName_2:
  5358 029EA 1C00 C        	RETL	@(0)
  5359            C        
  5360 029EB      C        AppEditBookDisplayMusic:
  5361            C      M 	MOV	_RC,@(197)
       029EB 18C5     1     MOV A,@( 197 )
       029EC 004C     1     MOV  _RC ,A
  5362            C      M 	MOV	r2_ax,_RD
       029ED 040D     1     MOV A, _RD 
       029EE 0060     1     MOV  R2_AX ,A
  5363            C      M 	JPB	r2_flag,7,AppEditBookDisplayMusic_1
       029EF 0DFF     1     JBC  R2_FLAG , 7 
       029F0 1600     1     JMP  APPEDITBOOKDISPLAYMUSIC_1 ,
  5364            C      M 	PAGE	#(VGA)
       029F1 1E83     1     PAGE ( VGA / 1024 ),
  5365 029F2 10DE C        	CALL	VgaBlankNum2
  5366 029F3 10E0 C        	CALL	VgaBlankChar
  5367 029F4 1881 C        	MOV	A,@(STYLE_LEFT)
  5368 029F5 101C C        	CALL	VgaChar
  5369 029F6 1835 C        	MOV	A,@(STR_SelectRingTone)
  5370 029F7 114B C        	CALL	VgaString
  5371 029F8 1800 C        	MOV	A,@(0)
  5372 029F9 101C C        	CALL	VgaChar
  5373 029FA 1078 C        	CALL	VgaDrawChar
  5374            C      M 	PAGE	#($)
       029FB 1E8A     1     PAGE ( $ / 1024 ),
  5375 029FC 1800 C        	MOV	A,@(0)
  5376            C      M 	LCALL	LibStoreCursor
                      2  M  PAGE #( LIBSTORECURSOR ),
       029FD 1E81     2     PAGE ( LIBSTORECURSOR / 1024 ),
       029FE 1079     1     CALL ( LIBSTORECURSOR % 1024 ),
                      2  M  PAGE #( $ ),
       029FF 1E8A     2     PAGE ( $ / 1024 ),
  5377 02A00      C        AppEditBookDisplayMusic_1:
  5378            C      M 	MOV	ax,r2_ax
       02A00 0420     1     MOV A, R2_AX 
       02A01 0053     1     MOV  AX ,A
  5379            C      M 	LCALL	LibMathHexToBcd
                      2  M  PAGE #( LIBMATHHEXTOBCD ),
       02A02 1E81     2     PAGE ( LIBMATHHEXTOBCD / 1024 ),
       02A03 1037     1     CALL ( LIBMATHHEXTOBCD % 1024 ),
                      2  M  PAGE #( $ ),
       02A04 1E8A     2     PAGE ( $ / 1024 ),
  5380 02A05 0060 C        	MOV	r2_ax,A
  5381            C      M 	PAGE	#(VGA)
       02A06 1E83     1     PAGE ( VGA / 1024 ),
  5382 02A07 1882 C        	MOV	A,@(STYLE_RIGHT)
  5383 02A08 1016 C        	CALL	VgaNum2
  5384 02A09 0720 C        	SWAPA	r2_ax
  5385 02A0A 1A0F C        	AND	A,@(0x0f)
  5386 02A0B 1F30 C        	ADD	A,@(48)
  5387 02A0C 1016 C        	CALL	VgaNum2
  5388            C      M 	ANDA	r2_ax,@(0x0f)
       02A0D 180F     1     MOV A,@( 15 )
       02A0E 02A0     1     AND A, R2_AX 
  5389 02A0F 1F30 C        	ADD	A,@(48)
  5390 02A10 1016 C        	CALL	VgaNum2
  5391 02A11 1800 C        	MOV	A,@(0)
  5392 02A12 1016 C        	CALL	VgaNum2
  5393 02A13 1076 C        	CALL	VgaDrawNum2
  5394            C      M 	PAGE	#($)
       02A14 1E8A     1     PAGE ( $ / 1024 ),
  5395 02A15      C        AppEditBookDisplay_ret:
  5396 02A15 1C00 C        	RETL	@(0)
  5397            C        	
  5398            C        	
  5399            C        
  5400            C        
  5401            C        
  5402            C        
  5403            C        
  5404            C        /*************************************************
  5405            C        16位号码编辑
  5406            C        
  5407            C        "LEFT"		光标左移
  5408            C        "RIGHT"		光标右移
  5409            C        "BACK"		删除光标前面的号码
  5410            C        "ERASE"		删除光标当前的号码
  5411            C        "123"		在当前光标处输入号码
  5412            C        *************************************************/
  5413 02A16      C        AppEditNumber:
  5414            C      M 	BANK	2
       02A16 0984     1     BC  _RAM , 6 
       02A17 0BC4     1     BS  _RAM , 7 
  5415            C      M 	BLOCK	3
       02A18 1846     1     MOV A,@((( 3 << 1 )+ VALUE_IOCA ))
       02A19 000A     1     IOW  _IOCA ,
  5416            C        	
  5417            C      M 	MOV	_RC,@(131)
       02A1A 1883     1     MOV A,@( 131 )
       02A1B 004C     1     MOV  _RC ,A
  5418            C        	
  5419            C      M 	XORA	sys_msg,@(WM_KEYPRESS)
       02A1C 1801     1     MOV A,@( WM_KEYPRESS )
       02A1D 031B     1     XOR A, SYS_MSG 
  5420            C      M 	JPZ	AppEditNumber_key
       02A1E 0C83     1     JBC  _STATUS , Z 
       02A1F 1621     1     JMP  APPEDITNUMBER_KEY ,
  5421 02A20      C        AppEditNumber_ret:
  5422 02A20 1C00 C        	RETL	@(0)
  5423 02A21      C        AppEditNumber_key:
  5424            C      M 	XORA	sys_data,@(KEY_LEFT)
       02A21 1826     1     MOV A,@( KEY_LEFT )
       02A22 031C     1     XOR A, SYS_DATA 
  5425            C      M 	JPZ	AppEditNumber_left
       02A23 0C83     1     JBC  _STATUS , Z 
       02A24 167D     1     JMP  APPEDITNUMBER_LEFT ,
  5426            C      M 	XORA	sys_data,@(KEY_RIGHT)
       02A25 1827     1     MOV A,@( KEY_RIGHT )
       02A26 031C     1     XOR A, SYS_DATA 
  5427            C      M 	JPZ	AppEditNumber_right
       02A27 0C83     1     JBC  _STATUS , Z 
       02A28 1683     1     JMP  APPEDITNUMBER_RIGHT ,
  5428            C      M 	XORA	sys_data,@(KEY_BACK)
       02A29 1814     1     MOV A,@( KEY_BACK )
       02A2A 031C     1     XOR A, SYS_DATA 
  5429            C      M 	JPZ	AppEditNumber_back
       02A2B 0C83     1     JBC  _STATUS , Z 
       02A2C 1650     1     JMP  APPEDITNUMBER_BACK ,
  5430            C      M 	XORA	sys_data,@(KEY_ERASE)
       02A2D 1823     1     MOV A,@( KEY_ERASE )
       02A2E 031C     1     XOR A, SYS_DATA 
  5431            C      M 	JPZ	AppEditNumber_erase
       02A2F 0C83     1     JBC  _STATUS , Z 
       02A30 1665     1     JMP  APPEDITNUMBER_ERASE ,
  5432            C        	
  5433            C      M 	LCALL	LibDialNumCheck
                      2  M  PAGE #( LIBDIALNUMCHECK ),
       02A31 1E81     2     PAGE ( LIBDIALNUMCHECK / 1024 ),
       02A32 1255     1     CALL ( LIBDIALNUMCHECK % 1024 ),
                      2  M  PAGE #( $ ),
       02A33 1E8A     2     PAGE ( $ / 1024 ),
  5434 02A34 1F00 C        	ADD	A,@(0)
  5435            C      M 	JPZ	AppEditNumber_ret
       02A35 0C83     1     JBC  _STATUS , Z 
       02A36 1620     1     JMP  APPEDITNUMBER_RET ,
  5436            C        ; 输入一个号码
  5437            C        ; 在光标位置出输入该号码，并将光标位置的原号码和其后的号码右移一位。
  5438            C        ; 同时光标右移一位
  5439 02A37      C        AppEditNumber_num:
  5440 02A37 0060 C        	MOV	r2_ax,A
  5441            C      M 	SUBA	_RD,@(16)
       02A38 1810     1     MOV A,@( 16 )
       02A39 010D     1     SUB A, _RD 
  5442            C      M 	JPC	AppEditFull			; 编辑长度到了16位，满，不能输入号码。
       02A3A 0C03     1     JBC  _STATUS , C 
       02A3B 17A0     1     JMP  APPEDITFULL ,
  5443 02A3C 054D C        	INC	_RD				; 输入一位号码，长度+1。
  5444            C      M 	ADDA	r2_cnt,@(131)			; 得到编辑位置
       02A3D 1883     1     MOV A,@( 131 )
       02A3E 03A2     1     ADD A, R2_CNT 
  5445 02A3F 0053 C        	MOV	ax,A				; 编辑位置的地址
  5446 02A40 0056 C        	MOV	bx,A				; 编辑位置的下一位地址
  5447 02A41 0556 C        	INC	bx
  5448            C      M 	SUBA	_RD,r2_cnt
       02A42 0422     1     MOV A, R2_CNT 
       02A43 010D     1     SUB A, _RD 
  5449 02A44 0055 C        	MOV	cnt,A				; 右移的长度
  5450            C      M 	LCALL	LibCopyRam
                      2  M  PAGE #( LIBCOPYRAM ),
       02A45 1E81     2     PAGE ( LIBCOPYRAM / 1024 ),
       02A46 1126     1     CALL ( LIBCOPYRAM % 1024 ),
                      2  M  PAGE #( $ ),
       02A47 1E8A     2     PAGE ( $ / 1024 ),
  5451            C      M 	ADDA	r2_cnt,@(131)
       02A48 1883     1     MOV A,@( 131 )
       02A49 03A2     1     ADD A, R2_CNT 
  5452 02A4A 004C C        	MOV	_RC,A
  5453            C      M 	MOV	_RD,r2_ax
       02A4B 0420     1     MOV A, R2_AX 
       02A4C 004D     1     MOV  _RD ,A
  5454            C      M 	MOV	_RC,@(131)
       02A4D 1883     1     MOV A,@( 131 )
       02A4E 004C     1     MOV  _RC ,A
  5455 02A4F 1683 C        	JMP	AppEditNumber_right		; 同时光标要右移。
  5456            C        ; 删除光标前面的一位号码
  5457            C        ; 删除前的号码，光标当前位的号码及其后的号码左移一位。
  5458            C        ; 光标左移一位
  5459 02A50      C        AppEditNumber_back:
  5460            C      M 	SUBA	r2_cnt,@(2)
       02A50 1802     1     MOV A,@( 2 )
       02A51 0122     1     SUB A, R2_CNT 
  5461            C      M 	JPNC	AppEditNumber_ret		; 光标位置在第一个号码处，无法删除前面的号码。
       02A52 0E03     1     JBS  _STATUS , C 
       02A53 1620     1     JMP  APPEDITNUMBER_RET ,
  5462 02A54 01CD C        	DEC	_RD				; 删除一个号码，长度-1
  5463            C      M 	ADDA	r2_cnt,@(131)
       02A55 1883     1     MOV A,@( 131 )
       02A56 03A2     1     ADD A, R2_CNT 
  5464 02A57 0053 C        	MOV	ax,A
  5465 02A58 0056 C        	MOV	bx,A
  5466 02A59 01D6 C        	DEC	bx
  5467            C      M 	SUBA	_RD,r2_cnt
       02A5A 0422     1     MOV A, R2_CNT 
       02A5B 010D     1     SUB A, _RD 
  5468 02A5C 0055 C        	MOV	cnt,A
  5469 02A5D 0555 C        	INC	cnt
  5470 02A5E 0555 C        	INC	cnt
  5471            C      M 	LCALL	LibCopyRam
                      2  M  PAGE #( LIBCOPYRAM ),
       02A5F 1E81     2     PAGE ( LIBCOPYRAM / 1024 ),
       02A60 1126     1     CALL ( LIBCOPYRAM % 1024 ),
                      2  M  PAGE #( $ ),
       02A61 1E8A     2     PAGE ( $ / 1024 ),
  5472            C      M 	MOV	_RC,@(131)
       02A62 1883     1     MOV A,@( 131 )
       02A63 004C     1     MOV  _RC ,A
  5473 02A64 167D C        	JMP	AppEditNumber_left
  5474            C        ; 删除光标当前的一位号码
  5475            C        ; 光标其后的号码左移一位。
  5476            C        ; 光标位置不变
  5477 02A65      C        AppEditNumber_erase:
  5478            C      M 	SUBA	_RD,r2_cnt
       02A65 0422     1     MOV A, R2_CNT 
       02A66 010D     1     SUB A, _RD 
  5479            C      M 	JPNC	AppEditNumber_ret		; 光标位置在最后一个号码的下一位，无法删除当前位。
       02A67 0E03     1     JBS  _STATUS , C 
       02A68 1620     1     JMP  APPEDITNUMBER_RET ,
  5480 02A69 01CD C        	DEC	_RD				; 删除一个号码，长度-1
  5481            C      M 	SUBA	_RD,r2_cnt
       02A6A 0422     1     MOV A, R2_CNT 
       02A6B 010D     1     SUB A, _RD 
  5482            C      M 	JPNC	AppEditNumber_display		; 删除最后一位号码，不需要移位，直接显示。
       02A6C 0E03     1     JBS  _STATUS , C 
       02A6D 1689     1     JMP  APPEDITNUMBER_DISPLAY ,
  5483            C      M 	ADDA	r2_cnt,@(131)
       02A6E 1883     1     MOV A,@( 131 )
       02A6F 03A2     1     ADD A, R2_CNT 
  5484 02A70 0053 C        	MOV	ax,A
  5485 02A71 0056 C        	MOV	bx,A
  5486 02A72 0553 C        	INC	ax
  5487            C      M 	SUBA	_RD,r2_cnt
       02A73 0422     1     MOV A, R2_CNT 
       02A74 010D     1     SUB A, _RD 
  5488 02A75 0055 C        	MOV	cnt,A
  5489 02A76 0555 C        	INC	cnt
  5490            C      M 	LCALL	LibCopyRam
                      2  M  PAGE #( LIBCOPYRAM ),
       02A77 1E81     2     PAGE ( LIBCOPYRAM / 1024 ),
       02A78 1126     1     CALL ( LIBCOPYRAM % 1024 ),
                      2  M  PAGE #( $ ),
       02A79 1E8A     2     PAGE ( $ / 1024 ),
  5491            C      M 	MOV	_RC,@(131)
       02A7A 1883     1     MOV A,@( 131 )
       02A7B 004C     1     MOV  _RC ,A
  5492 02A7C 1689 C        	JMP	AppEditNumber_display		; 光标位置不变，直接显示。
  5493            C        ; 光标左移
  5494            C        ; 如果光标所在编辑区已经到达第一个号码，无法左移。
  5495 02A7D      C        AppEditNumber_left:
  5496            C      M 	SUBA	r2_cnt,@(1)
       02A7D 1801     1     MOV A,@( 1 )
       02A7E 0122     1     SUB A, R2_CNT 
  5497            C      M 	JPZ	AppEditNumber_ret		; 第一个号码，无法左移。
       02A7F 0C83     1     JBC  _STATUS , Z 
       02A80 1620     1     JMP  APPEDITNUMBER_RET ,
  5498 02A81 01E2 C        	DEC	r2_cnt				; 光标左移。
  5499 02A82 1689 C        	JMP	AppEditNumber_display		; 显示
  5500            C        ; 光标右移，可以移动到屏幕之外，这时r2_cnt=r2_bx，显示屏上没有光标。
  5501            C        ; 如果光标已经到达最后一个号码的下一位，无法右移。
  5502 02A83      C        AppEditNumber_right:
  5503            C      M 	SUBA	_RD,r2_cnt
       02A83 0422     1     MOV A, R2_CNT 
       02A84 010D     1     SUB A, _RD 
  5504            C      M 	JPNC	AppEditNumber_ret		; 最后一个号码的下一位，无法右移。
       02A85 0E03     1     JBS  _STATUS , C 
       02A86 1620     1     JMP  APPEDITNUMBER_RET ,
  5505 02A87 0562 C        	INC	r2_cnt				; 光标右移
  5506 02A88 1689 C        	JMP	AppEditNumber_display		; 显示
  5507            C        
  5508            C        
  5509 02A89      C        AppEditNumber_display:
  5510 02A89 1C01 C        	RETL	@(1)
  5511            C        
  5512            C        
  5513            C        
  5514            C        /*************************************************
  5515            C        16位人名编辑
  5516            C        
  5517            C        "LEFT"		光标左移
  5518            C        "RIGHT"		光标右移
  5519            C        "BACK"		删除光标前面的人名
  5520            C        "ERASE"		删除光标当前的人名
  5521            C        "123"		在当前光标处输入人名
  5522            C        
  5523            C        r2_bx		保存按下的按键
  5524            C        r2_flag:
  5525            C        		.7	=0 first display (初始化第一次光标的位置)
  5526            C        		.6	=0 大写		(编辑人名)
  5527            C        			=1 小写
  5528            C        		.5	=0 人名确定
  5529            C        			=1 人名备选中	(编辑人名)
  5530            C        *************************************************/
  5531 02A8A      C        AppEditName:
  5532            C      M 	BANK	2
       02A8A 0984     1     BC  _RAM , 6 
       02A8B 0BC4     1     BS  _RAM , 7 
  5533            C      M 	BLOCK	3
       02A8C 1846     1     MOV A,@((( 3 << 1 )+ VALUE_IOCA ))
       02A8D 000A     1     IOW  _IOCA ,
  5534            C        	
  5535            C      M 	MOV	_RC,@(164)
       02A8E 18A4     1     MOV A,@( 164 )
       02A8F 004C     1     MOV  _RC ,A
  5536            C        	
  5537            C      M 	XORA	sys_msg,@(WM_KEYPRESS)
       02A90 1801     1     MOV A,@( WM_KEYPRESS )
       02A91 031B     1     XOR A, SYS_MSG 
  5538            C      M 	JPZ	AppEditName_key
       02A92 0C83     1     JBC  _STATUS , Z 
       02A93 169E     1     JMP  APPEDITNAME_KEY ,
  5539            C      M 	JPNB	r2_flag,5,AppEditName_ret
       02A94 0F7F     1     JBS  R2_FLAG , 5 
       02A95 169D     1     JMP  APPEDITNAME_RET ,
  5540 02A96 042B C        	MOV	A,r2_tmr_dial1
  5541            C      M 	JPNZ	AppEditName_ret
       02A97 0E83     1     JBS  _STATUS , Z 
       02A98 169D     1     JMP  APPEDITNAME_RET ,
  5542 02A99 042A C        	MOV	A,r2_tmr_dial
  5543            C      M 	JPNZ	AppEditName_ret
       02A9A 0E83     1     JBS  _STATUS , Z 
       02A9B 169D     1     JMP  APPEDITNAME_RET ,
  5544 02A9C 1730 C        	JMP	AppEditName_right		; 备选超时，光标右移
  5545 02A9D      C        AppEditName_ret:
  5546 02A9D 1C00 C        	RETL	@(0)
  5547 02A9E      C        AppEditName_key:
  5548            C      M 	XORA	sys_data,@(KEY_LEFT)
       02A9E 1826     1     MOV A,@( KEY_LEFT )
       02A9F 031C     1     XOR A, SYS_DATA 
  5549            C      M 	JPZ	AppEditName_left
       02AA0 0C83     1     JBC  _STATUS , Z 
       02AA1 1729     1     JMP  APPEDITNAME_LEFT ,
  5550            C      M 	XORA	sys_data,@(KEY_RIGHT)
       02AA2 1827     1     MOV A,@( KEY_RIGHT )
       02AA3 031C     1     XOR A, SYS_DATA 
  5551            C      M 	JPZ	AppEditName_right
       02AA4 0C83     1     JBC  _STATUS , Z 
       02AA5 1730     1     JMP  APPEDITNAME_RIGHT ,
  5552            C      M 	XORA	sys_data,@(KEY_BACK)
       02AA6 1814     1     MOV A,@( KEY_BACK )
       02AA7 031C     1     XOR A, SYS_DATA 
  5553            C      M 	JPZ	AppEditName_back
       02AA8 0C83     1     JBC  _STATUS , Z 
       02AA9 16FA     1     JMP  APPEDITNAME_BACK ,
  5554            C      M 	XORA	sys_data,@(KEY_ERASE)
       02AAA 1823     1     MOV A,@( KEY_ERASE )
       02AAB 031C     1     XOR A, SYS_DATA 
  5555            C      M 	JPZ	AppEditName_erase
       02AAC 0C83     1     JBC  _STATUS , Z 
       02AAD 1710     1     JMP  APPEDITNAME_ERASE ,
  5556            C        	
  5557            C      M 	LCALL	LibCharNumCheck
                      2  M  PAGE #( LIBCHARNUMCHECK ),
       02AAE 1E81     2     PAGE ( LIBCHARNUMCHECK / 1024 ),
       02AAF 124A     1     CALL ( LIBCHARNUMCHECK % 1024 ),
                      2  M  PAGE #( $ ),
       02AB0 1E8A     2     PAGE ( $ / 1024 ),
  5558 02AB1 1F00 C        	ADD	A,@(0)
  5559            C      M 	JPZ	AppEditName_ret
       02AB2 0C83     1     JBC  _STATUS , Z 
       02AB3 169D     1     JMP  APPEDITNAME_RET ,
  5560            C        ; 输入一个号码
  5561            C        ; 在光标位置出输入该号码，并将光标位置的原号码和其后的号码右移一位。
  5562            C        ; 同时光标右移一位
  5563 02AB4      C        AppEditName_num:
  5564 02AB4 0060 C        	MOV	r2_ax,A
  5565 02AB5 1B2A C        	XOR	A,@(42)				; 判断是否*按下
  5566            C      M 	JPZ	AppEditName_case
       02AB6 0C83     1     JBC  _STATUS , Z 
       02AB7 16F3     1     JMP  APPEDITNAME_CASE ,
  5567            C      M 	JPB	r2_flag,5,AppEditName_num_1
       02AB8 0D7F     1     JBC  R2_FLAG , 5 
       02AB9 16CF     1     JMP  APPEDITNAME_NUM_1 ,
  5568            C        	
  5569            C      M 	SUBA	_RD,@(16)
       02ABA 1810     1     MOV A,@( 16 )
       02ABB 010D     1     SUB A, _RD 
  5570            C      M 	JPC	AppEditFull			; 编辑长度到了16位，满，不能输入号码。
       02ABC 0C03     1     JBC  _STATUS , C 
       02ABD 17A0     1     JMP  APPEDITFULL ,
  5571 02ABE      C        AppEditName_num_0:
  5572 02ABE 0B7F C        	BS	r2_flag,5			; 进入备选
  5573            C        	
  5574            C      M 	MOV	r2_bx,r2_ax			; 保存输入的按键
       02ABF 0420     1     MOV A, R2_AX 
       02AC0 0063     1     MOV  R2_BX ,A
  5575 02AC1 00E4 C        	CLR	r2_exb				; 从第一个字符开始
  5576            C        	
  5577 02AC2 054D C        	INC	_RD				; 输入一位号码，长度+1。
  5578            C      M 	ADDA	r2_cnt,@(164)			; 得到编辑位置
       02AC3 18A4     1     MOV A,@( 164 )
       02AC4 03A2     1     ADD A, R2_CNT 
  5579 02AC5 0053 C        	MOV	ax,A				; 编辑位置的地址
  5580 02AC6 0056 C        	MOV	bx,A				; 编辑位置的下一位地址
  5581 02AC7 0556 C        	INC	bx
  5582            C      M 	SUBA	_RD,r2_cnt
       02AC8 0422     1     MOV A, R2_CNT 
       02AC9 010D     1     SUB A, _RD 
  5583 02ACA 0055 C        	MOV	cnt,A				; 右移的长度
  5584            C      M 	LCALL	LibCopyRam
                      2  M  PAGE #( LIBCOPYRAM ),
       02ACB 1E81     2     PAGE ( LIBCOPYRAM / 1024 ),
       02ACC 1126     1     CALL ( LIBCOPYRAM % 1024 ),
                      2  M  PAGE #( $ ),
       02ACD 1E8A     2     PAGE ( $ / 1024 ),
  5585 02ACE 16DF C        	JMP	AppEditName_char
  5586            C        
  5587 02ACF      C        AppEditName_num_1:
  5588            C      M 	XORA	r2_ax,r2_bx
       02ACF 0423     1     MOV A, R2_BX 
       02AD0 0320     1     XOR A, R2_AX 
  5589            C      M 	JPZ	AppEditName_num_2
       02AD1 0C83     1     JBC  _STATUS , Z 
       02AD2 16DE     1     JMP  APPEDITNAME_NUM_2 ,
  5590 02AD3 0562 C        	INC	r2_cnt
  5591 02AD4 097F C        	BC	r2_flag,5
  5592            C      M 	SUBA	_RD,@(16)
       02AD5 1810     1     MOV A,@( 16 )
       02AD6 010D     1     SUB A, _RD 
  5593            C      M 	JPNC	AppEditName_num_0
       02AD7 0E03     1     JBS  _STATUS , C 
       02AD8 16BE     1     JMP  APPEDITNAME_NUM_0 ,
  5594 02AD9 1801 C        	MOV	A,@(0x01)
  5595            C      M 	LCALL	LibPromptBeep
                      2  M  PAGE #( LIBPROMPTBEEP ),
       02ADA 1E81     2     PAGE ( LIBPROMPTBEEP / 1024 ),
       02ADB 12D6     1     CALL ( LIBPROMPTBEEP % 1024 ),
                      2  M  PAGE #( $ ),
       02ADC 1E8A     2     PAGE ( $ / 1024 ),
  5596 02ADD 1737 C        	JMP	AppEditName_display
  5597 02ADE      C        AppEditName_num_2:
  5598 02ADE 0564 C        	INC	r2_exb
  5599            C        
  5600 02ADF      C        AppEditName_char:
  5601 02ADF 0011 C        	DISI
  5602 02AE0 00EA C        	CLR	r2_tmr_dial
  5603            C      M 	MOV	r2_tmr_dial1,@(3)
       02AE1 1803     1     MOV A,@( 3 )
       02AE2 006B     1     MOV  R2_TMR_DIAL1 ,A
  5604 02AE3 0010 C        	ENI
  5605            C        	
  5606            C      M 	ADDA	r2_cnt,@(164)
       02AE4 18A4     1     MOV A,@( 164 )
       02AE5 03A2     1     ADD A, R2_CNT 
  5607 02AE6 004C C        	MOV	_RC,A
  5608 02AE7      C        AppEditName_char_0:
  5609 02AE7 1338 C        	CALL	AppEditNameGetCharAddress
  5610 02AE8 03A4 C        	ADD	A,r2_exb
  5611            C      M 	LCALL	TabSelectChar
                      2  M  PAGE #( TABSELECTCHAR ),
       02AE9 1E8D     2     PAGE ( TABSELECTCHAR / 1024 ),
       02AEA 1223     1     CALL ( TABSELECTCHAR % 1024 ),
                      2  M  PAGE #( $ ),
       02AEB 1E8A     2     PAGE ( $ / 1024 ),
  5612 02AEC 1F00 C        	ADD	A,@(0)
  5613            C      M 	JPNZ	AppEditName_char_1
       02AED 0E83     1     JBS  _STATUS , Z 
       02AEE 16F1     1     JMP  APPEDITNAME_CHAR_1 ,
  5614 02AEF 00E4 C        	CLR	r2_exb
  5615 02AF0 16E7 C        	JMP	AppEditName_char_0
  5616 02AF1      C        AppEditName_char_1:
  5617 02AF1 004D C        	MOV	_RD,A
  5618 02AF2 1737 C        	JMP	AppEditName_display
  5619            C        	
  5620            C        
  5621 02AF3      C        AppEditName_case:				; *按下，切换大小写。
  5622            C      M 	INVB	r2_flag,6
                      2  M  XOR  R2_FLAG ,@(( 1 << 6 ))
       02AF3 1840     2     MOV A,@(( 1 << 6 ))
       02AF4 037F     2     XOR  R2_FLAG ,A
  5623 02AF5 1800 C        	MOV	A,@(0x00)
  5624            C      M 	LCALL	LibPromptBeep
                      2  M  PAGE #( LIBPROMPTBEEP ),
       02AF6 1E81     2     PAGE ( LIBPROMPTBEEP / 1024 ),
       02AF7 12D6     1     CALL ( LIBPROMPTBEEP % 1024 ),
                      2  M  PAGE #( $ ),
       02AF8 1E8A     2     PAGE ( $ / 1024 ),
  5625 02AF9 169D C        	JMP	AppEditName_ret
  5626            C        ; 删除光标前面的一位号码
  5627            C        ; 删除前的号码，光标当前位的号码及其后的号码左移一位。
  5628            C        ; 光标左移一位
  5629 02AFA      C        AppEditName_back:
  5630 02AFA 097F C        	BC	r2_flag,5
  5631            C      M 	SUBA	r2_cnt,@(2)
       02AFB 1802     1     MOV A,@( 2 )
       02AFC 0122     1     SUB A, R2_CNT 
  5632            C      M 	JPNC	AppEditName_ret		; 光标位置在第一个号码处，无法删除前面的号码。
       02AFD 0E03     1     JBS  _STATUS , C 
       02AFE 169D     1     JMP  APPEDITNAME_RET ,
  5633 02AFF 01CD C        	DEC	_RD				; 删除一个号码，长度-1
  5634            C      M 	ADDA	r2_cnt,@(164)
       02B00 18A4     1     MOV A,@( 164 )
       02B01 03A2     1     ADD A, R2_CNT 
  5635 02B02 0053 C        	MOV	ax,A
  5636 02B03 0056 C        	MOV	bx,A
  5637 02B04 01D6 C        	DEC	bx
  5638            C      M 	SUBA	_RD,r2_cnt
       02B05 0422     1     MOV A, R2_CNT 
       02B06 010D     1     SUB A, _RD 
  5639 02B07 0055 C        	MOV	cnt,A
  5640 02B08 0555 C        	INC	cnt
  5641 02B09 0555 C        	INC	cnt
  5642            C      M 	LCALL	LibCopyRam
                      2  M  PAGE #( LIBCOPYRAM ),
       02B0A 1E81     2     PAGE ( LIBCOPYRAM / 1024 ),
       02B0B 1126     1     CALL ( LIBCOPYRAM % 1024 ),
                      2  M  PAGE #( $ ),
       02B0C 1E8A     2     PAGE ( $ / 1024 ),
  5643            C      M 	MOV	_RC,@(164)
       02B0D 18A4     1     MOV A,@( 164 )
       02B0E 004C     1     MOV  _RC ,A
  5644 02B0F 1729 C        	JMP	AppEditName_left
  5645            C        ; 删除光标当前的一位号码
  5646            C        ; 光标其后的号码左移一位。
  5647            C        ; 光标位置不变
  5648 02B10      C        AppEditName_erase:
  5649 02B10 097F C        	BC	r2_flag,5
  5650            C      M 	SUBA	_RD,r2_cnt
       02B11 0422     1     MOV A, R2_CNT 
       02B12 010D     1     SUB A, _RD 
  5651            C      M 	JPNC	AppEditName_ret		; 光标位置在最后一个号码的下一位，无法删除当前位。
       02B13 0E03     1     JBS  _STATUS , C 
       02B14 169D     1     JMP  APPEDITNAME_RET ,
  5652 02B15 01CD C        	DEC	_RD				; 删除一个号码，长度-1
  5653            C      M 	SUBA	_RD,r2_cnt
       02B16 0422     1     MOV A, R2_CNT 
       02B17 010D     1     SUB A, _RD 
  5654            C      M 	JPNC	AppEditName_display		; 删除最后一位号码，不需要移位，直接显示。
       02B18 0E03     1     JBS  _STATUS , C 
       02B19 1737     1     JMP  APPEDITNAME_DISPLAY ,
  5655            C      M 	ADDA	r2_cnt,@(164)
       02B1A 18A4     1     MOV A,@( 164 )
       02B1B 03A2     1     ADD A, R2_CNT 
  5656 02B1C 0053 C        	MOV	ax,A
  5657 02B1D 0056 C        	MOV	bx,A
  5658 02B1E 0553 C        	INC	ax
  5659            C      M 	SUBA	_RD,r2_cnt
       02B1F 0422     1     MOV A, R2_CNT 
       02B20 010D     1     SUB A, _RD 
  5660 02B21 0055 C        	MOV	cnt,A
  5661 02B22 0555 C        	INC	cnt
  5662            C      M 	LCALL	LibCopyRam
                      2  M  PAGE #( LIBCOPYRAM ),
       02B23 1E81     2     PAGE ( LIBCOPYRAM / 1024 ),
       02B24 1126     1     CALL ( LIBCOPYRAM % 1024 ),
                      2  M  PAGE #( $ ),
       02B25 1E8A     2     PAGE ( $ / 1024 ),
  5663            C      M 	MOV	_RC,@(164)
       02B26 18A4     1     MOV A,@( 164 )
       02B27 004C     1     MOV  _RC ,A
  5664 02B28 1737 C        	JMP	AppEditName_display		; 光标位置不变，直接显示。
  5665            C        ; 光标左移
  5666            C        ; 如果光标所在编辑区已经到达第一个号码，无法左移。
  5667 02B29      C        AppEditName_left:
  5668 02B29 097F C        	BC	r2_flag,5
  5669            C      M 	SUBA	r2_cnt,@(1)
       02B2A 1801     1     MOV A,@( 1 )
       02B2B 0122     1     SUB A, R2_CNT 
  5670            C      M 	JPZ	AppEditName_ret		; 第一个号码，无法左移。
       02B2C 0C83     1     JBC  _STATUS , Z 
       02B2D 169D     1     JMP  APPEDITNAME_RET ,
  5671 02B2E 01E2 C        	DEC	r2_cnt				; 光标左移。
  5672 02B2F 1737 C        	JMP	AppEditName_display		; 显示
  5673            C        ; 光标右移，可以移动到屏幕之外，这时r2_cnt=r2_bx，显示屏上没有光标。
  5674            C        ; 如果光标已经到达最后一个号码的下一位，无法右移。
  5675 02B30      C        AppEditName_right:
  5676 02B30 097F C        	BC	r2_flag,5
  5677            C      M 	SUBA	_RD,r2_cnt
       02B31 0422     1     MOV A, R2_CNT 
       02B32 010D     1     SUB A, _RD 
  5678            C      M 	JPNC	AppEditName_ret		; 最后一个号码的下一位，无法右移。
       02B33 0E03     1     JBS  _STATUS , C 
       02B34 169D     1     JMP  APPEDITNAME_RET ,
  5679 02B35 0562 C        	INC	r2_cnt				; 光标右移
  5680 02B36 1737 C        	JMP	AppEditName_display		; 显示
  5681            C        
  5682            C        
  5683 02B37      C        AppEditName_display:
  5684 02B37 1C01 C        	RETL	@(1)
  5685            C        
  5686 02B38      C        AppEditNameGetCharAddress:
  5687            C      M 	SUBA	r2_ax,@(35)
       02B38 1823     1     MOV A,@( 35 )
       02B39 0120     1     SUB A, R2_AX 
  5688            C      M 	JPZ	AppEditNameGetCharAddress_hash
       02B3A 0C83     1     JBC  _STATUS , Z 
       02B3B 1758     1     JMP  APPEDITNAMEGETCHARADDRESS_HASH ,
  5689            C      M 	JPB	r2_flag,6,AppEditNameGetCharAddress_l
       02B3C 0DBF     1     JBC  R2_FLAG , 6 
       02B3D 174B     1     JMP  APPEDITNAMEGETCHARADDRESS_L ,
  5690            C      M 	SUBA	r2_ax,@(48)
       02B3E 1830     1     MOV A,@( 48 )
       02B3F 0120     1     SUB A, R2_AX 
  5691 02B40 0020 C        	TBL
  5692 02B41 1759 C        	JMP	AppEditNameGetCharAddress_0
  5693 02B42 175A C        	JMP	AppEditNameGetCharAddress_1
  5694 02B43 175B C        	JMP	AppEditNameGetCharAddress_2
  5695 02B44 175D C        	JMP	AppEditNameGetCharAddress_3
  5696 02B45 175F C        	JMP	AppEditNameGetCharAddress_4
  5697 02B46 1761 C        	JMP	AppEditNameGetCharAddress_5
  5698 02B47 1763 C        	JMP	AppEditNameGetCharAddress_6
  5699 02B48 1765 C        	JMP	AppEditNameGetCharAddress_7
  5700 02B49 1767 C        	JMP	AppEditNameGetCharAddress_8
  5701 02B4A 1769 C        	JMP	AppEditNameGetCharAddress_9
  5702 02B4B      C        AppEditNameGetCharAddress_l:
  5703            C      M 	SUBA	r2_ax,@(48)
       02B4B 1830     1     MOV A,@( 48 )
       02B4C 0120     1     SUB A, R2_AX 
  5704 02B4D 0020 C        	TBL
  5705 02B4E 1759 C        	JMP	AppEditNameGetCharAddress_0
  5706 02B4F 175A C        	JMP	AppEditNameGetCharAddress_1
  5707 02B50 175C C        	JMP	AppEditNameGetCharAddress_2l
  5708 02B51 175E C        	JMP	AppEditNameGetCharAddress_3l
  5709 02B52 1760 C        	JMP	AppEditNameGetCharAddress_4l
  5710 02B53 1762 C        	JMP	AppEditNameGetCharAddress_5l
  5711 02B54 1764 C        	JMP	AppEditNameGetCharAddress_6l
  5712 02B55 1766 C        	JMP	AppEditNameGetCharAddress_7l
  5713 02B56 1768 C        	JMP	AppEditNameGetCharAddress_8l
  5714 02B57 176A C        	JMP	AppEditNameGetCharAddress_9l
  5715 02B58      C        AppEditNameGetCharAddress_hash:
  5716 02B58 1C00 C        	RETL	@(0)
  5717 02B59      C        AppEditNameGetCharAddress_0:
  5718 02B59 1C05 C        	RETL	@(5)
  5719 02B5A      C        AppEditNameGetCharAddress_1:
  5720 02B5A 1C14 C        	RETL	@(20)
  5721 02B5B      C        AppEditNameGetCharAddress_2:
  5722 02B5B 1C28 C        	RETL	@(40)
  5723 02B5C      C        AppEditNameGetCharAddress_2l:
  5724 02B5C 1C35 C        	RETL	@(53)
  5725 02B5D      C        AppEditNameGetCharAddress_3:
  5726 02B5D 1C42 C        	RETL	@(66)
  5727 02B5E      C        AppEditNameGetCharAddress_3l:
  5728 02B5E 1C4B C        	RETL	@(75)
  5729 02B5F      C        AppEditNameGetCharAddress_4:
  5730 02B5F 1C54 C        	RETL	@(84)
  5731 02B60      C        AppEditNameGetCharAddress_4l:
  5732 02B60 1C5D C        	RETL	@(93)
  5733 02B61      C        AppEditNameGetCharAddress_5:
  5734 02B61 1C66 C        	RETL	@(102)
  5735 02B62      C        AppEditNameGetCharAddress_5l:
  5736 02B62 1C6B C        	RETL	@(107)
  5737 02B63      C        AppEditNameGetCharAddress_6:
  5738 02B63 1C70 C        	RETL	@(112)
  5739 02B64      C        AppEditNameGetCharAddress_6l:
  5740 02B64 1C7B C        	RETL	@(123)
  5741 02B65      C        AppEditNameGetCharAddress_7:
  5742 02B65 1C86 C        	RETL	@(134)
  5743 02B66      C        AppEditNameGetCharAddress_7l:
  5744 02B66 1C8D C        	RETL	@(141)
  5745 02B67      C        AppEditNameGetCharAddress_8:
  5746 02B67 1C94 C        	RETL	@(148)
  5747 02B68      C        AppEditNameGetCharAddress_8l:
  5748 02B68 1C9D C        	RETL	@(157)
  5749 02B69      C        AppEditNameGetCharAddress_9:
  5750 02B69 1CA6 C        	RETL	@(166)
  5751 02B6A      C        AppEditNameGetCharAddress_9l:
  5752 02B6A 1CAF C        	RETL	@(175)
  5753            C        	
  5754            C        
  5755            C        
  5756            C        
  5757 02B6B      C        AppEditMusic:
  5758            C      M 	BANK	2
       02B6B 0984     1     BC  _RAM , 6 
       02B6C 0BC4     1     BS  _RAM , 7 
  5759            C      M 	BLOCK	3
       02B6D 1846     1     MOV A,@((( 3 << 1 )+ VALUE_IOCA ))
       02B6E 000A     1     IOW  _IOCA ,
  5760            C      M 	MOV	_RC,@(197)
       02B6F 18C5     1     MOV A,@( 197 )
       02B70 004C     1     MOV  _RC ,A
  5761            C        	
  5762            C      M 	XORA	sys_msg,@(WM_KEYPRESS)
       02B71 1801     1     MOV A,@( WM_KEYPRESS )
       02B72 031B     1     XOR A, SYS_MSG 
  5763            C      M 	JPZ	AppEditMusic_key
       02B73 0C83     1     JBC  _STATUS , Z 
       02B74 1776     1     JMP  APPEDITMUSIC_KEY ,
  5764 02B75 1C00 C        	RETL	@(0)
  5765 02B76      C        AppEditMusic_key:
  5766            C      M 	XORA	sys_data,@(KEY_UP)
       02B76 1824     1     MOV A,@( KEY_UP )
       02B77 031C     1     XOR A, SYS_DATA 
  5767            C      M 	JPZ	AppEditMusic_up
       02B78 0C83     1     JBC  _STATUS , Z 
       02B79 1783     1     JMP  APPEDITMUSIC_UP ,
  5768            C      M 	XORA	sys_data,@(KEY_DOWN)
       02B7A 1825     1     MOV A,@( KEY_DOWN )
       02B7B 031C     1     XOR A, SYS_DATA 
  5769            C      M 	JPZ	AppEditMusic_down
       02B7C 0C83     1     JBC  _STATUS , Z 
       02B7D 178B     1     JMP  APPEDITMUSIC_DOWN ,
  5770            C      M 	XORA	sys_data,@(KEY_PLAY)
       02B7E 1820     1     MOV A,@( KEY_PLAY )
       02B7F 031C     1     XOR A, SYS_DATA 
  5771            C      M 	JPZ	AppEditMusic_play
       02B80 0C83     1     JBC  _STATUS , Z 
       02B81 1791     1     JMP  APPEDITMUSIC_PLAY ,
  5772 02B82 1C00 C        	RETL	@(0)
  5773 02B83      C        AppEditMusic_up:
  5774 02B83 054D C        	INC	_RD
  5775            C      M 	SUBA	_RD,@(13)
       02B84 180D     1     MOV A,@( 13 )
       02B85 010D     1     SUB A, _RD 
  5776            C      M 	JPNC	AppEditMusic_display
       02B86 0E03     1     JBS  _STATUS , C 
       02B87 1793     1     JMP  APPEDITMUSIC_DISPLAY ,
  5777            C      M 	MOV	_RD,@(1)
       02B88 1801     1     MOV A,@( 1 )
       02B89 004D     1     MOV  _RD ,A
  5778 02B8A 1793 C        	JMP	AppEditMusic_display
  5779 02B8B      C        AppEditMusic_down:
  5780 02B8B 01CD C        	DEC	_RD
  5781            C      M 	JPNZ	AppEditMusic_display
       02B8C 0E83     1     JBS  _STATUS , Z 
       02B8D 1793     1     JMP  APPEDITMUSIC_DISPLAY ,
  5782            C      M 	MOV	_RD,@(12)
       02B8E 180C     1     MOV A,@( 12 )
       02B8F 004D     1     MOV  _RD ,A
  5783 02B90 1793 C        	JMP	AppEditMusic_display
  5784 02B91      C        AppEditMusic_play:
  5785 02B91 1800 C        	MOV	A,@(0)
  5786 02B92 1794 C        	JMP	AppEditMusic_view
  5787 02B93      C        AppEditMusic_display:
  5788 02B93 1801 C        	MOV	A,@(1)
  5789 02B94      C        AppEditMusic_view:
  5790 02B94 0061 C        	MOV	r2_exa,A
  5791            C      M 	MOV	bx,_RD
       02B95 040D     1     MOV A, _RD 
       02B96 0056     1     MOV  BX ,A
  5792            C      M 	PAGE	#(IIC)
       02B97 1E80     1     PAGE ( IIC / 1024 ),
  5793 02B98 1853 C        	MOV	A,@(0x53)
  5794 02B99 10A8 C        	CALL	IicSendData
  5795 02B9A 0416 C        	MOV	A,bx
  5796 02B9B 10A8 C        	CALL	IicSendData
  5797 02B9C 10B3 C        	CALL	IicSer
  5798            C      M 	PAGE	#($)
       02B9D 1E8A     1     PAGE ( $ / 1024 ),
  5799 02B9E 0421 C        	MOV	A,r2_exa
  5800 02B9F 0012 C        	RET
  5801            C        
  5802            C        
  5803 02BA0      C        AppEditFull:
  5804 02BA0 1801 C        	MOV	A,@(0x01)
  5805            C      M 	LCALL	LibPromptBeep
                      2  M  PAGE #( LIBPROMPTBEEP ),
       02BA1 1E81     2     PAGE ( LIBPROMPTBEEP / 1024 ),
       02BA2 12D6     1     CALL ( LIBPROMPTBEEP % 1024 ),
                      2  M  PAGE #( $ ),
       02BA3 1E8A     2     PAGE ( $ / 1024 ),
  5806 02BA4 1C00 C        	RETL	@(0)
  5807            C        
  5808            C        
  5809            C        ORG	0x2c00
  5810            C        
  5811 02C00      C        AppProgram:
  5812            C      M 	BANK	2
       02C00 0984     1     BC  _RAM , 6 
       02C01 0BC4     1     BS  _RAM , 7 
  5813            C      M 	JPB	sys_flag,PROGRAMINIT,AppProgram_init
       02C02 0CDD     1     JBC  SYS_FLAG , PROGRAMINIT 
       02C03 1407     1     JMP  APPPROGRAM_INIT ,
  5814            C      M 	JPB	sys_flag,PROGRAMREIN,AppProgram_rein
       02C04 0D1D     1     JBC  SYS_FLAG , PROGRAMREIN 
       02C05 140B     1     JMP  APPPROGRAM_REIN ,
  5815 02C06 1419 C        	JMP	AppProgram_idle
  5816 02C07      C        AppProgram_init:
  5817 02C07 08DD C        	BC	sys_flag,PROGRAMINIT
  5818 02C08 00FE C        	CLR	r2_id
  5819 02C09 00FF C        	CLR	r2_flag
  5820 02C0A 1413 C        	JMP	AppProgram_display
  5821 02C0B      C        AppProgram_rein:
  5822            C      M 	PAGE	#(LibPushStack)
       02C0B 1E81     1     PAGE ( LIBPUSHSTACK / 1024 ),
  5823 02C0C 100C C        	CALL	LibPopStack
  5824 02C0D 007F C        	MOV	r2_flag,A
  5825 02C0E 100C C        	CALL	LibPopStack
  5826 02C0F 007E C        	MOV	r2_id,A
  5827 02C10 100C C        	CALL	LibPopStack
  5828 02C11 1079 C        	CALL	LibStoreCursor
  5829            C      M 	PAGE	#($)
       02C12 1E8B     1     PAGE ( $ / 1024 ),
  5830 02C13      C        AppProgram_display:
  5831 02C13 091D C        	BC	sys_flag,PROGRAMREIN
  5832            C      M 	PAGE	#(VGA)
       02C14 1E83     1     PAGE ( VGA / 1024 ),
  5833 02C15 10DE C        	CALL	VgaBlankNum2
  5834 02C16 10E0 C        	CALL	VgaBlankChar
  5835            C      M 	PAGE	#($)
       02C17 1E8B     1     PAGE ( $ / 1024 ),
  5836 02C18 1060 C        	CALL	AppProgramDisplay
  5837 02C19      C        AppProgram_idle:
  5838            C      M 	XORA	sys_msg,@(WM_KEYPRESS)
       02C19 1801     1     MOV A,@( WM_KEYPRESS )
       02C1A 031B     1     XOR A, SYS_MSG 
  5839            C      M 	JPZ	AppProgram_key
       02C1B 0C83     1     JBC  _STATUS , Z 
       02C1C 141E     1     JMP  APPPROGRAM_KEY ,
  5840 02C1D 1C00 C        	RETL	@(0)
  5841 02C1E      C        AppProgram_key:
  5842            C      M 	XORA	sys_data,@(KEY_UP)
       02C1E 1824     1     MOV A,@( KEY_UP )
       02C1F 031C     1     XOR A, SYS_DATA 
  5843            C      M 	JPZ	AppProgram_up
       02C20 0C83     1     JBC  _STATUS , Z 
       02C21 142F     1     JMP  APPPROGRAM_UP ,
  5844            C      M 	XORA	sys_data,@(KEY_DOWN)
       02C22 1825     1     MOV A,@( KEY_DOWN )
       02C23 031C     1     XOR A, SYS_DATA 
  5845            C      M 	JPZ	AppProgram_down
       02C24 0C83     1     JBC  _STATUS , Z 
       02C25 1436     1     JMP  APPPROGRAM_DOWN ,
  5846            C      M 	XORA	sys_data,@(KEY_EXIT)
       02C26 1816     1     MOV A,@( KEY_EXIT )
       02C27 031C     1     XOR A, SYS_DATA 
  5847            C      M 	JPZ	AppProgram_exit
       02C28 0C83     1     JBC  _STATUS , Z 
       02C29 143D     1     JMP  APPPROGRAM_EXIT ,
  5848            C      M 	XORA	sys_data,@(KEY_ENTER)
       02C2A 1830     1     MOV A,@( KEY_ENTER )
       02C2B 031C     1     XOR A, SYS_DATA 
  5849            C      M 	JPZ	AppProgram_enter
       02C2C 0C83     1     JBC  _STATUS , Z 
       02C2D 143F     1     JMP  APPPROGRAM_ENTER ,
  5850 02C2E 1C00 C        	RETL	@(0)
  5851 02C2F      C        AppProgram_up:
  5852 02C2F 057E C        	INC	r2_id
  5853            C      M 	SUBA	r2_id,@(3)
       02C30 1803     1     MOV A,@( 3 )
       02C31 013E     1     SUB A, R2_ID 
  5854            C      M 	JPNC	AppProgramDisplay
       02C32 0E03     1     JBS  _STATUS , C 
       02C33 1460     1     JMP  APPPROGRAMDISPLAY ,
  5855 02C34 00FE C        	CLR	r2_id
  5856 02C35 1460 C        	JMP	AppProgramDisplay
  5857 02C36      C        AppProgram_down:
  5858 02C36 043E C        	MOV	A,r2_id
  5859            C      M 	JPNZ	$+3
       02C37 0E83     1     JBS  _STATUS , Z 
       02C38 143B     1     JMP ( $ + 3 ),
  5860            C      M 	MOV	r2_id,@(3)
       02C39 1803     1     MOV A,@( 3 )
       02C3A 007E     1     MOV  R2_ID ,A
  5861 02C3B 01FE C        	DEC	r2_id
  5862 02C3C 1460 C        	JMP	AppProgramDisplay
  5863 02C3D      C        AppProgram_exit:
  5864 02C3D 00D8 C        	CLR	program
  5865 02C3E 1C00 C        	RETL	@(0)
  5866 02C3F      C        AppProgram_enter:
  5867            C      M 	BLOCK	1
       02C3F 1842     1     MOV A,@((( 1 << 1 )+ VALUE_IOCA ))
       02C40 000A     1     IOW  _IOCA ,
  5868 02C41 043E C        	MOV	A,r2_id
  5869 02C42 0020 C        	TBL
  5870 02C43 1446 C        	JMP	AppProgram_enter_m1
  5871 02C44 1448 C        	JMP	AppProgram_enter_m2
  5872 02C45 144A C        	JMP	AppProgram_enter_m3
  5873 02C46      C        AppProgram_enter_m1:
  5874 02C46 1880 C        	MOV	A,@(128)
  5875 02C47 144B C        	JMP	AppProgram_enter_1
  5876 02C48      C        AppProgram_enter_m2:
  5877 02C48 18A2 C        	MOV	A,@(162)
  5878 02C49 144B C        	JMP	AppProgram_enter_1
  5879 02C4A      C        AppProgram_enter_m3:
  5880 02C4A 18C4 C        	MOV	A,@(196)
  5881 02C4B      C        AppProgram_enter_1:
  5882 02C4B 1071 C        	CALL	AppMemoryToEditor
  5883            C        
  5884            C      M 	BLOCK	3
       02C4C 1846     1     MOV A,@((( 3 << 1 )+ VALUE_IOCA ))
       02C4D 000A     1     IOW  _IOCA ,
  5885            C      M 	MOV	_RC,@(198)
       02C4E 18C6     1     MOV A,@( 198 )
       02C4F 004C     1     MOV  _RC ,A
  5886            C      M 	ADDA	r2_id,@(1)
       02C50 1801     1     MOV A,@( 1 )
       02C51 03BE     1     ADD A, R2_ID 
  5887 02C52 004D C        	MOV	_RD,A				; 编辑区属于M1~M3
  5888            C      M 	PAGE	#(LibPushStack)
       02C53 1E81     1     PAGE ( LIBPUSHSTACK / 1024 ),
  5889 02C54 0419 C        	MOV	A,cursor
  5890 02C55 1002 C        	CALL	LibPushStack
  5891 02C56 043E C        	MOV	A,r2_id
  5892 02C57 1002 C        	CALL	LibPushStack
  5893 02C58 043F C        	MOV	A,r2_flag
  5894 02C59 1002 C        	CALL	LibPushStack
  5895 02C5A 1832 C        	MOV	A,@(PRO_AppProgram)
  5896 02C5B 1002 C        	CALL	LibPushStack
  5897 02C5C 1833 C        	MOV	A,@(PRO_AppEditBook)
  5898 02C5D 1000 C        	CALL	LibPushProgram
  5899            C      M 	PAGE	#($)
       02C5E 1E8B     1     PAGE ( $ / 1024 ),
  5900 02C5F 1C00 C        	RETL	@(0)
  5901            C        
  5902 02C60      C        AppProgramDisplay:
  5903            C      M 	PAGE	#(VGA)
       02C60 1E83     1     PAGE ( VGA / 1024 ),
  5904 02C61 1881 C        	MOV	A,@(STYLE_LEFT)
  5905 02C62 101C C        	CALL	VgaChar
  5906 02C63 184D C        	MOV	A,@(77)
  5907 02C64 101C C        	CALL	VgaChar
  5908            C      M 	ADDA	r2_id,@(48+1)
       02C65 1831     1     MOV A,@(( 48 + 1 ))
       02C66 03BE     1     ADD A, R2_ID 
  5909 02C67 101C C        	CALL	VgaChar
  5910 02C68 1820 C        	MOV	A,@(32)
  5911 02C69 101C C        	CALL	VgaChar
  5912 02C6A 1845 C        	MOV	A,@(STR_memoryset)
  5913 02C6B 114B C        	CALL	VgaString
  5914 02C6C 1800 C        	MOV	A,@(0)
  5915 02C6D 101C C        	CALL	VgaChar
  5916 02C6E 1078 C        	CALL	VgaDrawChar
  5917            C      M 	PAGE	#($)
       02C6F 1E8B     1     PAGE ( $ / 1024 ),
  5918 02C70 1C00 C        	RETL	@(0)
  5919            C        
  5920            C        /*************************************************
  5921            C        AppMemoryToEditor
  5922            C        将M1~M3的内容拷贝至编辑区
  5923            C        *************************************************/
  5924 02C71      C        AppMemoryToEditor:
  5925 02C71 0053 C        	MOV	ax,A
  5926 02C72 10DB C        	CALL	LibClearEditor
  5927            C        	
  5928            C      M 	BLOCK	1
       02C73 1842     1     MOV A,@((( 1 << 1 )+ VALUE_IOCA ))
       02C74 000A     1     IOW  _IOCA ,
  5929            C      M 	MOV	_RC,ax
       02C75 0413     1     MOV A, AX 
       02C76 004C     1     MOV  _RC ,A
  5930 02C77 040D C        	MOV	A,_RD
  5931            C      M 	JPZ	AppMemoryToEditor_null		; memory 为空
       02C78 0C83     1     JBC  _STATUS , Z 
       02C79 149F     1     JMP  APPMEMORYTOEDITOR_NULL ,
  5932            C      M 	MOV	exa,@(16)
       02C7A 1810     1     MOV A,@( 16 )
       02C7B 0054     1     MOV  EXA ,A
  5933 02C7C 0553 C        	INC	ax
  5934            C      M 	MOV	bx,@(132)
       02C7D 1884     1     MOV A,@( 132 )
       02C7E 0056     1     MOV  BX ,A
  5935 02C7F 10E7 C        	CALL	LibCopyRamEx1
  5936            C      M 	BLOCK	3
       02C80 1846     1     MOV A,@((( 3 << 1 )+ VALUE_IOCA ))
       02C81 000A     1     IOW  _IOCA ,
  5937            C      M 	MOV	_RC,@(131)
       02C82 1883     1     MOV A,@( 131 )
       02C83 004C     1     MOV  _RC ,A
  5938            C      M 	MOV	_RD,cnt
       02C84 0415     1     MOV A, CNT 
       02C85 004D     1     MOV  _RD ,A
  5939            C        	
  5940            C      M 	ADD	ax,@(16)
       02C86 1810     1     MOV A,@( 16 )
       02C87 03D3     1     ADD  AX ,A
  5941            C      M 	MOV	bx,@(165)
       02C88 18A5     1     MOV A,@( 165 )
       02C89 0056     1     MOV  BX ,A
  5942 02C8A 10E7 C        	CALL	LibCopyRamEx1
  5943            C      M 	BLOCK	3
       02C8B 1846     1     MOV A,@((( 3 << 1 )+ VALUE_IOCA ))
       02C8C 000A     1     IOW  _IOCA ,
  5944            C      M 	MOV	_RC,@(164)
       02C8D 18A4     1     MOV A,@( 164 )
       02C8E 004C     1     MOV  _RC ,A
  5945            C      M 	MOV	_RD,cnt
       02C8F 0415     1     MOV A, CNT 
       02C90 004D     1     MOV  _RD ,A
  5946            C        	
  5947            C      M 	BLOCK	1
       02C91 1842     1     MOV A,@((( 1 << 1 )+ VALUE_IOCA ))
       02C92 000A     1     IOW  _IOCA ,
  5948            C      M 	ADDA	ax,@(16)
       02C93 1810     1     MOV A,@( 16 )
       02C94 0393     1     ADD A, AX 
  5949 02C95 004C C        	MOV	_RC,A
  5950            C      M 	MOV	exa,_RD
       02C96 040D     1     MOV A, _RD 
       02C97 0054     1     MOV  EXA ,A
  5951            C      M 	BLOCK	3
       02C98 1846     1     MOV A,@((( 3 << 1 )+ VALUE_IOCA ))
       02C99 000A     1     IOW  _IOCA ,
  5952            C      M 	MOV	_RC,@(197)
       02C9A 18C5     1     MOV A,@( 197 )
       02C9B 004C     1     MOV  _RC ,A
  5953            C      M 	MOV	_RD,exa
       02C9C 0414     1     MOV A, EXA 
       02C9D 004D     1     MOV  _RD ,A
  5954 02C9E 1C01 C        	RETL	@(1)
  5955 02C9F      C        AppMemoryToEditor_null:
  5956 02C9F 1C00 C        	RETL	@(0)
  5957            C        
  5958            C        /*************************************************
  5959            C        AppCallerToEditor
  5960            C        将callerid package的内容拷贝至编辑区
  5961            C        *************************************************/
  5962 02CA0      C        AppCallerToEditor:
  5963 02CA0 10DB C        	CALL	LibClearEditor
  5964            C        	
  5965            C      M 	BLOCK	1
       02CA1 1842     1     MOV A,@((( 1 << 1 )+ VALUE_IOCA ))
       02CA2 000A     1     IOW  _IOCA ,
  5966            C      M 	MOV	_RC,@(8+4)
       02CA3 180C     1     MOV A,@(( 8 + 4 ))
       02CA4 004C     1     MOV  _RC ,A
  5967 02CA5 040D C        	MOV	A,_RD
  5968            C      M 	JPZ	AppCallerToEditor_null
       02CA6 0C83     1     JBC  _STATUS , Z 
       02CA7 14DA     1     JMP  APPCALLERTOEDITOR_NULL ,
  5969            C        	;SUBA	_RD,@(17)
  5970            C        	;JPC	AppCallerToEditor_null		; 长度超过16位
  5971            C      M 	MOV	exa,_RD
       02CA8 040D     1     MOV A, _RD 
       02CA9 0054     1     MOV  EXA ,A
  5972            C      M 	MOV	ax,@(8+4+1)
       02CAA 180D     1     MOV A,@((( 8 + 4 )+ 1 ))
       02CAB 0053     1     MOV  AX ,A
  5973            C      M 	MOV	bx,@(132)
       02CAC 1884     1     MOV A,@( 132 )
       02CAD 0056     1     MOV  BX ,A
  5974 02CAE 10E7 C        	CALL	LibCopyRamEx1
  5975            C      M 	BLOCK	3
       02CAF 1846     1     MOV A,@((( 3 << 1 )+ VALUE_IOCA ))
       02CB0 000A     1     IOW  _IOCA ,
  5976            C      M 	MOV	_RC,@(131)
       02CB1 1883     1     MOV A,@( 131 )
       02CB2 004C     1     MOV  _RC ,A
  5977            C      M 	MOV	_RD,cnt
       02CB3 0415     1     MOV A, CNT 
       02CB4 004D     1     MOV  _RD ,A
  5978            C        	
  5979            C      M 	BLOCK	1
       02CB5 1842     1     MOV A,@((( 1 << 1 )+ VALUE_IOCA ))
       02CB6 000A     1     IOW  _IOCA ,
  5980            C      M 	MOV	_RC,@(8+4+33)
       02CB7 182D     1     MOV A,@((( 8 + 4 )+ 33 ))
       02CB8 004C     1     MOV  _RC ,A
  5981 02CB9 040D C        	MOV	A,_RD
  5982            C      M 	JPZ	AppCallerToEditor_name_end
       02CBA 0C83     1     JBC  _STATUS , Z 
       02CBB 14CD     1     JMP  APPCALLERTOEDITOR_NAME_END ,
  5983            C      M 	SUBA	_RD,@(17)
       02CBC 1811     1     MOV A,@( 17 )
       02CBD 010D     1     SUB A, _RD 
  5984            C      M 	JPC	AppCallerToEditor_name_end
       02CBE 0C03     1     JBC  _STATUS , C 
       02CBF 14CD     1     JMP  APPCALLERTOEDITOR_NAME_END ,
  5985            C      M 	MOV	exa,_RD
       02CC0 040D     1     MOV A, _RD 
       02CC1 0054     1     MOV  EXA ,A
  5986            C      M 	MOV	ax,@(8+4+33+1)
       02CC2 182E     1     MOV A,@(((( 8 + 4 )+ 33 )+ 1 ))
       02CC3 0053     1     MOV  AX ,A
  5987            C      M 	MOV	bx,@(165)
       02CC4 18A5     1     MOV A,@( 165 )
       02CC5 0056     1     MOV  BX ,A
  5988 02CC6 10E7 C        	CALL	LibCopyRamEx1
  5989            C      M 	BLOCK	3
       02CC7 1846     1     MOV A,@((( 3 << 1 )+ VALUE_IOCA ))
       02CC8 000A     1     IOW  _IOCA ,
  5990            C      M 	MOV	_RC,@(164)
       02CC9 18A4     1     MOV A,@( 164 )
       02CCA 004C     1     MOV  _RC ,A
  5991            C      M 	MOV	_RD,cnt
       02CCB 0415     1     MOV A, CNT 
       02CCC 004D     1     MOV  _RD ,A
  5992 02CCD      C        AppCallerToEditor_name_end:
  5993            C        	
  5994            C      M 	BLOCK	1
       02CCD 1842     1     MOV A,@((( 1 << 1 )+ VALUE_IOCA ))
       02CCE 000A     1     IOW  _IOCA ,
  5995            C      M 	MOV	_RC,@(8+4+33+17)
       02CCF 183E     1     MOV A,@(((( 8 + 4 )+ 33 )+ 17 ))
       02CD0 004C     1     MOV  _RC ,A
  5996            C      M 	MOV	exa,_RD
       02CD1 040D     1     MOV A, _RD 
       02CD2 0054     1     MOV  EXA ,A
  5997            C      M 	BLOCK	3
       02CD3 1846     1     MOV A,@((( 3 << 1 )+ VALUE_IOCA ))
       02CD4 000A     1     IOW  _IOCA ,
  5998            C      M 	MOV	_RC,@(197)
       02CD5 18C5     1     MOV A,@( 197 )
       02CD6 004C     1     MOV  _RC ,A
  5999            C      M 	MOV	_RD,exa
       02CD7 0414     1     MOV A, EXA 
       02CD8 004D     1     MOV  _RD ,A
  6000 02CD9 1C01 C        	RETL	@(1)
  6001 02CDA      C        AppCallerToEditor_null:
  6002 02CDA 1C00 C        	RETL	@(0)
  6003            C        	
  6004            C        	
  6005 02CDB      C        LibClearEditor:
  6006            C      M 	BLOCK	3
       02CDB 1846     1     MOV A,@((( 3 << 1 )+ VALUE_IOCA ))
       02CDC 000A     1     IOW  _IOCA ,
  6007            C      M 	MOV	_RC,@(131)
       02CDD 1883     1     MOV A,@( 131 )
       02CDE 004C     1     MOV  _RC ,A
  6008 02CDF 00CD C        	CLR	_RD
  6009            C      M 	MOV	_RC,@(164)
       02CE0 18A4     1     MOV A,@( 164 )
       02CE1 004C     1     MOV  _RC ,A
  6010 02CE2 00CD C        	CLR	_RD
  6011            C      M 	MOV	_RC,@(197)
       02CE3 18C5     1     MOV A,@( 197 )
       02CE4 004C     1     MOV  _RC ,A
  6012 02CE5 00CD C        	CLR	_RD
  6013 02CE6 1C00 C        	RETL	@(0)
  6014            C        
  6015            C        ; ax:	源地址(block 1)
  6016            C        ; exa:	源有效长度最大长度
  6017            C        ; bx:	目标地址(block 3)
  6018            C        ; 最大16位
  6019 02CE7      C        LibCopyRamEx1:
  6020 02CE7 00D5 C        	CLR	cnt
  6021 02CE8      C        LibCopyRamEx1_loop:
  6022            C      M 	SUBA	cnt,@(16)
       02CE8 1810     1     MOV A,@( 16 )
       02CE9 0115     1     SUB A, CNT 
  6023            C      M 	JPC	LibCopyRamEx1_end		; 长度到16位
       02CEA 0C03     1     JBC  _STATUS , C 
       02CEB 1502     1     JMP  LIBCOPYRAMEX1_END ,
  6024            C      M 	SUBA	cnt,exa				; 长度到源长度
       02CEC 0414     1     MOV A, EXA 
       02CED 0115     1     SUB A, CNT 
  6025            C      M 	JPC	LibCopyRamEx1_end
       02CEE 0C03     1     JBC  _STATUS , C 
       02CEF 1502     1     JMP  LIBCOPYRAMEX1_END ,
  6026            C      M 	BLOCK	1
       02CF0 1842     1     MOV A,@((( 1 << 1 )+ VALUE_IOCA ))
       02CF1 000A     1     IOW  _IOCA ,
  6027            C      M 	ADDA	ax,cnt
       02CF2 0415     1     MOV A, CNT 
       02CF3 0393     1     ADD A, AX 
  6028 02CF4 004C C        	MOV	_RC,A
  6029 02CF5 040D C        	MOV	A,_RD
  6030            C      M 	JPZ	LibCopyRamEx1_end		; 数据结束
       02CF6 0C83     1     JBC  _STATUS , Z 
       02CF7 1502     1     JMP  LIBCOPYRAMEX1_END ,
  6031 02CF8 0057 C        	MOV	exb,A
  6032            C      M 	BLOCK	3
       02CF9 1846     1     MOV A,@((( 3 << 1 )+ VALUE_IOCA ))
       02CFA 000A     1     IOW  _IOCA ,
  6033            C      M 	ADDA	bx,cnt
       02CFB 0415     1     MOV A, CNT 
       02CFC 0396     1     ADD A, BX 
  6034 02CFD 004C C        	MOV	_RC,A
  6035            C      M 	MOV	_RD,exb
       02CFE 0417     1     MOV A, EXB 
       02CFF 004D     1     MOV  _RD ,A
  6036 02D00 0555 C        	INC	cnt
  6037 02D01 14E8 C        	JMP	LibCopyRamEx1_loop
  6038 02D02      C        LibCopyRamEx1_end:
  6039 02D02 1C00 C        	RETL	@(0)
  6040            C        
  6041            C        /*************************************************
  6042            C        AppNewCall
  6043            C        来电
  6044            C        当有铃声来(command=0x1900)，进入本程序显示new call，(还没有收到caller id)
  6045            C        当有caller id(command=0x1a00)，进入本程序显示来电号码信息。
  6046            C        本程序中：
  6047            C        如果拿起手柄或按下spk，进入通话程序
  6048            C        如果答录机应答(command=0x1700)，显示answered ogmX，同时答录机处于接线状态。
  6049            C        如果答录机录音(command=0x1200)，显示ICM录音，并计时。
  6050            C        如果答录机进入遥控(command=0x1300)，显示remote，并计时。
  6051            C        如果答录机退出(command=0x13XX)，本程序退出。
  6052            C        
  6053            C        r2_flag
  6054            C        	.7	=0,响铃中；=1答录机应答
  6055            C        	.6	分屏显示用
  6056            C        	.5	=0,没有响铃或响铃停止；=1有响铃
  6057            C        	.4	=0,没有caller id；=1有caller id
  6058            C        	.3	=0,不用计时；=1计时
  6059            C        
  6060            C        NOTE:
  6061            C        	进入本程序时，消息不能丢失
  6062            C        *************************************************/
  6063 02D03      C        AppNewCall:
  6064            C      M 	BANK	2
       02D03 0984     1     BC  _RAM , 6 
       02D04 0BC4     1     BS  _RAM , 7 
  6065            C      M 	JPB	sys_flag,PROGRAMINIT,AppNewCall_init
       02D05 0CDD     1     JBC  SYS_FLAG , PROGRAMINIT 
       02D06 150A     1     JMP  APPNEWCALL_INIT ,
  6066            C      M 	JPB	sys_flag,PROGRAMREIN,AppNewCall_rein
       02D07 0D1D     1     JBC  SYS_FLAG , PROGRAMREIN 
       02D08 150B     1     JMP  APPNEWCALL_REIN ,
  6067 02D09 1511 C        	JMP	AppNewCall_idle
  6068 02D0A      C        AppNewCall_init:
  6069 02D0A 08DD C        	BC	sys_flag,PROGRAMINIT
  6070 02D0B      C        AppNewCall_rein:
  6071 02D0B      C        AppNewCall_display:
  6072 02D0B 091D C        	BC	sys_flag,PROGRAMREIN
  6073            C      M 	PAGE	#(VGA)
       02D0C 1E83     1     PAGE ( VGA / 1024 ),
  6074 02D0D 10DE C        	CALL	VgaBlankNum2
  6075 02D0E 10E0 C        	CALL	VgaBlankChar
  6076            C      M 	PAGE	#($)
       02D0F 1E8B     1     PAGE ( $ / 1024 ),
  6077 02D10 00FF C        	CLR	r2_flag
  6078 02D11      C        AppNewCall_idle:
  6079            C      M 	XORA	sys_msg,@(WM_KEYPRESS)
       02D11 1801     1     MOV A,@( WM_KEYPRESS )
       02D12 031B     1     XOR A, SYS_MSG 
  6080            C      M 	JPZ	AppNewCall_key
       02D13 0C83     1     JBC  _STATUS , Z 
       02D14 1536     1     JMP  APPNEWCALL_KEY ,
  6081            C      M 	XORA	sys_msg,@(WM_HANDSET)
       02D15 1806     1     MOV A,@( WM_HANDSET )
       02D16 031B     1     XOR A, SYS_MSG 
  6082            C      M 	JPZ	AppNewCall_handset
       02D17 0C83     1     JBC  _STATUS , Z 
       02D18 153D     1     JMP  APPNEWCALL_HANDSET ,
  6083            C      M 	XORA	sys_msg,@(WM_COMMAND)
       02D19 1807     1     MOV A,@( WM_COMMAND )
       02D1A 031B     1     XOR A, SYS_MSG 
  6084            C      M 	JPZ	AppNewCall_command
       02D1B 0C83     1     JBC  _STATUS , Z 
       02D1C 1542     1     JMP  APPNEWCALL_COMMAND ,
  6085 02D1D      C        AppNewCall_ret:
  6086            C      M 	JPNB	r2_flag,7,AppNewCall_ring
       02D1D 0FFF     1     JBS  R2_FLAG , 7 
       02D1E 1526     1     JMP  APPNEWCALL_RING ,
  6087            C      M 	JPNB	r2_flag,3,AppNewCall_ret_1
       02D1F 0EFF     1     JBS  R2_FLAG , 3 
       02D20 1535     1     JMP  APPNEWCALL_RET_1 ,
  6088            C      M 	PAGE	#(LibUpdateTimer)
       02D21 1E81     1     PAGE ( LIBUPDATETIMER / 1024 ),
  6089 02D22 11C3 C        	CALL	LibUpdateTimer
  6090 02D23 11E5 C        	CALL	LibDisplayTimer
  6091            C      M 	PAGE	#($)
       02D24 1E8B     1     PAGE ( $ / 1024 ),
  6092 02D25 1535 C        	JMP	AppNewCall_ret_1
  6093 02D26      C        AppNewCall_ring:
  6094            C      M 	JPB	r2_flag,5,AppNewCall_ret_1
       02D26 0D7F     1     JBC  R2_FLAG , 5 
       02D27 1535     1     JMP  APPNEWCALL_RET_1 ,
  6095            C      M 	JPNB	r2_flag,4,AppNewCall_ret_0
       02D28 0F3F     1     JBS  R2_FLAG , 4 
       02D29 1534     1     JMP  APPNEWCALL_RET_0 ,
  6096 02D2A 042A C        	MOV	A,r2_tmr_dial
  6097            C      M 	JPNZ	AppNewCall_ret_1
       02D2B 0E83     1     JBS  _STATUS , Z 
       02D2C 1535     1     JMP  APPNEWCALL_RET_1 ,
  6098 02D2D 042B C        	MOV	A,r2_tmr_dial1
  6099            C      M 	JPNZ	AppNewCall_ret_1
       02D2E 0E83     1     JBS  _STATUS , Z 
       02D2F 1535     1     JMP  APPNEWCALL_RET_1 ,
  6100 02D30 1854 C        	MOV	A,@(0x54)
  6101            C      M 	LCALL	LibSendOneCommand
                      2  M  PAGE #( LIBSENDONECOMMAND ),
       02D31 1E81     2     PAGE ( LIBSENDONECOMMAND / 1024 ),
       02D32 12AF     1     CALL ( LIBSENDONECOMMAND % 1024 ),
                      2  M  PAGE #( $ ),
       02D33 1E8B     2     PAGE ( $ / 1024 ),
  6102 02D34      C        AppNewCall_ret_0:
  6103 02D34 00D8 C        	CLR	program
  6104 02D35      C        AppNewCall_ret_1:
  6105 02D35 1C00 C        	RETL	@(0)
  6106 02D36      C        AppNewCall_key:
  6107            C      M 	XORA	sys_data,@(KEY_SPK)
       02D36 1817     1     MOV A,@( KEY_SPK )
       02D37 031C     1     XOR A, SYS_DATA 
  6108            C      M 	JPZ	AppNewCall_spk
       02D38 0C83     1     JBC  _STATUS , Z 
       02D39 153B     1     JMP  APPNEWCALL_SPK ,
  6109 02D3A 151D C        	JMP	AppNewCall_ret
  6110 02D3B      C        AppNewCall_spk:
  6111 02D3B 0B9D C        	BS	sys_flag,SPKPHONE
  6112 02D3C 15A3 C        	JMP	AppNewCall_answer
  6113 02D3D      C        AppNewCall_handset:
  6114            C      M 	XORA	sys_data,@(HANDSET_OFF)
       02D3D 1801     1     MOV A,@( HANDSET_OFF )
       02D3E 031C     1     XOR A, SYS_DATA 
  6115            C      M 	JPZ	AppNewCall_answer
       02D3F 0C83     1     JBC  _STATUS , Z 
       02D40 15A3     1     JMP  APPNEWCALL_ANSWER ,
  6116 02D41 151D C        	JMP	AppNewCall_ret
  6117 02D42      C        AppNewCall_command:
  6118            C      M 	XORA	sys_data,@(0x19)
       02D42 1819     1     MOV A,@( 25 )
       02D43 031C     1     XOR A, SYS_DATA 
  6119            C      M 	JPZ	AppNewCall_ringin
       02D44 0C83     1     JBC  _STATUS , Z 
       02D45 155B     1     JMP  APPNEWCALL_RINGIN ,
  6120            C      M 	XORA	sys_data,@(0x1a)
       02D46 181A     1     MOV A,@( 26 )
       02D47 031C     1     XOR A, SYS_DATA 
  6121            C      M 	JPZ	AppNewCall_cid
       02D48 0C83     1     JBC  _STATUS , Z 
       02D49 15A8     1     JMP  APPNEWCALL_CID ,
  6122            C      M 	XORA	sys_data,@(0x15)
       02D4A 1815     1     MOV A,@( 21 )
       02D4B 031C     1     XOR A, SYS_DATA 
  6123            C      M 	JPZ	AppNewCall_seize
       02D4C 0C83     1     JBC  _STATUS , Z 
       02D4D 156C     1     JMP  APPNEWCALL_SEIZE ,
  6124            C      M 	XORA	sys_data,@(0x12)
       02D4E 1812     1     MOV A,@( 18 )
       02D4F 031C     1     XOR A, SYS_DATA 
  6125            C      M 	JPZ	AppNewCall_record
       02D50 0C83     1     JBC  _STATUS , Z 
       02D51 157E     1     JMP  APPNEWCALL_RECORD ,
  6126            C      M 	XORA	sys_data,@(0x14)
       02D52 1814     1     MOV A,@( 20 )
       02D53 031C     1     XOR A, SYS_DATA 
  6127            C      M 	JPZ	AppNewCall_remote
       02D54 0C83     1     JBC  _STATUS , Z 
       02D55 1580     1     JMP  APPNEWCALL_REMOTE ,
  6128            C      M 	XORA	sys_data,@(0x13)
       02D56 1813     1     MOV A,@( 19 )
       02D57 031C     1     XOR A, SYS_DATA 
  6129            C      M 	JPZ	AppNewCall_exit
       02D58 0C83     1     JBC  _STATUS , Z 
       02D59 1592     1     JMP  APPNEWCALL_EXIT ,
  6130 02D5A 151D C        	JMP	AppNewCall_ret
  6131 02D5B      C        AppNewCall_ringin:
  6132            C      M 	JPB	r2_flag,5,AppNewCall_ret
       02D5B 0D7F     1     JBC  R2_FLAG , 5 
       02D5C 151D     1     JMP  APPNEWCALL_RET ,
  6133 02D5D 0B7F C        	BS	r2_flag,5
  6134            C      M 	JPB	r2_flag,4,AppNewCall_ret
       02D5E 0D3F     1     JBC  R2_FLAG , 4 
       02D5F 151D     1     JMP  APPNEWCALL_RET ,
  6135            C      M 	PAGE	#(VGA)
       02D60 1E83     1     PAGE ( VGA / 1024 ),
  6136 02D61 10DE C        	CALL	VgaBlankNum2
  6137 02D62 10E0 C        	CALL	VgaBlankChar
  6138 02D63 1883 C        	MOV	A,@(STYLE_CENTER)
  6139 02D64 101C C        	CALL	VgaChar
  6140 02D65 1847 C        	MOV	A,@(STR_NewCall)
  6141 02D66 114B C        	CALL	VgaString
  6142 02D67 1800 C        	MOV	A,@(0)
  6143 02D68 101C C        	CALL	VgaChar
  6144 02D69 1078 C        	CALL	VgaDrawChar
  6145            C      M 	PAGE	#($)
       02D6A 1E8B     1     PAGE ( $ / 1024 ),
  6146 02D6B 1C00 C        	RETL	@(0)
  6147 02D6C      C        AppNewCall_seize:
  6148 02D6C 0BFF C        	BS	r2_flag,7
  6149 02D6D 0BC9 C        	BS	_P9,7
  6150 02D6E 1801 C        	MOV	A,@(1)
  6151            C      M 	LCALL	LibGetCommand
                      2  M  PAGE #( LIBGETCOMMAND ),
       02D6F 1E81     2     PAGE ( LIBGETCOMMAND / 1024 ),
       02D70 12B6     1     CALL ( LIBGETCOMMAND % 1024 ),
                      2  M  PAGE #( $ ),
       02D71 1E8B     2     PAGE ( $ / 1024 ),
  6152 02D72 0060 C        	MOV	r2_ax,A
  6153            C      M 	PAGE	#(VGA)
       02D73 1E83     1     PAGE ( VGA / 1024 ),
  6154 02D74 10E0 C        	CALL	VgaBlankChar
  6155 02D75 1881 C        	MOV	A,@(STYLE_LEFT)
  6156 02D76 101C C        	CALL	VgaChar
  6157 02D77 184A C        	MOV	A,@(STR_Answered)
  6158 02D78 114B C        	CALL	VgaString
  6159            C        	;ADDA	r2_ax,@(0x48)
  6160            C        	;CALL	VgaChar
  6161 02D79 1800 C        	MOV	A,@(0)
  6162 02D7A 101C C        	CALL	VgaChar
  6163 02D7B 1078 C        	CALL	VgaDrawChar
  6164            C      M 	PAGE	#($)
       02D7C 1E8B     1     PAGE ( $ / 1024 ),
  6165 02D7D 1C00 C        	RETL	@(0)
  6166 02D7E      C        AppNewCall_record:
  6167 02D7E 1848 C        	MOV	A,@(STR_ICM)
  6168 02D7F 1582 C        	JMP	AppNewCall_timer
  6169 02D80      C        AppNewCall_remote:
  6170 02D80 1849 C        	MOV	A,@(STR_Remote)
  6171 02D81 1582 C        	JMP	AppNewCall_timer
  6172 02D82      C        AppNewCall_timer:
  6173 02D82 0060 C        	MOV	r2_ax,A
  6174 02D83 0AFF C        	BS	r2_flag,3			; 计时
  6175            C      M 	PAGE	#(VGA)
       02D84 1E83     1     PAGE ( VGA / 1024 ),
  6176 02D85 10E0 C        	CALL	VgaBlankChar
  6177 02D86 1881 C        	MOV	A,@(STYLE_LEFT)
  6178 02D87 101C C        	CALL	VgaChar
  6179 02D88 0420 C        	MOV	A,r2_ax
  6180 02D89 114B C        	CALL	VgaString
  6181 02D8A 1800 C        	MOV	A,@(0)
  6182 02D8B 101C C        	CALL	VgaChar
  6183 02D8C 1078 C        	CALL	VgaDrawChar
  6184            C        	
  6185            C      M 	PAGE	#(LibInitTimer)
       02D8D 1E81     1     PAGE ( LIBINITTIMER / 1024 ),
  6186 02D8E 11BC C        	CALL	LibInitTimer
  6187 02D8F 11E5 C        	CALL	LibDisplayTimer
  6188            C      M 	PAGE	#($)
       02D90 1E8B     1     PAGE ( $ / 1024 ),
  6189            C        	
  6190 02D91 1C00 C        	RETL	@(0)
  6191            C        
  6192 02D92      C        AppNewCall_exit:				; 来铃超时，退出
  6193            C      M 	JPB	r2_flag,7,AppNewCall_exit_seize
       02D92 0DFF     1     JBC  R2_FLAG , 7 
       02D93 15A0     1     JMP  APPNEWCALL_EXIT_SEIZE ,
  6194 02D94 097F C        	BC	r2_flag,5
  6195            C      M 	BLOCK	3
       02D95 1846     1     MOV A,@((( 3 << 1 )+ VALUE_IOCA ))
       02D96 000A     1     IOW  _IOCA ,
  6196            C      M 	MOV	_RC,@(200)
       02D97 18C8     1     MOV A,@( 200 )
       02D98 004C     1     MOV  _RC ,A
  6197 02D99 00CD C        	CLR	_RD				; 清空来电
  6198 02D9A 0011 C        	DISI
  6199            C      M 	MOV	r2_tmr_dial1,@(5)		; 等待5秒
       02D9B 1805     1     MOV A,@( 5 )
       02D9C 006B     1     MOV  R2_TMR_DIAL1 ,A
  6200 02D9D 00EA C        	CLR	r2_tmr_dial
  6201 02D9E 0010 C        	ENI
  6202 02D9F 1C00 C        	RETL	@(0)
  6203 02DA0      C        AppNewCall_exit_seize:
  6204 02DA0 09C9 C        	BC	_P9,7
  6205 02DA1 00D8 C        	CLR	program
  6206 02DA2 1C00 C        	RETL	@(0)
  6207 02DA3      C        AppNewCall_answer:				; 应答
  6208 02DA3 1802 C        	MOV	A,@(PRO_AppDialingPhone)	; 转至通话程序。
  6209            C      M 	LCALL	LibPushProgram
                      2  M  PAGE #( LIBPUSHPROGRAM ),
       02DA4 1E81     2     PAGE ( LIBPUSHPROGRAM / 1024 ),
       02DA5 1000     1     CALL ( LIBPUSHPROGRAM % 1024 ),
                      2  M  PAGE #( $ ),
       02DA6 1E8B     2     PAGE ( $ / 1024 ),
  6210 02DA7 1C00 C        	RETL	@(0)
  6211            C        
  6212 02DA8      C        AppNewCall_cid:
  6213 02DA8 1801 C        	MOV	A,@(1)
  6214            C      M 	LCALL	LibGetCommand
                      2  M  PAGE #( LIBGETCOMMAND ),
       02DA9 1E81     2     PAGE ( LIBGETCOMMAND / 1024 ),
       02DAA 12B6     1     CALL ( LIBGETCOMMAND % 1024 ),
                      2  M  PAGE #( $ ),
       02DAB 1E8B     2     PAGE ( $ / 1024 ),
  6215 02DAC 1F00 C        	ADD	A,@(0)
  6216            C      M 	JPNZ	AppNewCall_ret
       02DAD 0E83     1     JBS  _STATUS , Z 
       02DAE 151D     1     JMP  APPNEWCALL_RET ,
  6217 02DAF      C        AppNewCall_callerid:
  6218            C        	
  6219 02DAF 0B3F C        	BS	r2_flag,4
  6220 02DB0 0011 C        	DISI
  6221            C      M 	MOV	r2_tmr_dial1,@(5)		; 等待5秒
       02DB1 1805     1     MOV A,@( 5 )
       02DB2 006B     1     MOV  R2_TMR_DIAL1 ,A
  6222 02DB3 00EA C        	CLR	r2_tmr_dial
  6223 02DB4 0010 C        	ENI
  6224            C        	
  6225            C      M 	BANK	1
       02DB5 0B84     1     BS  _RAM , 6 
       02DB6 09C4     1     BC  _RAM , 7 
  6226            C        	
  6227            C      M 	PAGE	#(VGA)
       02DB7 1E83     1     PAGE ( VGA / 1024 ),
  6228 02DB8 10DE C        	CALL	VgaBlankNum2
  6229 02DB9 10E0 C        	CALL	VgaBlankChar
  6230            C      M 	PAGE	#($)
       02DBA 1E8B     1     PAGE ( $ / 1024 ),
  6231            C      M 	BLOCK	1
       02DBB 1842     1     MOV A,@((( 1 << 1 )+ VALUE_IOCA ))
       02DBC 000A     1     IOW  _IOCA ,
  6232            C      M 	MOV	_RC,@(8)
       02DBD 1808     1     MOV A,@( 8 )
       02DBE 004C     1     MOV  _RC ,A
  6233            C      M 	MOV	r1_month,_RD
       02DBF 040D     1     MOV A, _RD 
       02DC0 0076     1     MOV  R1_MONTH ,A
  6234 02DC1 054C C        	INC	_RC
  6235            C      M 	MOV	r1_day,_RD
       02DC2 040D     1     MOV A, _RD 
       02DC3 0075     1     MOV  R1_DAY ,A
  6236            C      M 	MOV	r1_century,r1_rtc_century
       02DC4 042D     1     MOV A, R1_RTC_CENTURY 
       02DC5 0078     1     MOV  R1_CENTURY ,A
  6237            C      M 	MOV	r1_year,r1_rtc_year
       02DC6 042C     1     MOV A, R1_RTC_YEAR 
       02DC7 0077     1     MOV  R1_YEAR ,A
  6238            C      M 	LCALL	LibWeekCheck
                      2  M  PAGE #( LIBWEEKCHECK ),
       02DC8 1E81     2     PAGE ( LIBWEEKCHECK / 1024 ),
       02DC9 12DE     1     CALL ( LIBWEEKCHECK % 1024 ),
                      2  M  PAGE #( $ ),
       02DCA 1E8B     2     PAGE ( $ / 1024 ),
  6239            C      M 	MOV	r1_rtc_week,r1_week
       02DCB 0434     1     MOV A, R1_WEEK 
       02DCC 0069     1     MOV  R1_RTC_WEEK ,A
  6240            C      M 	MOV	r1_rtc_month,r1_month
       02DCD 0436     1     MOV A, R1_MONTH 
       02DCE 006B     1     MOV  R1_RTC_MONTH ,A
  6241            C      M 	MOV	r1_rtc_day,r1_day
       02DCF 0435     1     MOV A, R1_DAY 
       02DD0 006A     1     MOV  R1_RTC_DAY ,A
  6242 02DD1 054C C        	INC	_RC
  6243            C      M 	MOV	r1_rtc_hour,_RD
       02DD2 040D     1     MOV A, _RD 
       02DD3 0068     1     MOV  R1_RTC_HOUR ,A
  6244 02DD4 054C C        	INC	_RC
  6245            C      M 	MOV	r1_rtc_minute,_RD
       02DD5 040D     1     MOV A, _RD 
       02DD6 0067     1     MOV  R1_RTC_MINUTE ,A
  6246 02DD7 0A6E C        	BS	r1_rtc_flag,1			; 更新时钟显示
  6247            C        	
  6248            C      M 	BANK	2
       02DD8 0984     1     BC  _RAM , 6 
       02DD9 0BC4     1     BS  _RAM , 7 
  6249 02DDA 09F6 C        	BC	r2_stamp3,7
  6250            C      M 	BLOCK	1
       02DDB 1842     1     MOV A,@((( 1 << 1 )+ VALUE_IOCA ))
       02DDC 000A     1     IOW  _IOCA ,
  6251            C      M 	MOV	_RC,@(8+4+33+17+1)
       02DDD 183F     1     MOV A,@((((( 8 + 4 )+ 33 )+ 17 )+ 1 ))
       02DDE 004C     1     MOV  _RC ,A
  6252 02DDF 040D C        	MOV	A,_RD
  6253            C      M 	JPZ	$+2
       02DE0 0C83     1     JBC  _STATUS , Z 
       02DE1 15E3     1     JMP ( $ + 2 ),
  6254 02DE2 0BF6 C        	BS	r2_stamp3,7
  6255 02DE3 0A34 C        	BS	r2_stamp1,0
  6256 02DE4 0BDD C        	BS	sys_flag,STAMP
  6257            C        	
  6258 02DE5 1820 C        	MOV	A,@(0x20)
  6259            C      M 	LJMP	DisplayCallerPackage
                      2  M  PAGE #( DISPLAYCALLERPACKAGE ),
       02DE6 1E8B     2     PAGE ( DISPLAYCALLERPACKAGE / 1024 ),
       02DE7 15ED     1     JMP ( DISPLAYCALLERPACKAGE % 1024 ),
  6260            C        
  6261            C        /*
  6262            C        	INC	_RC
  6263            C        	MOV	A,_RD
  6264            C        	JPZ	AppNewCall_callerid_wrong	; 没有号码，错误的信息
  6265            C        	SUBA	_RD,@(112)			; "P"
  6266            C        	JPZ	AppNewCall_callerid_private
  6267            C        
  6268            C        AppNewCall_copy_cid:				; 首先将号码拷贝至来电区
  6269            C        	CLR	cnt
  6270            C        AppNewCall_copy_cid_loop:
  6271            C        	BLOCK	1
  6272            C        	ADDA	cnt,@(13)
  6273            C        	MOV	_RC,A
  6274            C        	MOV	A,_RD
  6275            C        	JPZ	AppNewCall_copy_cid_end
  6276            C        	MOV	ax,A
  6277            C        	BLOCK	3
  6278            C        	ADDA	cnt,@(201)
  6279            C        	MOV	_RC,A
  6280            C        	MOV	_RD,ax
  6281            C        	INC	cnt
  6282            C        	SUBA	cnt,@(32)
  6283            C        	JPNC	AppNewCall_copy_cid_loop
  6284            C        AppNewCall_copy_cid_end:
  6285            C        	BLOCK	3
  6286            C        	MOV	_RC,@(200)
  6287            C        	MOV	_RD,cnt
  6288            C        
  6289            C        AppNewCall_number:
  6290            C        	MOV	A,_RD
  6291            C        	JPZ	AppNewCall_name
  6292            C        	MOV	r1_ax,A
  6293            C        	
  6294            C        	CLR	r1_cnt
  6295            C        	MOV	A,@(STYLE_RIGHT)
  6296            C        	LCALL	VgaNum2
  6297            C        AppNewCall_number_loop:
  6298            C        	BLOCK	3
  6299            C        	ADDA	r1_cnt,@(201)
  6300            C        	MOV	_RC,A
  6301            C        	MOV	A,_RD
  6302            C        	JPZ	AppNewCall_number_end
  6303            C        	LCALL	VgaNum2
  6304            C        	INC	r1_cnt
  6305            C        	SUBA	r1_cnt,@(16)
  6306            C        	JPC	AppNewCall_number_end
  6307            C        	SUBA	r1_cnt,r1_ax
  6308            C        	JPNC	AppNewCall_number_loop
  6309            C        AppNewCall_number_end:
  6310            C        	PAGE	#(VGA)
  6311            C        	MOV	A,@(0)
  6312            C        	CALL	VgaNum2
  6313            C        	CALL	VgaDrawNum2
  6314            C        	PAGE	#($)
  6315            C        
  6316            C        
  6317            C        AppNewCall_name:				; 收到人名，直接显示
  6318            C        	BLOCK	1
  6319            C        	MOV	_RC,@(8+4+33)
  6320            C        	MOV	A,_RD
  6321            C        	JPZ	AppNewCall_name_noname
  6322            C        	SUBA	_RD,@(112)
  6323            C        	JPZ	AppNewCall_callerid_private
  6324            C        	
  6325            C        	CLR	r1_cnt
  6326            C        	MOV	A,@(STYLE_LEFT)
  6327            C        	LCALL	VgaChar
  6328            C        AppNewCall_name_loop:
  6329            C        	BLOCK	1
  6330            C        	ADDA	r1_cnt,@(8+4+33+1)
  6331            C        	MOV	_RC,A
  6332            C        	MOV	A,_RD
  6333            C        	JPZ	AppNewCall_name_end
  6334            C        	LCALL	VgaChar
  6335            C        	INC	r1_cnt
  6336            C        	SUBA	r1_cnt,@(16)
  6337            C        	JPNC	AppNewCall_name_loop
  6338            C        AppNewCall_name_end:
  6339            C        	PAGE	#(VGA)
  6340            C        	MOV	A,@(0)
  6341            C        	CALL	VgaChar
  6342            C        	CALL	VgaDrawChar
  6343            C        	PAGE	#($)
  6344            C        AppNewCall_name_noname:
  6345            C        	BANK	2
  6346            C        	BC	r2_stamp3,7
  6347            C        	BLOCK	1
  6348            C        	MOV	_RC,@(8+4+33+17+1)
  6349            C        	MOV	A,_RD
  6350            C        	JPZ	$+2
  6351            C        	BS	r2_stamp3,7
  6352            C        	BS	r2_stamp1,0
  6353            C        	BS	sys_flag,STAMP
  6354            C        	
  6355            C        
  6356            C        	RETL	@(0)
  6357            C        
  6358            C        AppNewCall_callerid_wrong:
  6359            C        	MOV	A,@(STR_WrongMessage)
  6360            C        	JMP	$+2
  6361            C        AppNewCall_callerid_private:
  6362            C        	MOV	A,@(STR_Private)
  6363            C        	MOV	r1_ax,A
  6364            C        	PAGE	#(VGA)
  6365            C        	MOV	A,@(STYLE_LEFT)
  6366            C        	CALL	VgaChar
  6367            C        	MOV	A,r1_ax
  6368            C        	CALL	VgaString
  6369            C        	MOV	A,@(0)
  6370            C        	CALL	VgaChar
  6371            C        	CALL	VgaDrawChar
  6372            C        	PAGE	#($)
  6373            C        	RETL	@(0)
  6374            C        */
  6375            C        
  6376            C        	
  6377            C        
  6378            C        
  6379            C        
  6380 02DE8      C        AppNone:
  6381 02DE8 1807 C        	MOV	A,@(PRO_AppNoContent)
  6382            C      M 	LCALL	LibPushProgram
                      2  M  PAGE #( LIBPUSHPROGRAM ),
       02DE9 1E81     2     PAGE ( LIBPUSHPROGRAM / 1024 ),
       02DEA 1000     1     CALL ( LIBPUSHPROGRAM % 1024 ),
                      2  M  PAGE #( $ ),
       02DEB 1E8B     2     PAGE ( $ / 1024 ),
  6383 02DEC 1C01 C        	RETL	@(1)
  6384            C        	
  6385            C        	
  6386            C        
  6387            C        
  6388            C        
  6389            C        
  6390            C        
  6391            C        
  6392            C        
   207                     INCLUDE	"temp.asm"
     1            C        /*************************************************
     2            C        CallerPackage:
     3            C        0~3	timer
     4            C        4	number info
     5            C        5~36	32 bytes ASCII number
     6            C        37	name info
     7            C        38~53	16 bytes ASCII name
     8            C        54	music id
     9            C        55	RPT counter
    10            C        56	caller flag
    11            C        ; ------------------
    12            C        acc	display flag
    13            C        	.7	=0/1 disble/enable display timer
    14            C        	.6	=0/1 left/right 16bytes display
    15            C        	.5	=0/1 disble/enable display name
    16            C        *************************************************/
    17       0001 C        BLOCK_CallerPackage	==	1
    18       0008 C        ADDR_CallerPackage	==	8
    19            C        
    20 02DED      C        DisplayCallerPackage:
    21 02DED 0061 C        	MOV	r_exa,A
    22            C        
    23 02DEE      C        DisplayCallerPackage_timer:
    24            C      M 	JPNB	r_exa,7,DisplayCallerPackage_number
       02DEE 0FE1     1     JBS  R_EXA , 7 
       02DEF 1611     1     JMP  DISPLAYCALLERPACKAGE_NUMBER ,
    25 02DF0 1881 C        	MOV	A,@(STYLE_LEFT)
    26            C      M 	LCALL	VgaNum1
                      2  M  PAGE #( VGANUM1 ),
       02DF1 1E83     2     PAGE ( VGANUM1 / 1024 ),
       02DF2 1010     1     CALL ( VGANUM1 % 1024 ),
                      2  M  PAGE #( $ ),
       02DF3 1E8B     2     PAGE ( $ / 1024 ),
    27 02DF4 00E2 C        	CLR	r_cnt
    28 02DF5      C        DisplayCallerPackage_timer_loop:
    29            C      M 	BLOCK	BLOCK_CallerPackage
       02DF5 1842     1     MOV A,@((( BLOCK_CALLERPACKAGE << 1 )+ VALUE_IOCA ))
       02DF6 000A     1     IOW  _IOCA ,
    30            C      M 	ADDA	r_cnt,@(ADDR_CallerPackage+0)
       02DF7 1808     1     MOV A,@(( ADDR_CALLERPACKAGE + 0 ))
       02DF8 03A2     1     ADD A, R_CNT 
    31 02DF9 004C C        	MOV	_RC,A
    32            C      M 	MOV	ax,_RD
       02DFA 040D     1     MOV A, _RD 
       02DFB 0053     1     MOV  AX ,A
    33            C      M 	PAGE	#(LibMathHexToBcd)
       02DFC 1E81     1     PAGE ( LIBMATHHEXTOBCD / 1024 ),
    34 02DFD 1037 C        	CALL	LibMathHexToBcd
    35 02DFE 0060 C        	MOV	r_ax,A
    36 02DFF 0720 C        	SWAPA	r_ax
    37 02E00 1A0F C        	AND	A,@(0x0f)
    38 02E01 1F30 C        	ADD	A,@(48)
    39 02E02 1010 C        	CALL	VgaNum1
    40            C      M 	ANDA	r_ax,@(0x0f)
       02E03 180F     1     MOV A,@( 15 )
       02E04 02A0     1     AND A, R_AX 
    41 02E05 1F30 C        	ADD	A,@(48)
    42 02E06 1010 C        	CALL	VgaNum1
    43            C      M 	PAGE	#($)
       02E07 1E8B     1     PAGE ( $ / 1024 ),
    44 02E08 0562 C        	INC	r_cnt
    45            C      M 	SUBA	r_cnt,@(4)
       02E09 1804     1     MOV A,@( 4 )
       02E0A 0122     1     SUB A, R_CNT 
    46            C      M 	JPNC	DisplayCallerPackage_timer_loop
       02E0B 0E03     1     JBS  _STATUS , C 
       02E0C 15F5     1     JMP  DISPLAYCALLERPACKAGE_TIMER_LOOP ,
    47            C      M 	PAGE	#(VGA)
       02E0D 1E83     1     PAGE ( VGA / 1024 ),
    48 02E0E 1800 C        	MOV	A,@(0)
    49 02E0F 1010 C        	CALL	VgaNum1
    50 02E10 1074 C        	CALL	VgaDrawNum1
    51            C        
    52 02E11      C        DisplayCallerPackage_number:
    53            C      M 	PAGE	#(VGA)
       02E11 1E83     1     PAGE ( VGA / 1024 ),
    54 02E12 10DE C        	CALL	VgaBlankNum2
    55            C      M 	PAGE	#($)
       02E13 1E8B     1     PAGE ( $ / 1024 ),
    56            C        	
    57            C      M 	BLOCK	BLOCK_CallerPackage
       02E14 1842     1     MOV A,@((( BLOCK_CALLERPACKAGE << 1 )+ VALUE_IOCA ))
       02E15 000A     1     IOW  _IOCA ,
    58            C      M 	MOV	_RC,@(ADDR_CallerPackage+4)
       02E16 180C     1     MOV A,@(( ADDR_CALLERPACKAGE + 4 ))
       02E17 004C     1     MOV  _RC ,A
    59 02E18 040D C        	MOV	A,_RD
    60            C      M 	JPZ	DisplayCallerPackage_wrong	; 0
       02E19 0C83     1     JBC  _STATUS , Z 
       02E1A 168C     1     JMP  DISPLAYCALLERPACKAGE_WRONG ,
    61 02E1B 0063 C        	MOV	r_bx,A
    62 02E1C 1D20 C        	SUB	A,@(32)
    63            C      M 	JPNC	DisplayCallerPackage_invalid
       02E1D 0E03     1     JBS  _STATUS , C 
       02E1E 167A     1     JMP  DISPLAYCALLERPACKAGE_INVALID ,
    64 02E1F 0423 C        	MOV	A,r_bx
    65 02E20 1D10 C        	SUB	A,@(16)
    66            C      M 	JPC	DisplayCallerPackage_number_left
       02E21 0C03     1     JBC  _STATUS , C 
       02E22 1625     1     JMP  DISPLAYCALLERPACKAGE_NUMBER_LEFT ,
    67            C      M 	JPB	r_exa,6,DisplayCallerPackage_number_right
       02E23 0DA1     1     JBC  R_EXA , 6 
       02E24 162B     1     JMP  DISPLAYCALLERPACKAGE_NUMBER_RIGH ,
    68 02E25      C        DisplayCallerPackage_number_left:
    69 02E25 1882 C        	MOV	A,@(STYLE_RIGHT)
    70            C      M 	LCALL	VgaNum2
                      2  M  PAGE #( VGANUM2 ),
       02E26 1E83     2     PAGE ( VGANUM2 / 1024 ),
       02E27 1016     1     CALL ( VGANUM2 % 1024 ),
                      2  M  PAGE #( $ ),
       02E28 1E8B     2     PAGE ( $ / 1024 ),
    71 02E29 180D C        	MOV	A,@(ADDR_CallerPackage+5)
    72 02E2A 1632 C        	JMP	DisplayCallerPackage_number_1
    73 02E2B      C        DisplayCallerPackage_number_right:
    74 02E2B 1881 C        	MOV	A,@(STYLE_LEFT)
    75            C      M 	LCALL	VgaNum2
                      2  M  PAGE #( VGANUM2 ),
       02E2C 1E83     2     PAGE ( VGANUM2 / 1024 ),
       02E2D 1016     1     CALL ( VGANUM2 % 1024 ),
                      2  M  PAGE #( $ ),
       02E2E 1E8B     2     PAGE ( $ / 1024 ),
    76            C      M 	SUB	r_bx,@(16)
       02E2F 1810     1     MOV A,@( 16 )
       02E30 0163     1     SUB  R_BX ,A
    77 02E31 181D C        	MOV	A,@(ADDR_CallerPackage+5+16)
    78 02E32      C        DisplayCallerPackage_number_1:
    79 02E32 0064 C        	MOV	r_exb,A
    80 02E33 00E2 C        	CLR	r_cnt
    81 02E34      C        DisplayCallerPackage_number_loop:
    82            C      M 	BLOCK	BLOCK_CallerPackage
       02E34 1842     1     MOV A,@((( BLOCK_CALLERPACKAGE << 1 )+ VALUE_IOCA ))
       02E35 000A     1     IOW  _IOCA ,
    83            C      M 	ADDA	r_cnt,r_exb
       02E36 0424     1     MOV A, R_EXB 
       02E37 03A2     1     ADD A, R_CNT 
    84 02E38 004C C        	MOV	_RC,A
    85 02E39 040D C        	MOV	A,_RD
    86            C      M 	JPZ	DisplayCallerPackage_number_end
       02E3A 0C83     1     JBC  _STATUS , Z 
       02E3B 1648     1     JMP  DISPLAYCALLERPACKAGE_NUMBER_END ,
    87            C      M 	LCALL	VgaNum2
                      2  M  PAGE #( VGANUM2 ),
       02E3C 1E83     2     PAGE ( VGANUM2 / 1024 ),
       02E3D 1016     1     CALL ( VGANUM2 % 1024 ),
                      2  M  PAGE #( $ ),
       02E3E 1E8B     2     PAGE ( $ / 1024 ),
    88 02E3F 0562 C        	INC	r_cnt
    89            C      M 	SUBA	r_cnt,r_bx
       02E40 0423     1     MOV A, R_BX 
       02E41 0122     1     SUB A, R_CNT 
    90            C      M 	JPC	DisplayCallerPackage_number_end
       02E42 0C03     1     JBC  _STATUS , C 
       02E43 1648     1     JMP  DISPLAYCALLERPACKAGE_NUMBER_END ,
    91            C      M 	SUBA	r_cnt,@(16)
       02E44 1810     1     MOV A,@( 16 )
       02E45 0122     1     SUB A, R_CNT 
    92            C      M 	JPNC	DisplayCallerPackage_number_loop
       02E46 0E03     1     JBS  _STATUS , C 
       02E47 1634     1     JMP  DISPLAYCALLERPACKAGE_NUMBER_LOOP ,
    93 02E48      C        DisplayCallerPackage_number_end:
    94            C      M 	PAGE	#(VGA)
       02E48 1E83     1     PAGE ( VGA / 1024 ),
    95 02E49 1800 C        	MOV	A,@(0)
    96 02E4A 1016 C        	CALL	VgaNum2
    97 02E4B 1076 C        	CALL	VgaDrawNum2
    98            C      M 	PAGE	#($)
       02E4C 1E8B     1     PAGE ( $ / 1024 ),
    99            C        
   100 02E4D      C        DisplayCallerPackage_name:
   101            C      M 	JPNB	r_exa,5,DisplayCallerPackage_ret
       02E4D 0F61     1     JBS  R_EXA , 5 
       02E4E 1679     1     JMP  DISPLAYCALLERPACKAGE_RET ,
   102            C      M 	BLOCK	BLOCK_CallerPackage
       02E4F 1842     1     MOV A,@((( BLOCK_CALLERPACKAGE << 1 )+ VALUE_IOCA ))
       02E50 000A     1     IOW  _IOCA ,
   103            C      M 	MOV	_RC,@(ADDR_CallerPackage+37)
       02E51 182D     1     MOV A,@(( ADDR_CALLERPACKAGE + 37 ))
       02E52 004C     1     MOV  _RC ,A
   104 02E53 040D C        	MOV	A,_RD
   105            C      M 	JPZ	DisplayCallerPackage_ret
       02E54 0C83     1     JBC  _STATUS , Z 
       02E55 1679     1     JMP  DISPLAYCALLERPACKAGE_RET ,
   106 02E56 0063 C        	MOV	r_bx,A
   107 02E57 1D10 C        	SUB	A,@(16)
   108            C      M 	JPNC	DisplayCallerPackage_invalid
       02E58 0E03     1     JBS  _STATUS , C 
       02E59 167A     1     JMP  DISPLAYCALLERPACKAGE_INVALID ,
   109            C      M 	PAGE	#(VGA)
       02E5A 1E83     1     PAGE ( VGA / 1024 ),
   110 02E5B 10E0 C        	CALL	VgaBlankChar
   111 02E5C 1881 C        	MOV	A,@(STYLE_LEFT)
   112 02E5D 101C C        	CALL	VgaChar
   113            C      M 	PAGE	#($)
       02E5E 1E8B     1     PAGE ( $ / 1024 ),
   114 02E5F 00E2 C        	CLR	r_cnt
   115 02E60      C        DisplayCallerPackage_name_loop:
   116            C      M 	BLOCK	BLOCK_CallerPackage
       02E60 1842     1     MOV A,@((( BLOCK_CALLERPACKAGE << 1 )+ VALUE_IOCA ))
       02E61 000A     1     IOW  _IOCA ,
   117            C      M 	ADDA	r_cnt,@(ADDR_CallerPackage+38)
       02E62 182E     1     MOV A,@(( ADDR_CALLERPACKAGE + 38 ))
       02E63 03A2     1     ADD A, R_CNT 
   118 02E64 004C C        	MOV	_RC,A
   119 02E65 040D C        	MOV	A,_RD
   120            C      M 	JPZ	DisplayCallerPackage_name_end
       02E66 0C83     1     JBC  _STATUS , Z 
       02E67 1674     1     JMP  DISPLAYCALLERPACKAGE_NAME_END ,
   121            C      M 	LCALL	VgaChar
                      2  M  PAGE #( VGACHAR ),
       02E68 1E83     2     PAGE ( VGACHAR / 1024 ),
       02E69 101C     1     CALL ( VGACHAR % 1024 ),
                      2  M  PAGE #( $ ),
       02E6A 1E8B     2     PAGE ( $ / 1024 ),
   122 02E6B 0562 C        	INC	r_cnt
   123            C      M 	SUBA	r_cnt,r_bx
       02E6C 0423     1     MOV A, R_BX 
       02E6D 0122     1     SUB A, R_CNT 
   124            C      M 	JPC	DisplayCallerPackage_name_end
       02E6E 0C03     1     JBC  _STATUS , C 
       02E6F 1674     1     JMP  DISPLAYCALLERPACKAGE_NAME_END ,
   125            C      M 	SUBA	r_cnt,@(16)
       02E70 1810     1     MOV A,@( 16 )
       02E71 0122     1     SUB A, R_CNT 
   126            C      M 	JPNC	DisplayCallerPackage_name_loop
       02E72 0E03     1     JBS  _STATUS , C 
       02E73 1660     1     JMP  DISPLAYCALLERPACKAGE_NAME_LOOP ,
   127 02E74      C        DisplayCallerPackage_name_end:
   128            C      M 	PAGE	#(VGA)
       02E74 1E83     1     PAGE ( VGA / 1024 ),
   129 02E75 1800 C        	MOV	A,@(0)
   130 02E76 101C C        	CALL	VgaChar
   131 02E77 1078 C        	CALL	VgaDrawChar
   132            C      M 	PAGE	#($)
       02E78 1E8B     1     PAGE ( $ / 1024 ),
   133 02E79      C        DisplayCallerPackage_ret:
   134 02E79 1C00 C        	RETL	@(0)
   135            C        
   136 02E7A      C        DisplayCallerPackage_invalid:
   137            C      M 	JPNB	r_exa,5,DisplayCallerPackage_ret
       02E7A 0F61     1     JBS  R_EXA , 5 
       02E7B 1679     1     JMP  DISPLAYCALLERPACKAGE_RET ,
   138            C      M 	SUBA	r_bx,@(79)
       02E7C 184F     1     MOV A,@( 79 )
       02E7D 0123     1     SUB A, R_BX 
   139            C      M 	JPZ	DisplayCallerPackage_unavallable
       02E7E 0C83     1     JBC  _STATUS , Z 
       02E7F 1690     1     JMP  DISPLAYCALLERPACKAGE_UNAVALLABLE ,
   140            C      M 	SUBA	r_bx,@(111)
       02E80 186F     1     MOV A,@( 111 )
       02E81 0123     1     SUB A, R_BX 
   141            C      M 	JPZ	DisplayCallerPackage_unavallable
       02E82 0C83     1     JBC  _STATUS , Z 
       02E83 1690     1     JMP  DISPLAYCALLERPACKAGE_UNAVALLABLE ,
   142            C      M 	SUBA	r_bx,@(80)			; "P"
       02E84 1850     1     MOV A,@( 80 )
       02E85 0123     1     SUB A, R_BX 
   143            C      M 	JPZ	DisplayCallerPackage_private
       02E86 0C83     1     JBC  _STATUS , Z 
       02E87 168E     1     JMP  DISPLAYCALLERPACKAGE_PRIVATE ,
   144            C      M 	SUBA	r_bx,@(112)			; "p"
       02E88 1870     1     MOV A,@( 112 )
       02E89 0123     1     SUB A, R_BX 
   145            C      M 	JPZ	DisplayCallerPackage_private	; >32
       02E8A 0C83     1     JBC  _STATUS , Z 
       02E8B 168E     1     JMP  DISPLAYCALLERPACKAGE_PRIVATE ,
   146 02E8C      C        DisplayCallerPackage_wrong:
   147 02E8C 1851 C        	MOV	A,@(STR_WrongMessage)
   148 02E8D 1691 C        	JMP	DisplayCallerPackage_invalid_1
   149 02E8E      C        DisplayCallerPackage_private:
   150 02E8E 1850 C        	MOV	A,@(STR_Private)
   151 02E8F 1691 C        	JMP	DisplayCallerPackage_invalid_1
   152 02E90      C        DisplayCallerPackage_unavallable:
   153 02E90 1852 C        	MOV	A,@(STR_Unavallable)
   154 02E91      C        DisplayCallerPackage_invalid_1:
   155 02E91 0063 C        	MOV	r_bx,A
   156            C      M 	PAGE	#(VGA)
       02E92 1E83     1     PAGE ( VGA / 1024 ),
   157 02E93 10E0 C        	CALL	VgaBlankChar
   158 02E94 1881 C        	MOV	A,@(STYLE_LEFT)
   159 02E95 101C C        	CALL	VgaChar
   160 02E96 0423 C        	MOV	A,r_bx
   161 02E97 114B C        	CALL	VgaString
   162 02E98 1800 C        	MOV	A,@(0)
   163 02E99 101C C        	CALL	VgaChar
   164 02E9A 1078 C        	CALL	VgaDrawChar
   165            C      M 	PAGE	#($)
       02E9B 1E8B     1     PAGE ( $ / 1024 ),
   166 02E9C 1C00 C        	RETL	@(0)
   167            C        	
   168            C        	
   169            C        	
   170            C        
   171            C        
   172            C        
   208                     INCLUDE	"table.asm"
     1            C        
     2            C        ORG	0x3000
     3            C        
     4 03000      C        TabLed:
     5            C      M 	JPZ	TabAscii_ret
       03000 0C83     1     JBC  _STATUS , Z 
       03001 1422     1     JMP  TABASCII_RET ,
     6 03002 1F80 C        	ADD	A,@(0x100-128)
     7            C      M 	JPC	TabLed_invalid
       03003 0C03     1     JBC  _STATUS , C 
       03004 1407     1     JMP  TABLED_INVALID ,
     8 03005 1F7F C        	ADD	A,@(127)
     9 03006 1423 C        	JMP	TabAsciiLed
    10 03007      C        TabLed_invalid:
    11 03007 1800 C        	MOV	A,@(0)
    12 03008 1422 C        	JMP	TabAscii_ret
    13            C        
    14 03009      C        TabChar1:
    15            C      M 	JPZ	TabAscii_ret
       03009 0C83     1     JBC  _STATUS , Z 
       0300A 1422     1     JMP  TABASCII_RET ,
    16 0300B 1FFF C        	ADD	A,@(0x100-1)
    17            C      M 	LJMP	TabAsciiChar1
                      2  M  PAGE #( TABASCIICHAR1 ),
       0300C 1E8C     2     PAGE ( TABASCIICHAR1 / 1024 ),
       0300D 1500     1     JMP ( TABASCIICHAR1 % 1024 ),
    18 0300E      C        TabChar2:
    19            C      M 	JPZ	TabAscii_ret
       0300E 0C83     1     JBC  _STATUS , Z 
       0300F 1422     1     JMP  TABASCII_RET ,
    20 03010 1FFF C        	ADD	A,@(0x100-1)
    21            C      M 	LJMP	TabAsciiChar2
                      2  M  PAGE #( TABASCIICHAR2 ),
       03011 1E8C     2     PAGE ( TABASCIICHAR2 / 1024 ),
       03012 1600     1     JMP ( TABASCIICHAR2 % 1024 ),
    22 03013      C        TabChar3:
    23            C      M 	JPZ	TabAscii_ret
       03013 0C83     1     JBC  _STATUS , Z 
       03014 1422     1     JMP  TABASCII_RET ,
    24 03015 1FFF C        	ADD	A,@(0x100-1)
    25            C      M 	LJMP	TabAsciiChar3
                      2  M  PAGE #( TABASCIICHAR3 ),
       03016 1E8C     2     PAGE ( TABASCIICHAR3 / 1024 ),
       03017 1700     1     JMP ( TABASCIICHAR3 % 1024 ),
    26 03018      C        TabChar4:
    27            C      M 	JPZ	TabAscii_ret
       03018 0C83     1     JBC  _STATUS , Z 
       03019 1422     1     JMP  TABASCII_RET ,
    28 0301A 1FFF C        	ADD	A,@(0x100-1)
    29            C      M 	LJMP	TabAsciiChar4
                      2  M  PAGE #( TABASCIICHAR4 ),
       0301B 1E8D     2     PAGE ( TABASCIICHAR4 / 1024 ),
       0301C 1400     1     JMP ( TABASCIICHAR4 % 1024 ),
    30 0301D      C        TabChar5:
    31            C      M 	JPZ	TabAscii_ret
       0301D 0C83     1     JBC  _STATUS , Z 
       0301E 1422     1     JMP  TABASCII_RET ,
    32 0301F 1FFF C        	ADD	A,@(0x100-1)
    33            C      M 	LJMP	TabAsciiChar5
                      2  M  PAGE #( TABASCIICHAR5 ),
       03020 1E8D     2     PAGE ( TABASCIICHAR5 / 1024 ),
       03021 1500     1     JMP ( TABASCIICHAR5 % 1024 ),
    34            C        
    35 03022      C        TabAscii_ret:
    36 03022 0012 C        	RET
    37            C        
    38            C        
    39 03023      C        TabAsciiLed:		; 0gfedcba
    40 03023 0020 C        	TBL
    41 03024 1C00 C        	RETL	@00000000b			; 001
    42 03025 1C00 C        	RETL	@00000000b			; 002
    43 03026 1C00 C        	RETL	@00000000b			; 003
    44 03027 1C00 C        	RETL	@00000000b			; 004
    45 03028 1C00 C        	RETL	@00000000b			; 005
    46 03029 1C00 C        	RETL	@00000000b			; 006
    47 0302A 1C00 C        	RETL	@00000000b			; 007
    48 0302B 1C00 C        	RETL	@00000000b			; 008
    49 0302C 1C00 C        	RETL	@00000000b			; 009
    50 0302D 1C00 C        	RETL	@00000000b			; 010
    51 0302E 1C00 C        	RETL	@00000000b			; 011
    52 0302F 1C00 C        	RETL	@00000000b			; 012
    53 03030 1C00 C        	RETL	@00000000b			; 013
    54 03031 1C00 C        	RETL	@00000000b			; 014
    55 03032 1C00 C        	RETL	@00000000b			; 015
    56 03033 1C00 C        	RETL	@00000000b			; 016
    57 03034 1C00 C        	RETL	@00000000b			; 017
    58 03035 1C00 C        	RETL	@00000000b			; 018
    59 03036 1C00 C        	RETL	@00000000b			; 019
    60 03037 1C00 C        	RETL	@00000000b			; 020
    61 03038 1C00 C        	RETL	@00000000b			; 021
    62 03039 1C00 C        	RETL	@00000000b			; 022
    63 0303A 1C00 C        	RETL	@00000000b			; 023
    64 0303B 1C00 C        	RETL	@00000000b			; 024
    65 0303C 1C00 C        	RETL	@00000000b			; 025
    66 0303D 1C00 C        	RETL	@00000000b			; 026
    67 0303E 1C00 C        	RETL	@00000000b			; 027
    68 0303F 1C00 C        	RETL	@00000000b			; 028
    69 03040 1C00 C        	RETL	@00000000b			; 029
    70 03041 1C00 C        	RETL	@00000000b			; 030
    71 03042 1C00 C        	RETL	@00000000b			; 031
    72 03043 1C00 C        	RETL	@00000000b			; 032 
    73 03044 1C00 C        	RETL	@00000000b			; 033 !
    74 03045 1C00 C        	RETL	@00000000b			; 034 "
    75 03046 1C7E C        	RETL	@01111110b			; 035 #
    76 03047 1C00 C        	RETL	@00000000b			; 036 $
    77 03048 1C00 C        	RETL	@00000000b			; 037 %
    78 03049 1C00 C        	RETL	@00000000b			; 038 &
    79 0304A 1C00 C        	RETL	@00000000b			; 039 '
    80 0304B 1C00 C        	RETL	@00000000b			; 040 (
    81 0304C 1C00 C        	RETL	@00000000b			; 041 )
    82 0304D 1C70 C        	RETL	@01110000b			; 042 *
    83 0304E 1C00 C        	RETL	@00000000b			; 043 +
    84 0304F 1C00 C        	RETL	@00000000b			; 044 ,
    85 03050 1C40 C        	RETL	@01000000b			; 045 -
    86 03051 1C00 C        	RETL	@00000000b			; 046 .
    87 03052 1C00 C        	RETL	@00000000b			; 047 /
    88 03053 1C3F C        	RETL	@00111111b			; 048 0
    89 03054 1C06 C        	RETL	@00000110b			; 049 1
    90 03055 1C5B C        	RETL	@01011011b			; 050 2
    91 03056 1C4F C        	RETL	@01001111b			; 051 3
    92 03057 1C66 C        	RETL	@01100110b			; 052 4
    93 03058 1C6D C        	RETL	@01101101b			; 053 5
    94 03059 1C7D C        	RETL	@01111101b			; 054 6
    95 0305A 1C07 C        	RETL	@00000111b			; 055 7
    96 0305B 1C7F C        	RETL	@01111111b			; 056 8
    97 0305C 1C6F C        	RETL	@01101111b			; 057 9
    98 0305D 1C00 C        	RETL	@00000000b			; 058 :
    99 0305E 1C00 C        	RETL	@00000000b			; 059 ;
   100 0305F 1C00 C        	RETL	@00000000b			; 060 <
   101 03060 1C00 C        	RETL	@00000000b			; 061 =
   102 03061 1C00 C        	RETL	@00000000b			; 062 >
   103 03062 1C00 C        	RETL	@00000000b			; 063 ?
   104 03063 1C00 C        	RETL	@00000000b			; 064 @
   105 03064 1C77 C        	RETL	@01110111b			; 065 A
   106 03065 1C7C C        	RETL	@01111100b			; 066 B
   107 03066 1C39 C        	RETL	@00111001b			; 067 C
   108 03067 1C5E C        	RETL	@01011110b			; 068 D
   109 03068 1C79 C        	RETL	@01111001b			; 069 E
   110 03069 1C71 C        	RETL	@01110001b			; 070 F
   111 0306A 1C00 C        	RETL	@00000000b			; 071 G
   112 0306B 1C76 C        	RETL	@01110110b			; 072 H
   113 0306C 1C00 C        	RETL	@00000000b			; 073 I
   114 0306D 1C00 C        	RETL	@00000000b			; 074 J
   115 0306E 1C00 C        	RETL	@00000000b			; 075 K
   116 0306F 1C38 C        	RETL	@00111000b			; 076 L
   117 03070 1C00 C        	RETL	@00000000b			; 077 M
   118 03071 1C54 C        	RETL	@01010100b			; 078 N
   119 03072 1C5C C        	RETL	@01011100b			; 079 O
   120 03073 1C73 C        	RETL	@01110011b			; 080 P
   121 03074 1C67 C        	RETL	@01100111b			; 081 Q
   122 03075 1C50 C        	RETL	@01010000b			; 082 R
   123 03076 1C6D C        	RETL	@01101101b			; 083 S
   124 03077 1C78 C        	RETL	@01111000b			; 084 T
   125 03078 1C3E C        	RETL	@00111110b			; 085 U
   126 03079 1C00 C        	RETL	@00000000b			; 086 V
   127 0307A 1C00 C        	RETL	@00000000b			; 087 W
   128 0307B 1C00 C        	RETL	@00000000b			; 088 X
   129 0307C 1C00 C        	RETL	@00000000b			; 089 Y
   130 0307D 1C00 C        	RETL	@00000000b			; 090 Z
   131 0307E 1C00 C        	RETL	@00000000b			; 091 [
   132 0307F 1C00 C        	RETL	@00000000b			; 092 \
   133 03080 1C00 C        	RETL	@00000000b			; 093 ]
   134 03081 1C00 C        	RETL	@00000000b			; 094 ^
   135 03082 1C00 C        	RETL	@00000000b			; 095 _
   136 03083 1C00 C        	RETL	@00000000b			; 096 `
   137 03084 1C77 C        	RETL	@01110111b			; 097 a
   138 03085 1C7C C        	RETL	@01111100b			; 098 b
   139 03086 1C58 C        	RETL	@01011000b			; 099 c
   140 03087 1C5E C        	RETL	@01011110b			; 100 d
   141 03088 1C79 C        	RETL	@01111001b			; 101 e
   142 03089 1C71 C        	RETL	@01110001b			; 102 f
   143 0308A 1C00 C        	RETL	@00000000b			; 103 g
   144 0308B 1C74 C        	RETL	@01110100b			; 104 h
   145 0308C 1C00 C        	RETL	@00000000b			; 105 i
   146 0308D 1C00 C        	RETL	@00000000b			; 106 j
   147 0308E 1C00 C        	RETL	@00000000b			; 107 k
   148 0308F 1C00 C        	RETL	@00000000b			; 108 l
   149 03090 1C00 C        	RETL	@00000000b			; 109 m
   150 03091 1C54 C        	RETL	@01010100b			; 110 n
   151 03092 1C5C C        	RETL	@01011100b			; 111 o
   152 03093 1C73 C        	RETL	@01110011b			; 112 p
   153 03094 1C67 C        	RETL	@01100111b			; 113 q
   154 03095 1C50 C        	RETL	@01010000b			; 114 r
   155 03096 1C6D C        	RETL	@01101101b			; 115 s
   156 03097 1C78 C        	RETL	@01111000b			; 116 t
   157 03098 1C1C C        	RETL	@00011100b			; 117 u
   158 03099 1C00 C        	RETL	@00000000b			; 118 v
   159 0309A 1C00 C        	RETL	@00000000b			; 119 w
   160 0309B 1C00 C        	RETL	@00000000b			; 120 x
   161 0309C 1C00 C        	RETL	@00000000b			; 121 y
   162 0309D 1C00 C        	RETL	@00000000b			; 122 z
   163 0309E 1C00 C        	RETL	@00000000b			; 123 {
   164 0309F 1C00 C        	RETL	@00000000b			; 124 |
   165 030A0 1C00 C        	RETL	@00000000b			; 125 }
   166 030A1 1C00 C        	RETL	@00000000b			; 126 ~
   167 030A2 1C40 C        	RETL	@01000000b			; 127 cursor
   168            C        
   169            C        ORG	0x3100
   170 03100      C        TabAsciiChar1:
   171 03100 0020 C        	TBL
   172 03101 1C04 C        	RETL	@00000100b			; 001
   173 03102 1C1C C        	RETL	@00011100b			; 002
   174 03103 1C1C C        	RETL	@00011100b			; 003
   175 03104 1C08 C        	RETL	@00001000b			; 004
   176 03105 1C0C C        	RETL	@00001100b			; 005
   177 03106 1C0C C        	RETL	@00001100b			; 006
   178 03107 1C01 C        	RETL	@00000001b			; 007
   179 03108 1C03 C        	RETL	@00000011b			; 008
   180 03109 1C07 C        	RETL	@00000111b			; 009
   181 0310A 1C0F C        	RETL	@00001111b			; 010
   182 0310B 1C1F C        	RETL	@00011111b			; 011
   183 0310C 1C3F C        	RETL	@00111111b			; 012
   184 0310D 1C7F C        	RETL	@01111111b			; 013
   185 0310E 1C02 C        	RETL	@00000010b			; 014
   186 0310F 1C2A C        	RETL	@00101010b			; 015
   187 03110 1C00 C        	RETL	@00000000b			; 016
   188 03111 1C00 C        	RETL	@00000000b			; 017
   189 03112 1C00 C        	RETL	@00000000b			; 018
   190 03113 1C00 C        	RETL	@00000000b			; 019
   191 03114 1C10 C        	RETL	@00010000b			; 020
   192 03115 1C04 C        	RETL	@00000100b			; 021
   193 03116 1C10 C        	RETL	@00010000b			; 022
   194 03117 1C08 C        	RETL	@00001000b			; 023
   195 03118 1C00 C        	RETL	@00000000b			; 024
   196 03119 1C00 C        	RETL	@00000000b			; 025
   197 0311A 1C08 C        	RETL	@00001000b			; 026
   198 0311B 1C08 C        	RETL	@00001000b			; 027
   199 0311C 1C0F C        	RETL	@00001111b			; 028
   200 0311D 1C00 C        	RETL	@00000000b			; 029
   201 0311E 1C04 C        	RETL	@00000100b			; 030
   202 0311F 1C10 C        	RETL	@00010000b			; 031
   203 03120 1C00 C        	RETL	@00000000b			;  
   204 03121 1C00 C        	RETL	@00000000b			; !
   205 03122 1C00 C        	RETL	@00000000b			; "
   206 03123 1C14 C        	RETL	@00010100b			; #
   207 03124 1C12 C        	RETL	@00010010b			; $
   208 03125 1C62 C        	RETL	@01100010b			; %
   209 03126 1C36 C        	RETL	@00110110b			; &
   210 03127 1C00 C        	RETL	@00000000b			; '
   211 03128 1C00 C        	RETL	@00000000b			; (
   212 03129 1C00 C        	RETL	@00000000b			; )
   213 0312A 1C14 C        	RETL	@00010100b			; *
   214 0312B 1C08 C        	RETL	@00001000b			; +
   215 0312C 1C00 C        	RETL	@00000000b			; ,
   216 0312D 1C00 C        	RETL	@00000000b			; -
   217 0312E 1C00 C        	RETL	@00000000b			; .
   218 0312F 1C02 C        	RETL	@00000010b			; /
   219 03130 1C3E C        	RETL	@00111110b			; 0
   220 03131 1C00 C        	RETL	@00000000b			; 1
   221 03132 1C21 C        	RETL	@00100001b			; 2
   222 03133 1C42 C        	RETL	@01000010b			; 3
   223 03134 1C0C C        	RETL	@00001100b			; 4
   224 03135 1C72 C        	RETL	@01110010b			; 5
   225 03136 1C1E C        	RETL	@00011110b			; 6
   226 03137 1C40 C        	RETL	@01000000b			; 7
   227 03138 1C36 C        	RETL	@00110110b			; 8
   228 03139 1C30 C        	RETL	@00110000b			; 9
   229 0313A 1C00 C        	RETL	@00000000b			; :
   230 0313B 1C00 C        	RETL	@00000000b			; ;
   231 0313C 1C08 C        	RETL	@00001000b			; <
   232 0313D 1C14 C        	RETL	@00010100b			; =
   233 0313E 1C00 C        	RETL	@00000000b			; >
   234 0313F 1C20 C        	RETL	@00100000b			; ?
   235 03140 1C26 C        	RETL	@00100110b			; @
   236 03141 1C3F C        	RETL	@00111111b			; A
   237 03142 1C7F C        	RETL	@01111111b			; B
   238 03143 1C3E C        	RETL	@00111110b			; C
   239 03144 1C7F C        	RETL	@01111111b			; D
   240 03145 1C7F C        	RETL	@01111111b			; E
   241 03146 1C7F C        	RETL	@01111111b			; F
   242 03147 1C3E C        	RETL	@00111110b			; G
   243 03148 1C7F C        	RETL	@01111111b			; H
   244 03149 1C00 C        	RETL	@00000000b			; I
   245 0314A 1C02 C        	RETL	@00000010b			; J
   246 0314B 1C7F C        	RETL	@01111111b			; K
   247 0314C 1C7F C        	RETL	@01111111b			; L
   248 0314D 1C7F C        	RETL	@01111111b			; M
   249 0314E 1C7F C        	RETL	@01111111b			; N
   250 0314F 1C3E C        	RETL	@00111110b			; O
   251 03150 1C7F C        	RETL	@01111111b			; P
   252 03151 1C3E C        	RETL	@00111110b			; Q
   253 03152 1C7F C        	RETL	@01111111b			; R
   254 03153 1C31 C        	RETL	@00110001b			; S
   255 03154 1C40 C        	RETL	@01000000b			; T
   256 03155 1C7E C        	RETL	@01111110b			; U
   257 03156 1C7C C        	RETL	@01111100b			; V
   258 03157 1C7E C        	RETL	@01111110b			; W
   259 03158 1C63 C        	RETL	@01100011b			; X
   260 03159 1C70 C        	RETL	@01110000b			; Y
   261 0315A 1C43 C        	RETL	@01000011b			; Z
   262 0315B 1C00 C        	RETL	@00000000b			; [
   263 0315C 1C20 C        	RETL	@00100000b			; \
   264 0315D 1C00 C        	RETL	@00000000b			; ]
   265 0315E 1C08 C        	RETL	@00001000b			; ^
   266 0315F 1C01 C        	RETL	@00000001b			; _
   267 03160 1C00 C        	RETL	@00000000b			; `
   268 03161 1C02 C        	RETL	@00000010b			; a
   269 03162 1C7F C        	RETL	@01111111b			; b
   270 03163 1C0E C        	RETL	@00001110b			; c
   271 03164 1C0E C        	RETL	@00001110b			; d
   272 03165 1C0E C        	RETL	@00001110b			; e
   273 03166 1C08 C        	RETL	@00001000b			; f
   274 03167 1C18 C        	RETL	@00011000b			; g
   275 03168 1C7F C        	RETL	@01111111b			; h
   276 03169 1C00 C        	RETL	@00000000b			; i
   277 0316A 1C02 C        	RETL	@00000010b			; j
   278 0316B 1C7F C        	RETL	@01111111b			; k
   279 0316C 1C00 C        	RETL	@00000000b			; l
   280 0316D 1C1F C        	RETL	@00011111b			; m
   281 0316E 1C1F C        	RETL	@00011111b			; n
   282 0316F 1C0E C        	RETL	@00001110b			; o
   283 03170 1C1F C        	RETL	@00011111b			; p
   284 03171 1C08 C        	RETL	@00001000b			; q
   285 03172 1C1F C        	RETL	@00011111b			; r
   286 03173 1C09 C        	RETL	@00001001b			; s
   287 03174 1C10 C        	RETL	@00010000b			; t
   288 03175 1C1E C        	RETL	@00011110b			; u
   289 03176 1C1C C        	RETL	@00011100b			; v
   290 03177 1C1E C        	RETL	@00011110b			; w
   291 03178 1C11 C        	RETL	@00010001b			; x
   292 03179 1C18 C        	RETL	@00011000b			; y
   293 0317A 1C11 C        	RETL	@00010001b			; z
   294 0317B 1C00 C        	RETL	@00000000b			; {
   295 0317C 1C00 C        	RETL	@00000000b			; |
   296 0317D 1C00 C        	RETL	@00000000b			; }
   297 0317E 1C08 C        	RETL	@00001000b			; ~
   298 0317F 1C7F C        	RETL	@01111111b			; cursor
   299 03180 1C14 C        	RETL	@00010100b			; 128
   300 03181 1C3E C        	RETL	@00111110b			; 129
   301 03182 1C00 C        	RETL	@00000000b			; 130
   302 03183 1C00 C        	RETL	@00000000b			; 131
   303 03184 1C00 C        	RETL	@00000000b			; 132
   304 03185 1C04 C        	RETL	@00000100b			; 133
   305 03186 1C00 C        	RETL	@00000000b			; 134
   306 03187 1C00 C        	RETL	@00000000b			; 135
   307 03188 1C00 C        	RETL	@00000000b			; 136
   308 03189 1C44 C        	RETL	@01000100b			; 137
   309 0318A 1C09 C        	RETL	@00001001b			; 138
   310 0318B 1C00 C        	RETL	@00000000b			; 139
   311 0318C 1C3E C        	RETL	@00111110b			; 140
   312 0318D 1C3E C        	RETL	@00111110b			; 141
   313 0318E 1C11 C        	RETL	@00010001b			; 142
   314 0318F 1C7F C        	RETL	@01111111b			; 143
   315 03190 1C3E C        	RETL	@00111110b			; 144
   316 03191 1C00 C        	RETL	@00000000b			; 145
   317 03192 1C00 C        	RETL	@00000000b			; 146
   318 03193 1C30 C        	RETL	@00110000b			; 147
   319 03194 1C50 C        	RETL	@01010000b			; 148
   320 03195 1C00 C        	RETL	@00000000b			; 149
   321 03196 1C00 C        	RETL	@00000000b			; 150
   322 03197 1C08 C        	RETL	@00001000b			; 151
   323 03198 1C00 C        	RETL	@00000000b			; 152
   324 03199 1C10 C        	RETL	@00010000b			; 153
   325 0319A 1C00 C        	RETL	@00000000b			; 154
   326 0319B 1C00 C        	RETL	@00000000b			; 155
   327 0319C 1C0E C        	RETL	@00001110b			; 156
   328 0319D 1C3E C        	RETL	@00111110b			; 157
   329 0319E 1C01 C        	RETL	@00000001b			; 158
   330 0319F 1C10 C        	RETL	@00010000b			; 159
   331 031A0 1C00 C        	RETL	@00000000b			; 160
   332 031A1 1C00 C        	RETL	@00000000b			; 161
   333 031A2 1C0D C        	RETL	@00001101b			; 162
   334 031A3 1C02 C        	RETL	@00000010b			; 163
   335 031A4 1C5D C        	RETL	@01011101b			; 164
   336 031A5 1C4A C        	RETL	@01001010b			; 165
   337 031A6 1C00 C        	RETL	@00000000b			; 166
   338 031A7 1C00 C        	RETL	@00000000b			; 167
   339 031A8 1C00 C        	RETL	@00000000b			; 168
   340 031A9 1C3D C        	RETL	@00111101b			; 169
   341 031AA 1C02 C        	RETL	@00000010b			; 170
   342 031AB 1C08 C        	RETL	@00001000b			; 171
   343 031AC 1C08 C        	RETL	@00001000b			; 172
   344 031AD 1C00 C        	RETL	@00000000b			; 173
   345 031AE 1C7F C        	RETL	@01111111b			; 174
   346 031AF 1C40 C        	RETL	@01000000b			; 175
   347 031B0 1C00 C        	RETL	@00000000b			; 176
   348 031B1 1C09 C        	RETL	@00001001b			; 177
   349 031B2 1C00 C        	RETL	@00000000b			; 178
   350 031B3 1C00 C        	RETL	@00000000b			; 179
   351 031B4 1C00 C        	RETL	@00000000b			; 180
   352 031B5 1C1F C        	RETL	@00011111b			; 181
   353 031B6 1C30 C        	RETL	@00110000b			; 182
   354 031B7 1C00 C        	RETL	@00000000b			; 183
   355 031B8 1C01 C        	RETL	@00000001b			; 184
   356 031B9 1C00 C        	RETL	@00000000b			; 185
   357 031BA 1C00 C        	RETL	@00000000b			; 186
   358 031BB 1C14 C        	RETL	@00010100b			; 187
   359 031BC 1C60 C        	RETL	@01100000b			; 188
   360 031BD 1C60 C        	RETL	@01100000b			; 189
   361 031BE 1C54 C        	RETL	@01010100b			; 190
   362 031BF 1C04 C        	RETL	@00000100b			; 191
   363 031C0 1C0F C        	RETL	@00001111b			; 192
   364 031C1 1C0F C        	RETL	@00001111b			; 193
   365 031C2 1C0F C        	RETL	@00001111b			; 194
   366 031C3 1C2F C        	RETL	@00101111b			; 195
   367 031C4 1C0F C        	RETL	@00001111b			; 196
   368 031C5 1C0F C        	RETL	@00001111b			; 197
   369 031C6 1C07 C        	RETL	@00000111b			; 198
   370 031C7 1C3C C        	RETL	@00111100b			; 199
   371 031C8 1C1F C        	RETL	@00011111b			; 200
   372 031C9 1C1F C        	RETL	@00011111b			; 201
   373 031CA 1C1F C        	RETL	@00011111b			; 202
   374 031CB 1C1F C        	RETL	@00011111b			; 203
   375 031CC 1C00 C        	RETL	@00000000b			; 204
   376 031CD 1C00 C        	RETL	@00000000b			; 205
   377 031CE 1C00 C        	RETL	@00000000b			; 206
   378 031CF 1C00 C        	RETL	@00000000b			; 207
   379 031D0 1C49 C        	RETL	@01001001b			; 208
   380 031D1 1C3F C        	RETL	@00111111b			; 209
   381 031D2 1C0E C        	RETL	@00001110b			; 210
   382 031D3 1C0E C        	RETL	@00001110b			; 211
   383 031D4 1C0E C        	RETL	@00001110b			; 212
   384 031D5 1C2E C        	RETL	@00101110b			; 213
   385 031D6 1C0E C        	RETL	@00001110b			; 214
   386 031D7 1C22 C        	RETL	@00100010b			; 215
   387 031D8 1C1D C        	RETL	@00011101b			; 216
   388 031D9 1C1E C        	RETL	@00011110b			; 217
   389 031DA 1C1E C        	RETL	@00011110b			; 218
   390 031DB 1C1E C        	RETL	@00011110b			; 219
   391 031DC 1C1E C        	RETL	@00011110b			; 220
   392 031DD 1C18 C        	RETL	@00011000b			; 221
   393 031DE 1C7F C        	RETL	@01111111b			; 222
   394 031DF 1C3F C        	RETL	@00111111b			; 223
   395 031E0 1C02 C        	RETL	@00000010b			; 224
   396 031E1 1C02 C        	RETL	@00000010b			; 225
   397 031E2 1C02 C        	RETL	@00000010b			; 226
   398 031E3 1C22 C        	RETL	@00100010b			; 227
   399 031E4 1C02 C        	RETL	@00000010b			; 228
   400 031E5 1C02 C        	RETL	@00000010b			; 229
   401 031E6 1C12 C        	RETL	@00010010b			; 230
   402 031E7 1C18 C        	RETL	@00011000b			; 231
   403 031E8 1C0E C        	RETL	@00001110b			; 232
   404 031E9 1C0E C        	RETL	@00001110b			; 233
   405 031EA 1C0E C        	RETL	@00001110b			; 234
   406 031EB 1C0E C        	RETL	@00001110b			; 235
   407 031EC 1C00 C        	RETL	@00000000b			; 236
   408 031ED 1C00 C        	RETL	@00000000b			; 237
   409 031EE 1C00 C        	RETL	@00000000b			; 238
   410 031EF 1C00 C        	RETL	@00000000b			; 239
   411 031F0 1C00 C        	RETL	@00000000b			; 240
   412 031F1 1C2F C        	RETL	@00101111b			; 241
   413 031F2 1C06 C        	RETL	@00000110b			; 242
   414 031F3 1C06 C        	RETL	@00000110b			; 243
   415 031F4 1C06 C        	RETL	@00000110b			; 244
   416 031F5 1C16 C        	RETL	@00010110b			; 245
   417 031F6 1C06 C        	RETL	@00000110b			; 246
   418 031F7 1C08 C        	RETL	@00001000b			; 247
   419 031F8 1C0D C        	RETL	@00001101b			; 248
   420 031F9 1C0E C        	RETL	@00001110b			; 249
   421 031FA 1C0E C        	RETL	@00001110b			; 250
   422 031FB 1C0E C        	RETL	@00001110b			; 251
   423 031FC 1C0E C        	RETL	@00001110b			; 252
   424 031FD 1C18 C        	RETL	@00011000b			; 253
   425 031FE 1C3F C        	RETL	@00111111b			; 254
   426 031FF 1C18 C        	RETL	@00011000b			; 255
   427            C        
   428            C        
   429            C        ORG	0x3200
   430 03200      C        TabAsciiChar2:
   431 03200 0020 C        	TBL
   432 03201 1C12 C        	RETL	@00010010b			; 001
   433 03202 1C22 C        	RETL	@00100010b			; 002
   434 03203 1C22 C        	RETL	@00100010b			; 003
   435 03204 1C14 C        	RETL	@00010100b			; 004
   436 03205 1C11 C        	RETL	@00010001b			; 005
   437 03206 1C15 C        	RETL	@00010101b			; 006
   438 03207 1C01 C        	RETL	@00000001b			; 007
   439 03208 1C03 C        	RETL	@00000011b			; 008
   440 03209 1C07 C        	RETL	@00000111b			; 009
   441 0320A 1C0F C        	RETL	@00001111b			; 010
   442 0320B 1C1F C        	RETL	@00011111b			; 011
   443 0320C 1C3F C        	RETL	@00111111b			; 012
   444 0320D 1C7F C        	RETL	@01111111b			; 013
   445 0320E 1C3E C        	RETL	@00111110b			; 014
   446 0320F 1C1C C        	RETL	@00011100b			; 015
   447 03210 1C3E C        	RETL	@00111110b			; 016
   448 03211 1C08 C        	RETL	@00001000b			; 017
   449 03212 1C22 C        	RETL	@00100010b			; 018
   450 03213 1C7D C        	RETL	@01111101b			; 019
   451 03214 1C28 C        	RETL	@00101000b			; 020
   452 03215 1C04 C        	RETL	@00000100b			; 021
   453 03216 1C10 C        	RETL	@00010000b			; 022
   454 03217 1C08 C        	RETL	@00001000b			; 023
   455 03218 1C10 C        	RETL	@00010000b			; 024
   456 03219 1C04 C        	RETL	@00000100b			; 025
   457 0321A 1C08 C        	RETL	@00001000b			; 026
   458 0321B 1C1C C        	RETL	@00011100b			; 027
   459 0321C 1C01 C        	RETL	@00000001b			; 028
   460 0321D 1C40 C        	RETL	@01000000b			; 029
   461 0321E 1C0C C        	RETL	@00001100b			; 030
   462 0321F 1C18 C        	RETL	@00011000b			; 031
   463 03220 1C00 C        	RETL	@00000000b			;  
   464 03221 1C00 C        	RETL	@00000000b			; !
   465 03222 1C60 C        	RETL	@01100000b			; "
   466 03223 1C7F C        	RETL	@01111111b			; #
   467 03224 1C2A C        	RETL	@00101010b			; $
   468 03225 1C64 C        	RETL	@01100100b			; %
   469 03226 1C49 C        	RETL	@01001001b			; &
   470 03227 1C00 C        	RETL	@00000000b			; '
   471 03228 1C1C C        	RETL	@00011100b			; (
   472 03229 1C41 C        	RETL	@01000001b			; )
   473 0322A 1C08 C        	RETL	@00001000b			; *
   474 0322B 1C08 C        	RETL	@00001000b			; +
   475 0322C 1C05 C        	RETL	@00000101b			; ,
   476 0322D 1C08 C        	RETL	@00001000b			; -
   477 0322E 1C06 C        	RETL	@00000110b			; .
   478 0322F 1C04 C        	RETL	@00000100b			; /
   479 03230 1C45 C        	RETL	@01000101b			; 0
   480 03231 1C21 C        	RETL	@00100001b			; 1
   481 03232 1C43 C        	RETL	@01000011b			; 2
   482 03233 1C41 C        	RETL	@01000001b			; 3
   483 03234 1C14 C        	RETL	@00010100b			; 4
   484 03235 1C51 C        	RETL	@01010001b			; 5
   485 03236 1C29 C        	RETL	@00101001b			; 6
   486 03237 1C47 C        	RETL	@01000111b			; 7
   487 03238 1C49 C        	RETL	@01001001b			; 8
   488 03239 1C49 C        	RETL	@01001001b			; 9
   489 0323A 1C36 C        	RETL	@00110110b			; :
   490 0323B 1C35 C        	RETL	@00110101b			; ;
   491 0323C 1C14 C        	RETL	@00010100b			; <
   492 0323D 1C14 C        	RETL	@00010100b			; =
   493 0323E 1C41 C        	RETL	@01000001b			; >
   494 0323F 1C40 C        	RETL	@01000000b			; ?
   495 03240 1C49 C        	RETL	@01001001b			; @
   496 03241 1C44 C        	RETL	@01000100b			; A
   497 03242 1C49 C        	RETL	@01001001b			; B
   498 03243 1C41 C        	RETL	@01000001b			; C
   499 03244 1C41 C        	RETL	@01000001b			; D
   500 03245 1C49 C        	RETL	@01001001b			; E
   501 03246 1C48 C        	RETL	@01001000b			; F
   502 03247 1C41 C        	RETL	@01000001b			; G
   503 03248 1C08 C        	RETL	@00001000b			; H
   504 03249 1C41 C        	RETL	@01000001b			; I
   505 0324A 1C01 C        	RETL	@00000001b			; J
   506 0324B 1C08 C        	RETL	@00001000b			; K
   507 0324C 1C01 C        	RETL	@00000001b			; L
   508 0324D 1C20 C        	RETL	@00100000b			; M
   509 0324E 1C10 C        	RETL	@00010000b			; N
   510 0324F 1C41 C        	RETL	@01000001b			; O
   511 03250 1C48 C        	RETL	@01001000b			; P
   512 03251 1C41 C        	RETL	@01000001b			; Q
   513 03252 1C48 C        	RETL	@01001000b			; R
   514 03253 1C49 C        	RETL	@01001001b			; S
   515 03254 1C40 C        	RETL	@01000000b			; T
   516 03255 1C01 C        	RETL	@00000001b			; U
   517 03256 1C02 C        	RETL	@00000010b			; V
   518 03257 1C01 C        	RETL	@00000001b			; W
   519 03258 1C14 C        	RETL	@00010100b			; X
   520 03259 1C08 C        	RETL	@00001000b			; Y
   521 0325A 1C45 C        	RETL	@01000101b			; Z
   522 0325B 1C7F C        	RETL	@01111111b			; [
   523 0325C 1C10 C        	RETL	@00010000b			; \
   524 0325D 1C41 C        	RETL	@01000001b			; ]
   525 0325E 1C10 C        	RETL	@00010000b			; ^
   526 0325F 1C01 C        	RETL	@00000001b			; _
   527 03260 1C40 C        	RETL	@01000000b			; `
   528 03261 1C15 C        	RETL	@00010101b			; a
   529 03262 1C09 C        	RETL	@00001001b			; b
   530 03263 1C11 C        	RETL	@00010001b			; c
   531 03264 1C11 C        	RETL	@00010001b			; d
   532 03265 1C15 C        	RETL	@00010101b			; e
   533 03266 1C3F C        	RETL	@00111111b			; f
   534 03267 1C25 C        	RETL	@00100101b			; g
   535 03268 1C08 C        	RETL	@00001000b			; h
   536 03269 1C11 C        	RETL	@00010001b			; i
   537 0326A 1C01 C        	RETL	@00000001b			; j
   538 0326B 1C04 C        	RETL	@00000100b			; k
   539 0326C 1C41 C        	RETL	@01000001b			; l
   540 0326D 1C10 C        	RETL	@00010000b			; m
   541 0326E 1C08 C        	RETL	@00001000b			; n
   542 0326F 1C11 C        	RETL	@00010001b			; o
   543 03270 1C14 C        	RETL	@00010100b			; p
   544 03271 1C14 C        	RETL	@00010100b			; q
   545 03272 1C08 C        	RETL	@00001000b			; r
   546 03273 1C15 C        	RETL	@00010101b			; s
   547 03274 1C7E C        	RETL	@01111110b			; t
   548 03275 1C01 C        	RETL	@00000001b			; u
   549 03276 1C02 C        	RETL	@00000010b			; v
   550 03277 1C01 C        	RETL	@00000001b			; w
   551 03278 1C0A C        	RETL	@00001010b			; x
   552 03279 1C05 C        	RETL	@00000101b			; y
   553 0327A 1C13 C        	RETL	@00010011b			; z
   554 0327B 1C08 C        	RETL	@00001000b			; {
   555 0327C 1C00 C        	RETL	@00000000b			; |
   556 0327D 1C41 C        	RETL	@01000001b			; }
   557 0327E 1C10 C        	RETL	@00010000b			; ~
   558 0327F 1C00 C        	RETL	@00000000b			; cursor
   559 03280 1C3E C        	RETL	@00111110b			; 128
   560 03281 1C22 C        	RETL	@00100010b			; 129
   561 03282 1C00 C        	RETL	@00000000b			; 130
   562 03283 1C11 C        	RETL	@00010001b			; 131
   563 03284 1C60 C        	RETL	@01100000b			; 132
   564 03285 1C00 C        	RETL	@00000000b			; 133
   565 03286 1C20 C        	RETL	@00100000b			; 134
   566 03287 1C22 C        	RETL	@00100010b			; 135
   567 03288 1C10 C        	RETL	@00010000b			; 136
   568 03289 1C08 C        	RETL	@00001000b			; 137
   569 0328A 1C55 C        	RETL	@01010101b			; 138
   570 0328B 1C08 C        	RETL	@00001000b			; 139
   571 0328C 1C41 C        	RETL	@01000001b			; 140
   572 0328D 1C22 C        	RETL	@00100010b			; 141
   573 0328E 1C53 C        	RETL	@01010011b			; 142
   574 0328F 1C41 C        	RETL	@01000001b			; 143
   575 03290 1C22 C        	RETL	@00100010b			; 144
   576 03291 1C30 C        	RETL	@00110000b			; 145
   577 03292 1C00 C        	RETL	@00000000b			; 146
   578 03293 1C50 C        	RETL	@01010000b			; 147
   579 03294 1C60 C        	RETL	@01100000b			; 148
   580 03295 1C06 C        	RETL	@00000110b			; 149
   581 03296 1C08 C        	RETL	@00001000b			; 150
   582 03297 1C08 C        	RETL	@00001000b			; 151
   583 03298 1C10 C        	RETL	@00010000b			; 152
   584 03299 1C1E C        	RETL	@00011110b			; 153
   585 0329A 1C4D C        	RETL	@01001101b			; 154
   586 0329B 1C00 C        	RETL	@00000000b			; 155
   587 0329C 1C11 C        	RETL	@00010001b			; 156
   588 0329D 1C22 C        	RETL	@00100010b			; 157
   589 0329E 1C53 C        	RETL	@01010011b			; 158
   590 0329F 1C48 C        	RETL	@01001000b			; 159
   591 032A0 1C00 C        	RETL	@00000000b			; 160
   592 032A1 1C00 C        	RETL	@00000000b			; 161
   593 032A2 1C16 C        	RETL	@00010110b			; 162
   594 032A3 1C13 C        	RETL	@00010011b			; 163
   595 032A4 1C22 C        	RETL	@00100010b			; 164
   596 032A5 1C2A C        	RETL	@00101010b			; 165
   597 032A6 1C00 C        	RETL	@00000000b			; 166
   598 032A7 1C2D C        	RETL	@00101101b			; 167
   599 032A8 1C10 C        	RETL	@00010000b			; 168
   600 032A9 1C43 C        	RETL	@01000011b			; 169
   601 032AA 1C15 C        	RETL	@00010101b			; 170
   602 032AB 1C14 C        	RETL	@00010100b			; 171
   603 032AC 1C08 C        	RETL	@00001000b			; 172
   604 032AD 1C08 C        	RETL	@00001000b			; 173
   605 032AE 1C51 C        	RETL	@01010001b			; 174
   606 032AF 1C40 C        	RETL	@01000000b			; 175
   607 032B0 1C38 C        	RETL	@00111000b			; 176
   608 032B1 1C09 C        	RETL	@00001001b			; 177
   609 032B2 1C2E C        	RETL	@00101110b			; 178
   610 032B3 1C22 C        	RETL	@00100010b			; 179
   611 032B4 1C00 C        	RETL	@00000000b			; 180
   612 032B5 1C02 C        	RETL	@00000010b			; 181
   613 032B6 1C70 C        	RETL	@01110000b			; 182
   614 032B7 1C1C C        	RETL	@00011100b			; 183
   615 032B8 1C05 C        	RETL	@00000101b			; 184
   616 032B9 1C12 C        	RETL	@00010010b			; 185
   617 032BA 1C38 C        	RETL	@00111000b			; 186
   618 032BB 1C08 C        	RETL	@00001000b			; 187
   619 032BC 1C00 C        	RETL	@00000000b			; 188
   620 032BD 1C00 C        	RETL	@00000000b			; 189
   621 032BE 1C7C C        	RETL	@01111100b			; 190
   622 032BF 1C0A C        	RETL	@00001010b			; 191
   623 032C0 1C54 C        	RETL	@01010100b			; 192
   624 032C1 1C14 C        	RETL	@00010100b			; 193
   625 032C2 1C34 C        	RETL	@00110100b			; 194
   626 032C3 1C54 C        	RETL	@01010100b			; 195
   627 032C4 1C54 C        	RETL	@01010100b			; 196
   628 032C5 1C14 C        	RETL	@00010100b			; 197
   629 032C6 1C3C C        	RETL	@00111100b			; 198
   630 032C7 1C45 C        	RETL	@01000101b			; 199
   631 032C8 1C55 C        	RETL	@01010101b			; 200
   632 032C9 1C15 C        	RETL	@00010101b			; 201
   633 032CA 1C35 C        	RETL	@00110101b			; 202
   634 032CB 1C55 C        	RETL	@01010101b			; 203
   635 032CC 1C51 C        	RETL	@01010001b			; 204
   636 032CD 1C11 C        	RETL	@00010001b			; 205
   637 032CE 1C31 C        	RETL	@00110001b			; 206
   638 032CF 1C51 C        	RETL	@01010001b			; 207
   639 032D0 1C7F C        	RETL	@01111111b			; 208
   640 032D1 1C48 C        	RETL	@01001000b			; 209
   641 032D2 1C51 C        	RETL	@01010001b			; 210
   642 032D3 1C11 C        	RETL	@00010001b			; 211
   643 032D4 1C31 C        	RETL	@00110001b			; 212
   644 032D5 1C51 C        	RETL	@01010001b			; 213
   645 032D6 1C51 C        	RETL	@01010001b			; 214
   646 032D7 1C14 C        	RETL	@00010100b			; 215
   647 032D8 1C26 C        	RETL	@00100110b			; 216
   648 032D9 1C41 C        	RETL	@01000001b			; 217
   649 032DA 1C01 C        	RETL	@00000001b			; 218
   650 032DB 1C21 C        	RETL	@00100001b			; 219
   651 032DC 1C41 C        	RETL	@01000001b			; 220
   652 032DD 1C04 C        	RETL	@00000100b			; 221
   653 032DE 1C22 C        	RETL	@00100010b			; 222
   654 032DF 1C42 C        	RETL	@01000010b			; 223
   655 032E0 1C55 C        	RETL	@01010101b			; 224
   656 032E1 1C15 C        	RETL	@00010101b			; 225
   657 032E2 1C35 C        	RETL	@00110101b			; 226
   658 032E3 1C55 C        	RETL	@01010101b			; 227
   659 032E4 1C55 C        	RETL	@01010101b			; 228
   660 032E5 1C15 C        	RETL	@00010101b			; 229
   661 032E6 1C15 C        	RETL	@00010101b			; 230
   662 032E7 1C25 C        	RETL	@00100101b			; 231
   663 032E8 1C55 C        	RETL	@01010101b			; 232
   664 032E9 1C15 C        	RETL	@00010101b			; 233
   665 032EA 1C35 C        	RETL	@00110101b			; 234
   666 032EB 1C55 C        	RETL	@01010101b			; 235
   667 032EC 1C40 C        	RETL	@01000000b			; 236
   668 032ED 1C00 C        	RETL	@00000000b			; 237
   669 032EE 1C20 C        	RETL	@00100000b			; 238
   670 032EF 1C20 C        	RETL	@00100000b			; 239
   671 032F0 1C56 C        	RETL	@01010110b			; 240
   672 032F1 1C48 C        	RETL	@01001000b			; 241
   673 032F2 1C29 C        	RETL	@00101001b			; 242
   674 032F3 1C09 C        	RETL	@00001001b			; 243
   675 032F4 1C19 C        	RETL	@00011001b			; 244
   676 032F5 1C29 C        	RETL	@00101001b			; 245
   677 032F6 1C29 C        	RETL	@00101001b			; 246
   678 032F7 1C08 C        	RETL	@00001000b			; 247
   679 032F8 1C12 C        	RETL	@00010010b			; 248
   680 032F9 1C41 C        	RETL	@01000001b			; 249
   681 032FA 1C01 C        	RETL	@00000001b			; 250
   682 032FB 1C21 C        	RETL	@00100001b			; 251
   683 032FC 1C21 C        	RETL	@00100001b			; 252
   684 032FD 1C05 C        	RETL	@00000101b			; 253
   685 032FE 1C12 C        	RETL	@00010010b			; 254
   686 032FF 1C45 C        	RETL	@01000101b			; 255
   687            C        
   688            C        
   689            C        ORG	0x3300
   690 03300      C        TabAsciiChar3:
   691 03300 0020 C        	TBL
   692 03301 1C02 C        	RETL	@00000010b			; 001
   693 03302 1C22 C        	RETL	@00100010b			; 002
   694 03303 1C11 C        	RETL	@00010001b			; 003
   695 03304 1C22 C        	RETL	@00100010b			; 004
   696 03305 1C27 C        	RETL	@00100111b			; 005
   697 03306 1C27 C        	RETL	@00100111b			; 006
   698 03307 1C01 C        	RETL	@00000001b			; 007
   699 03308 1C03 C        	RETL	@00000011b			; 008
   700 03309 1C07 C        	RETL	@00000111b			; 009
   701 0330A 1C0F C        	RETL	@00001111b			; 010
   702 0330B 1C1F C        	RETL	@00011111b			; 011
   703 0330C 1C3F C        	RETL	@00111111b			; 012
   704 0330D 1C7F C        	RETL	@01111111b			; 013
   705 0330E 1C20 C        	RETL	@00100000b			; 014
   706 0330F 1C63 C        	RETL	@01100011b			; 015
   707 03310 1C1C C        	RETL	@00011100b			; 016
   708 03311 1C1C C        	RETL	@00011100b			; 017
   709 03312 1C7F C        	RETL	@01111111b			; 018
   710 03313 1C00 C        	RETL	@00000000b			; 019
   711 03314 1C7F C        	RETL	@01111111b			; 020
   712 03315 1C7C C        	RETL	@01111100b			; 021
   713 03316 1C1F C        	RETL	@00011111b			; 022
   714 03317 1C7F C        	RETL	@01111111b			; 023
   715 03318 1C3E C        	RETL	@00111110b			; 024
   716 03319 1C3E C        	RETL	@00111110b			; 025
   717 0331A 1C08 C        	RETL	@00001000b			; 026
   718 0331B 1C08 C        	RETL	@00001000b			; 027
   719 0331C 1C01 C        	RETL	@00000001b			; 028
   720 0331D 1C40 C        	RETL	@01000000b			; 029
   721 0331E 1C1C C        	RETL	@00011100b			; 030
   722 0331F 1C1C C        	RETL	@00011100b			; 031
   723 03320 1C00 C        	RETL	@00000000b			;  
   724 03321 1C7A C        	RETL	@01111010b			; !
   725 03322 1C00 C        	RETL	@00000000b			; "
   726 03323 1C14 C        	RETL	@00010100b			; #
   727 03324 1C7F C        	RETL	@01111111b			; $
   728 03325 1C08 C        	RETL	@00001000b			; %
   729 03326 1C55 C        	RETL	@01010101b			; &
   730 03327 1C60 C        	RETL	@01100000b			; '
   731 03328 1C22 C        	RETL	@00100010b			; (
   732 03329 1C22 C        	RETL	@00100010b			; )
   733 0332A 1C3E C        	RETL	@00111110b			; *
   734 0332B 1C3E C        	RETL	@00111110b			; +
   735 0332C 1C06 C        	RETL	@00000110b			; ,
   736 0332D 1C08 C        	RETL	@00001000b			; -
   737 0332E 1C06 C        	RETL	@00000110b			; .
   738 0332F 1C08 C        	RETL	@00001000b			; /
   739 03330 1C49 C        	RETL	@01001001b			; 0
   740 03331 1C7F C        	RETL	@01111111b			; 1
   741 03332 1C45 C        	RETL	@01000101b			; 2
   742 03333 1C51 C        	RETL	@01010001b			; 3
   743 03334 1C24 C        	RETL	@00100100b			; 4
   744 03335 1C51 C        	RETL	@01010001b			; 5
   745 03336 1C49 C        	RETL	@01001001b			; 6
   746 03337 1C48 C        	RETL	@01001000b			; 7
   747 03338 1C49 C        	RETL	@01001001b			; 8
   748 03339 1C49 C        	RETL	@01001001b			; 9
   749 0333A 1C36 C        	RETL	@00110110b			; :
   750 0333B 1C36 C        	RETL	@00110110b			; ;
   751 0333C 1C22 C        	RETL	@00100010b			; <
   752 0333D 1C14 C        	RETL	@00010100b			; =
   753 0333E 1C22 C        	RETL	@00100010b			; >
   754 0333F 1C45 C        	RETL	@01000101b			; ?
   755 03340 1C4F C        	RETL	@01001111b			; @
   756 03341 1C44 C        	RETL	@01000100b			; A
   757 03342 1C49 C        	RETL	@01001001b			; B
   758 03343 1C41 C        	RETL	@01000001b			; C
   759 03344 1C41 C        	RETL	@01000001b			; D
   760 03345 1C49 C        	RETL	@01001001b			; E
   761 03346 1C48 C        	RETL	@01001000b			; F
   762 03347 1C49 C        	RETL	@01001001b			; G
   763 03348 1C08 C        	RETL	@00001000b			; H
   764 03349 1C7F C        	RETL	@01111111b			; I
   765 0334A 1C41 C        	RETL	@01000001b			; J
   766 0334B 1C14 C        	RETL	@00010100b			; K
   767 0334C 1C01 C        	RETL	@00000001b			; L
   768 0334D 1C18 C        	RETL	@00011000b			; M
   769 0334E 1C08 C        	RETL	@00001000b			; N
   770 0334F 1C41 C        	RETL	@01000001b			; O
   771 03350 1C48 C        	RETL	@01001000b			; P
   772 03351 1C45 C        	RETL	@01000101b			; Q
   773 03352 1C4C C        	RETL	@01001100b			; R
   774 03353 1C49 C        	RETL	@01001001b			; S
   775 03354 1C7F C        	RETL	@01111111b			; T
   776 03355 1C01 C        	RETL	@00000001b			; U
   777 03356 1C01 C        	RETL	@00000001b			; V
   778 03357 1C0E C        	RETL	@00001110b			; W
   779 03358 1C08 C        	RETL	@00001000b			; X
   780 03359 1C07 C        	RETL	@00000111b			; Y
   781 0335A 1C49 C        	RETL	@01001001b			; Z
   782 0335B 1C41 C        	RETL	@01000001b			; [
   783 0335C 1C08 C        	RETL	@00001000b			; \
   784 0335D 1C41 C        	RETL	@01000001b			; ]
   785 0335E 1C20 C        	RETL	@00100000b			; ^
   786 0335F 1C01 C        	RETL	@00000001b			; _
   787 03360 1C60 C        	RETL	@01100000b			; `
   788 03361 1C15 C        	RETL	@00010101b			; a
   789 03362 1C11 C        	RETL	@00010001b			; b
   790 03363 1C11 C        	RETL	@00010001b			; c
   791 03364 1C11 C        	RETL	@00010001b			; d
   792 03365 1C15 C        	RETL	@00010101b			; e
   793 03366 1C48 C        	RETL	@01001000b			; f
   794 03367 1C25 C        	RETL	@00100101b			; g
   795 03368 1C10 C        	RETL	@00010000b			; h
   796 03369 1C5F C        	RETL	@01011111b			; i
   797 0336A 1C11 C        	RETL	@00010001b			; j
   798 0336B 1C0A C        	RETL	@00001010b			; k
   799 0336C 1C7F C        	RETL	@01111111b			; l
   800 0336D 1C0F C        	RETL	@00001111b			; m
   801 0336E 1C10 C        	RETL	@00010000b			; n
   802 0336F 1C11 C        	RETL	@00010001b			; o
   803 03370 1C14 C        	RETL	@00010100b			; p
   804 03371 1C14 C        	RETL	@00010100b			; q
   805 03372 1C10 C        	RETL	@00010000b			; r
   806 03373 1C15 C        	RETL	@00010101b			; s
   807 03374 1C11 C        	RETL	@00010001b			; t
   808 03375 1C01 C        	RETL	@00000001b			; u
   809 03376 1C01 C        	RETL	@00000001b			; v
   810 03377 1C06 C        	RETL	@00000110b			; w
   811 03378 1C04 C        	RETL	@00000100b			; x
   812 03379 1C05 C        	RETL	@00000101b			; y
   813 0337A 1C15 C        	RETL	@00010101b			; z
   814 0337B 1C36 C        	RETL	@00110110b			; {
   815 0337C 1C7F C        	RETL	@01111111b			; |
   816 0337D 1C36 C        	RETL	@00110110b			; }
   817 0337E 1C08 C        	RETL	@00001000b			; ~
   818 0337F 1C00 C        	RETL	@00000000b			; cursor
   819 03380 1C55 C        	RETL	@01010101b			; 128
   820 03381 1C3E C        	RETL	@00111110b			; 129
   821 03382 1C00 C        	RETL	@00000000b			; 130
   822 03383 1C3E C        	RETL	@00111110b			; 131
   823 03384 1C00 C        	RETL	@00000000b			; 132
   824 03385 1C04 C        	RETL	@00000100b			; 133
   825 03386 1C7F C        	RETL	@01111111b			; 134
   826 03387 1C7F C        	RETL	@01111111b			; 135
   827 03388 1C20 C        	RETL	@00100000b			; 136
   828 03389 1C12 C        	RETL	@00010010b			; 137
   829 0338A 1C35 C        	RETL	@00110101b			; 138
   830 0338B 1C14 C        	RETL	@00010100b			; 139
   831 0338C 1C7F C        	RETL	@01111111b			; 140
   832 0338D 1C3E C        	RETL	@00111110b			; 141
   833 0338E 1C35 C        	RETL	@00110101b			; 142
   834 0338F 1C41 C        	RETL	@01000001b			; 143
   835 03390 1C3E C        	RETL	@00111110b			; 144
   836 03391 1C50 C        	RETL	@01010000b			; 145
   837 03392 1C50 C        	RETL	@01010000b			; 146
   838 03393 1C00 C        	RETL	@00000000b			; 147
   839 03394 1C00 C        	RETL	@00000000b			; 148
   840 03395 1C06 C        	RETL	@00000110b			; 149
   841 03396 1C08 C        	RETL	@00001000b			; 150
   842 03397 1C08 C        	RETL	@00001000b			; 151
   843 03398 1C20 C        	RETL	@00100000b			; 152
   844 03399 1C10 C        	RETL	@00010000b			; 153
   845 0339A 1C35 C        	RETL	@00110101b			; 154
   846 0339B 1C14 C        	RETL	@00010100b			; 155
   847 0339C 1C1F C        	RETL	@00011111b			; 156
   848 0339D 1C3E C        	RETL	@00111110b			; 157
   849 0339E 1C35 C        	RETL	@00110101b			; 158
   850 0339F 1C07 C        	RETL	@00000111b			; 159
   851 033A0 1C00 C        	RETL	@00000000b			; 160
   852 033A1 1C5F C        	RETL	@01011111b			; 161
   853 033A2 1C1A C        	RETL	@00011010b			; 162
   854 033A3 1C7D C        	RETL	@01111101b			; 163
   855 033A4 1C22 C        	RETL	@00100010b			; 164
   856 033A5 1C1F C        	RETL	@00011111b			; 165
   857 033A6 1C77 C        	RETL	@01110111b			; 166
   858 033A7 1C53 C        	RETL	@01010011b			; 167
   859 033A8 1C00 C        	RETL	@00000000b			; 168
   860 033A9 1C43 C        	RETL	@01000011b			; 169
   861 033AA 1C15 C        	RETL	@00010101b			; 170
   862 033AB 1C00 C        	RETL	@00000000b			; 171
   863 033AC 1C08 C        	RETL	@00001000b			; 172
   864 033AD 1C08 C        	RETL	@00001000b			; 173
   865 033AE 1C59 C        	RETL	@01011001b			; 174
   866 033AF 1C40 C        	RETL	@01000000b			; 175
   867 033B0 1C28 C        	RETL	@00101000b			; 176
   868 033B1 1C3F C        	RETL	@00111111b			; 177
   869 033B2 1C2A C        	RETL	@00101010b			; 178
   870 033B3 1C2A C        	RETL	@00101010b			; 179
   871 033B4 1C20 C        	RETL	@00100000b			; 180
   872 033B5 1C02 C        	RETL	@00000010b			; 181
   873 033B6 1C7F C        	RETL	@01111111b			; 182
   874 033B7 1C1C C        	RETL	@00011100b			; 183
   875 033B8 1C02 C        	RETL	@00000010b			; 184
   876 033B9 1C3E C        	RETL	@00111110b			; 185
   877 033BA 1C28 C        	RETL	@00101000b			; 186
   878 033BB 1C00 C        	RETL	@00000000b			; 187
   879 033BC 1C1C C        	RETL	@00011100b			; 188
   880 033BD 1C17 C        	RETL	@00010111b			; 189
   881 033BE 1C1C C        	RETL	@00011100b			; 190
   882 033BF 1C51 C        	RETL	@01010001b			; 191
   883 033C0 1C34 C        	RETL	@00110100b			; 192
   884 033C1 1C34 C        	RETL	@00110100b			; 193
   885 033C2 1C54 C        	RETL	@01010100b			; 194
   886 033C3 1C34 C        	RETL	@00110100b			; 195
   887 033C4 1C14 C        	RETL	@00010100b			; 196
   888 033C5 1C54 C        	RETL	@01010100b			; 197
   889 033C6 1C44 C        	RETL	@01000100b			; 198
   890 033C7 1C45 C        	RETL	@01000101b			; 199
   891 033C8 1C35 C        	RETL	@00110101b			; 200
   892 033C9 1C35 C        	RETL	@00110101b			; 201
   893 033CA 1C55 C        	RETL	@01010101b			; 202
   894 033CB 1C15 C        	RETL	@00010101b			; 203
   895 033CC 1C3F C        	RETL	@00111111b			; 204
   896 033CD 1C3F C        	RETL	@00111111b			; 205
   897 033CE 1C5F C        	RETL	@01011111b			; 206
   898 033CF 1C1F C        	RETL	@00011111b			; 207
   899 033D0 1C49 C        	RETL	@01001001b			; 208
   900 033D1 1C24 C        	RETL	@00100100b			; 209
   901 033D2 1C31 C        	RETL	@00110001b			; 210
   902 033D3 1C31 C        	RETL	@00110001b			; 211
   903 033D4 1C51 C        	RETL	@01010001b			; 212
   904 033D5 1C31 C        	RETL	@00110001b			; 213
   905 033D6 1C11 C        	RETL	@00010001b			; 214
   906 033D7 1C08 C        	RETL	@00001000b			; 215
   907 033D8 1C2A C        	RETL	@00101010b			; 216
   908 033D9 1C21 C        	RETL	@00100001b			; 217
   909 033DA 1C21 C        	RETL	@00100001b			; 218
   910 033DB 1C41 C        	RETL	@01000001b			; 219
   911 033DC 1C01 C        	RETL	@00000001b			; 220
   912 033DD 1C23 C        	RETL	@00100011b			; 221
   913 033DE 1C22 C        	RETL	@00100010b			; 222
   914 033DF 1C51 C        	RETL	@01010001b			; 223
   915 033E0 1C35 C        	RETL	@00110101b			; 224
   916 033E1 1C35 C        	RETL	@00110101b			; 225
   917 033E2 1C55 C        	RETL	@01010101b			; 226
   918 033E3 1C35 C        	RETL	@00110101b			; 227
   919 033E4 1C15 C        	RETL	@00010101b			; 228
   920 033E5 1C55 C        	RETL	@01010101b			; 229
   921 033E6 1C0F C        	RETL	@00001111b			; 230
   922 033E7 1C25 C        	RETL	@00100101b			; 231
   923 033E8 1C35 C        	RETL	@00110101b			; 232
   924 033E9 1C35 C        	RETL	@00110101b			; 233
   925 033EA 1C55 C        	RETL	@01010101b			; 234
   926 033EB 1C15 C        	RETL	@00010101b			; 235
   927 033EC 1C2F C        	RETL	@00101111b			; 236
   928 033ED 1C2F C        	RETL	@00101111b			; 237
   929 033EE 1C4F C        	RETL	@01001111b			; 238
   930 033EF 1C0F C        	RETL	@00001111b			; 239
   931 033F0 1C69 C        	RETL	@01101001b			; 240
   932 033F1 1C28 C        	RETL	@00101000b			; 241
   933 033F2 1C19 C        	RETL	@00011001b			; 242
   934 033F3 1C19 C        	RETL	@00011001b			; 243
   935 033F4 1C29 C        	RETL	@00101001b			; 244
   936 033F5 1C19 C        	RETL	@00011001b			; 245
   937 033F6 1C09 C        	RETL	@00001001b			; 246
   938 033F7 1C2A C        	RETL	@00101010b			; 247
   939 033F8 1C16 C        	RETL	@00010110b			; 248
   940 033F9 1C21 C        	RETL	@00100001b			; 249
   941 033FA 1C21 C        	RETL	@00100001b			; 250
   942 033FB 1C41 C        	RETL	@01000001b			; 251
   943 033FC 1C01 C        	RETL	@00000001b			; 252
   944 033FD 1C25 C        	RETL	@00100101b			; 253
   945 033FE 1C12 C        	RETL	@00010010b			; 254
   946 033FF 1C05 C        	RETL	@00000101b			; 255
   947            C        
   948            C        ORG	0x3400
   949 03400      C        TabAsciiChar4:
   950 03400 0020 C        	TBL
   951 03401 1C12 C        	RETL	@00010010b			; 001
   952 03402 1C22 C        	RETL	@00100010b			; 002
   953 03403 1C22 C        	RETL	@00100010b			; 003
   954 03404 1C14 C        	RETL	@00010100b			; 004
   955 03405 1C11 C        	RETL	@00010001b			; 005
   956 03406 1C15 C        	RETL	@00010101b			; 006
   957 03407 1C01 C        	RETL	@00000001b			; 007
   958 03408 1C03 C        	RETL	@00000011b			; 008
   959 03409 1C07 C        	RETL	@00000111b			; 009
   960 0340A 1C0F C        	RETL	@00001111b			; 010
   961 0340B 1C1F C        	RETL	@00011111b			; 011
   962 0340C 1C3F C        	RETL	@00111111b			; 012
   963 0340D 1C7F C        	RETL	@01111111b			; 013
   964 0340E 1C22 C        	RETL	@00100010b			; 014
   965 0340F 1C1C C        	RETL	@00011100b			; 015
   966 03410 1C08 C        	RETL	@00001000b			; 016
   967 03411 1C3E C        	RETL	@00111110b			; 017
   968 03412 1C22 C        	RETL	@00100010b			; 018
   969 03413 1C7D C        	RETL	@01111101b			; 019
   970 03414 1C40 C        	RETL	@01000000b			; 020
   971 03415 1C04 C        	RETL	@00000100b			; 021
   972 03416 1C10 C        	RETL	@00010000b			; 022
   973 03417 1C00 C        	RETL	@00000000b			; 023
   974 03418 1C10 C        	RETL	@00010000b			; 024
   975 03419 1C04 C        	RETL	@00000100b			; 025
   976 0341A 1C1C C        	RETL	@00011100b			; 026
   977 0341B 1C08 C        	RETL	@00001000b			; 027
   978 0341C 1C01 C        	RETL	@00000001b			; 028
   979 0341D 1C40 C        	RETL	@01000000b			; 029
   980 0341E 1C0C C        	RETL	@00001100b			; 030
   981 0341F 1C18 C        	RETL	@00011000b			; 031
   982 03420 1C00 C        	RETL	@00000000b			;  
   983 03421 1C00 C        	RETL	@00000000b			; !
   984 03422 1C60 C        	RETL	@01100000b			; "
   985 03423 1C7F C        	RETL	@01111111b			; #
   986 03424 1C2A C        	RETL	@00101010b			; $
   987 03425 1C13 C        	RETL	@00010011b			; %
   988 03426 1C22 C        	RETL	@00100010b			; &
   989 03427 1C00 C        	RETL	@00000000b			; '
   990 03428 1C41 C        	RETL	@01000001b			; (
   991 03429 1C1C C        	RETL	@00011100b			; )
   992 0342A 1C08 C        	RETL	@00001000b			; *
   993 0342B 1C08 C        	RETL	@00001000b			; +
   994 0342C 1C00 C        	RETL	@00000000b			; ,
   995 0342D 1C08 C        	RETL	@00001000b			; -
   996 0342E 1C00 C        	RETL	@00000000b			; .
   997 0342F 1C10 C        	RETL	@00010000b			; /
   998 03430 1C51 C        	RETL	@01010001b			; 0
   999 03431 1C01 C        	RETL	@00000001b			; 1
  1000 03432 1C49 C        	RETL	@01001001b			; 2
  1001 03433 1C69 C        	RETL	@01101001b			; 3
  1002 03434 1C7F C        	RETL	@01111111b			; 4
  1003 03435 1C51 C        	RETL	@01010001b			; 5
  1004 03436 1C49 C        	RETL	@01001001b			; 6
  1005 03437 1C50 C        	RETL	@01010000b			; 7
  1006 03438 1C49 C        	RETL	@01001001b			; 8
  1007 03439 1C4A C        	RETL	@01001010b			; 9
  1008 0343A 1C00 C        	RETL	@00000000b			; :
  1009 0343B 1C00 C        	RETL	@00000000b			; ;
  1010 0343C 1C41 C        	RETL	@01000001b			; <
  1011 0343D 1C14 C        	RETL	@00010100b			; =
  1012 0343E 1C14 C        	RETL	@00010100b			; >
  1013 0343F 1C48 C        	RETL	@01001000b			; ?
  1014 03440 1C41 C        	RETL	@01000001b			; @
  1015 03441 1C44 C        	RETL	@01000100b			; A
  1016 03442 1C49 C        	RETL	@01001001b			; B
  1017 03443 1C41 C        	RETL	@01000001b			; C
  1018 03444 1C22 C        	RETL	@00100010b			; D
  1019 03445 1C49 C        	RETL	@01001001b			; E
  1020 03446 1C48 C        	RETL	@01001000b			; F
  1021 03447 1C49 C        	RETL	@01001001b			; G
  1022 03448 1C08 C        	RETL	@00001000b			; H
  1023 03449 1C41 C        	RETL	@01000001b			; I
  1024 0344A 1C7E C        	RETL	@01111110b			; J
  1025 0344B 1C22 C        	RETL	@00100010b			; K
  1026 0344C 1C01 C        	RETL	@00000001b			; L
  1027 0344D 1C20 C        	RETL	@00100000b			; M
  1028 0344E 1C04 C        	RETL	@00000100b			; N
  1029 0344F 1C41 C        	RETL	@01000001b			; O
  1030 03450 1C48 C        	RETL	@01001000b			; P
  1031 03451 1C42 C        	RETL	@01000010b			; Q
  1032 03452 1C4A C        	RETL	@01001010b			; R
  1033 03453 1C49 C        	RETL	@01001001b			; S
  1034 03454 1C40 C        	RETL	@01000000b			; T
  1035 03455 1C01 C        	RETL	@00000001b			; U
  1036 03456 1C02 C        	RETL	@00000010b			; V
  1037 03457 1C01 C        	RETL	@00000001b			; W
  1038 03458 1C14 C        	RETL	@00010100b			; X
  1039 03459 1C08 C        	RETL	@00001000b			; Y
  1040 0345A 1C51 C        	RETL	@01010001b			; Z
  1041 0345B 1C41 C        	RETL	@01000001b			; [
  1042 0345C 1C04 C        	RETL	@00000100b			; \
  1043 0345D 1C7F C        	RETL	@01111111b			; ]
  1044 0345E 1C10 C        	RETL	@00010000b			; ^
  1045 0345F 1C01 C        	RETL	@00000001b			; _
  1046 03460 1C00 C        	RETL	@00000000b			; `
  1047 03461 1C15 C        	RETL	@00010101b			; a
  1048 03462 1C11 C        	RETL	@00010001b			; b
  1049 03463 1C11 C        	RETL	@00010001b			; c
  1050 03464 1C09 C        	RETL	@00001001b			; d
  1051 03465 1C15 C        	RETL	@00010101b			; e
  1052 03466 1C40 C        	RETL	@01000000b			; f
  1053 03467 1C25 C        	RETL	@00100101b			; g
  1054 03468 1C10 C        	RETL	@00010000b			; h
  1055 03469 1C01 C        	RETL	@00000001b			; i
  1056 0346A 1C5E C        	RETL	@01011110b			; j
  1057 0346B 1C11 C        	RETL	@00010001b			; k
  1058 0346C 1C01 C        	RETL	@00000001b			; l
  1059 0346D 1C10 C        	RETL	@00010000b			; m
  1060 0346E 1C10 C        	RETL	@00010000b			; n
  1061 0346F 1C11 C        	RETL	@00010001b			; o
  1062 03470 1C14 C        	RETL	@00010100b			; p
  1063 03471 1C14 C        	RETL	@00010100b			; q
  1064 03472 1C10 C        	RETL	@00010000b			; r
  1065 03473 1C15 C        	RETL	@00010101b			; s
  1066 03474 1C01 C        	RETL	@00000001b			; t
  1067 03475 1C02 C        	RETL	@00000010b			; u
  1068 03476 1C02 C        	RETL	@00000010b			; v
  1069 03477 1C01 C        	RETL	@00000001b			; w
  1070 03478 1C0A C        	RETL	@00001010b			; x
  1071 03479 1C05 C        	RETL	@00000101b			; y
  1072 0347A 1C19 C        	RETL	@00011001b			; z
  1073 0347B 1C41 C        	RETL	@01000001b			; {
  1074 0347C 1C00 C        	RETL	@00000000b			; |
  1075 0347D 1C08 C        	RETL	@00001000b			; }
  1076 0347E 1C08 C        	RETL	@00001000b			; ~
  1077 0347F 1C00 C        	RETL	@00000000b			; cursor
  1078 03480 1C55 C        	RETL	@01010101b			; 128
  1079 03481 1C00 C        	RETL	@00000000b			; 129
  1080 03482 1C00 C        	RETL	@00000000b			; 130
  1081 03483 1C50 C        	RETL	@01010000b			; 131
  1082 03484 1C60 C        	RETL	@01100000b			; 132
  1083 03485 1C00 C        	RETL	@00000000b			; 133
  1084 03486 1C20 C        	RETL	@00100000b			; 134
  1085 03487 1C22 C        	RETL	@00100010b			; 135
  1086 03488 1C10 C        	RETL	@00010000b			; 136
  1087 03489 1C20 C        	RETL	@00100000b			; 137
  1088 0348A 1C55 C        	RETL	@01010101b			; 138
  1089 0348B 1C00 C        	RETL	@00000000b			; 139
  1090 0348C 1C49 C        	RETL	@01001001b			; 140
  1091 0348D 1C00 C        	RETL	@00000000b			; 141
  1092 0348E 1C59 C        	RETL	@01011001b			; 142
  1093 0348F 1C41 C        	RETL	@01000001b			; 143
  1094 03490 1C00 C        	RETL	@00000000b			; 144
  1095 03491 1C00 C        	RETL	@00000000b			; 145
  1096 03492 1C60 C        	RETL	@01100000b			; 146
  1097 03493 1C30 C        	RETL	@00110000b			; 147
  1098 03494 1C50 C        	RETL	@01010000b			; 148
  1099 03495 1C00 C        	RETL	@00000000b			; 149
  1100 03496 1C08 C        	RETL	@00001000b			; 150
  1101 03497 1C08 C        	RETL	@00001000b			; 151
  1102 03498 1C10 C        	RETL	@00010000b			; 152
  1103 03499 1C0E C        	RETL	@00001110b			; 153
  1104 0349A 1C56 C        	RETL	@01010110b			; 154
  1105 0349B 1C08 C        	RETL	@00001000b			; 155
  1106 0349C 1C15 C        	RETL	@00010101b			; 156
  1107 0349D 1C00 C        	RETL	@00000000b			; 157
  1108 0349E 1C59 C        	RETL	@01011001b			; 158
  1109 0349F 1C48 C        	RETL	@01001000b			; 159
  1110 034A0 1C00 C        	RETL	@00000000b			; 160
  1111 034A1 1C07 C        	RETL	@00000111b			; 161
  1112 034A2 1C32 C        	RETL	@00110010b			; 162
  1113 034A3 1C51 C        	RETL	@01010001b			; 163
  1114 034A4 1C22 C        	RETL	@00100010b			; 164
  1115 034A5 1C2A C        	RETL	@00101010b			; 165
  1116 034A6 1C00 C        	RETL	@00000000b			; 166
  1117 034A7 1C4C C        	RETL	@01001100b			; 167
  1118 034A8 1C10 C        	RETL	@00010000b			; 168
  1119 034A9 1C43 C        	RETL	@01000011b			; 169
  1120 034AA 1C15 C        	RETL	@00010101b			; 170
  1121 034AB 1C08 C        	RETL	@00001000b			; 171
  1122 034AC 1C08 C        	RETL	@00001000b			; 172
  1123 034AD 1C00 C        	RETL	@00000000b			; 173
  1124 034AE 1C55 C        	RETL	@01010101b			; 174
  1125 034AF 1C40 C        	RETL	@01000000b			; 175
  1126 034B0 1C70 C        	RETL	@01110000b			; 176
  1127 034B1 1C09 C        	RETL	@00001001b			; 177
  1128 034B2 1C3A C        	RETL	@00111010b			; 178
  1129 034B3 1C3E C        	RETL	@00111110b			; 179
  1130 034B4 1C40 C        	RETL	@01000000b			; 180
  1131 034B5 1C04 C        	RETL	@00000100b			; 181
  1132 034B6 1C40 C        	RETL	@01000000b			; 182
  1133 034B7 1C1C C        	RETL	@00011100b			; 183
  1134 034B8 1C00 C        	RETL	@00000000b			; 184
  1135 034B9 1C02 C        	RETL	@00000010b			; 185
  1136 034BA 1C38 C        	RETL	@00111000b			; 186
  1137 034BB 1C14 C        	RETL	@00010100b			; 187
  1138 034BC 1C04 C        	RETL	@00000100b			; 188
  1139 034BD 1C15 C        	RETL	@00010101b			; 189
  1140 034BE 1C04 C        	RETL	@00000100b			; 190
  1141 034BF 1C01 C        	RETL	@00000001b			; 191
  1142 034C0 1C14 C        	RETL	@00010100b			; 192
  1143 034C1 1C54 C        	RETL	@01010100b			; 193
  1144 034C2 1C34 C        	RETL	@00110100b			; 194
  1145 034C3 1C34 C        	RETL	@00110100b			; 195
  1146 034C4 1C54 C        	RETL	@01010100b			; 196
  1147 034C5 1C14 C        	RETL	@00010100b			; 197
  1148 034C6 1C7F C        	RETL	@01111111b			; 198
  1149 034C7 1C47 C        	RETL	@01000111b			; 199
  1150 034C8 1C15 C        	RETL	@00010101b			; 200
  1151 034C9 1C55 C        	RETL	@01010101b			; 201
  1152 034CA 1C35 C        	RETL	@00110101b			; 202
  1153 034CB 1C55 C        	RETL	@01010101b			; 203
  1154 034CC 1C11 C        	RETL	@00010001b			; 204
  1155 034CD 1C51 C        	RETL	@01010001b			; 205
  1156 034CE 1C31 C        	RETL	@00110001b			; 206
  1157 034CF 1C51 C        	RETL	@01010001b			; 207
  1158 034D0 1C22 C        	RETL	@00100010b			; 208
  1159 034D1 1C22 C        	RETL	@00100010b			; 209
  1160 034D2 1C11 C        	RETL	@00010001b			; 210
  1161 034D3 1C51 C        	RETL	@01010001b			; 211
  1162 034D4 1C31 C        	RETL	@00110001b			; 212
  1163 034D5 1C31 C        	RETL	@00110001b			; 213
  1164 034D6 1C51 C        	RETL	@01010001b			; 214
  1165 034D7 1C14 C        	RETL	@00010100b			; 215
  1166 034D8 1C32 C        	RETL	@00110010b			; 216
  1167 034D9 1C01 C        	RETL	@00000001b			; 217
  1168 034DA 1C41 C        	RETL	@01000001b			; 218
  1169 034DB 1C21 C        	RETL	@00100001b			; 219
  1170 034DC 1C41 C        	RETL	@01000001b			; 220
  1171 034DD 1C44 C        	RETL	@01000100b			; 221
  1172 034DE 1C22 C        	RETL	@00100010b			; 222
  1173 034DF 1C2A C        	RETL	@00101010b			; 223
  1174 034E0 1C15 C        	RETL	@00010101b			; 224
  1175 034E1 1C55 C        	RETL	@01010101b			; 225
  1176 034E2 1C35 C        	RETL	@00110101b			; 226
  1177 034E3 1C35 C        	RETL	@00110101b			; 227
  1178 034E4 1C55 C        	RETL	@01010101b			; 228
  1179 034E5 1C15 C        	RETL	@00010101b			; 229
  1180 034E6 1C15 C        	RETL	@00010101b			; 230
  1181 034E7 1C27 C        	RETL	@00100111b			; 231
  1182 034E8 1C15 C        	RETL	@00010101b			; 232
  1183 034E9 1C55 C        	RETL	@01010101b			; 233
  1184 034EA 1C35 C        	RETL	@00110101b			; 234
  1185 034EB 1C55 C        	RETL	@01010101b			; 235
  1186 034EC 1C00 C        	RETL	@00000000b			; 236
  1187 034ED 1C40 C        	RETL	@01000000b			; 237
  1188 034EE 1C20 C        	RETL	@00100000b			; 238
  1189 034EF 1C20 C        	RETL	@00100000b			; 239
  1190 034F0 1C29 C        	RETL	@00101001b			; 240
  1191 034F1 1C27 C        	RETL	@00100111b			; 241
  1192 034F2 1C09 C        	RETL	@00001001b			; 242
  1193 034F3 1C29 C        	RETL	@00101001b			; 243
  1194 034F4 1C19 C        	RETL	@00011001b			; 244
  1195 034F5 1C19 C        	RETL	@00011001b			; 245
  1196 034F6 1C29 C        	RETL	@00101001b			; 246
  1197 034F7 1C08 C        	RETL	@00001000b			; 247
  1198 034F8 1C1A C        	RETL	@00011010b			; 248
  1199 034F9 1C02 C        	RETL	@00000010b			; 249
  1200 034FA 1C42 C        	RETL	@01000010b			; 250
  1201 034FB 1C22 C        	RETL	@00100010b			; 251
  1202 034FC 1C22 C        	RETL	@00100010b			; 252
  1203 034FD 1C45 C        	RETL	@01000101b			; 253
  1204 034FE 1C0C C        	RETL	@00001100b			; 254
  1205 034FF 1C45 C        	RETL	@01000101b			; 255
  1206            C        
  1207            C        ORG	0x3500
  1208 03500      C        TabAsciiChar5:
  1209 03500 0020 C        	TBL
  1210 03501 1C04 C        	RETL	@00000100b			; 001
  1211 03502 1C1C C        	RETL	@00011100b			; 002
  1212 03503 1C1C C        	RETL	@00011100b			; 003
  1213 03504 1C08 C        	RETL	@00001000b			; 004
  1214 03505 1C0C C        	RETL	@00001100b			; 005
  1215 03506 1C0C C        	RETL	@00001100b			; 006
  1216 03507 1C01 C        	RETL	@00000001b			; 007
  1217 03508 1C03 C        	RETL	@00000011b			; 008
  1218 03509 1C07 C        	RETL	@00000111b			; 009
  1219 0350A 1C0F C        	RETL	@00001111b			; 010
  1220 0350B 1C1F C        	RETL	@00011111b			; 011
  1221 0350C 1C3F C        	RETL	@00111111b			; 012
  1222 0350D 1C7F C        	RETL	@01111111b			; 013
  1223 0350E 1C3E C        	RETL	@00111110b			; 014
  1224 0350F 1C2A C        	RETL	@00101010b			; 015
  1225 03510 1C00 C        	RETL	@00000000b			; 016
  1226 03511 1C00 C        	RETL	@00000000b			; 017
  1227 03512 1C00 C        	RETL	@00000000b			; 018
  1228 03513 1C00 C        	RETL	@00000000b			; 019
  1229 03514 1C7F C        	RETL	@01111111b			; 020
  1230 03515 1C04 C        	RETL	@00000100b			; 021
  1231 03516 1C10 C        	RETL	@00010000b			; 022
  1232 03517 1C00 C        	RETL	@00000000b			; 023
  1233 03518 1C00 C        	RETL	@00000000b			; 024
  1234 03519 1C00 C        	RETL	@00000000b			; 025
  1235 0351A 1C08 C        	RETL	@00001000b			; 026
  1236 0351B 1C08 C        	RETL	@00001000b			; 027
  1237 0351C 1C00 C        	RETL	@00000000b			; 028
  1238 0351D 1C78 C        	RETL	@01111000b			; 029
  1239 0351E 1C04 C        	RETL	@00000100b			; 030
  1240 0351F 1C10 C        	RETL	@00010000b			; 031
  1241 03520 1C00 C        	RETL	@00000000b			;  
  1242 03521 1C00 C        	RETL	@00000000b			; !
  1243 03522 1C00 C        	RETL	@00000000b			; "
  1244 03523 1C14 C        	RETL	@00010100b			; #
  1245 03524 1C24 C        	RETL	@00100100b			; $
  1246 03525 1C23 C        	RETL	@00100011b			; %
  1247 03526 1C05 C        	RETL	@00000101b			; &
  1248 03527 1C00 C        	RETL	@00000000b			; '
  1249 03528 1C00 C        	RETL	@00000000b			; (
  1250 03529 1C00 C        	RETL	@00000000b			; )
  1251 0352A 1C14 C        	RETL	@00010100b			; *
  1252 0352B 1C08 C        	RETL	@00001000b			; +
  1253 0352C 1C00 C        	RETL	@00000000b			; ,
  1254 0352D 1C00 C        	RETL	@00000000b			; -
  1255 0352E 1C00 C        	RETL	@00000000b			; .
  1256 0352F 1C20 C        	RETL	@00100000b			; /
  1257 03530 1C3E C        	RETL	@00111110b			; 0
  1258 03531 1C00 C        	RETL	@00000000b			; 1
  1259 03532 1C31 C        	RETL	@00110001b			; 2
  1260 03533 1C46 C        	RETL	@01000110b			; 3
  1261 03534 1C04 C        	RETL	@00000100b			; 4
  1262 03535 1C4E C        	RETL	@01001110b			; 5
  1263 03536 1C06 C        	RETL	@00000110b			; 6
  1264 03537 1C60 C        	RETL	@01100000b			; 7
  1265 03538 1C36 C        	RETL	@00110110b			; 8
  1266 03539 1C3C C        	RETL	@00111100b			; 9
  1267 0353A 1C00 C        	RETL	@00000000b			; :
  1268 0353B 1C00 C        	RETL	@00000000b			; ;
  1269 0353C 1C00 C        	RETL	@00000000b			; <
  1270 0353D 1C14 C        	RETL	@00010100b			; =
  1271 0353E 1C08 C        	RETL	@00001000b			; >
  1272 0353F 1C30 C        	RETL	@00110000b			; ?
  1273 03540 1C3E C        	RETL	@00111110b			; @
  1274 03541 1C3F C        	RETL	@00111111b			; A
  1275 03542 1C36 C        	RETL	@00110110b			; B
  1276 03543 1C22 C        	RETL	@00100010b			; C
  1277 03544 1C1C C        	RETL	@00011100b			; D
  1278 03545 1C41 C        	RETL	@01000001b			; E
  1279 03546 1C40 C        	RETL	@01000000b			; F
  1280 03547 1C2F C        	RETL	@00101111b			; G
  1281 03548 1C7F C        	RETL	@01111111b			; H
  1282 03549 1C00 C        	RETL	@00000000b			; I
  1283 0354A 1C40 C        	RETL	@01000000b			; J
  1284 0354B 1C41 C        	RETL	@01000001b			; K
  1285 0354C 1C01 C        	RETL	@00000001b			; L
  1286 0354D 1C7F C        	RETL	@01111111b			; M
  1287 0354E 1C7F C        	RETL	@01111111b			; N
  1288 0354F 1C3E C        	RETL	@00111110b			; O
  1289 03550 1C30 C        	RETL	@00110000b			; P
  1290 03551 1C3D C        	RETL	@00111101b			; Q
  1291 03552 1C31 C        	RETL	@00110001b			; R
  1292 03553 1C46 C        	RETL	@01000110b			; S
  1293 03554 1C40 C        	RETL	@01000000b			; T
  1294 03555 1C7E C        	RETL	@01111110b			; U
  1295 03556 1C7C C        	RETL	@01111100b			; V
  1296 03557 1C7E C        	RETL	@01111110b			; W
  1297 03558 1C63 C        	RETL	@01100011b			; X
  1298 03559 1C70 C        	RETL	@01110000b			; Y
  1299 0355A 1C61 C        	RETL	@01100001b			; Z
  1300 0355B 1C00 C        	RETL	@00000000b			; [
  1301 0355C 1C02 C        	RETL	@00000010b			; \
  1302 0355D 1C00 C        	RETL	@00000000b			; ]
  1303 0355E 1C08 C        	RETL	@00001000b			; ^
  1304 0355F 1C01 C        	RETL	@00000001b			; _
  1305 03560 1C00 C        	RETL	@00000000b			; `
  1306 03561 1C0F C        	RETL	@00001111b			; a
  1307 03562 1C0E C        	RETL	@00001110b			; b
  1308 03563 1C02 C        	RETL	@00000010b			; c
  1309 03564 1C7F C        	RETL	@01111111b			; d
  1310 03565 1C0C C        	RETL	@00001100b			; e
  1311 03566 1C20 C        	RETL	@00100000b			; f
  1312 03567 1C3E C        	RETL	@00111110b			; g
  1313 03568 1C0F C        	RETL	@00001111b			; h
  1314 03569 1C00 C        	RETL	@00000000b			; i
  1315 0356A 1C00 C        	RETL	@00000000b			; j
  1316 0356B 1C00 C        	RETL	@00000000b			; k
  1317 0356C 1C00 C        	RETL	@00000000b			; l
  1318 0356D 1C0F C        	RETL	@00001111b			; m
  1319 0356E 1C0F C        	RETL	@00001111b			; n
  1320 0356F 1C0E C        	RETL	@00001110b			; o
  1321 03570 1C08 C        	RETL	@00001000b			; p
  1322 03571 1C1F C        	RETL	@00011111b			; q
  1323 03572 1C08 C        	RETL	@00001000b			; r
  1324 03573 1C02 C        	RETL	@00000010b			; s
  1325 03574 1C02 C        	RETL	@00000010b			; t
  1326 03575 1C1F C        	RETL	@00011111b			; u
  1327 03576 1C1C C        	RETL	@00011100b			; v
  1328 03577 1C1E C        	RETL	@00011110b			; w
  1329 03578 1C11 C        	RETL	@00010001b			; x
  1330 03579 1C1E C        	RETL	@00011110b			; y
  1331 0357A 1C11 C        	RETL	@00010001b			; z
  1332 0357B 1C00 C        	RETL	@00000000b			; {
  1333 0357C 1C00 C        	RETL	@00000000b			; |
  1334 0357D 1C00 C        	RETL	@00000000b			; }
  1335 0357E 1C10 C        	RETL	@00010000b			; ~
  1336 0357F 1C00 C        	RETL	@00000000b			; cursor
  1337 03580 1C00 C        	RETL	@00000000b			; 128
  1338 03581 1C00 C        	RETL	@00000000b			; 129
  1339 03582 1C00 C        	RETL	@00000000b			; 130
  1340 03583 1C40 C        	RETL	@01000000b			; 131
  1341 03584 1C00 C        	RETL	@00000000b			; 132
  1342 03585 1C04 C        	RETL	@00000100b			; 133
  1343 03586 1C00 C        	RETL	@00000000b			; 134
  1344 03587 1C00 C        	RETL	@00000000b			; 135
  1345 03588 1C00 C        	RETL	@00000000b			; 136
  1346 03589 1C42 C        	RETL	@01000010b			; 137
  1347 0358A 1C12 C        	RETL	@00010010b			; 138
  1348 0358B 1C00 C        	RETL	@00000000b			; 139
  1349 0358C 1C41 C        	RETL	@01000001b			; 140
  1350 0358D 1C00 C        	RETL	@00000000b			; 141
  1351 0358E 1C11 C        	RETL	@00010001b			; 142
  1352 0358F 1C7F C        	RETL	@01111111b			; 143
  1353 03590 1C00 C        	RETL	@00000000b			; 144
  1354 03591 1C00 C        	RETL	@00000000b			; 145
  1355 03592 1C00 C        	RETL	@00000000b			; 146
  1356 03593 1C50 C        	RETL	@01010000b			; 147
  1357 03594 1C60 C        	RETL	@01100000b			; 148
  1358 03595 1C00 C        	RETL	@00000000b			; 149
  1359 03596 1C00 C        	RETL	@00000000b			; 150
  1360 03597 1C08 C        	RETL	@00001000b			; 151
  1361 03598 1C20 C        	RETL	@00100000b			; 152
  1362 03599 1C0E C        	RETL	@00001110b			; 153
  1363 0359A 1C00 C        	RETL	@00000000b			; 154
  1364 0359B 1C00 C        	RETL	@00000000b			; 155
  1365 0359C 1C0C C        	RETL	@00001100b			; 156
  1366 0359D 1C00 C        	RETL	@00000000b			; 157
  1367 0359E 1C10 C        	RETL	@00010000b			; 158
  1368 0359F 1C10 C        	RETL	@00010000b			; 159
  1369 035A0 1C00 C        	RETL	@00000000b			; 160
  1370 035A1 1C00 C        	RETL	@00000000b			; 161
  1371 035A2 1C40 C        	RETL	@01000000b			; 162
  1372 035A3 1C02 C        	RETL	@00000010b			; 163
  1373 035A4 1C5D C        	RETL	@01011101b			; 164
  1374 035A5 1C4A C        	RETL	@01001010b			; 165
  1375 035A6 1C00 C        	RETL	@00000000b			; 166
  1376 035A7 1C00 C        	RETL	@00000000b			; 167
  1377 035A8 1C00 C        	RETL	@00000000b			; 168
  1378 035A9 1C25 C        	RETL	@00100101b			; 169
  1379 035AA 1C0F C        	RETL	@00001111b			; 170
  1380 035AB 1C14 C        	RETL	@00010100b			; 171
  1381 035AC 1C0C C        	RETL	@00001100b			; 172
  1382 035AD 1C00 C        	RETL	@00000000b			; 173
  1383 035AE 1C23 C        	RETL	@00100011b			; 174
  1384 035AF 1C40 C        	RETL	@01000000b			; 175
  1385 035B0 1C00 C        	RETL	@00000000b			; 176
  1386 035B1 1C09 C        	RETL	@00001001b			; 177
  1387 035B2 1C00 C        	RETL	@00000000b			; 178
  1388 035B3 1C00 C        	RETL	@00000000b			; 179
  1389 035B4 1C00 C        	RETL	@00000000b			; 180
  1390 035B5 1C1E C        	RETL	@00011110b			; 181
  1391 035B6 1C7F C        	RETL	@01111111b			; 182
  1392 035B7 1C00 C        	RETL	@00000000b			; 183
  1393 035B8 1C00 C        	RETL	@00000000b			; 184
  1394 035B9 1C00 C        	RETL	@00000000b			; 185
  1395 035BA 1C00 C        	RETL	@00000000b			; 186
  1396 035BB 1C08 C        	RETL	@00001000b			; 187
  1397 035BC 1C1F C        	RETL	@00011111b			; 188
  1398 035BD 1C1D C        	RETL	@00011101b			; 189
  1399 035BE 1C1F C        	RETL	@00011111b			; 190
  1400 035BF 1C06 C        	RETL	@00000110b			; 191
  1401 035C0 1C0F C        	RETL	@00001111b			; 192
  1402 035C1 1C0F C        	RETL	@00001111b			; 193
  1403 035C2 1C0F C        	RETL	@00001111b			; 194
  1404 035C3 1C4F C        	RETL	@01001111b			; 195
  1405 035C4 1C0F C        	RETL	@00001111b			; 196
  1406 035C5 1C0F C        	RETL	@00001111b			; 197
  1407 035C6 1C49 C        	RETL	@01001001b			; 198
  1408 035C7 1C44 C        	RETL	@01000100b			; 199
  1409 035C8 1C11 C        	RETL	@00010001b			; 200
  1410 035C9 1C11 C        	RETL	@00010001b			; 201
  1411 035CA 1C11 C        	RETL	@00010001b			; 202
  1412 035CB 1C11 C        	RETL	@00010001b			; 203
  1413 035CC 1C00 C        	RETL	@00000000b			; 204
  1414 035CD 1C00 C        	RETL	@00000000b			; 205
  1415 035CE 1C00 C        	RETL	@00000000b			; 206
  1416 035CF 1C00 C        	RETL	@00000000b			; 207
  1417 035D0 1C1C C        	RETL	@00011100b			; 208
  1418 035D1 1C5F C        	RETL	@01011111b			; 209
  1419 035D2 1C0E C        	RETL	@00001110b			; 210
  1420 035D3 1C0E C        	RETL	@00001110b			; 211
  1421 035D4 1C0E C        	RETL	@00001110b			; 212
  1422 035D5 1C4E C        	RETL	@01001110b			; 213
  1423 035D6 1C0E C        	RETL	@00001110b			; 214
  1424 035D7 1C22 C        	RETL	@00100010b			; 215
  1425 035D8 1C5C C        	RETL	@01011100b			; 216
  1426 035D9 1C1E C        	RETL	@00011110b			; 217
  1427 035DA 1C1E C        	RETL	@00011110b			; 218
  1428 035DB 1C1E C        	RETL	@00011110b			; 219
  1429 035DC 1C1E C        	RETL	@00011110b			; 220
  1430 035DD 1C18 C        	RETL	@00011000b			; 221
  1431 035DE 1C1C C        	RETL	@00011100b			; 222
  1432 035DF 1C04 C        	RETL	@00000100b			; 223
  1433 035E0 1C0F C        	RETL	@00001111b			; 224
  1434 035E1 1C0F C        	RETL	@00001111b			; 225
  1435 035E2 1C0F C        	RETL	@00001111b			; 226
  1436 035E3 1C4F C        	RETL	@01001111b			; 227
  1437 035E4 1C0F C        	RETL	@00001111b			; 228
  1438 035E5 1C0F C        	RETL	@00001111b			; 229
  1439 035E6 1C0D C        	RETL	@00001101b			; 230
  1440 035E7 1C24 C        	RETL	@00100100b			; 231
  1441 035E8 1C0C C        	RETL	@00001100b			; 232
  1442 035E9 1C0C C        	RETL	@00001100b			; 233
  1443 035EA 1C0C C        	RETL	@00001100b			; 234
  1444 035EB 1C0C C        	RETL	@00001100b			; 235
  1445 035EC 1C00 C        	RETL	@00000000b			; 236
  1446 035ED 1C00 C        	RETL	@00000000b			; 237
  1447 035EE 1C00 C        	RETL	@00000000b			; 238
  1448 035EF 1C00 C        	RETL	@00000000b			; 239
  1449 035F0 1C5E C        	RETL	@01011110b			; 240
  1450 035F1 1C40 C        	RETL	@01000000b			; 241
  1451 035F2 1C06 C        	RETL	@00000110b			; 242
  1452 035F3 1C06 C        	RETL	@00000110b			; 243
  1453 035F4 1C06 C        	RETL	@00000110b			; 244
  1454 035F5 1C26 C        	RETL	@00100110b			; 245
  1455 035F6 1C06 C        	RETL	@00000110b			; 246
  1456 035F7 1C08 C        	RETL	@00001000b			; 247
  1457 035F8 1C2C C        	RETL	@00101100b			; 248
  1458 035F9 1C0F C        	RETL	@00001111b			; 249
  1459 035FA 1C0F C        	RETL	@00001111b			; 250
  1460 035FB 1C0F C        	RETL	@00001111b			; 251
  1461 035FC 1C0F C        	RETL	@00001111b			; 252
  1462 035FD 1C1E C        	RETL	@00011110b			; 253
  1463 035FE 1C00 C        	RETL	@00000000b			; 254
  1464 035FF 1C1E C        	RETL	@00011110b			; 255
  1465            C        
  1466            C        ORG	0x3600
  1467 03600      C        TabMonth:
  1468 03600 0020 C        	TBL
  1469 03601 1C1F C        	RETL	@31
  1470 03602 1C1C C        	RETL	@28
  1471 03603 1C1F C        	RETL	@31
  1472 03604 1C1E C        	RETL	@30
  1473 03605 1C1F C        	RETL	@31
  1474 03606 1C1E C        	RETL	@30
  1475 03607 1C1F C        	RETL	@31
  1476 03608 1C1F C        	RETL	@31
  1477 03609 1C1E C        	RETL	@30
  1478 0360A 1C1F C        	RETL	@31
  1479 0360B 1C1E C        	RETL	@30
  1480 0360C 1C1F C        	RETL	@31
  1481            C        
  1482 0360D      C        TabSetBit:
  1483 0360D 0020 C        	TBL
  1484 0360E 1C01 C        	RETL	@0x01
  1485 0360F 1C02 C        	RETL	@0x02
  1486 03610 1C04 C        	RETL	@0x04
  1487 03611 1C08 C        	RETL	@0x08
  1488 03612 1C10 C        	RETL	@0x10
  1489 03613 1C20 C        	RETL	@0x20
  1490 03614 1C40 C        	RETL	@0x40
  1491 03615 1C80 C        	RETL	@0x80
  1492            C        
  1493 03616      C        TabRingMelody:
  1494 03616 0020 C        	TBL
  1495 03617 1C24 C        	RETL	@STR_Jingle
  1496 03618 1C25 C        	RETL	@STR_BabyElephant
  1497 03619 1C26 C        	RETL	@STR_Bonanza
  1498 0361A 1C27 C        	RETL	@STR_Choopeta
  1499 0361B 1C28 C        	RETL	@STR_ForElise
  1500 0361C 1C29 C        	RETL	@STR_MarcheTurque
  1501 0361D 1C2A C        	RETL	@STR_ALittleNight
  1502 0361E 1C2B C        	RETL	@STR_SmokeOnWater
  1503 0361F 1C2C C        	RETL	@STR_TheEntertainer
  1504 03620 1C2D C        	RETL	@STR_FinalCountdown
  1505 03621 1C2E C        	RETL	@STR_TwinPeaks
  1506 03622 1C2F C        	RETL	@STR_ZorbaLeGrec
  1507            C        
  1508 03623      C        TabSelectChar:
  1509 03623 0020 C        	TBL
  1510            C        	; "#"输入4个字符
  1511            C        	; 0
  1512 03624 1CE0 C        	RETL	@224
  1513 03625 1CE1 C        	RETL	@225
  1514 03626 1CE2 C        	RETL	@226
  1515 03627 1CC7 C        	RETL	@199
  1516 03628 1C00 C        	RETL	@0
  1517            C        	; "0"输入14个字符
  1518            C        	; 5
  1519 03629 1C2B C        	RETL	@43
  1520 0362A 1C26 C        	RETL	@38
  1521 0362B 1C40 C        	RETL	@64
  1522 0362C 1C30 C        	RETL	@48
  1523 0362D 1C2F C        	RETL	@47
  1524 0362E 1C25 C        	RETL	@37
  1525 0362F 1C2A C        	RETL	@42
  1526 03630 1C23 C        	RETL	@35
  1527 03631 1C24 C        	RETL	@36
  1528 03632 1CA3 C        	RETL	@163
  1529 03633 1CA5 C        	RETL	@165
  1530 03634 1CA7 C        	RETL	@167
  1531 03635 1CBF C        	RETL	@191
  1532 03636 1CA1 C        	RETL	@161
  1533 03637 1C00 C        	RETL	@0
  1534            C        	; "1"输入19个字符
  1535            C        	; 20
  1536 03638 1C20 C        	RETL	@32
  1537 03639 1C2D C        	RETL	@45
  1538 0363A 1C3F C        	RETL	@63
  1539 0363B 1C21 C        	RETL	@33
  1540 0363C 1C31 C        	RETL	@49
  1541 0363D 1C2C C        	RETL	@44
  1542 0363E 1C2E C        	RETL	@46
  1543 0363F 1C3A C        	RETL	@58
  1544 03640 1C3B C        	RETL	@59
  1545 03641 1C22 C        	RETL	@34
  1546 03642 1C27 C        	RETL	@39
  1547 03643 1C3C C        	RETL	@60
  1548 03644 1C3D C        	RETL	@61
  1549 03645 1C3E C        	RETL	@62
  1550 03646 1C28 C        	RETL	@40
  1551 03647 1C29 C        	RETL	@41
  1552 03648 1C7B C        	RETL	@123
  1553 03649 1C7D C        	RETL	@125
  1554 0364A 1C5F C        	RETL	@95
  1555 0364B 1C00 C        	RETL	@0
  1556            C        	; "2"大写输入12个字符
  1557            C        	; 40
  1558 0364C 1C41 C        	RETL	@65
  1559 0364D 1C42 C        	RETL	@66
  1560 0364E 1C43 C        	RETL	@67
  1561 0364F 1C32 C        	RETL	@50
  1562 03650 1CC0 C        	RETL	@192
  1563 03651 1CC1 C        	RETL	@193
  1564 03652 1CC2 C        	RETL	@194
  1565 03653 1CC3 C        	RETL	@195
  1566 03654 1CC4 C        	RETL	@196
  1567 03655 1CC5 C        	RETL	@197
  1568 03656 1CC6 C        	RETL	@198
  1569 03657 1CC7 C        	RETL	@199
  1570 03658 1C00 C        	RETL	@0
  1571            C        	; "2"小写输入12个字符
  1572            C        	; 53
  1573 03659 1C61 C        	RETL	@97
  1574 0365A 1C62 C        	RETL	@98
  1575 0365B 1C63 C        	RETL	@99
  1576 0365C 1C32 C        	RETL	@50
  1577 0365D 1CE0 C        	RETL	@224
  1578 0365E 1CE1 C        	RETL	@225
  1579 0365F 1CE2 C        	RETL	@226
  1580 03660 1CE3 C        	RETL	@227
  1581 03661 1CE4 C        	RETL	@228
  1582 03662 1CE5 C        	RETL	@229
  1583 03663 1CE6 C        	RETL	@230
  1584 03664 1CE7 C        	RETL	@231
  1585 03665 1C00 C        	RETL	@0
  1586            C        	; "3"大写输入8个字符
  1587            C        	; 66
  1588 03666 1C44 C        	RETL	@68
  1589 03667 1C45 C        	RETL	@69
  1590 03668 1C46 C        	RETL	@70
  1591 03669 1C33 C        	RETL	@51
  1592 0366A 1CC8 C        	RETL	@200
  1593 0366B 1CC9 C        	RETL	@201
  1594 0366C 1CCA C        	RETL	@202
  1595 0366D 1CCB C        	RETL	@203
  1596 0366E 1C00 C        	RETL	@0
  1597            C        	; "3"小写输入8个字符
  1598            C        	; 75
  1599 0366F 1C64 C        	RETL	@100
  1600 03670 1C65 C        	RETL	@101
  1601 03671 1C66 C        	RETL	@102
  1602 03672 1C33 C        	RETL	@51
  1603 03673 1CE8 C        	RETL	@232
  1604 03674 1CE9 C        	RETL	@233
  1605 03675 1CEA C        	RETL	@234
  1606 03676 1CEB C        	RETL	@235
  1607 03677 1C00 C        	RETL	@0
  1608            C        	; "4"大写输入8个字符
  1609            C        	; 84
  1610 03678 1C47 C        	RETL	@71
  1611 03679 1C48 C        	RETL	@72
  1612 0367A 1C49 C        	RETL	@73
  1613 0367B 1C34 C        	RETL	@52
  1614 0367C 1CCC C        	RETL	@204
  1615 0367D 1CCD C        	RETL	@205
  1616 0367E 1CCE C        	RETL	@206
  1617 0367F 1CCF C        	RETL	@207
  1618 03680 1C00 C        	RETL	@0
  1619            C        	; "4"小写输入8个字符
  1620            C        	; 93
  1621 03681 1C67 C        	RETL	@103
  1622 03682 1C68 C        	RETL	@104
  1623 03683 1C69 C        	RETL	@105
  1624 03684 1C34 C        	RETL	@52
  1625 03685 1CEC C        	RETL	@236
  1626 03686 1CED C        	RETL	@237
  1627 03687 1CEE C        	RETL	@238
  1628 03688 1CEF C        	RETL	@239
  1629 03689 1C00 C        	RETL	@0
  1630            C        	; "5"大写输入4个字符
  1631            C        	; 102
  1632 0368A 1C4A C        	RETL	@74
  1633 0368B 1C4B C        	RETL	@75
  1634 0368C 1C4C C        	RETL	@76
  1635 0368D 1C35 C        	RETL	@53
  1636 0368E 1C00 C        	RETL	@0
  1637            C        	; "5"小写输入4个字符
  1638            C        	; 107
  1639 0368F 1C6A C        	RETL	@106
  1640 03690 1C6B C        	RETL	@107
  1641 03691 1C6C C        	RETL	@108
  1642 03692 1C35 C        	RETL	@53
  1643 03693 1C00 C        	RETL	@0
  1644            C        	; "6"大写输入10个字符
  1645            C        	; 112
  1646 03694 1C4D C        	RETL	@77
  1647 03695 1C4E C        	RETL	@78
  1648 03696 1C4F C        	RETL	@79
  1649 03697 1C36 C        	RETL	@54
  1650 03698 1CD1 C        	RETL	@209
  1651 03699 1CD2 C        	RETL	@210
  1652 0369A 1CD3 C        	RETL	@211
  1653 0369B 1CD4 C        	RETL	@212
  1654 0369C 1CD5 C        	RETL	@213
  1655 0369D 1CD6 C        	RETL	@214
  1656 0369E 1C00 C        	RETL	@0
  1657            C        	; "6"小写输入10个字符
  1658            C        	; 123
  1659 0369F 1C6D C        	RETL	@109
  1660 036A0 1C6E C        	RETL	@110
  1661 036A1 1C6F C        	RETL	@111
  1662 036A2 1C36 C        	RETL	@54
  1663 036A3 1CF1 C        	RETL	@241
  1664 036A4 1CF2 C        	RETL	@242
  1665 036A5 1CF3 C        	RETL	@243
  1666 036A6 1CF4 C        	RETL	@244
  1667 036A7 1CF5 C        	RETL	@245
  1668 036A8 1CF6 C        	RETL	@246
  1669 036A9 1C00 C        	RETL	@0
  1670            C        	; "7"大写输入6个字符
  1671            C        	; 134
  1672 036AA 1C50 C        	RETL	@80
  1673 036AB 1C51 C        	RETL	@81
  1674 036AC 1C52 C        	RETL	@82
  1675 036AD 1C53 C        	RETL	@83
  1676 036AE 1C37 C        	RETL	@55
  1677 036AF 1CDE C        	RETL	@222
  1678 036B0 1C00 C        	RETL	@0
  1679            C        	; "7小写输入6个字符
  1680            C        	; 141
  1681 036B1 1C70 C        	RETL	@112
  1682 036B2 1C71 C        	RETL	@113
  1683 036B3 1C72 C        	RETL	@114
  1684 036B4 1C73 C        	RETL	@115
  1685 036B5 1C37 C        	RETL	@55
  1686 036B6 1CFE C        	RETL	@254
  1687 036B7 1C00 C        	RETL	@0
  1688            C        	; "8"大写输入8个字符
  1689            C        	; 148
  1690 036B8 1C54 C        	RETL	@84
  1691 036B9 1C55 C        	RETL	@85
  1692 036BA 1C56 C        	RETL	@86
  1693 036BB 1C38 C        	RETL	@56
  1694 036BC 1CD9 C        	RETL	@217
  1695 036BD 1CDA C        	RETL	@218
  1696 036BE 1CDB C        	RETL	@219
  1697 036BF 1CDC C        	RETL	@220
  1698 036C0 1C00 C        	RETL	@0
  1699            C        	; "8"小写输入8个字符
  1700            C        	; 157
  1701 036C1 1C74 C        	RETL	@116
  1702 036C2 1C75 C        	RETL	@117
  1703 036C3 1C76 C        	RETL	@118
  1704 036C4 1C38 C        	RETL	@56
  1705 036C5 1CF8 C        	RETL	@248
  1706 036C6 1CF9 C        	RETL	@249
  1707 036C7 1CFA C        	RETL	@250
  1708 036C8 1CFB C        	RETL	@251
  1709 036C9 1C00 C        	RETL	@0
  1710            C        	; "9"大写输入8个字符
  1711            C        	; 166
  1712 036CA 1C57 C        	RETL	@87
  1713 036CB 1C58 C        	RETL	@88
  1714 036CC 1C59 C        	RETL	@89
  1715 036CD 1C5A C        	RETL	@90
  1716 036CE 1C39 C        	RETL	@57
  1717 036CF 1C9F C        	RETL	@159
  1718 036D0 1CDD C        	RETL	@221
  1719 036D1 1C8E C        	RETL	@142
  1720 036D2 1C00 C        	RETL	@0
  1721            C        	; "9"小写输入8个字符
  1722            C        	; 175
  1723 036D3 1C77 C        	RETL	@119
  1724 036D4 1C78 C        	RETL	@120
  1725 036D5 1C79 C        	RETL	@121
  1726 036D6 1C7A C        	RETL	@122
  1727 036D7 1C39 C        	RETL	@57
  1728 036D8 1CFF C        	RETL	@255
  1729 036D9 1CFD C        	RETL	@253
  1730 036DA 1C9E C        	RETL	@158
  1731 036DB 1C00 C        	RETL	@0
  1732            C        	
  1733            C        
  1734            C        
  1735            C        
   209                     INCLUDE	"string.asm"
     1            C        
     2            C        ORG	0x3800
     3            C        
     4 03800      C        TabString_null:
     5 03800 0020 C        	TBL
     6 03801 1C6E C        	RETL	@110
     7 03802 1C75 C        	RETL	@117
     8 03803 1C6C C        	RETL	@108
     9 03804 1C6C C        	RETL	@108
    10 03805 1C00 C        	RETL	@0
    11            C        
    12 03806      C        TabString_total:
    13 03806 0020 C        	TBL
    14 03807 1C74 C        	RETL	@116
    15 03808 1C6F C        	RETL	@111
    16 03809 1C74 C        	RETL	@116
    17 0380A 1C61 C        	RETL	@97
    18 0380B 1C6C C        	RETL	@108
    19 0380C 1C00 C        	RETL	@0
    20            C        
    21 0380D      C        TabString_new:
    22 0380D 0020 C        	TBL
    23 0380E 1C6E C        	RETL	@110
    24 0380F 1C65 C        	RETL	@101
    25 03810 1C77 C        	RETL	@119
    26 03811 1C00 C        	RETL	@0
    27            C        
    28 03812      C        TabString_number:
    29 03812 0020 C        	TBL
    30 03813 1C6E C        	RETL	@110
    31 03814 1C75 C        	RETL	@117
    32 03815 1C6D C        	RETL	@109
    33 03816 1C62 C        	RETL	@98
    34 03817 1C65 C        	RETL	@101
    35 03818 1C72 C        	RETL	@114
    36 03819 1C00 C        	RETL	@0
    37            C        
    38 0381A      C        TabString_PreHFdial:
    39 0381A 0020 C        	TBL
    40 0381B 1C50 C        	RETL	@80
    41 0381C 1C72 C        	RETL	@114
    42 0381D 1C65 C        	RETL	@101
    43 0381E 1C2D C        	RETL	@45
    44 0381F 1C48 C        	RETL	@72
    45 03820 1C46 C        	RETL	@70
    46 03821 1C20 C        	RETL	@32
    47 03822 1C64 C        	RETL	@100
    48 03823 1C69 C        	RETL	@105
    49 03824 1C61 C        	RETL	@97
    50 03825 1C6C C        	RETL	@108
    51 03826 1C00 C        	RETL	@0
    52            C        
    53 03827      C        TabString_NoContent:
    54 03827 0020 C        	TBL
    55 03828 1C4E C        	RETL	@78
    56 03829 1C6F C        	RETL	@111
    57 0382A 1C20 C        	RETL	@32
    58 0382B 1C43 C        	RETL	@67
    59 0382C 1C6F C        	RETL	@111
    60 0382D 1C6E C        	RETL	@110
    61 0382E 1C74 C        	RETL	@116
    62 0382F 1C65 C        	RETL	@101
    63 03830 1C6E C        	RETL	@110
    64 03831 1C74 C        	RETL	@116
    65 03832 1C00 C        	RETL	@0
    66            C        
    67 03833      C        TabString_CallList:
    68 03833 0020 C        	TBL
    69 03834 1C43 C        	RETL	@67
    70 03835 1C61 C        	RETL	@97
    71 03836 1C6C C        	RETL	@108
    72 03837 1C6C C        	RETL	@108
    73 03838 1C20 C        	RETL	@32
    74 03839 1C4C C        	RETL	@76
    75 0383A 1C69 C        	RETL	@105
    76 0383B 1C73 C        	RETL	@115
    77 0383C 1C74 C        	RETL	@116
    78 0383D 1C00 C        	RETL	@0
    79            C        
    80 0383E      C        TabString_PhoneBook:
    81 0383E 0020 C        	TBL
    82 0383F 1C50 C        	RETL	@80
    83 03840 1C68 C        	RETL	@104
    84 03841 1C6F C        	RETL	@111
    85 03842 1C6E C        	RETL	@110
    86 03843 1C65 C        	RETL	@101
    87 03844 1C20 C        	RETL	@32
    88 03845 1C42 C        	RETL	@66
    89 03846 1C6F C        	RETL	@111
    90 03847 1C6F C        	RETL	@111
    91 03848 1C6B C        	RETL	@107
    92 03849 1C00 C        	RETL	@0
    93            C        
    94 0384A      C        TabString_PleaseInput:
    95 0384A 0020 C        	TBL
    96 0384B 1C50 C        	RETL	@80
    97 0384C 1C6C C        	RETL	@108
    98 0384D 1C65 C        	RETL	@101
    99 0384E 1C61 C        	RETL	@97
   100 0384F 1C73 C        	RETL	@115
   101 03850 1C65 C        	RETL	@101
   102 03851 1C20 C        	RETL	@32
   103 03852 1C49 C        	RETL	@73
   104 03853 1C6E C        	RETL	@110
   105 03854 1C70 C        	RETL	@112
   106 03855 1C75 C        	RETL	@117
   107 03856 1C74 C        	RETL	@116
   108 03857 1C00 C        	RETL	@0
   109            C        
   110 03858      C        TabString_SystemSetting:
   111 03858 0020 C        	TBL
   112 03859 1C53 C        	RETL	@83
   113 0385A 1C79 C        	RETL	@121
   114 0385B 1C73 C        	RETL	@115
   115 0385C 1C74 C        	RETL	@116
   116 0385D 1C65 C        	RETL	@101
   117 0385E 1C6D C        	RETL	@109
   118 0385F 1C20 C        	RETL	@32
   119 03860 1C53 C        	RETL	@83
   120 03861 1C65 C        	RETL	@101
   121 03862 1C74 C        	RETL	@116
   122 03863 1C74 C        	RETL	@116
   123 03864 1C69 C        	RETL	@105
   124 03865 1C6E C        	RETL	@110
   125 03866 1C67 C        	RETL	@103
   126 03867 1C00 C        	RETL	@0
   127            C        
   128 03868      C        TabString_DAM:
   129 03868 0020 C        	TBL
   130 03869 1C44 C        	RETL	@68
   131 0386A 1C41 C        	RETL	@65
   132 0386B 1C4D C        	RETL	@77
   133 0386C 1C00 C        	RETL	@0
   134            C        
   135 0386D      C        TabString_TwoWay:
   136 0386D 0020 C        	TBL
   137 0386E 1C54 C        	RETL	@84
   138 0386F 1C77 C        	RETL	@119
   139 03870 1C6F C        	RETL	@111
   140 03871 1C20 C        	RETL	@32
   141 03872 1C57 C        	RETL	@87
   142 03873 1C61 C        	RETL	@97
   143 03874 1C79 C        	RETL	@121
   144 03875 1C00 C        	RETL	@0
   145            C        
   146 03876      C        TabString_HighQuality:
   147 03876 0020 C        	TBL
   148 03877 1C32 C        	RETL	@50
   149 03878 1C30 C        	RETL	@48
   150 03879 1C6D C        	RETL	@109
   151 0387A 1C69 C        	RETL	@105
   152 0387B 1C6E C        	RETL	@110
   153 0387C 1C75 C        	RETL	@117
   154 0387D 1C74 C        	RETL	@116
   155 0387E 1C65 C        	RETL	@101
   156 0387F 1C20 C        	RETL	@32
   157 03880 1C48 C        	RETL	@72
   158 03881 1C69 C        	RETL	@105
   159 03882 1C2D C        	RETL	@45
   160 03883 1C46 C        	RETL	@70
   161 03884 1C69 C        	RETL	@105
   162 03885 1C00 C        	RETL	@0
   163            C        
   164 03886      C        TabString_LowQuality:
   165 03886 0020 C        	TBL
   166 03887 1C35 C        	RETL	@53
   167 03888 1C30 C        	RETL	@48
   168 03889 1C6D C        	RETL	@109
   169 0388A 1C69 C        	RETL	@105
   170 0388B 1C6E C        	RETL	@110
   171 0388C 1C75 C        	RETL	@117
   172 0388D 1C74 C        	RETL	@116
   173 0388E 1C65 C        	RETL	@101
   174 0388F 1C20 C        	RETL	@32
   175 03890 1C4C C        	RETL	@76
   176 03891 1C6F C        	RETL	@111
   177 03892 1C77 C        	RETL	@119
   178 03893 1C20 C        	RETL	@32
   179 03894 1C71 C        	RETL	@113
   180 03895 1C6C C        	RETL	@108
   181 03896 1C74 C        	RETL	@116
   182 03897 1C00 C        	RETL	@0
   183            C        
   184 03898      C        TabString_Delete:
   185 03898 0020 C        	TBL
   186 03899 1C44 C        	RETL	@68
   187 0389A 1C65 C        	RETL	@101
   188 0389B 1C6C C        	RETL	@108
   189 0389C 1C65 C        	RETL	@101
   190 0389D 1C74 C        	RETL	@116
   191 0389E 1C65 C        	RETL	@101
   192 0389F 1C3F C        	RETL	@63
   193 038A0 1C00 C        	RETL	@0
   194            C        
   195 038A1      C        TabString_BrowsePhonebook:
   196 038A1 0020 C        	TBL
   197 038A2 1C42 C        	RETL	@66
   198 038A3 1C72 C        	RETL	@114
   199 038A4 1C6F C        	RETL	@111
   200 038A5 1C77 C        	RETL	@119
   201 038A6 1C73 C        	RETL	@115
   202 038A7 1C65 C        	RETL	@101
   203 038A8 1C20 C        	RETL	@32
   204 038A9 1C50 C        	RETL	@80
   205 038AA 1C68 C        	RETL	@104
   206 038AB 1C6F C        	RETL	@111
   207 038AC 1C6E C        	RETL	@110
   208 038AD 1C65 C        	RETL	@101
   209 038AE 1C62 C        	RETL	@98
   210 038AF 1C6F C        	RETL	@111
   211 038B0 1C6F C        	RETL	@111
   212 038B1 1C6B C        	RETL	@107
   213 038B2 1C00 C        	RETL	@0
   214            C        
   215 038B3      C        TabString_EditPhonebook:
   216 038B3 0020 C        	TBL
   217 038B4 1C45 C        	RETL	@69
   218 038B5 1C64 C        	RETL	@100
   219 038B6 1C69 C        	RETL	@105
   220 038B7 1C74 C        	RETL	@116
   221 038B8 1C20 C        	RETL	@32
   222 038B9 1C50 C        	RETL	@80
   223 038BA 1C68 C        	RETL	@104
   224 038BB 1C6F C        	RETL	@111
   225 038BC 1C6E C        	RETL	@110
   226 038BD 1C65 C        	RETL	@101
   227 038BE 1C62 C        	RETL	@98
   228 038BF 1C6F C        	RETL	@111
   229 038C0 1C6F C        	RETL	@111
   230 038C1 1C6B C        	RETL	@107
   231 038C2 1C00 C        	RETL	@0
   232            C        
   233 038C3      C        TabString_Deleteall:
   234 038C3 0020 C        	TBL
   235 038C4 1C44 C        	RETL	@68
   236 038C5 1C65 C        	RETL	@101
   237 038C6 1C6C C        	RETL	@108
   238 038C7 1C65 C        	RETL	@101
   239 038C8 1C74 C        	RETL	@116
   240 038C9 1C65 C        	RETL	@101
   241 038CA 1C20 C        	RETL	@32
   242 038CB 1C61 C        	RETL	@97
   243 038CC 1C6C C        	RETL	@108
   244 038CD 1C6C C        	RETL	@108
   245 038CE 1C00 C        	RETL	@0
   246            C        
   247 038CF      C        TabString_Input:
   248 038CF 0020 C        	TBL
   249 038D0 1C49 C        	RETL	@73
   250 038D1 1C6E C        	RETL	@110
   251 038D2 1C70 C        	RETL	@112
   252 038D3 1C75 C        	RETL	@117
   253 038D4 1C74 C        	RETL	@116
   254 038D5 1C00 C        	RETL	@0
   255            C        
   256 038D6      C        TabString_Again:
   257 038D6 0020 C        	TBL
   258 038D7 1C41 C        	RETL	@65
   259 038D8 1C67 C        	RETL	@103
   260 038D9 1C61 C        	RETL	@97
   261 038DA 1C69 C        	RETL	@105
   262 038DB 1C6E C        	RETL	@110
   263 038DC 1C00 C        	RETL	@0
   264            C        
   265 038DD      C        TabString_ClockSetting:
   266 038DD 0020 C        	TBL
   267 038DE 1C43 C        	RETL	@67
   268 038DF 1C6C C        	RETL	@108
   269 038E0 1C6F C        	RETL	@111
   270 038E1 1C63 C        	RETL	@99
   271 038E2 1C6B C        	RETL	@107
   272 038E3 1C20 C        	RETL	@32
   273 038E4 1C53 C        	RETL	@83
   274 038E5 1C65 C        	RETL	@101
   275 038E6 1C74 C        	RETL	@116
   276 038E7 1C74 C        	RETL	@116
   277 038E8 1C69 C        	RETL	@105
   278 038E9 1C6E C        	RETL	@110
   279 038EA 1C67 C        	RETL	@103
   280 038EB 1C00 C        	RETL	@0
   281            C        
   282 038EC      C        TabString_PhoneSetting:
   283 038EC 0020 C        	TBL
   284 038ED 1C50 C        	RETL	@80
   285 038EE 1C68 C        	RETL	@104
   286 038EF 1C6F C        	RETL	@111
   287 038F0 1C6E C        	RETL	@110
   288 038F1 1C65 C        	RETL	@101
   289 038F2 1C20 C        	RETL	@32
   290 038F3 1C53 C        	RETL	@83
   291 038F4 1C65 C        	RETL	@101
   292 038F5 1C74 C        	RETL	@116
   293 038F6 1C74 C        	RETL	@116
   294 038F7 1C69 C        	RETL	@105
   295 038F8 1C6E C        	RETL	@110
   296 038F9 1C67 C        	RETL	@103
   297 038FA 1C00 C        	RETL	@0
   298            C        
   299            C        ORG	0x3900
   300            C        
   301 03900      C        TabString_RestoreDefault:
   302 03900 0020 C        	TBL
   303 03901 1C52 C        	RETL	@82
   304 03902 1C65 C        	RETL	@101
   305 03903 1C73 C        	RETL	@115
   306 03904 1C74 C        	RETL	@116
   307 03905 1C6F C        	RETL	@111
   308 03906 1C72 C        	RETL	@114
   309 03907 1C65 C        	RETL	@101
   310 03908 1C20 C        	RETL	@32
   311 03909 1C44 C        	RETL	@68
   312 0390A 1C65 C        	RETL	@101
   313 0390B 1C66 C        	RETL	@102
   314 0390C 1C61 C        	RETL	@97
   315 0390D 1C75 C        	RETL	@117
   316 0390E 1C6C C        	RETL	@108
   317 0390F 1C74 C        	RETL	@116
   318 03910 1C00 C        	RETL	@0
   319            C        
   320 03911      C        TabString_Play:
   321 03911 0020 C        	TBL
   322 03912 1C50 C        	RETL	@80
   323 03913 1C6C C        	RETL	@108
   324 03914 1C61 C        	RETL	@97
   325 03915 1C79 C        	RETL	@121
   326 03916 1C00 C        	RETL	@0
   327            C        
   328 03917      C        TabString_Record:
   329 03917 0020 C        	TBL
   330 03918 1C52 C        	RETL	@82
   331 03919 1C65 C        	RETL	@101
   332 0391A 1C63 C        	RETL	@99
   333 0391B 1C6F C        	RETL	@111
   334 0391C 1C72 C        	RETL	@114
   335 0391D 1C64 C        	RETL	@100
   336 0391E 1C00 C        	RETL	@0
   337            C        
   338 0391F      C        TabString_Ringmelody:
   339 0391F 0020 C        	TBL
   340 03920 1C52 C        	RETL	@82
   341 03921 1C69 C        	RETL	@105
   342 03922 1C6E C        	RETL	@110
   343 03923 1C67 C        	RETL	@103
   344 03924 1C20 C        	RETL	@32
   345 03925 1C6D C        	RETL	@109
   346 03926 1C65 C        	RETL	@101
   347 03927 1C6C C        	RETL	@108
   348 03928 1C6F C        	RETL	@111
   349 03929 1C64 C        	RETL	@100
   350 0392A 1C79 C        	RETL	@121
   351 0392B 1C00 C        	RETL	@0
   352            C        
   353 0392C      C        TabString_Ringvolume:
   354 0392C 0020 C        	TBL
   355 0392D 1C52 C        	RETL	@82
   356 0392E 1C69 C        	RETL	@105
   357 0392F 1C6E C        	RETL	@110
   358 03930 1C67 C        	RETL	@103
   359 03931 1C20 C        	RETL	@32
   360 03932 1C76 C        	RETL	@118
   361 03933 1C6F C        	RETL	@111
   362 03934 1C6C C        	RETL	@108
   363 03935 1C75 C        	RETL	@117
   364 03936 1C6D C        	RETL	@109
   365 03937 1C65 C        	RETL	@101
   366 03938 1C00 C        	RETL	@0
   367            C        
   368 03939      C        TabString_Areacode:
   369 03939 0020 C        	TBL
   370 0393A 1C41 C        	RETL	@65
   371 0393B 1C72 C        	RETL	@114
   372 0393C 1C65 C        	RETL	@101
   373 0393D 1C61 C        	RETL	@97
   374 0393E 1C20 C        	RETL	@32
   375 0393F 1C63 C        	RETL	@99
   376 03940 1C6F C        	RETL	@111
   377 03941 1C64 C        	RETL	@100
   378 03942 1C65 C        	RETL	@101
   379 03943 1C00 C        	RETL	@0
   380            C        
   381 03944      C        TabString_Flashtime:
   382 03944 0020 C        	TBL
   383 03945 1C46 C        	RETL	@70
   384 03946 1C6C C        	RETL	@108
   385 03947 1C61 C        	RETL	@97
   386 03948 1C73 C        	RETL	@115
   387 03949 1C68 C        	RETL	@104
   388 0394A 1C20 C        	RETL	@32
   389 0394B 1C74 C        	RETL	@116
   390 0394C 1C69 C        	RETL	@105
   391 0394D 1C6D C        	RETL	@109
   392 0394E 1C65 C        	RETL	@101
   393 0394F 1C00 C        	RETL	@0
   394            C        
   395 03950      C        TabString_Pausetime:
   396 03950 0020 C        	TBL
   397 03951 1C50 C        	RETL	@80
   398 03952 1C61 C        	RETL	@97
   399 03953 1C75 C        	RETL	@117
   400 03954 1C73 C        	RETL	@115
   401 03955 1C65 C        	RETL	@101
   402 03956 1C20 C        	RETL	@32
   403 03957 1C74 C        	RETL	@116
   404 03958 1C69 C        	RETL	@105
   405 03959 1C6D C        	RETL	@109
   406 0395A 1C65 C        	RETL	@101
   407 0395B 1C00 C        	RETL	@0
   408            C        
   409 0395C      C        TabString_LCDcontrast:
   410 0395C 0020 C        	TBL
   411 0395D 1C4C C        	RETL	@76
   412 0395E 1C43 C        	RETL	@67
   413 0395F 1C44 C        	RETL	@68
   414 03960 1C20 C        	RETL	@32
   415 03961 1C63 C        	RETL	@99
   416 03962 1C6F C        	RETL	@111
   417 03963 1C6E C        	RETL	@110
   418 03964 1C74 C        	RETL	@116
   419 03965 1C72 C        	RETL	@114
   420 03966 1C61 C        	RETL	@97
   421 03967 1C73 C        	RETL	@115
   422 03968 1C74 C        	RETL	@116
   423 03969 1C00 C        	RETL	@0
   424            C        
   425 0396A      C        TabString_HFDialing:
   426 0396A 0020 C        	TBL
   427 0396B 1C48 C        	RETL	@72
   428 0396C 1C46 C        	RETL	@70
   429 0396D 1C2D C        	RETL	@45
   430 0396E 1C44 C        	RETL	@68
   431 0396F 1C69 C        	RETL	@105
   432 03970 1C61 C        	RETL	@97
   433 03971 1C6C C        	RETL	@108
   434 03972 1C69 C        	RETL	@105
   435 03973 1C6E C        	RETL	@110
   436 03974 1C67 C        	RETL	@103
   437 03975 1C00 C        	RETL	@0
   438            C        
   439 03976      C        TabString_Memorecord:
   440 03976 0020 C        	TBL
   441 03977 1C4D C        	RETL	@77
   442 03978 1C65 C        	RETL	@101
   443 03979 1C6D C        	RETL	@109
   444 0397A 1C6F C        	RETL	@111
   445 0397B 1C20 C        	RETL	@32
   446 0397C 1C72 C        	RETL	@114
   447 0397D 1C65 C        	RETL	@101
   448 0397E 1C63 C        	RETL	@99
   449 0397F 1C6F C        	RETL	@111
   450 03980 1C72 C        	RETL	@114
   451 03981 1C64 C        	RETL	@100
   452 03982 1C00 C        	RETL	@0
   453            C        
   454 03983      C        TabString_OGM1record:
   455 03983 0020 C        	TBL
   456 03984 1C4F C        	RETL	@79
   457 03985 1C47 C        	RETL	@71
   458 03986 1C4D C        	RETL	@77
   459 03987 1C20 C        	RETL	@32
   460 03988 1C31 C        	RETL	@49
   461 03989 1C20 C        	RETL	@32
   462 0398A 1C72 C        	RETL	@114
   463 0398B 1C65 C        	RETL	@101
   464 0398C 1C63 C        	RETL	@99
   465 0398D 1C6F C        	RETL	@111
   466 0398E 1C72 C        	RETL	@114
   467 0398F 1C64 C        	RETL	@100
   468 03990 1C00 C        	RETL	@0
   469            C        
   470 03991      C        TabString_OGM2record:
   471 03991 0020 C        	TBL
   472 03992 1C4F C        	RETL	@79
   473 03993 1C47 C        	RETL	@71
   474 03994 1C4D C        	RETL	@77
   475 03995 1C20 C        	RETL	@32
   476 03996 1C32 C        	RETL	@50
   477 03997 1C20 C        	RETL	@32
   478 03998 1C72 C        	RETL	@114
   479 03999 1C65 C        	RETL	@101
   480 0399A 1C63 C        	RETL	@99
   481 0399B 1C6F C        	RETL	@111
   482 0399C 1C72 C        	RETL	@114
   483 0399D 1C64 C        	RETL	@100
   484 0399E 1C00 C        	RETL	@0
   485            C        
   486 0399F      C        TabString_MUTE:
   487 0399F 0020 C        	TBL
   488 039A0 1C4D C        	RETL	@77
   489 039A1 1C55 C        	RETL	@85
   490 039A2 1C54 C        	RETL	@84
   491 039A3 1C45 C        	RETL	@69
   492 039A4 1C00 C        	RETL	@0
   493            C        
   494 039A5      C        TabString_BLANK:
   495 039A5 0020 C        	TBL
   496 039A6 1C20 C        	RETL	@32
   497 039A7 1C20 C        	RETL	@32
   498 039A8 1C20 C        	RETL	@32
   499 039A9 1C20 C        	RETL	@32
   500 039AA 1C20 C        	RETL	@32
   501 039AB 1C20 C        	RETL	@32
   502 039AC 1C20 C        	RETL	@32
   503 039AD 1C20 C        	RETL	@32
   504 039AE 1C00 C        	RETL	@0
   505            C        
   506 039AF      C        TabString_Jingle:
   507 039AF 0020 C        	TBL
   508 039B0 1C4A C        	RETL	@74
   509 039B1 1C69 C        	RETL	@105
   510 039B2 1C6E C        	RETL	@110
   511 039B3 1C67 C        	RETL	@103
   512 039B4 1C6C C        	RETL	@108
   513 039B5 1C65 C        	RETL	@101
   514 039B6 1C00 C        	RETL	@0
   515            C        
   516 039B7      C        TabString_BabyElephant:
   517 039B7 0020 C        	TBL
   518 039B8 1C42 C        	RETL	@66
   519 039B9 1C61 C        	RETL	@97
   520 039BA 1C62 C        	RETL	@98
   521 039BB 1C79 C        	RETL	@121
   522 039BC 1C20 C        	RETL	@32
   523 039BD 1C45 C        	RETL	@69
   524 039BE 1C6C C        	RETL	@108
   525 039BF 1C65 C        	RETL	@101
   526 039C0 1C70 C        	RETL	@112
   527 039C1 1C68 C        	RETL	@104
   528 039C2 1C61 C        	RETL	@97
   529 039C3 1C6E C        	RETL	@110
   530 039C4 1C74 C        	RETL	@116
   531 039C5 1C00 C        	RETL	@0
   532            C        
   533 039C6      C        TabString_Bonanza:
   534 039C6 0020 C        	TBL
   535 039C7 1C42 C        	RETL	@66
   536 039C8 1C6F C        	RETL	@111
   537 039C9 1C6E C        	RETL	@110
   538 039CA 1C61 C        	RETL	@97
   539 039CB 1C6E C        	RETL	@110
   540 039CC 1C7A C        	RETL	@122
   541 039CD 1C61 C        	RETL	@97
   542 039CE 1C00 C        	RETL	@0
   543            C        
   544 039CF      C        TabString_Choopeta:
   545 039CF 0020 C        	TBL
   546 039D0 1C43 C        	RETL	@67
   547 039D1 1C68 C        	RETL	@104
   548 039D2 1C6F C        	RETL	@111
   549 039D3 1C6F C        	RETL	@111
   550 039D4 1C70 C        	RETL	@112
   551 039D5 1C65 C        	RETL	@101
   552 039D6 1C74 C        	RETL	@116
   553 039D7 1C61 C        	RETL	@97
   554 039D8 1C00 C        	RETL	@0
   555            C        
   556 039D9      C        TabString_ForElise:
   557 039D9 0020 C        	TBL
   558 039DA 1C46 C        	RETL	@70
   559 039DB 1C6F C        	RETL	@111
   560 039DC 1C72 C        	RETL	@114
   561 039DD 1C20 C        	RETL	@32
   562 039DE 1C45 C        	RETL	@69
   563 039DF 1C6C C        	RETL	@108
   564 039E0 1C69 C        	RETL	@105
   565 039E1 1C73 C        	RETL	@115
   566 039E2 1C65 C        	RETL	@101
   567 039E3 1C00 C        	RETL	@0
   568            C        
   569 039E4      C        TabString_MarcheTurque:
   570 039E4 0020 C        	TBL
   571 039E5 1C4D C        	RETL	@77
   572 039E6 1C61 C        	RETL	@97
   573 039E7 1C72 C        	RETL	@114
   574 039E8 1C63 C        	RETL	@99
   575 039E9 1C68 C        	RETL	@104
   576 039EA 1C65 C        	RETL	@101
   577 039EB 1C20 C        	RETL	@32
   578 039EC 1C54 C        	RETL	@84
   579 039ED 1C75 C        	RETL	@117
   580 039EE 1C72 C        	RETL	@114
   581 039EF 1C71 C        	RETL	@113
   582 039F0 1C75 C        	RETL	@117
   583 039F1 1C65 C        	RETL	@101
   584 039F2 1C00 C        	RETL	@0
   585            C        
   586            C        ORG	0x3a00
   587            C        
   588 03A00      C        TabString_ALittleNight:
   589 03A00 0020 C        	TBL
   590 03A01 1C41 C        	RETL	@65
   591 03A02 1C20 C        	RETL	@32
   592 03A03 1C4C C        	RETL	@76
   593 03A04 1C69 C        	RETL	@105
   594 03A05 1C74 C        	RETL	@116
   595 03A06 1C74 C        	RETL	@116
   596 03A07 1C6C C        	RETL	@108
   597 03A08 1C65 C        	RETL	@101
   598 03A09 1C20 C        	RETL	@32
   599 03A0A 1C4E C        	RETL	@78
   600 03A0B 1C69 C        	RETL	@105
   601 03A0C 1C67 C        	RETL	@103
   602 03A0D 1C68 C        	RETL	@104
   603 03A0E 1C74 C        	RETL	@116
   604 03A0F 1C00 C        	RETL	@0
   605            C        
   606 03A10      C        TabString_SmokeOnWater:
   607 03A10 0020 C        	TBL
   608 03A11 1C53 C        	RETL	@83
   609 03A12 1C6D C        	RETL	@109
   610 03A13 1C6F C        	RETL	@111
   611 03A14 1C6B C        	RETL	@107
   612 03A15 1C65 C        	RETL	@101
   613 03A16 1C20 C        	RETL	@32
   614 03A17 1C4F C        	RETL	@79
   615 03A18 1C6E C        	RETL	@110
   616 03A19 1C20 C        	RETL	@32
   617 03A1A 1C57 C        	RETL	@87
   618 03A1B 1C61 C        	RETL	@97
   619 03A1C 1C74 C        	RETL	@116
   620 03A1D 1C65 C        	RETL	@101
   621 03A1E 1C72 C        	RETL	@114
   622 03A1F 1C00 C        	RETL	@0
   623            C        
   624 03A20      C        TabString_TheEntertainer:
   625 03A20 0020 C        	TBL
   626 03A21 1C54 C        	RETL	@84
   627 03A22 1C68 C        	RETL	@104
   628 03A23 1C65 C        	RETL	@101
   629 03A24 1C20 C        	RETL	@32
   630 03A25 1C45 C        	RETL	@69
   631 03A26 1C6E C        	RETL	@110
   632 03A27 1C74 C        	RETL	@116
   633 03A28 1C65 C        	RETL	@101
   634 03A29 1C72 C        	RETL	@114
   635 03A2A 1C74 C        	RETL	@116
   636 03A2B 1C61 C        	RETL	@97
   637 03A2C 1C69 C        	RETL	@105
   638 03A2D 1C6E C        	RETL	@110
   639 03A2E 1C65 C        	RETL	@101
   640 03A2F 1C72 C        	RETL	@114
   641 03A30 1C00 C        	RETL	@0
   642            C        
   643 03A31      C        TabString_FinalCountdown:
   644 03A31 0020 C        	TBL
   645 03A32 1C46 C        	RETL	@70
   646 03A33 1C69 C        	RETL	@105
   647 03A34 1C6E C        	RETL	@110
   648 03A35 1C61 C        	RETL	@97
   649 03A36 1C6C C        	RETL	@108
   650 03A37 1C20 C        	RETL	@32
   651 03A38 1C43 C        	RETL	@67
   652 03A39 1C6F C        	RETL	@111
   653 03A3A 1C75 C        	RETL	@117
   654 03A3B 1C6E C        	RETL	@110
   655 03A3C 1C74 C        	RETL	@116
   656 03A3D 1C64 C        	RETL	@100
   657 03A3E 1C6F C        	RETL	@111
   658 03A3F 1C77 C        	RETL	@119
   659 03A40 1C6E C        	RETL	@110
   660 03A41 1C00 C        	RETL	@0
   661            C        
   662 03A42      C        TabString_TwinPeaks:
   663 03A42 0020 C        	TBL
   664 03A43 1C54 C        	RETL	@84
   665 03A44 1C77 C        	RETL	@119
   666 03A45 1C69 C        	RETL	@105
   667 03A46 1C6E C        	RETL	@110
   668 03A47 1C20 C        	RETL	@32
   669 03A48 1C50 C        	RETL	@80
   670 03A49 1C65 C        	RETL	@101
   671 03A4A 1C61 C        	RETL	@97
   672 03A4B 1C6B C        	RETL	@107
   673 03A4C 1C73 C        	RETL	@115
   674 03A4D 1C00 C        	RETL	@0
   675            C        
   676 03A4E      C        TabString_ZorbaLeGrec:
   677 03A4E 0020 C        	TBL
   678 03A4F 1C5A C        	RETL	@90
   679 03A50 1C6F C        	RETL	@111
   680 03A51 1C72 C        	RETL	@114
   681 03A52 1C62 C        	RETL	@98
   682 03A53 1C61 C        	RETL	@97
   683 03A54 1C20 C        	RETL	@32
   684 03A55 1C4C C        	RETL	@76
   685 03A56 1C65 C        	RETL	@101
   686 03A57 1C20 C        	RETL	@32
   687 03A58 1C47 C        	RETL	@71
   688 03A59 1C72 C        	RETL	@114
   689 03A5A 1C65 C        	RETL	@101
   690 03A5B 1C63 C        	RETL	@99
   691 03A5C 1C00 C        	RETL	@0
   692            C        
   693 03A5D      C        TabString_OFF:
   694 03A5D 0020 C        	TBL
   695 03A5E 1C4F C        	RETL	@79
   696 03A5F 1C46 C        	RETL	@70
   697 03A60 1C46 C        	RETL	@70
   698 03A61 1C00 C        	RETL	@0
   699            C        
   700 03A62      C        TabString_NoMessage:
   701 03A62 0020 C        	TBL
   702 03A63 1C4E C        	RETL	@78
   703 03A64 1C6F C        	RETL	@111
   704 03A65 1C20 C        	RETL	@32
   705 03A66 1C4D C        	RETL	@77
   706 03A67 1C65 C        	RETL	@101
   707 03A68 1C73 C        	RETL	@115
   708 03A69 1C73 C        	RETL	@115
   709 03A6A 1C61 C        	RETL	@97
   710 03A6B 1C67 C        	RETL	@103
   711 03A6C 1C65 C        	RETL	@101
   712 03A6D 1C00 C        	RETL	@0
   713            C        
   714 03A6E      C        TabString_Pause:
   715 03A6E 0020 C        	TBL
   716 03A6F 1C50 C        	RETL	@80
   717 03A70 1C61 C        	RETL	@97
   718 03A71 1C75 C        	RETL	@117
   719 03A72 1C73 C        	RETL	@115
   720 03A73 1C65 C        	RETL	@101
   721 03A74 1C00 C        	RETL	@0
   722            C        
   723 03A75      C        TabString_OGM:
   724 03A75 0020 C        	TBL
   725 03A76 1C4F C        	RETL	@79
   726 03A77 1C47 C        	RETL	@71
   727 03A78 1C4D C        	RETL	@77
   728 03A79 1C00 C        	RETL	@0
   729            C        
   730 03A7A      C        TabString_Memo:
   731 03A7A 0020 C        	TBL
   732 03A7B 1C4D C        	RETL	@77
   733 03A7C 1C65 C        	RETL	@101
   734 03A7D 1C6D C        	RETL	@109
   735 03A7E 1C6F C        	RETL	@111
   736 03A7F 1C00 C        	RETL	@0
   737            C        	
   738 03A80      C        TabString_InputNumber:
   739 03A80 0020 C        	TBL
   740 03A81 1C49 C        	RETL	@73
   741 03A82 1C6E C        	RETL	@110
   742 03A83 1C70 C        	RETL	@112
   743 03A84 1C75 C        	RETL	@117
   744 03A85 1C74 C        	RETL	@116
   745 03A86 1C20 C        	RETL	@32
   746 03A87 1C4E C        	RETL	@78
   747 03A88 1C75 C        	RETL	@117
   748 03A89 1C6D C        	RETL	@109
   749 03A8A 1C62 C        	RETL	@98
   750 03A8B 1C65 C        	RETL	@101
   751 03A8C 1C72 C        	RETL	@114
   752 03A8D 1C00 C        	RETL	@0
   753            C        
   754 03A8E      C        TabString_InputName:
   755 03A8E 0020 C        	TBL
   756 03A8F 1C49 C        	RETL	@73
   757 03A90 1C6E C        	RETL	@110
   758 03A91 1C70 C        	RETL	@112
   759 03A92 1C75 C        	RETL	@117
   760 03A93 1C74 C        	RETL	@116
   761 03A94 1C20 C        	RETL	@32
   762 03A95 1C4E C        	RETL	@78
   763 03A96 1C61 C        	RETL	@97
   764 03A97 1C6D C        	RETL	@109
   765 03A98 1C65 C        	RETL	@101
   766 03A99 1C00 C        	RETL	@0
   767            C        
   768 03A9A      C        TabString_SelectRingTone:
   769 03A9A 0020 C        	TBL
   770 03A9B 1C53 C        	RETL	@83
   771 03A9C 1C65 C        	RETL	@101
   772 03A9D 1C6C C        	RETL	@108
   773 03A9E 1C65 C        	RETL	@101
   774 03A9F 1C63 C        	RETL	@99
   775 03AA0 1C74 C        	RETL	@116
   776 03AA1 1C20 C        	RETL	@32
   777 03AA2 1C52 C        	RETL	@82
   778 03AA3 1C69 C        	RETL	@105
   779 03AA4 1C6E C        	RETL	@110
   780 03AA5 1C67 C        	RETL	@103
   781 03AA6 1C20 C        	RETL	@32
   782 03AA7 1C54 C        	RETL	@84
   783 03AA8 1C6F C        	RETL	@111
   784 03AA9 1C6E C        	RETL	@110
   785 03AAA 1C65 C        	RETL	@101
   786 03AAB 1C00 C        	RETL	@0
   787            C        
   788 03AAC      C        TabString_DateSetting:
   789 03AAC 0020 C        	TBL
   790 03AAD 1C44 C        	RETL	@68
   791 03AAE 1C61 C        	RETL	@97
   792 03AAF 1C74 C        	RETL	@116
   793 03AB0 1C65 C        	RETL	@101
   794 03AB1 1C20 C        	RETL	@32
   795 03AB2 1C53 C        	RETL	@83
   796 03AB3 1C65 C        	RETL	@101
   797 03AB4 1C74 C        	RETL	@116
   798 03AB5 1C74 C        	RETL	@116
   799 03AB6 1C69 C        	RETL	@105
   800 03AB7 1C6E C        	RETL	@110
   801 03AB8 1C67 C        	RETL	@103
   802 03AB9 1C00 C        	RETL	@0
   803            C        
   804 03ABA      C        TabString_DAMSetting:
   805 03ABA 0020 C        	TBL
   806 03ABB 1C44 C        	RETL	@68
   807 03ABC 1C41 C        	RETL	@65
   808 03ABD 1C4D C        	RETL	@77
   809 03ABE 1C20 C        	RETL	@32
   810 03ABF 1C53 C        	RETL	@83
   811 03AC0 1C65 C        	RETL	@101
   812 03AC1 1C74 C        	RETL	@116
   813 03AC2 1C74 C        	RETL	@116
   814 03AC3 1C69 C        	RETL	@105
   815 03AC4 1C6E C        	RETL	@110
   816 03AC5 1C67 C        	RETL	@103
   817 03AC6 1C00 C        	RETL	@0
   818            C        
   819 03AC7      C        TabString_RecorderON:
   820 03AC7 0020 C        	TBL
   821 03AC8 1C52 C        	RETL	@82
   822 03AC9 1C65 C        	RETL	@101
   823 03ACA 1C63 C        	RETL	@99
   824 03ACB 1C6F C        	RETL	@111
   825 03ACC 1C72 C        	RETL	@114
   826 03ACD 1C64 C        	RETL	@100
   827 03ACE 1C65 C        	RETL	@101
   828 03ACF 1C72 C        	RETL	@114
   829 03AD0 1C20 C        	RETL	@32
   830 03AD1 1C4F C        	RETL	@79
   831 03AD2 1C4E C        	RETL	@78
   832 03AD3 1C00 C        	RETL	@0
   833            C        
   834 03AD4      C        TabString_RecorderOFF:
   835 03AD4 0020 C        	TBL
   836 03AD5 1C52 C        	RETL	@82
   837 03AD6 1C65 C        	RETL	@101
   838 03AD7 1C63 C        	RETL	@99
   839 03AD8 1C6F C        	RETL	@111
   840 03AD9 1C72 C        	RETL	@114
   841 03ADA 1C64 C        	RETL	@100
   842 03ADB 1C65 C        	RETL	@101
   843 03ADC 1C72 C        	RETL	@114
   844 03ADD 1C20 C        	RETL	@32
   845 03ADE 1C4F C        	RETL	@79
   846 03ADF 1C46 C        	RETL	@70
   847 03AE0 1C46 C        	RETL	@70
   848 03AE1 1C00 C        	RETL	@0
   849            C        
   850 03AE2      C        TabString_Setringdelay:
   851 03AE2 0020 C        	TBL
   852 03AE3 1C53 C        	RETL	@83
   853 03AE4 1C65 C        	RETL	@101
   854 03AE5 1C74 C        	RETL	@116
   855 03AE6 1C20 C        	RETL	@32
   856 03AE7 1C72 C        	RETL	@114
   857 03AE8 1C69 C        	RETL	@105
   858 03AE9 1C6E C        	RETL	@110
   859 03AEA 1C67 C        	RETL	@103
   860 03AEB 1C20 C        	RETL	@32
   861 03AEC 1C64 C        	RETL	@100
   862 03AED 1C65 C        	RETL	@101
   863 03AEE 1C6C C        	RETL	@108
   864 03AEF 1C61 C        	RETL	@97
   865 03AF0 1C79 C        	RETL	@121
   866 03AF1 1C00 C        	RETL	@0
   867            C        
   868            C        ORG	0x3b00
   869            C        
   870 03B00      C        TabString_Setremotecode:
   871 03B00 0020 C        	TBL
   872 03B01 1C53 C        	RETL	@83
   873 03B02 1C65 C        	RETL	@101
   874 03B03 1C74 C        	RETL	@116
   875 03B04 1C20 C        	RETL	@32
   876 03B05 1C72 C        	RETL	@114
   877 03B06 1C65 C        	RETL	@101
   878 03B07 1C6D C        	RETL	@109
   879 03B08 1C6F C        	RETL	@111
   880 03B09 1C74 C        	RETL	@116
   881 03B0A 1C65 C        	RETL	@101
   882 03B0B 1C20 C        	RETL	@32
   883 03B0C 1C63 C        	RETL	@99
   884 03B0D 1C6F C        	RETL	@111
   885 03B0E 1C64 C        	RETL	@100
   886 03B0F 1C65 C        	RETL	@101
   887 03B10 1C00 C        	RETL	@0
   888            C        
   889 03B11      C        TabString_Setrecordtime:
   890 03B11 0020 C        	TBL
   891 03B12 1C53 C        	RETL	@83
   892 03B13 1C65 C        	RETL	@101
   893 03B14 1C74 C        	RETL	@116
   894 03B15 1C20 C        	RETL	@32
   895 03B16 1C72 C        	RETL	@114
   896 03B17 1C65 C        	RETL	@101
   897 03B18 1C63 C        	RETL	@99
   898 03B19 1C6F C        	RETL	@111
   899 03B1A 1C72 C        	RETL	@114
   900 03B1B 1C64 C        	RETL	@100
   901 03B1C 1C20 C        	RETL	@32
   902 03B1D 1C74 C        	RETL	@116
   903 03B1E 1C69 C        	RETL	@105
   904 03B1F 1C6D C        	RETL	@109
   905 03B20 1C65 C        	RETL	@101
   906 03B21 1C00 C        	RETL	@0
   907            C        
   908 03B22      C        TabString_SetOGM:
   909 03B22 0020 C        	TBL
   910 03B23 1C53 C        	RETL	@83
   911 03B24 1C65 C        	RETL	@101
   912 03B25 1C74 C        	RETL	@116
   913 03B26 1C20 C        	RETL	@32
   914 03B27 1C4F C        	RETL	@79
   915 03B28 1C47 C        	RETL	@71
   916 03B29 1C4D C        	RETL	@77
   917 03B2A 1C00 C        	RETL	@0
   918            C        
   919            C        
   920 03B2B      C        TabString_Sun:
   921 03B2B 0020 C        	TBL
   922 03B2C 1C53 C        	RETL	@83
   923 03B2D 1C75 C        	RETL	@117
   924 03B2E 1C6E C        	RETL	@110
   925 03B2F 1C00 C        	RETL	@0
   926            C        
   927 03B30      C        TabString_Mon:
   928 03B30 0020 C        	TBL
   929 03B31 1C4D C        	RETL	@77
   930 03B32 1C6F C        	RETL	@111
   931 03B33 1C6E C        	RETL	@110
   932 03B34 1C00 C        	RETL	@0
   933            C        
   934 03B35      C        TabString_Tue:
   935 03B35 0020 C        	TBL
   936 03B36 1C54 C        	RETL	@84
   937 03B37 1C75 C        	RETL	@117
   938 03B38 1C65 C        	RETL	@101
   939 03B39 1C00 C        	RETL	@0
   940            C        
   941 03B3A      C        TabString_Wed:
   942 03B3A 0020 C        	TBL
   943 03B3B 1C57 C        	RETL	@87
   944 03B3C 1C65 C        	RETL	@101
   945 03B3D 1C64 C        	RETL	@100
   946 03B3E 1C00 C        	RETL	@0
   947            C        
   948 03B3F      C        TabString_Thu:
   949 03B3F 0020 C        	TBL
   950 03B40 1C54 C        	RETL	@84
   951 03B41 1C68 C        	RETL	@104
   952 03B42 1C75 C        	RETL	@117
   953 03B43 1C00 C        	RETL	@0
   954            C        
   955 03B44      C        TabString_Fri:
   956 03B44 0020 C        	TBL
   957 03B45 1C46 C        	RETL	@70
   958 03B46 1C72 C        	RETL	@114
   959 03B47 1C69 C        	RETL	@105
   960 03B48 1C00 C        	RETL	@0
   961            C        
   962 03B49      C        TabString_Sat:
   963 03B49 0020 C        	TBL
   964 03B4A 1C53 C        	RETL	@83
   965 03B4B 1C61 C        	RETL	@97
   966 03B4C 1C74 C        	RETL	@116
   967 03B4D 1C00 C        	RETL	@0
   968            C        
   969 03B4E      C        TabString_memoryset:
   970 03B4E 0020 C        	TBL
   971 03B4F 1C6D C        	RETL	@109
   972 03B50 1C65 C        	RETL	@101
   973 03B51 1C6D C        	RETL	@109
   974 03B52 1C6F C        	RETL	@111
   975 03B53 1C72 C        	RETL	@114
   976 03B54 1C79 C        	RETL	@121
   977 03B55 1C20 C        	RETL	@32
   978 03B56 1C73 C        	RETL	@115
   979 03B57 1C65 C        	RETL	@101
   980 03B58 1C74 C        	RETL	@116
   981 03B59 1C00 C        	RETL	@0
   982            C        
   983 03B5A      C        TabString_Successful:
   984 03B5A 0020 C        	TBL
   985 03B5B 1C53 C        	RETL	@83
   986 03B5C 1C75 C        	RETL	@117
   987 03B5D 1C63 C        	RETL	@99
   988 03B5E 1C63 C        	RETL	@99
   989 03B5F 1C65 C        	RETL	@101
   990 03B60 1C73 C        	RETL	@115
   991 03B61 1C73 C        	RETL	@115
   992 03B62 1C66 C        	RETL	@102
   993 03B63 1C75 C        	RETL	@117
   994 03B64 1C6C C        	RETL	@108
   995 03B65 1C21 C        	RETL	@33
   996 03B66 1C00 C        	RETL	@0
   997            C        
   998 03B67      C        TabString_NewCall:
   999 03B67 0020 C        	TBL
  1000 03B68 1C4E C        	RETL	@78
  1001 03B69 1C65 C        	RETL	@101
  1002 03B6A 1C77 C        	RETL	@119
  1003 03B6B 1C20 C        	RETL	@32
  1004 03B6C 1C43 C        	RETL	@67
  1005 03B6D 1C61 C        	RETL	@97
  1006 03B6E 1C6C C        	RETL	@108
  1007 03B6F 1C6C C        	RETL	@108
  1008 03B70 1C00 C        	RETL	@0
  1009            C        
  1010 03B71      C        TabString_ICM:
  1011 03B71 0020 C        	TBL
  1012 03B72 1C49 C        	RETL	@73
  1013 03B73 1C43 C        	RETL	@67
  1014 03B74 1C4D C        	RETL	@77
  1015 03B75 1C00 C        	RETL	@0
  1016            C        
  1017 03B76      C        TabString_Remote:
  1018 03B76 0020 C        	TBL
  1019 03B77 1C52 C        	RETL	@82
  1020 03B78 1C65 C        	RETL	@101
  1021 03B79 1C6D C        	RETL	@109
  1022 03B7A 1C6F C        	RETL	@111
  1023 03B7B 1C74 C        	RETL	@116
  1024 03B7C 1C65 C        	RETL	@101
  1025 03B7D 1C00 C        	RETL	@0
  1026            C        
  1027 03B7E      C        TabString_Answered:
  1028 03B7E 0020 C        	TBL
  1029 03B7F 1C41 C        	RETL	@65
  1030 03B80 1C6E C        	RETL	@110
  1031 03B81 1C73 C        	RETL	@115
  1032 03B82 1C77 C        	RETL	@119
  1033 03B83 1C65 C        	RETL	@101
  1034 03B84 1C72 C        	RETL	@114
  1035 03B85 1C65 C        	RETL	@101
  1036 03B86 1C64 C        	RETL	@100
  1037 03B87 1C00 C        	RETL	@0
  1038            C        
  1039 03B88      C        TabString_RingTimes:
  1040 03B88 0020 C        	TBL
  1041 03B89 1C32 C        	RETL	@50
  1042 03B8A 1C2F C        	RETL	@47
  1043 03B8B 1C34 C        	RETL	@52
  1044 03B8C 1C2F C        	RETL	@47
  1045 03B8D 1C36 C        	RETL	@54
  1046 03B8E 1C20 C        	RETL	@32
  1047 03B8F 1C74 C        	RETL	@116
  1048 03B90 1C69 C        	RETL	@105
  1049 03B91 1C6D C        	RETL	@109
  1050 03B92 1C65 C        	RETL	@101
  1051 03B93 1C73 C        	RETL	@115
  1052 03B94 1C00 C        	RETL	@0
  1053            C        
  1054 03B95      C        TabString_ToPhonebook:
  1055 03B95 0020 C        	TBL
  1056 03B96 1C54 C        	RETL	@84
  1057 03B97 1C6F C        	RETL	@111
  1058 03B98 1C20 C        	RETL	@32
  1059 03B99 1C50 C        	RETL	@80
  1060 03B9A 1C68 C        	RETL	@104
  1061 03B9B 1C6F C        	RETL	@111
  1062 03B9C 1C6E C        	RETL	@110
  1063 03B9D 1C65 C        	RETL	@101
  1064 03B9E 1C62 C        	RETL	@98
  1065 03B9F 1C6F C        	RETL	@111
  1066 03BA0 1C6F C        	RETL	@111
  1067 03BA1 1C6B C        	RETL	@107
  1068 03BA2 1C00 C        	RETL	@0
  1069            C        
  1070 03BA3      C        TabString_EndOfList:
  1071 03BA3 0020 C        	TBL
  1072 03BA4 1C45 C        	RETL	@69
  1073 03BA5 1C6E C        	RETL	@110
  1074 03BA6 1C64 C        	RETL	@100
  1075 03BA7 1C20 C        	RETL	@32
  1076 03BA8 1C6F C        	RETL	@111
  1077 03BA9 1C66 C        	RETL	@102
  1078 03BAA 1C20 C        	RETL	@32
  1079 03BAB 1C6C C        	RETL	@108
  1080 03BAC 1C69 C        	RETL	@105
  1081 03BAD 1C73 C        	RETL	@115
  1082 03BAE 1C74 C        	RETL	@116
  1083 03BAF 1C00 C        	RETL	@0
  1084            C        
  1085 03BB0      C        TabString_Private:
  1086 03BB0 0020 C        	TBL
  1087 03BB1 1C50 C        	RETL	@80
  1088 03BB2 1C72 C        	RETL	@114
  1089 03BB3 1C69 C        	RETL	@105
  1090 03BB4 1C76 C        	RETL	@118
  1091 03BB5 1C61 C        	RETL	@97
  1092 03BB6 1C74 C        	RETL	@116
  1093 03BB7 1C65 C        	RETL	@101
  1094 03BB8 1C00 C        	RETL	@0
  1095            C        
  1096 03BB9      C        TabString_WrongMessage:
  1097 03BB9 0020 C        	TBL
  1098 03BBA 1C57 C        	RETL	@87
  1099 03BBB 1C72 C        	RETL	@114
  1100 03BBC 1C6F C        	RETL	@111
  1101 03BBD 1C6E C        	RETL	@110
  1102 03BBE 1C67 C        	RETL	@103
  1103 03BBF 1C20 C        	RETL	@32
  1104 03BC0 1C6D C        	RETL	@109
  1105 03BC1 1C65 C        	RETL	@101
  1106 03BC2 1C73 C        	RETL	@115
  1107 03BC3 1C73 C        	RETL	@115
  1108 03BC4 1C61 C        	RETL	@97
  1109 03BC5 1C67 C        	RETL	@103
  1110 03BC6 1C65 C        	RETL	@101
  1111 03BC7 1C00 C        	RETL	@0
  1112            C        
  1113 03BC8      C        TabString_Unavallable:
  1114 03BC8 0020 C        	TBL
  1115 03BC9 1C55 C        	RETL	@85
  1116 03BCA 1C6E C        	RETL	@110
  1117 03BCB 1C61 C        	RETL	@97
  1118 03BCC 1C76 C        	RETL	@118
  1119 03BCD 1C61 C        	RETL	@97
  1120 03BCE 1C6C C        	RETL	@108
  1121 03BCF 1C6C C        	RETL	@108
  1122 03BD0 1C61 C        	RETL	@97
  1123 03BD1 1C62 C        	RETL	@98
  1124 03BD2 1C6C C        	RETL	@108
  1125 03BD3 1C65 C        	RETL	@101
  1126 03BD4 1C00 C        	RETL	@0
  1127            C        
  1128            C        
   210                     
   211                     
   212                     
  0 Error(s), 0 Warning(s), 0 User Message(s)
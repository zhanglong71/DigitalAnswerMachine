.LIST

;-------------------------------------------------------------------------------
;	翻查/编辑电话本
;	NOTE : MSG_ID/MSG_T/MSG_N = current_TEL_ID/the total number of tel/the order of current tel
;-------------------------------------------------------------------------------
MAIN_PRO10:
	LAC	MSG
	XORL	CRING_IN
	BS	ACZ,MAIN_PROX_RINGIN
	
	LAC	MSG
	XORL	CVP_STOP		;PLAY END
	BS	ACZ,MAIN_PRO10_VPSTOP
	
	LAC	MSG
	XORL	CMSG_TMR
	BS	ACZ,MAIN_PRO10_TMR
	
	LAC	PRO_VAR
	SFR	4
	ANDK	0X0F
	BS	ACZ,MAIN_PRO10_0	;显示
	SBHK	1
	BS	ACZ,MAIN_PRO10_1	;翻查电话本
	SBHK	1
	BS	ACZ,MAIN_PRO10_2	;增加电话本
	
	RET
MAIN_PRO10_0:
	LAC	PRO_VAR
	SFR	8
	ANDK	0X0F
	BS	ACZ,MAIN_PRO10_0_0	;PRO_VAR(0X00A ---> 0X10A)
	SBHK	1
	BS	ACZ,MAIN_PRO10_0_1	;adjust edit/search

	RET
	
MAIN_PRO10_0_0:
	LAC	MSG
	XORL	CMSG_KEY2S
	BS	ACZ,MAIN_PRO10_0_0_TIME	;release"TIME"key
	
	RET
MAIN_PRO10_0_0_TIME:
	LACL	0X010A
	SAH	PRO_VAR
	
	RET
MAIN_PRO10_0_1:		;长按TIME再抬起之后进入的最初始状态
;MAIN_PRO10_0_1_1:	
	LAC	MSG
	XORL	CMSG_KEY8S
	BS	ACZ,MAIN_PRO10_0_1_SADJ	;REW
;MAIN_PRO10_0_1_2:
	LAC	MSG
	XORL	CMSG_KEYCS
	BS	ACZ,MAIN_PRO10_0_1_SADJ	;FFW
;MAIN_PRO10_0_1_3:
	LAC	MSG
	XORL	CMSG_KEY6S
	BS	ACZ,MAIN_PRO10_0_1_END	;EXIT
;MAIN_PRO10_0_1_4:
	LAC	MSG
	XORL	CMSG_KEY2S
	BS	ACZ,MAIN_PRO10_0_1_TIME	;TIME
		
	RET
;---------------
MAIN_PRO10_0_1_SADJ:
	LAC	MSG_N
	BS	ACZ,MAIN_PRO10_0_1_SADJ_SEARCH
;MAIN_PRO10_0_1_SADJ_EDIT:	
	LACK	0
	SAH	MSG_N

	BS	B1,MAIN_PRO10_0_1_SADJ_END
MAIN_PRO10_0_1_SADJ_SEARCH:
	LACK	1
	SAH	MSG_N
MAIN_PRO10_0_1_SADJ_END:
	CALL	INIT_DAM_FUNC
	CALL	DAA_BSPK	
	CALL	BEEP

	LACL	0X9E
	CALL	STOR_DAT
	LAC	MSG_N
	ANDK	1		;0 or 1
	CALL	STOR_DAT
		
	RET
;-------
MAIN_PRO10_VPSTOP:
	LACK	0
	SAH	PRO_VAR1		;计数器清零(按键松开后BEEP结束)	
	CALL	DAA_OFF
	
	RET
;---
MAIN_PRO10_0_1_TIME:
	LAC	MSG_N
	BS	ACZ,MAIN_PRO10_0_1_EDIT
	;BS	B1,MAIN_PRO10_0_1_SEARCH

MAIN_PRO10_0_1_SEARCH:		;从号码条目序号最小的开始
	CALL	GET_TELT
	SAH	MSG_T
	LACK	0
	SAH	MSG_ID
;!!!!!!!!!!!!!!!
	LACL	0X84
	CALL	STOR_DAT
	LAC	MSG_T
	CALL	STOR_DAT	;MSG_T条号码
	LACL	0XFF
	CALL	STOR_DAT
;!!!!!!!!!!!!!!!
	LAC	MSG_T
	BS	ACZ,MAIN_PRO10_0_2_NOTEL
	
	LACL	CMSG_KEYCS
	CALL	STOR_MSG	;下一个

	LACL	0X001A
	SAH	PRO_VAR		;进入浏览状态
	
	RET
MAIN_PRO10_0_1_EDIT:			;新增条目
	CALL	GET_TELT
	SBHK	99
	BZ	SGN,MAIN_PRO10_0_1_BOOKFUL	;条目数达到99以上,不能再增加

	CALL	INIT_DAM_FUNC
	CALL	DAA_BSPK	
	CALL	BEEP
	
	LACK	0X0001
	SAH	FILE_LEN	;添加电话本对应"号码(7..0)+姓名(15..8)"信息
				;添加电话本没有时间和OGM_ID,保存时直接为零可不予理会
	
	LACL	0X0F0F
	SAH	NEW1
	SAH	NEW2
	SAH	NEW3
	SAH	NEW4
	SAH	NEW5
	SAH	NEW6
	SAH	NEW7
	SAH	NEW8		;增加时默认的无效号码(16位)
	LACL	0XFFFF
	SAH	NEW9
	
	LACL	0XA0
	SAH	NEW_ID
	LACK	0X0F
	SAH	MSG_N

	LACL	0X002A
	SAH	PRO_VAR		;进入增加状态

	LAC	NEW_ID		;SEND COMMAND 
	CALL	STOR_DAT
	LAC	MSG_N
	CALL	STOR_DAT
	LACL	0XFF
	CALL	STOR_DAT
	
	RET
MAIN_PRO10_0_1_BOOKFUL:
	CALL	INIT_DAM_FUNC
	CALL	DAA_SPK	
	CALL	BBBEEP
	
	;LACL	0X81		;telphone book full
	;CALL	STOR_DAT
	;LACL	0X95
	;CALL	STOR_DAT
	;LACL	0XFF
	;CALL	STOR_DAT
	
	RET

MAIN_PRO10_0_2_NOTEL:
	CALL	INIT_DAM_FUNC
	CALL	DAA_SPK	
	CALL	BBBEEP

	RET	
MAIN_PRO10_0_1_END:
	CALL	INIT_DAM_FUNC
	CALL	DAA_BSPK	
	CALL	BBEEP

	LACK	0
	SAH	PRO_VAR1
	SAH	PRO_VAR

	LACL	0X9E		;exit COMMAND
	CALL	STOR_DAT
	LACK	6
	CALL	STOR_DAT

	RET

MAIN_PRO10_TMR:
	LAC	PRO_VAR1
	ADHK	1
	SAH	PRO_VAR1
	SBHK	30
	BZ	SGN,MAIN_PRO10_0_1_END

	RET

;-------------------------------------------------------------------------
MAIN_PRO10_1:
	LAC	PRO_VAR
	SFR	8
	ANDK	0X0F
	BS	ACZ,MAIN_PRO10_1_0	;翻查电话本
	SBHK	1
	BS	ACZ,MAIN_PRO10_1_1	;编辑号码
	SBHK	1
	BS	ACZ,MAIN_PRO10_1_2	;编辑姓名
	
	RET
	
MAIN_PRO10_1_0:				;翻查电话本
	LAC	PRO_VAR
	SFR	12
	ANDK	0X0F
	BS	ACZ,MAIN_PRO10_1_0_0
	SBHK	1
	BS	ACZ,MAIN_PRO10_1_0_1
MAIN_PRO10_1_0_0:
	
;MAIN_PRO10_1_0_0_2:	
	LAC	MSG
	XORL	CMSG_KEY8S
	BS	ACZ,MAIN_PRO10_1_0_0_REW	;REW
;MAIN_PRO10_1_0_0_3:
	LAC	MSG
	XORL	CMSG_KEYCS
	BS	ACZ,MAIN_PRO10_1_0_0_FFW	;FFW
;MAIN_PRO10_1_0_0_4:
	LAC	MSG
	XORL	CMSG_KEY6S
	BS	ACZ,MAIN_PRO10_X_END		;EXIT
;MAIN_PRO10_1_0_0_5:
	LAC	MSG
	XORL	CMSG_KEY2S
	BS	ACZ,MAIN_PRO10_1_0_0_TIME	;TIME
;MAIN_PRO10_1_0_0_6:
	LAC	MSG
	XORL	CMSG_KEY5S
	BS	ACZ,MAIN_PRO10_1_0_0_ERASE	;ERASE
;MAIN_PRO10_1_0_0_7:	
	LAC	MSG
	XORL	CMSG_KEY8P
	BS	ACZ,MAIN_PRO10_1_0_0_PREW	;REW
;MAIN_PRO10_1_0_0_8:	
	LAC	MSG
	XORL	CMSG_KEYCP
	BS	ACZ,MAIN_PRO10_1_0_0_PFFW	;FFW
;MAIN_PRO10_1_0_0_9:
	LAC	MSG
	XORL	CMSG_KEY9S
	BS	ACZ,MAIN_PRO10_1_0_0_MENU	;MENU(回拔)

	RET
;---------------
MAIN_PRO10_1_0_0_MENU:
	;LAC	MSG_ID
	;BS	ACZ,MAIN_PRO6_WARN	;;条目号为零,不能回拔
	BS	B1,MAIN_PRO6_0_0_MENU
	
MAIN_PRO10_1_0_0_FFW:
	CALL	INIT_DAM_FUNC
	CALL	DAA_BSPK
	CALL	BEEP
MAIN_PRO10_1_0_0_PFFW:
	LACK	0
	SAH	SYSTMP1
	LAC	MSG_T
	SAH	SYSTMP2

	LAC	MSG_ID
	CALL	VALUE_ADD
	SAH	MSG_ID
	BS	B1,MAIN_PRO10_1_0_REWFFWEXE
	
MAIN_PRO10_1_0_0_REW:
	CALL	INIT_DAM_FUNC
	CALL	DAA_BSPK
	CALL	BEEP
MAIN_PRO10_1_0_0_PREW:
	LACK	0
	SAH	SYSTMP1
	LAC	MSG_T
	SAH	SYSTMP2

	LAC	MSG_ID
	CALL	VALUE_SUB
	SAH	MSG_ID

MAIN_PRO10_1_0_REWFFWEXE:
	LAC	MSG_ID
	BS	ACZ,MAIN_PRO10_1_0_ENDLIST	;翻查到第0条

	LACL	0X101A
	SAH	PRO_VAR		;
	
	LACK	0
	SAH	PRO_VAR1
	LACL	1000
	CALL	SET_TIMER	;
	
;读出下一串(MSG_ID)号码条目
	LACK	4
	CALL	SET_TELGROUP

	LACK	RECE_BUF11
	SAH	ADDR_D		;保存地址
	LAC	MSG_ID		;条目号
	CALL	READ_TELNUM	;读当前条目数据
	CALL	STOPREADDAT
	
	LACK	RECE_BUF11
	SAH	ADDR_S
	CALL	SET_WAITFG
	SRAM	EVENT,10
;---发标志
	LACL	0X80
	CALL	STOR_DAT
	LACL	0X80
	CALL	STOR_DAT
	LACK	RECE_BUF11
	SAH	ADDR_S		;BASE
	LACK	0
	SAH	COUNT		;offset
	LACK	4		;length
	CALL	TOSENDBUF
	
	LACL	0XFF
	CALL	STOR_DAT

	RET
MAIN_PRO10_1_0_ENDLIST:		;第0条
	LAC	MSG_T
	BS	ACZ,MAIN_PRO10_1_0_NOLIST	;总条目数为0
.if	0	
	CALL	INIT_DAM_FUNC
	CALL	DAA_BSPK	
	CALL	BEEP
.endif
;!!!!!!!!!!!!!!!
	LACL	0X84
	CALL	STOR_DAT
	LAC	MSG_T
	CALL	STOR_DAT	;MSG_T条号码
	LACL	0XFF
	CALL	STOR_DAT
;!!!!!!!!!!!!!!!
	LACL	0X9F
	CALL	STOR_DAT
	LACK	0
	CALL	STOR_DAT
	LACL	0X0FF
	CALL	STOR_DAT

	RET
MAIN_PRO10_1_0_NOLIST:		;no list
	LACL	0X001A
	SAH	PRO_VAR		;电话本状态

	LACL	CMSG_KEY6S
	CALL	STOR_MSG
	
	RET
MAIN_PRO10_X_END:		;no save exit
	CALL	INIT_DAM_FUNC
	CALL	DAA_BSPK	
	CALL	BEEP
	
	LACL	0X010A
	SAH	PRO_VAR		;电话本状态
	
	LACL	0X9E
	SAH	NEW7
	CALL	STOR_DAT
	LACK	0
	SAH	MSG_N
	CALL	STOR_DAT
	LACL	0X0FF
	CALL	STOR_DAT

	RET
MAIN_PRO10_1_0_0_TIME:		;翻查电话本时进入编辑状态
	LAC	MSG_ID
	BS	ACZ,MAIN_PRO10_WARN_VP	;编辑第0条报警
	
	CALL	INIT_DAM_FUNC
	CALL	DAA_BSPK	
	CALL	BEEP
	
	LACL	0X011A
	SAH	PRO_VAR
	
	LACL	0XA0
	SAH	NEW_ID

	LAC	RECE_BUF11
	SAH	FILE_LEN	;先保存flag信息
;---移动姓名	
	LAC	FILE_LEN
	ANDK	0X7F
	ADHK	1
	SFR	2
	ADHK	2		;头部4 byte
	ADHK	RECE_BUF11
	SAH	ADDR_S		;存储姓名的开始地址
	LACK	NEW1
	ADHK	9
	SAH	ADDR_D		;转存姓名的地址
	
	LAC	FILE_LEN
	ANDK	0X7F
	ADHK	1
	SFR	1
	ANDK	0X1
	SAH	COUNT
	
	LAC	FILE_LEN
	SFR	8
	ANDK	0X7F
	CALL	MOVE_BYTEDAT	;将姓名移开(移动)
;---	
	LACK	NEW0
	SAH	ADDR_S
	SAH	ADDR_D
	LAC	FILE_LEN
	ANDK	0X7F
	CALL	DECONCEN_DAT	;将号码原地展开

	LACK	NEW0
	SAH	ADDR_S		;BASE address of tel num
	LAC	NEW_ID		;offset
	ANDK	0X0F
	SAH	COUNT
	CALL	GETBYTE_DAT
	SAH	MSG_N
MAIN_PRO10_1_X_SENDCOMM:
MAIN_PRO10_X_SENDCOMM:
	LAC	NEW_ID
	CALL	STOR_DAT	;第(NEW_ID)位
	LAC	MSG_N
	CALL	STOR_DAT	;值
	LACL	0XFF
	CALL	STOR_DAT	;值
	
	RET
MAIN_PRO10_WARN_VP:
	CALL	INIT_DAM_FUNC
	CALL	DAA_SPK
	CALL	BBBEEP
	
	RET
MAIN_PRO10_1_0_0_ERASE:	
	LAC	MSG_ID
	BS	ACZ,MAIN_PRO10_WARN_VP	;删除第0条报警
	
	;CALL	INIT_DAM_FUNC
	;CALL	DAA_BSPK	
	;CALL	BEEP		;正式删除后进入前一条,不用此处BEEP
MAIN_PRO10_1_0_0_ERASE_EXE:
;---删除本号码条目(MSG_ID)
	LAC	MSG_ID
	CALL	DEL_ONETEL
	CALL	TEL_GC_CHK
	CALL	GC_CHK

	CALL	GET_TELT
	SBH	MSG_T
	BS	ACZ,MAIN_PRO10_1_0_0_ERASE_EXE	;删除不成功，重来一次

	CALL	GET_TELT
	SAH	MSG_T

	;LACK	0
	;SAH	MSG_ID
	;LACL	0X10A
	;CALL	PRO_VAR
;!!!!!!!!!!!!!!!
	LACL	0XCC
	CALL	STOR_DAT
	LACK	1
	CALL	STOR_DAT	;第(MSG_ID)条号码
	LACL	0XFF
	CALL	STOR_DAT
;!!!!!!!!!!!!!!!
	LAC	MSG_ID
	SBHK	1
	SAH	MSG_ID		;准备显示下一条;先准备条目号
	
	BS	B1,MAIN_PRO10_1_0_0_PFFW

MAIN_PRO10_1_0_1:
;MAIN_PRO10_1_0_1_1:
	LAC	MSG	
	XORL	CBUF_EMPTY
	BS	ACZ,MAIN_PRO10_SENDCOMM
;MAIN_PRO10_1_0_1_2:
	;LAC	MSG
	;XORL	CMSG_TMR
	;BS	ACZ,MAIN_PRO10_SENDCOMM_OVER	;一秒钟,防通信故障死机
	
	RET
;---------------------------------------------------------------------
;---------------------------------------------------------------------
;---------------------------------------------------------------------
MAIN_PRO10_1_1:			;编辑电话本---号码
	
;MAIN_PRO10_1_1_0:
	LAC	MSG
	XORL	CMSG_KEY8S
	BS	ACZ,MAIN_PRO10_1_1_REW	;REW
;MAIN_PRO10_1_1_3:
	LAC	MSG
	XORL	CMSG_KEYCS
	BS	ACZ,MAIN_PRO10_1_1_FFW	;FFW
;MAIN_PRO10_1_1_4:
	LAC	MSG
	XORL	CMSG_KEY6S
	BS	ACZ,MAIN_PRO10_X_END	;EXIT
;MAIN_PRO10_1_1_5:
	LAC	MSG
	XORL	CMSG_KEY2S
	BS	ACZ,MAIN_PRO10_1_1_TIME	;TIME
;MAIN_PRO10_1_1_6:
	LAC	MSG
	XORL	CMSG_KEY9S
	BS	ACZ,MAIN_PRO10_1_1_MENU	;MENU
;MAIN_PRO10_1_1_7:
	LAC	MSG
	XORL	CMSG_KEY5S
	BS	ACZ,MAIN_PRO10_1_1_ERASE	;ERASE
;MAIN_PRO10_1_1_8:
	LAC	MSG
	XORL	CMSG_KEY8P
	BS	ACZ,MAIN_PRO10_1_1_PREW	;REW
;MAIN_PRO10_1_1_9:
	LAC	MSG
	XORL	CMSG_KEYCP
	BS	ACZ,MAIN_PRO10_1_1_PFFW	;FFW
	
	RET
	
MAIN_PRO10_1_1_REW:
	CALL	INIT_DAM_FUNC
	CALL	DAA_BSPK	
	CALL	BEEP
MAIN_PRO10_1_1_PREW:	
	LACK	0
	SAH	SYSTMP1
	LACK	9
	SAH	SYSTMP2
	
	LAC	MSG_N
	CALL	VALUE_SUB
	SAH	MSG_N
	BS	B1,MAIN_PRO10_1_X_SENDCOMM
MAIN_PRO10_1_1_FFW:
	CALL	INIT_DAM_FUNC
	CALL	DAA_BSPK	
	CALL	BEEP
MAIN_PRO10_1_1_PFFW:	
	LACK	0
	SAH	SYSTMP1
	LACK	9
	SAH	SYSTMP2
	
	LAC	MSG_N
	CALL	VALUE_ADD
	SAH	MSG_N
	
	BS	B1,MAIN_PRO10_1_X_SENDCOMM
MAIN_PRO10_1_1_ERASE:
;---是第一位?	
	LAC	NEW_ID		;The fisrt one?
	ANDK	0X0F
	BS	ACZ,MAIN_PRO10_1_1_ERASE1_1
;---是否最后一位?
	LAC	FILE_LEN
	ANDK	0X1F
	SAH	SYSTMP1		;Get length
	
	LAC	NEW_ID
	ANDK	0X0F
	ADHK	1
	SBH	SYSTMP1		;Compare length with offset(check if the last byte)
	BS	SGN,MAIN_PRO10_1_1_ERASE1_1
;---最后一位且当前位有效?	
	LAC	MSG_N
	BS	SGN,MAIN_PRO10_1_1_ERASE1_0
	SBHK	10
	BZ	SGN,MAIN_PRO10_1_1_ERASE1_0
	BS	B1,MAIN_PRO10_1_1_ERASE1_1
MAIN_PRO10_1_1_ERASE1_0:

	LAC	NEW_ID
	SBHK	1
	SAH	NEW_ID

MAIN_PRO10_1_1_ERASE1_1:
;---左移号码
	LACK	NEW0
	SAH	ADDR_S		;BASE address
	SAH	ADDR_D

	LAC	NEW_ID
	ANDK	0XF
	ADHK	1
	SAH	COUNT		;当前位的下一位为起始offset
	LACK	16
	SBH	COUNT
	CALL	SFL_BYTEDAT
MAIN_PRO10_1_1_ERASE1_2:
;---长度调整(-1或不变)
	LAC	FILE_LEN
	ANDK	0X1F
	SBHK	1
	BS	ACZ,MAIN_PRO10_1_1_ERASE2	;最短一位

	LAC	FILE_LEN
	SBHK	0X01
	SAH	FILE_LEN
MAIN_PRO10_1_1_ERASE2:	
;---末位补0X7F
	LAC	FILE_LEN		
	ANDK	0X1F
	SAH	COUNT		;本条目最末偏移处
	LACK	0X0F		;值
	CALL	STORBYTE_DAT
;---取下一位
	LAC	NEW_ID		;取下一位
	ANDK	0X0F
	SAH	COUNT
	CALL	GETBYTE_DAT
	SAH	MSG_N
;---告诉mcu删除当前位
	LAC	NEW_ID
	CALL	STOR_DAT	;第(NEW_ID)位
	LACL	0X80
	CALL	STOR_DAT	;值

	LACL	0XFF
	CALL	STOR_DAT

	LAC	NEW_ID
	CALL	STOR_DAT	;第(NEW_ID)位
	LAC	MSG_N
	CALL	STOR_DAT	;值
MAIN_PRO10_1_1_ERASEEND:
	CALL	INIT_DAM_FUNC
	CALL	DAA_BSPK	
	CALL	BEEP
		
	RET
MAIN_PRO10_1_1_TIME:		;NEXT TEL_NUM
	LAC	MSG_N
	BS	SGN,MAIN_PRO10_1_1_TIME_END
	SBHK	10
	BZ	SGN,MAIN_PRO10_1_1_TIME_END	;是无效字符(只有最后一位才是无效字符)吗?

;---保存当前值
	LACK	NEW0		;基址
	SAH	ADDR_D
	LAC	NEW_ID		;偏移
	ANDK	0X0F
	SAH	COUNT
	LAC	MSG_N		;值
	CALL	STORBYTE_DAT
;---取下一个	
	LACL	0XA0
	SAH	SYSTMP1
	LACL	0XAF
	SAH	SYSTMP2

	LAC	NEW_ID
	CALL	VALUE_ADD
	SAH	NEW_ID
;---判断是否新增加的
	LAC	FILE_LEN
	ANDK	0X1F
	SBHK	1
	ORL	0XA0
	SBH	NEW_ID
	BZ	SGN,MAIN_PRO10_1_1_TIME_1
;---新增加的	
	LACK	0X0A
	SAH	MSG_N
	
	LAC	FILE_LEN
	ADHK	1
	SAH	FILE_LEN
	BS	B1,MAIN_PRO10_1_1_TIME_END
;---取下一个	
MAIN_PRO10_1_1_TIME_1:
		
	LACK	NEW0
	SAH	ADDR_S		;BASE address
	LAC	NEW_ID		;offset
	ANDK	0X0F
	SAH	COUNT
	CALL	GETBYTE_DAT
	SAH	MSG_N
MAIN_PRO10_1_1_TIME_END:
	
	CALL	INIT_DAM_FUNC
	CALL	DAA_BSPK	
	CALL	BEEP
	
	BS	B1,MAIN_PRO10_1_X_SENDCOMM
	
MAIN_PRO10_1_1_MENU:
	LAC	MSG_N		;如果当前值是无效数字(大于10 or 小于0)则不能进入到下一位调整
	BS	SGN,MAIN_PRO10_1_1_MENU_END
	SBHK	10
	BZ	SGN,MAIN_PRO10_1_1_MENU_END
;---保存当前值
	LACK	NEW0		;基址
	SAH	ADDR_D
	LAC	NEW_ID		;偏移
	ANDK	0X0F
	SAH	COUNT
	LAC	MSG_N		;值
	CALL	STORBYTE_DAT

	LACL	0XB0
	SAH	NEW_ID

	LACK	NEW1
	ADHK	9
	SAH	ADDR_S		;BASE address
	SAH	ADDR_D
	LAC	NEW_ID		;offset
	ANDK	0X0F
	SAH	COUNT
	CALL	GETBYTE_DAT
	SAH	MSG_N

	LACL	0X021A
	SAH	PRO_VAR		;进入编辑姓名
MAIN_PRO10_1_1_MENU_END:	
	CALL	INIT_DAM_FUNC
	CALL	DAA_BSPK	
	CALL	BEEP

	BS	B1,MAIN_PRO10_1_X_SENDCOMM

MAIN_PRO10_1_2:		;编辑电话本---姓名
;MAIN_PRO10_1_2_0:
	LAC	MSG
	XORL	CMSG_KEY8S
	BS	ACZ,MAIN_PRO10_1_2_REW	;REW
;MAIN_PRO10_1_2_3:
	LAC	MSG
	XORL	CMSG_KEYCS
	BS	ACZ,MAIN_PRO10_1_2_FFW	;FFW
;MAIN_PRO10_1_2_4:
	LAC	MSG
	XORL	CMSG_KEY6S
	BS	ACZ,MAIN_PRO10_X_END	;EXIT
;MAIN_PRO10_1_2_5:
	LAC	MSG
	XORL	CMSG_KEY2S
	BS	ACZ,MAIN_PRO10_1_2_TIME	;TIME
;MAIN_PRO10_1_2_6:
	LAC	MSG
	XORL	CMSG_KEY9S
	BS	ACZ,MAIN_PRO10_1_2_MENU	;MENU
;MAIN_PRO10_1_2_7:
	LAC	MSG
	XORL	CMSG_KEY5S
	BS	ACZ,MAIN_PRO10_1_2_ERASE	;ERASE	
;MAIN_PRO10_1_2_8:
	LAC	MSG
	XORL	CMSG_KEY8P
	BS	ACZ,MAIN_PRO10_1_2_PREW	;REW
;MAIN_PRO10_1_2_9:
	LAC	MSG
	XORL	CMSG_KEYCP
	BS	ACZ,MAIN_PRO10_1_2_PFFW	;FFW
		
	RET
MAIN_PRO10_1_2_REW:
	CALL	INIT_DAM_FUNC
	CALL	DAA_BSPK	
	CALL	BEEP
MAIN_PRO10_1_2_PREW:	
	LACK	0
	SAH	SYSTMP1
	LACK	0X24
	SAH	SYSTMP2
	
	LAC	MSG_N
	CALL	VALUE_SUB
	SAH	MSG_N
	
	BS	B1,MAIN_PRO10_1_X_SENDCOMM
MAIN_PRO10_1_2_FFW:
	CALL	INIT_DAM_FUNC
	CALL	DAA_BSPK	
	CALL	BEEP
MAIN_PRO10_1_2_PFFW:	
	LACK	0
	SAH	SYSTMP1
	LACK	0X24
	SAH	SYSTMP2
	
	LAC	MSG_N
	CALL	VALUE_ADD
	SAH	MSG_N
	
	BS	B1,MAIN_PRO10_1_X_SENDCOMM

MAIN_PRO10_1_2_TIME:
	LAC	MSG_N
	BS	SGN,MAIN_PRO10_1_2_TIMEEND
	SBHK	0X25
	BZ	SGN,MAIN_PRO10_1_2_TIMEEND	;是无效字符(只有最后一位才是无效字符)吗?
	
	LAC	NEW_ID
	XORL	0XB0
	BZ	ACZ,MAIN_PRO10_1_2_TIME_1
	
	LAC	MSG_N
	XORL	0X24
	BS	ACZ,MAIN_PRO10_1_2_TIMEEND	;第一个空格不接受
MAIN_PRO10_1_2_TIME_1:
	LAC	NEW_ID
	XORL	0XBF
	BZ	ACZ,MAIN_PRO10_1_2_TIME_1_1
	
	LAC	MSG_N
	XORL	0X24
	BS	ACZ,MAIN_PRO10_1_2_TIMEEND	;最后一个空格不接受
MAIN_PRO10_1_2_TIME_1_1:
;---保存当前值		
	LACK	NEW1		;基址
	ADHK	9
	SAH	ADDR_D
	LAC	NEW_ID		;偏移
	ANDK	0X0F
	SAH	COUNT
	LAC	MSG_N		;值
	CALL	STORBYTE_DAT
;---取下一个字符
	LACL	0XB0
	SAH	SYSTMP1
	LACL	0XBF
	SAH	SYSTMP2

	LAC	NEW_ID
	CALL	VALUE_ADD
	SAH	NEW_ID		;取下一字符
;---判断是否新增加的
	LAC	FILE_LEN
	SFR	8
	ANDK	0X1F
	SBHK	1
	ORL	0XB0
	SBH	NEW_ID
	BZ	SGN,MAIN_PRO10_1_2_TIME_2
;---新增加的
	LACK	0X7F
	SAH	MSG_N
	
	LAC	FILE_LEN
	ADHL	0X0100
	SAH	FILE_LEN
	BS	B1,MAIN_PRO10_1_2_TIMEEND
;---取下一个	
MAIN_PRO10_1_2_TIME_2:
	LACK	NEW1
	ADHK	9
	SAH	ADDR_S		;BASE address
	LAC	NEW_ID		;offset
	ANDK	0X0F
	SAH	COUNT
	CALL	GETBYTE_DAT
	SAH	MSG_N
MAIN_PRO10_1_2_TIMEEND:
	
	CALL	INIT_DAM_FUNC
	CALL	DAA_BSPK	
	CALL	BEEP
	
	BS	B1,MAIN_PRO10_1_X_SENDCOMM

MAIN_PRO10_1_2_MENU:
;---保存当前值
	LACK	NEW1		;基址
	ADHK	9
	SAH	ADDR_S
	SAH	ADDR_D
	LAC	NEW_ID		;偏移
	ANDK	0X0F
	SAH	COUNT
	LAC	MSG_N		;值
	CALL	STORBYTE_DAT

	LAC	FILE_LEN
	SFR	8
	SBHK	1
	ANDK	0XF
	SAH	COUNT		;offset
	CALL	GETBYTE_DAT		;如果最后值是无效字符(大于0x24 or 小于0)则不能保存退出
	BS	SGN,MAIN_PRO10_1_2_MENU_END
	SBHK	0X24
	BZ	SGN,MAIN_PRO10_1_2_MENU_END

	LACK	0
	SAH	COUNT		;offset
	CALL	GETBYTE_DAT		;如果第一个值是无效字符(大于0x24 or 小于0)则不能保存退出

	BS	SGN,MAIN_PRO10_1_2_MENU_END
	SBHK	0X24
	BZ	SGN,MAIN_PRO10_1_2_MENU_END
	
	CALL	INIT_DAM_FUNC
	CALL	DAA_BSPK
	CALL	BEEP
;---以0XFF结束	
	LAC	FILE_LEN
	SFR	8
	ANDK	0X1F
	SAH	COUNT
	LACL	0XFF		;以0XFF结束
	CALL	STORBYTE_DAT
;---先压缩号码
	LACK	NEW0
	SAH	ADDR_S
	SAH	ADDR_D
	LAC	FILE_LEN
	ANDK	0X1F
	CALL	CONCEN_DAT
;---删除当前项
	LAC	MSG_ID
	CALL	DEL_ONETEL
	CALL	TEL_GC_CHK
	CALL	GC_CHK
;---取usr-dat并保存	
	CALL	GET_NOUSETELUSRDAT
	;SAH	PRO_VAR3
	SAH	BUF1
;---写入数据---(TEL flag)
	LAC	FILE_LEN
	ANDL	0XFF
	ORL	0X80
	CALL	DAT_WRITE
	LAC	FILE_LEN
	SFR	8
	ORL	0X80
	CALL	DAT_WRITE
	LACK	0
	CALL	DAT_WRITE
	LACK	0
	CALL	DAT_WRITE	;写入数据(TEL flag)
;---写入数据---(TEL NUM)	
	LACK	NEW0
	SAH	ADDR_S
	CALL	TELNUM_WRITE	;写入数据(TEL NUM)
;---写入数据---(TEL NAME)		
	LACK	NEW1
	ADHK	9
	SAH	ADDR_S
	CALL	TELNUM_WRITE	;写入数据(TEL NAME)	
	
	;CALL	TELTIME_WRITE	;写入数据(TEL TIME)	;????????????
	CALL	DAT_WRITE_STOP
	
	CALL	GET_TELT	;取TEL_ID
	CALL	SET_TELUSRDAT	;置usr-dat

	LAC	MSG_T
	SAH	MSG_ID
	
	LACK	0X01A
	SAH	PRO_VAR
	
	BS	B1,MAIN_PRO10_1_0_REWFFWEXE
MAIN_PRO10_1_2_MENU_END:
	CALL	INIT_DAM_FUNC
	CALL	DAA_SPK	
	CALL	BBBEEP
	
	RET
MAIN_PRO10_1_2_ERASE:
;---是第一位?		
	LAC	NEW_ID		;The fisrt one?
	ANDK	0X0F
	BS	ACZ,MAIN_PRO10_1_2_ERASE1_1
;---是否最后一位
	LAC	FILE_LEN
	SFR	8
	ANDK	0X1F
	SAH	SYSTMP1		;Get length
	
	LAC	NEW_ID
	ANDK	0X0F
	ADHK	1
	SBH	SYSTMP1		;Compare length with offset(check if the last byte)
	BS	SGN,MAIN_PRO10_1_2_ERASE1_1
;---最后一位且当前位有效?	
	LAC	MSG_N
	BS	SGN,MAIN_PRO10_1_2_ERASE1_0
	SBHK	0X25
	BZ	SGN,MAIN_PRO10_1_2_ERASE1_0
	BS	B1,MAIN_PRO10_1_2_ERASE1_1
MAIN_PRO10_1_2_ERASE1_0:

	LAC	NEW_ID
	SBHK	1
	SAH	NEW_ID
	;ANDK	0X1F
	;SAH	COUNT		;本条目最末偏移处
	;LACK	0X7F		;值
	;CALL	STORBYTE_DAT
MAIN_PRO10_1_2_ERASE1_1:
;---左移姓名
	LACK	NEW1
	ADHK	9
	SAH	ADDR_S		;BASE address
	SAH	ADDR_D

	LAC	NEW_ID
	ANDK	0XF
	ADHK	1
	SAH	COUNT		;当前位的下一位为起始offset
	LACK	16
	SBH	COUNT
	CALL	SFL_BYTEDAT
MAIN_PRO10_1_2_ERASE1_2:
;---长度调整(-1或不变)
	LAC	FILE_LEN
	SFR	8
	ANDK	0X1F
	SBHK	1
	BS	ACZ,MAIN_PRO10_1_2_ERASE2

	LAC	FILE_LEN
	SBHL	0X0100
	SAH	FILE_LEN
MAIN_PRO10_1_2_ERASE2:	
;---末位补0X7F
	LAC	FILE_LEN
	SFR	8	
	ANDK	0X1F
	SAH	COUNT		;本条目最末偏移处
	LACK	0X7F		;值
	CALL	STORBYTE_DAT
;---取下一位
	LAC	NEW_ID		;取下一位
	ANDK	0X0F
	SAH	COUNT
	CALL	GETBYTE_DAT
	SAH	MSG_N

	LAC	NEW_ID
	CALL	STOR_DAT	;第(NEW_ID)位
	LACL	0X80
	CALL	STOR_DAT	;值
	
	LACL	0XFF
	CALL	STOR_DAT

	LAC	NEW_ID
	CALL	STOR_DAT	;第(NEW_ID)位
	LAC	MSG_N
	CALL	STOR_DAT	;值
MAIN_PRO10_1_2_ERASEEND:
	CALL	INIT_DAM_FUNC
	CALL	DAA_BSPK	
	CALL	BEEP
		
	RET
;-------------------------------------------------------------------------
MAIN_PRO10_2:		;增加电话本
	LAC	PRO_VAR
	SFR	8
	ANDK	0X0F
	BS	ACZ,MAIN_PRO10_2_0	;号码
	SBHK	1
	BS	ACZ,MAIN_PRO10_2_1	;姓名

	RET
MAIN_PRO10_2_0:			;电话号码
	LAC	PRO_VAR
	SFR	12
	ANDK	0X0F
	BS	ACZ,MAIN_PRO10_2_0_0	;add-adjust number
	SBHK	1
	BS	ACZ,MAIN_PRO10_2_0_1	;end-adjust number,send number and then goto edit mode
	
MAIN_PRO10_2_0_0:
;MAIN_PRO10_2_0_0_1:
	LAC	MSG
	XORL	CMSG_KEY8S
	BS	ACZ,MAIN_PRO10_2_0_0_REW	;REW
;MAIN_PRO10_2_0_0_2:
	LAC	MSG
	XORL	CMSG_KEYCS
	BS	ACZ,MAIN_PRO10_2_0_0_FFW	;FFW
;MAIN_PRO10_2_0_0_3:
	LAC	MSG
	XORL	CMSG_KEY6S
	BS	ACZ,MAIN_PRO10_X_END	;EXIT no save
;MAIN_PRO10_2_0_0_4:
	;LAC	MSG
	;XORL	CMSG_TMR
	;BS	ACZ,MAIN_PRO10_TMR	;TMR
;MAIN_PRO10_2_0_0_5:
	LAC	MSG
	XORL	CMSG_KEY2S
	BS	ACZ,MAIN_PRO10_2_0_0_TIME	;TIME
;MAIN_PRO10_2_0_0_6:
	LAC	MSG
	XORL	CMSG_KEY9S
	BS	ACZ,MAIN_PRO10_2_0_0_MENU	;MENU
;MAIN_PRO10_2_0_0_7:
	LAC	MSG
	XORL	CMSG_KEY5S
	BS	ACZ,MAIN_PRO10_2_0_0_ERASE ;ERASE
;MAIN_PRO10_2_0_0_8:	
	LAC	MSG
	XORL	CMSG_KEY8P
	BS	ACZ,MAIN_PRO10_2_0_0_PREW	;REW
;MAIN_PRO10_2_0_0_9:
	LAC	MSG
	XORL	CMSG_KEYCP
	BS	ACZ,MAIN_PRO10_2_0_0_PFFW	;FFW

	RET
MAIN_PRO10_2_0_0_REW:
	CALL	INIT_DAM_FUNC
	CALL	DAA_BSPK	
	CALL	BEEP
MAIN_PRO10_2_0_0_PREW:
	LACK	0
	SAH	SYSTMP1
	LACK	9
	SAH	SYSTMP2
	
	LAC	MSG_N
	CALL	VALUE_SUB
	SAH	MSG_N
	
	BS	B1,MAIN_PRO10_X_SENDCOMM
MAIN_PRO10_2_0_0_FFW:
	CALL	INIT_DAM_FUNC
	CALL	DAA_BSPK	
	CALL	BEEP
MAIN_PRO10_2_0_0_PFFW:	
	LACK	0
	SAH	SYSTMP1
	LACK	9
	SAH	SYSTMP2
	
	LAC	MSG_N
	CALL	VALUE_ADD
	SAH	MSG_N

	BS	B1,MAIN_PRO10_X_SENDCOMM
			
MAIN_PRO10_2_0_0_TIME:		;调整下一位
	LAC	MSG_N		;如果当前值是无效数字(大于10 or 小于0)则不能进入到下一位调整
	BS	SGN,MAIN_PRO10_2_X_TIMEEND
	SBHK	10
	BZ	SGN,MAIN_PRO10_2_X_TIMEEND
	
	LAC	NEW_ID
	XORL	0XAF
	BS	ACZ,MAIN_PRO10_2_0_0_MENU
;---保存当前值
	LACK	NEW1		;基址
	SAH	ADDR_D
	LAC	NEW_ID		;偏移
	ANDK	0X0F
	SAH	COUNT
	LAC	MSG_N		;值
	CALL	STORBYTE_DAT
;---取下一个
	LAC	FILE_LEN
	ADHK	0X0001
	ANDK	0X001F
	SAH	FILE_LEN		;号码位数加1(可用当前NEW_ID代替)
	
	LACL	0XA0
	SAH	SYSTMP1
	LACL	0XAF
	SAH	SYSTMP2
	LAC	NEW_ID
	CALL	VALUE_ADD
	SAH	NEW_ID		;get next command

	LACK	NEW1
	SAH	ADDR_S		;BASE address
	LAC	NEW_ID		;offset
	ANDK	0X0F
	SAH	COUNT
	CALL	GETBYTE_DAT
	SAH	MSG_N
MAIN_PRO10_2_0_TIME_END:
	
	CALL	INIT_DAM_FUNC
	CALL	DAA_BSPK	
	CALL	BEEP
	
	BS	B1,MAIN_PRO10_X_SENDCOMM
MAIN_PRO10_2_X_TIMEEND:
MAIN_PRO10_2_X_MENUEND:	
	CALL	INIT_DAM_FUNC
	CALL	DAA_BSPK	
	CALL	BBEEP		;BB
	
	RET	

MAIN_PRO10_2_0_0_MENU:
	LAC	MSG_N		;如果当前值是无效数字(大于10 or 小于0)则不能进入到姓名调整
	BS	SGN,MAIN_PRO10_2_X_MENUEND
	SBHK	10
	BZ	SGN,MAIN_PRO10_2_X_MENUEND
	
	CALL	INIT_DAM_FUNC
	CALL	DAA_BSPK	
	CALL	BEEP
;---保存当前值
	LACK	NEW1		;基址
	SAH	ADDR_D
	LAC	NEW_ID		;偏移
	ANDK	0X0F
	SAH	COUNT
	LAC	MSG_N		;值
	CALL	STORBYTE_DAT
;---将号码移到别的地方暂存
	LACK	NEW1		;从NEW1开始的地方取数据
	SAH	ADDR_S
	ADHK	9		;数据存到以NEW9+1为起始地址的空间
	SAH	ADDR_D
	LACK	9
	CALL	MOVE_DAT	;移动9 words
MAIN_PRO10_2_0_0_MENU_1:	;号码处理完毕,开始姓名的处理
	LAC	FILE_LEN
	ORL	0X0100
	SAH	FILE_LEN
;!!!!!!!!!!
.IF	1	;比较==>由添加到编辑
	LACK	NEW1
	SAH	ADDR_S
	SAH	ADDR_D
	LAC	FILE_LEN
	ANDK	0X7F
	CALL	CONCEN_DAT	;就地压缩
	LAC	FILE_LEN
	SAH	NEW_ID		;
	
	LACK	NEW_ID		;地址后移2words,以便比较
	SAH	ADDR_S
	SAH	ADDR_D

	CALL	COMP_ALLTELNUM
	BS	ACZ,MAIN_PRO10_2_0_MENU_1
	SAH	MSG_ID
	;CALL	TEST_VOP ;?????????????????
;读出一串(MSG_ID)号码条目
;MAIN_PRO10_2_0_0_MENU_CHKNUM:	;!!!注意在翻查来电时可能长跳转到这里
	LACK	RECE_BUF11
	SAH	ADDR_D		;保存地址
	LAC	MSG_ID		;条目号
	CALL	READ_TELNUM	;读当前条目数据
	CALL	STOPREADDAT
	
	LACK	RECE_BUF11
	SAH	ADDR_S
	CALL	SET_WAITFG
	SRAM	EVENT,10
;---发标志
	LACL	0X80
	CALL	STOR_DAT
	LACL	0X80
	CALL	STOR_DAT
	LACK	RECE_BUF11
	SAH	ADDR_S		;BASE
	LACK	0
	SAH	COUNT		;offset
	LACK	4		;length
	CALL	TOSENDBUF
	
	LACL	0XFF
	CALL	STOR_DAT
	
	LACL	0X102A
	SAH	PRO_VAR
.ENDIF	
	RET
;读出---发送---传为编辑状态---编辑姓名状态
	

;!!!!!!!!!!
MAIN_PRO10_2_0_MENU_1:
	LACL	0X7F7F		;装入姓名字符串(以NEW1为基址的区域)
	SAH	NEW1
	SAH	NEW2
	SAH	NEW3
	SAH	NEW4
	SAH	NEW5
	SAH	NEW6
	SAH	NEW7
	SAH	NEW8
	LACL	0XFFFF
	SAH	NEW9
MAIN_PRO10_2_0_MENU_1_1:	
	LACL	0XB0
	SAH	NEW_ID

	LACK	0X7F
	SAH	MSG_N		;current value

	LACL	0X012A
	SAH	PRO_VAR		;进入编辑姓名

	BS	B1,MAIN_PRO10_X_SENDCOMM
MAIN_PRO10_2_0_0_ERASE:
	LAC	NEW_ID
	SBHL	0XA0
	BZ	ACZ,MAIN_PRO10_2_0_0_ERASE1
	
	LACK	0XF
	SAH	MSG_N
	BS	B1,MAIN_PRO10_2_0_0_ERASEEND	
MAIN_PRO10_2_0_0_ERASE1:
;---保存当前值0X0F
	LACK	NEW1		;基址
	SAH	ADDR_D
	LAC	NEW_ID		;偏移
	ANDK	0X0F
	SAH	COUNT
	LACK	0X0F		;值
	CALL	STORBYTE_DAT
;---取上一个
	LAC	FILE_LEN
	SBHK	0X01
	SAH	FILE_LEN
	
	LACL	0XA0
	SAH	SYSTMP1
	LACL	0XAF
	SAH	SYSTMP2
	LAC	NEW_ID
	CALL	VALUE_SUB
	SAH	NEW_ID		;get next command

	LACK	NEW1
	SAH	ADDR_S		;BASE address
	LAC	NEW_ID		;offset
	ANDK	0X0F
	SAH	COUNT
	CALL	GETBYTE_DAT
	SAH	MSG_N
MAIN_PRO10_2_X_ERASE_SENDCOMM:
	LAC	NEW_ID
	CALL	STOR_DAT	;第(NEW_ID)位
	LACL	0X80
	CALL	STOR_DAT	;值0X80
	LACL	0XFF
	CALL	STOR_DAT
;---BEEP
	CALL	INIT_DAM_FUNC
	CALL	DAA_BSPK	
	CALL	BEEP

	RET

MAIN_PRO10_2_0_0_ERASEEND:
	BS	B1,MAIN_PRO10_X_SENDCOMM
MAIN_PRO10_2_0_1:
	LAC	MSG	
	XORL	CBUF_EMPTY
	BS	ACZ,MAIN_PRO10_2_0_1_SENDCOMM
	
	RET
MAIN_PRO10_2_0_1_SENDCOMM:
	CALL	TEL_SENDCOMM
	BS	ACZ,MAIN_PRO10_2_0_1_SENDCOMM_END
	SBHK	1
	BZ	ACZ,MAIN_PRO10_2_0_1_SENDCOMM_DISP

;MAIN_PRO10_2_0_1_SENDCOMM_1:	;添加条目后比较有相同号码,进入编辑状态
;重新读出(MSG_ID)号码条目
	LACK	RECE_BUF11
	SAH	ADDR_D		;保存地址
	LAC	MSG_ID		;条目号
	CALL	READ_TELNUM	;读当前条目数据
	CALL	STOPREADDAT
	
	LAC	RECE_BUF11
	SAH	FILE_LEN	;号码长度和姓名长度
;---移动姓名
	LAC	FILE_LEN
	ANDK	0X7F
	ADHK	1
	SFR	2
	ADHK	2		;头部4 byte
	ADHK	RECE_BUF11
	SAH	ADDR_S		;存储姓名的开始地址
	LACK	NEW1
	ADHK	9
	SAH	ADDR_D		;转存姓名的地址
	
	LAC	FILE_LEN
	ANDK	0X7F
	ADHK	1
	SFR	1
	ANDK	0X1
	SAH	COUNT
	
	LAC	FILE_LEN
	SFR	8
	ANDK	0X7F
	CALL	MOVE_BYTEDAT	;将姓名移开(移动)
;---	
	LACK	NEW0
	SAH	ADDR_S
	SAH	ADDR_D
	LAC	FILE_LEN
	ANDK	0X7F
	CALL	DECONCEN_DAT	;将号码原地展开

	LACL	0XB0
	SAH	NEW_ID		;

	LACK	NEW1
	ADHK	9
	SAH	ADDR_S		;BASE address of tel name
	SAH	ADDR_D
	LAC	NEW_ID		;offset
	ANDK	0X0F
	SAH	COUNT
	CALL	GETBYTE_DAT
	SAH	MSG_N
	
	LACL	0X021A
	SAH	PRO_VAR
	
	BS	B1,MAIN_PRO10_1_X_SENDCOMM
MAIN_PRO10_2_0_1_SENDCOMM_DISP:
	LACL	0X9F
	CALL	STOR_DAT
	LAC	MSG_ID
	CALL	STOR_DAT	;显示号码
	LACL	0XFF
	CALL	STOR_DAT
MAIN_PRO10_2_0_1_SENDCOMM_END:
	RET

;---------------------------------------------------------------------
MAIN_PRO10_2_1:		;姓名
;MAIN_PRO10_2_1_1:
	LAC	MSG
	XORL	CVP_STOP		;PLAY END
	BS	ACZ,MAIN_PRO10_VPSTOP
;MAIN_PRO10_2_1_2:	
	LAC	MSG
	XORL	CMSG_KEY8S
	BS	ACZ,MAIN_PRO10_2_1_REW	;REW
;MAIN_PRO10_2_1_3:
	LAC	MSG
	XORL	CMSG_KEYCS
	BS	ACZ,MAIN_PRO10_2_1_FFW	;FFW
;MAIN_PRO10_2_1_4:
	LAC	MSG
	XORL	CMSG_KEY6S
	BS	ACZ,MAIN_PRO10_X_END	;EXIT no save
;MAIN_PRO10_2_1_5:
	;LAC	MSG
	;XORL	CMSG_TMR
	;BS	ACZ,MAIN_PRO10_TMR	;(已作起时响应处理)
;MAIN_PRO10_2_1_6:
	LAC	MSG
	XORL	CMSG_KEY2S
	BS	ACZ,MAIN_PRO10_2_1_TIME	;TIME
;MAIN_PRO10_2_1_7:
	LAC	MSG
	XORL	CMSG_KEY9S
	BS	ACZ,MAIN_PRO10_2_1_MENU	;MENU
;MAIN_PRO10_2_1_8:
	LAC	MSG
	XORL	CMSG_KEY5S
	BS	ACZ,MAIN_PRO10_2_1_ERASE ;ERASE
;MAIN_PRO10_2_1_9:	
	LAC	MSG
	XORL	CMSG_KEY8P
	BS	ACZ,MAIN_PRO10_2_1_PREW	;REW
;MAIN_PRO10_2_1_10:
	LAC	MSG
	XORL	CMSG_KEYCP
	BS	ACZ,MAIN_PRO10_2_1_PFFW	;FFW

	RET
MAIN_PRO10_2_1_ERASE:
	LAC	NEW_ID
	SBHL	0XB0
	BZ	ACZ,MAIN_PRO10_2_1_ERASE1
	
	LACK	0X7F
	SAH	MSG_N
	BS	B1,MAIN_PRO10_2_1_ERASEEND
MAIN_PRO10_2_1_ERASE1:	

;---保存当前值0X7F
	LACK	NEW1		;基址
	SAH	ADDR_D
	LAC	NEW_ID		;偏移
	ANDK	0X0F
	SAH	COUNT
	LACK	0X7F		;值
	CALL	STORBYTE_DAT
;---取上一个
	LAC	FILE_LEN
	SBHL	0X0100
	SAH	FILE_LEN

	LACL	0XB0
	SAH	SYSTMP1
	LACL	0XBF
	SAH	SYSTMP2
	LAC	NEW_ID
	CALL	VALUE_SUB
	SAH	NEW_ID		;get next command
	
	LACK	NEW1
	SAH	ADDR_S		;BASE address
	LAC	NEW_ID		;offset
	ANDK	0X0F
	SAH	COUNT
	CALL	GETBYTE_DAT
	SAH	MSG_N

	BS	B1,MAIN_PRO10_2_X_ERASE_SENDCOMM

MAIN_PRO10_2_1_ERASEEND:
	BS	B1,MAIN_PRO10_X_SENDCOMM
	
	RET
MAIN_PRO10_2_1_REW:
	CALL	INIT_DAM_FUNC
	CALL	DAA_BSPK	
	CALL	BEEP
MAIN_PRO10_2_1_PREW:
	LACK	0
	SAH	SYSTMP1
	LACK	0X24
	SAH	SYSTMP2
	
	LAC	MSG_N
	CALL	VALUE_SUB
	SAH	MSG_N
	
	BS	B1,MAIN_PRO10_X_SENDCOMM

MAIN_PRO10_2_1_FFW:
	CALL	INIT_DAM_FUNC
	CALL	DAA_BSPK	
	CALL	BEEP
MAIN_PRO10_2_1_PFFW:	
	LACK	0
	SAH	SYSTMP1
	LACK	0X24
	SAH	SYSTMP2
	
	LAC	MSG_N
	CALL	VALUE_ADD
	SAH	MSG_N
	
	BS	B1,MAIN_PRO10_X_SENDCOMM
MAIN_PRO10_2_1_TIME:
	LAC	MSG_N		;如果当前值是无效数字(大于0X25 or 小于0)则不能进入到下一位调整
	BS	SGN,MAIN_PRO10_2_X_TIMEEND
	SBHK	0X25
	BZ	SGN,MAIN_PRO10_2_X_TIMEEND
;-以下是有效字符(0..0X24)值	
	LAC	NEW_ID
	XORL	0XB0
	BZ	ACZ,MAIN_PRO10_2_1_TIME1	;不是第一位跳转
	
	LAC	MSG_N
	XORL	0X24
	BS	ACZ,MAIN_PRO10_2_X_TIMEEND	;第一位为空格
MAIN_PRO10_2_1_TIME1:	
	LAC	NEW_ID
	XORL	0XBF
	BS	ACZ,MAIN_PRO10_2_1_MENU		;是最后一位保存退出
MAIN_PRO10_2_1_TIME2:
	
	CALL	INIT_DAM_FUNC
	CALL	DAA_BSPK	
	CALL	BEEP
;---保存当前值
	LACK	NEW1		;基址
	SAH	ADDR_D
	LAC	NEW_ID		;偏移
	ANDK	0X0F
	SAH	COUNT
	LAC	MSG_N		;值
	CALL	STORBYTE_DAT
;---取下一个
	LAC	FILE_LEN
	ADHL	0X0100
	ANDL	0X1FFF
	SAH	FILE_LEN		;应取NEW_ID的低4位最大值加1

	LACL	0XB0
	SAH	SYSTMP1
	LACL	0XBF
	SAH	SYSTMP2
	LAC	NEW_ID
	CALL	VALUE_ADD
	SAH	NEW_ID		;get next command

	LACK	NEW1
	SAH	ADDR_S		;BASE address
	LAC	NEW_ID		;offset
	ANDK	0X0F
	SAH	COUNT
	CALL	GETBYTE_DAT
	SAH	MSG_N
	BS	B1,MAIN_PRO10_X_SENDCOMM

MAIN_PRO10_2_1_MENU:		;保存号码/姓名(写入FLASH)
	LAC	MSG_N		;如果当前值是无效数字(大于0X24 or 小于0)则不能退出
	BS	SGN,MAIN_PRO10_2_X_MENUEND
	SBHK	0X24
	BZ	SGN,MAIN_PRO10_2_X_MENUEND
;---保存当前值
	LACK	NEW1		;基址
	SAH	ADDR_D
	LAC	NEW_ID		;偏移
	ANDK	0X0F
	SAH	COUNT
	LAC	MSG_N		;值
	CALL	STORBYTE_DAT
	
	LAC	COUNT
	ADHK	1
	SAH	COUNT
	LACL	0XFF		;以0XFF结束
	CALL	STORBYTE_DAT
;---先压缩号码
	LACK	NEW1
	ADHK	9
	SAH	ADDR_S
	SAH	ADDR_D
	LAC	FILE_LEN
	ANDK	0X1F
	CALL	CONCEN_DAT
;---取usr-dat并保存	
	LACK	4
	CALL	SET_TELGROUP

	CALL	GET_NOUSETELUSRDAT
	;SAH	PRO_VAR3
	SAH	BUF1

	LAC	FILE_LEN
	ANDL	0XFF
	ORL	0X80
	CALL	DAT_WRITE
	LAC	FILE_LEN
	SFR	8
	ORL	0X80
	CALL	DAT_WRITE
	LACK	0
	CALL	DAT_WRITE
	LACK	0
	CALL	DAT_WRITE	;写入数据(TEL flag)

	LACK	NEW1
	ADHK	9
	SAH	ADDR_S
	CALL	TELNUM_WRITE	;写入数据(TEL NUM)
	
	LACK	NEW1
	SAH	ADDR_S
	CALL	TELNUM_WRITE	;写入数据(TEL NAME)	
	
	;CALL	TELTIME_WRITE	;写入数据(TEL TIME)	;????????????
	
	CALL	DAT_WRITE_STOP
	
	CALL	GET_TELT	;取TEL_ID
	CALL	SET_TELUSRDAT	;置usr-dat

	BS	B1,MAIN_PRO10_X_END
;-------------------------------------------------------------------------------
MAIN_PRO10_SENDCOMM:
	CALL	TEL_SENDCOMM
	BS	ACZ,MAIN_PRO10_SENDCOMM_END
	SBHK	1
	BZ	ACZ,MAIN_PRO10_SENDCOMM_DISP
	
;将发送完毕的号码重新读出一串(MSG_ID)号码条目
	LACK	RECE_BUF11
	SAH	ADDR_D		;保存地址
	LAC	MSG_ID		;条目号
	CALL	READ_TELNUM	;读当前条目数据
	CALL	STOPREADDAT
	
	LAC	RECE_BUF11
	SAH	FILE_LEN
MAIN_PRO10_SENDCOMM_OVER:	
	LACL	0X01A
	SAH	PRO_VAR
MAIN_PRO10_SENDCOMM_END:
	RET
MAIN_PRO10_SENDCOMM_DISP:
	LACL	0X9F
	CALL	STOR_DAT
	LAC	MSG_ID
	CALL	STOR_DAT	;显示号码
	LACL	0XFF
	CALL	STOR_DAT

	RET

;=========================================================================
	
.END



ORG	0X800

/***************************************
用到的子程序
***************************************/

/*****************************
返回
*****************************/
;STCP_CHK_RET:
;	RET
/*****************************
显示屏锁定，
显示更新不起作用
*****************************/
MENU_LOCK:
	SRAM	SYS_FG,LOCK_TOPLINE
	PAGE	#(CLR_LCD)
	CALL	CLR_STAMP
	CALL	CLR_NUM1
	CALL	CLR_NUM2
	CALL	CLR_STR
	PAGE	#($)
	RET

CLOSE_STAMP:
	MOV	A,@0
	CALL	#VGA_STAMP
	RET
CLOSE_NUM1:
	PAGE	#VGA_NUM1
	MOV	A,@STYLE_CENTER
	CALL	VGA_NUM1
	MOV	A,@CH_END
	CALL	VGA_NUM1
	PAGE	#($)
	RET
CLOSE_NUM2:
	PAGE	#VGA_NUM2
	MOV	A,@STYLE_CENTER
	CALL	VGA_NUM2
	MOV	A,@CH_END
	CALL	VGA_NUM2
	PAGE	#($)
	RET
CLOSE_STR:
	PAGE	#VGA_STR
	MOV	A,@STYLE_CENTER
	CALL	VGA_STR
	MOV	A,@CH_END
	CALL	VGA_STR
	PAGE	#($)
	RET

/***************************************
初始化编辑区
将CID区的电话号码复制到编辑区
***************************************/
INIT_EDIT:
; -----------------------	将CID区的电话号码信息复制到编辑区
	;CIDBANK	1
	CALL	INIT_EDIT_NUM1
	CALL	INIT_EDIT_NUM2
	CALL	INIT_EDIT_STR
	RET

INIT_EDIT_NUM1:
	MOV	_RC,@(CID_ADDR+31)
	MOV	TEMP0,_RD
	MOV	_RC,@(EDIT_ADDR+1)
	MOV	_RD,TEMP0
	MOV	_RC,@(CID_ADDR+32)
	MOV	TEMP0,_RD
	MOV	_RC,@(EDIT_ADDR+2)
	MOV	_RD,TEMP0
	MOV	_RC,@(CID_ADDR+30)
	MOV	TEMP0,_RD
	MOV	_RC,@(EDIT_ADDR+3)
	MOV	_RD,TEMP0
	MOV	_RC,@(CID_ADDR+29)
	MOV	TEMP0,_RD
	MOV	_RC,@(EDIT_ADDR+4)
	MOV	_RD,TEMP0
	MOV	_RC,@(CID_ADDR+33)
	MOV	TEMP0,_RD
	MOV	_RC,@(EDIT_ADDR+5)
	MOV	_RD,TEMP0
	RET

INIT_EDIT_NUM2:
	CLR	TEMP0
INIT_EDIT_NUM2_LOOP:
	CLRC
	RRCA	TEMP0
	ADD	A,@(CID_ADDR+3)
	MOV	_RC,A
	MOV	TEMP1,_RD
	ADDA	TEMP0,@(EDIT_ADDR+6)
	MOV	_RC,A
	SWAPA	TEMP1
	AND	A,@0X0F
	MOV	_RD,A
	INC	TEMP0
	INC	_RC
	ANDA	TEMP1,@0X0F
	MOV	_RD,A
	INC	TEMP0
	SUBA	TEMP0,@16
	JPNZ	INIT_EDIT_NUM2_LOOP
	RET

INIT_EDIT_STR:
	CLR	TEMP0
INIT_EDIT_STR_LOOP:
	ADDA	TEMP0,@(CID_ADDR+12)
	MOV	_RC,A
	MOV	TEMP1,_RD
	ADDA	TEMP0,@(EDIT_ADDR+22)
	MOV	_RC,A
	MOV	_RD,TEMP1
	INC	TEMP0
	SUBA	TEMP0,@16
	JPNZ	INIT_EDIT_STR_LOOP
	RET


CLR_EDIT:
	CALL	CLR_EDIT_NUM1
	CALL	CLR_EDIT_NUM2
	CALL	CLR_EDIT_STR
	RET

CLR_EDIT_NUM1:
	MOV	_RC,@(EDIT_ADDR+0)
	INC	_RC
	MOV	_RD,@0XFF
	SUBA	_RC,@(EDIT_ADDR+4)
	JPNZ	$-6
	INC	_RC
	CLR	_RD
	RET

CLR_EDIT_NUM2:
	MOV	_RC,@(EDIT_ADDR+5)
	INC	_RC
	MOV	_RD,@0X0F
	SUBA	_RC,@(EDIT_ADDR+21)
	JPNZ	$-6
	RET

CLR_EDIT_STR:
	MOV	_RC,@(EDIT_ADDR+21)
	INC	_RC
	MOV	_RD,@0XFF
	SUBA	_RC,@(EDIT_ADDR+37)
	JPNZ	$-6
	RET
/*****************************
对编辑区的内容作修改。
输入 -- A	编辑的位置
RC   -- 	编辑的内容的地址
当输入0时，显示正常号码，第一行和第三行遇FF不显示，第二行遇F不显示
当输入1~16时，闪烁相应位置的数字，
*****************************/
EDIT_NUM1:
	BANK	0
	MOV	BANK0_TEMP0,A
	MOV	TEMP0,@(EDIT_ADDR+5)
	MOV	A,@(EDIT_ADDR+1)
	JMP	EDIT_INFO
EDIT_NUM2:
	BANK	0
	MOV	BANK0_TEMP0,A
	MOV	TEMP0,@(EDIT_ADDR+21)
	MOV	A,@(EDIT_ADDR+6)
	JMP	EDIT_INFO
EDIT_STR:
	BANK	0
	MOV	BANK0_TEMP0,A
	MOV	TEMP0,@(EDIT_ADDR+37)
	MOV	A,@(EDIT_ADDR+22)
	JMP	EDIT_INFO
EDIT_INFO:
	MOV	BANK0_TEMP1,A
	MOV	A,BANK0_TEMP0
	JPZ	EDIT_INFO_RET
	MOV	BANK0_TEMP2,_RD
	SUBA	BANK0_TEMP2,@0X80
	JPZ	EDIT_INFO_DEL
	ADDA	BANK0_TEMP0,BANK0_TEMP1
	MOV	_RC,A
	DEC	_RC
	MOV	_RD,BANK0_TEMP2
	JMP	EDIT_INFO_RET
EDIT_INFO_DEL:
	SUBA	BANK0_TEMP1,@1
	ADD	A,BANK0_TEMP0
	MOV	_RC,A
EDIT_INFO_DEL_LOOP:
	SUBA	_RC,TEMP0
	JPZ	EDIT_INFO_DEL_END
	INC	_RC
	MOV	TEMP1,_RD
	DEC	_RC
	MOV	_RD,TEMP1
	INC	_RC
	JMP	EDIT_INFO_DEL_LOOP
EDIT_INFO_DEL_END:
	MOV	_RD,@0XFF
	JMP	EDIT_INFO_RET
EDIT_INFO_RET:
	SUBA	BANK0_TEMP1,@(EDIT_ADDR+1)
	JPNZ	$+3
	MOV	A,BANK0_TEMP0
	JMP	DISP_NUM1
	SUBA	BANK0_TEMP1,@(EDIT_ADDR+6)
	JPNZ	$+3
	MOV	A,BANK0_TEMP0
	JMP	DISP_NUM2
	SUBA	BANK0_TEMP1,@(EDIT_ADDR+22)
	JPNZ	$+3
	MOV	A,BANK0_TEMP0
	JMP	DISP_STR
	RET

DISP_NUM1:
	BANK	0
	MOV	BANK0_TEMP0,A
	CLR	BANK0_TEMP1
	MOV	A,@STYLE_NORMAL
	CALL	#VGA_NUM1
DISP_NUM1_LOOP:
	CLR	BANK0_TEMP3
	INC	BANK0_TEMP1
	CIDBANK	1
	ADDA	BANK0_TEMP1,@(EDIT_ADDR+1-1)
	MOV	_RC,A
	MOV	BANK0_TEMP2,_RD
	SUBA	BANK0_TEMP0,BANK0_TEMP1
	JPNZ	$+3
	MOV	BANK0_TEMP3,@0X80
	SUBA	BANK0_TEMP2,@0XFF
	JPZ	DISP_NUM1_LOOP_1
	MOV	GENE_A,BANK0_TEMP2
	CALL	#MATH_HTD
	MOV	BANK0_TEMP2,RESULT
	SWAPA	BANK0_TEMP2
	AND	A,@0X0F
	MOV	TEMP0,A
	SUBA	BANK0_TEMP1,@4
	JPNZ	$+6
	MOV	A,TEMP0
	JPNZ	$+3
	MOV	TEMP0,@NUM_BLANK
	MOV	A,TEMP0
	ADD	A,BANK0_TEMP3
	PAGE	#VGA_NUM1
	CALL	VGA_NUM1
	ANDA	BANK0_TEMP2,@0X0F
	ADD	A,BANK0_TEMP3
	CALL	VGA_NUM1
	PAGE	#($)
	JMP	DISP_NUM1_LOOP_2
DISP_NUM1_LOOP_1:
	PAGE	#VGA_NUM1
	MOV	A,@NUM_BLANK
	CALL	VGA_NUM1
	MOV	A,@NUM_BLANK
	CALL	VGA_NUM1
	PAGE	#($)
DISP_NUM1_LOOP_2:
	SUBA	BANK0_TEMP1,@5
	JPNZ	DISP_NUM1_LOOP
	MOV	A,@CH_END
	CALL	#VGA_NUM1
	RET

DISP_NUM2:
	BANK	0
	MOV	BANK0_TEMP0,A
	CLR	BANK0_TEMP1
	MOV	A,@STYLE_NORMAL
	CALL	#VGA_NUM2
DISP_NUM2_LOOP:
	CLR	BANK0_TEMP3
	INC	BANK0_TEMP1
	CIDBANK	1
	ADDA	BANK0_TEMP1,@(EDIT_ADDR+6-1)
	MOV	_RC,A
	MOV	BANK0_TEMP2,_RD
	SUBA	BANK0_TEMP0,BANK0_TEMP1
	JPNZ	$+3
	MOV	BANK0_TEMP3,@0X80
	SUBA	BANK0_TEMP2,@0X0A
	JPNC	$+8
	JPB	BANK0_TEMP3,7,$+4
	MOV	BANK0_TEMP2,@NUM_BLANK
	JMP	$+3
	MOV	BANK0_TEMP2,@0X11
	ADDA	BANK0_TEMP2,BANK0_TEMP3
	CALL	#VGA_NUM2
	SUBA	BANK0_TEMP1,@16
	JPNZ	DISP_NUM2_LOOP
	MOV	A,@CH_END
	CALL	#VGA_NUM2
	RET

DISP_STR:
	;BANK	0
	MOV	BANK0_TEMP0,A
	CLR	BANK0_TEMP1
	MOV	A,@STYLE_NORMAL
	CALL	#VGA_STR
DISP_STR_LOOP:
	CLR	BANK0_TEMP3
	INC	BANK0_TEMP1
	CIDBANK	1
	ADDA	BANK0_TEMP1,@(EDIT_ADDR+22-1)
	MOV	_RC,A
	MOV	BANK0_TEMP2,_RD
	SUBA	BANK0_TEMP0,BANK0_TEMP1
	JPNZ	DISP_STR_LOOP_1
	MOV	BANK0_TEMP3,@0X80
	SUBA	BANK0_TEMP2,@0X7F
	JPZ	$+5
	SUBA	BANK0_TEMP2,@0XFF
	JPNZ	$+3
	MOV	BANK0_TEMP2,@CH__
	SUBA	BANK0_TEMP2,@CH_BLANK
	JPNZ	$+3
	MOV	BANK0_TEMP2,@CH_BLACK
	JMP	DISP_STR_LOOP_2
DISP_STR_LOOP_1:
	SUBA	BANK0_TEMP2,@0X7F
	JPZ	$+5
	SUBA	BANK0_TEMP2,@0XFF
	JPNZ	$+3
	MOV	BANK0_TEMP2,@CH_BLANK
DISP_STR_LOOP_2:
	
	ADDA	BANK0_TEMP2,BANK0_TEMP3
	CALL	#VGA_STR
	SUBA	BANK0_TEMP1,@16
	JPNZ	DISP_STR_LOOP
	MOV	A,@CH_END
	CALL	#VGA_STR
	RET


/*****************************
菜单操作显示时间
*****************************/
MENU_TIME:
	MOV	TEMP0,A
	INC	_RC
	MOV	TEMP1,_RD
	CLR	TEMP2
MENU_TIME_0:
	ADDA	TEMP2,@(EDIT_ADDR+1)
	MOV	_RC,A
	SUBA	TEMP0,TEMP2
	JPNZ	MENU_TIME_1
	ADDA	TEMP1,@0X80
	MOV	_RD,A
	JMP	MENU_TIME_2
MENU_TIME_1:
	AND	_RD,@0X7F
MENU_TIME_2:
	INC	TEMP2
	SUBA	TEMP2,@5
	JPNZ	MENU_TIME_0
	RET

DISP_MENU_TIME:
	MOV	A,@0
	CALL	#VGA_NUM1
	CIDBANK	1
	MOV	_RC,@(EDIT_ADDR+1)
	JPNB	_RD,7,$+4
	MOV	A,_RD
	CALL	FLASH_TIME
	JMP	$+5
	MOV	A,_RD
	CALL	#VGA_TIME
	CIDBANK	1
	MOV	_RC,@(EDIT_ADDR+2)
	JPNB	_RD,7,$+4
	MOV	A,_RD
	CALL	FLASH_TIME
	JMP	$+5
	MOV	A,_RD
	CALL	#VGA_TIME
	CIDBANK	1
	MOV	_RC,@(EDIT_ADDR+4)
	JPNB	_RD,7,$+4
	MOV	A,_RD
	CALL	FLASH_TIME
	JMP	$+5
	MOV	A,_RD
	CALL	#VGA_TIME
	CIDBANK	1
	MOV	_RC,@(EDIT_ADDR+3)
	JPNB	_RD,7,$+4
	MOV	A,_RD
	CALL	FLASH_MONTH
	JMP	$+5
	MOV	A,_RD
	CALL	#VGA_MONTH
	
	PAGE	#VGA_NUM1
	MOV	A,@NUM_BLANK
	CALL	VGA_NUM1
	MOV	A,@NUM_BLANK
	CALL	VGA_NUM1
	MOV	A,@CH_END
	CALL	VGA_NUM1
	
	;PAGE	#VGA_STR
	MOV	A,@STYLE_CENTER
	CALL	VGA_STR
	CIDBANK	1
	MOV	_RC,@(EDIT_ADDR+5)
	ADDA	_RD,@(WD_SUNDAY)
	CALL	VGA_STRING
	MOV	A,@CH_END
	CALL	VGA_STR
	PAGE	#($)
	RET

FLASH_TIME:
	AND	A,@0X7F
	MOV	GENE_A,A
	CALL	#MATH_HTD
	MOV	BANK0_TEMP0,A			; RESULT = A
	SWAPA	BANK0_TEMP0
	AND	A,@(0X0F)
	ADD	A,@(0X80)
	PAGE	#VGA_NUM1
	CALL	VGA_NUM1
	ANDA	BANK0_TEMP0,@(0X0F)
	ADD	A,@(0X80)
	CALL	VGA_NUM1
	PAGE	#($)
	RET

FLASH_MONTH:
	AND	A,@0X7F
	MOV	GENE_A,A
	CALL	#MATH_HTD
	MOV	TEMP5,A				; RESULT = A
	SWAPA	TEMP5
	AND	A,@(0X0F)
	JPNZ	$+2
	MOV	A,@NUM_BLANK
	ADD	A,@(0X80)
	PAGE	#VGA_NUM1
	CALL	VGA_NUM1
	ANDA	TEMP5,@(0X0F)
	ADD	A,@(0X80)
	CALL	VGA_NUM1
	PAGE	#($)
	RET

/*****************************
操作菜单显示对比度
*****************************/
DISP_MENU_LCD:
	MOV	BANK0_TEMP0,A
	PAGE	#VGA_NUM2
	MOV	A,@STYLE_CENTER
	CALL	VGA_NUM2
	MOV	A,BANK0_TEMP0
	CALL	VGA_NUM2
	MOV	A,@CH_END
	CALL	VGA_NUM2
	PAGE	#($)
	MOV	A,BANK0_TEMP0
	CALL	#LCD_CONTRAST_APPLY
	RET

/*****************************
操作菜单密码显示
*****************************/
DISP_MENU_CODE:
	;BANK	0
	MOV	BANK0_TEMP0,A
	JPZ	DISP_MENU_CODE_1
	INC	_RC
	MOV	BANK0_TEMP2,_RD
	ADDA	BANK0_TEMP0,@(EDIT_ADDR+6-1)
	MOV	_RC,A
	MOV	_RD,BANK0_TEMP2
DISP_MENU_CODE_1:
	MOV	A,@STYLE_CENTER
	CALL	#VGA_NUM2
	CLR	BANK0_TEMP1
DISP_MENU_CODE_LOOP:
	CIDBANK	1
	ADDA	BANK0_TEMP1,@(EDIT_ADDR+6)
	MOV	_RC,A
	MOV	BANK0_TEMP2,_RD
	INC	BANK0_TEMP1
	SUBA	BANK0_TEMP0,BANK0_TEMP1
	JPNZ	$+2
	SRAM	BANK0_TEMP2,7
	MOV	A,BANK0_TEMP2
	CALL	#VGA_NUM2
	SUBA	BANK0_TEMP1,@3
	JPNZ	DISP_MENU_CODE_LOOP
	MOV	A,@CH_END
	CALL	#VGA_NUM2
	RET


STCP_RECORD:
	INC	_RC
	SUBA	_RD,@0X90
	JPZ	STCP_RECORD_MEMO
	SUBA	_RD,@0X91
	JPZ	STCP_RECORD_ICM
	SUBA	_RD,@0X92
	JPZ	STCP_RECORD_2WAY
	RET
STCP_RECORD_MEMO:
	MOV	A,@0
	JMP	STCP_RECORD_X
STCP_RECORD_ICM:
	MOV	A,@2
	JMP	STCP_RECORD_X
STCP_RECORD_2WAY:
	MOV	A,@1
	JMP	STCP_RECORD_X
STCP_RECORD_X:
	MOV	BANK0_TEMP0,A
	INC	_RC
	SUBA	_RD,@0XFF
	JPZ	STCP_RECORD_X_PREP
	;SUBA	_RD,@0X0
	MOV	A,_RD
	JPZ	STCP_RECORD_X_START
	SUBA	_RD,@0X1
	JPZ	STCP_RECORD_X_STOP
	RET
STCP_RECORD_X_PREP:
	CALL	#MENU_LOCK			; 屏蔽第一行更新，并清空所有显示
	PAGE	#VGA_STR
	MOV	A,@(STYLE_CENTER)
	CALL	VGA_STR
	ADDA	BANK0_TEMP0,@WD_MEMO_RECORDING
	CALL	VGA_STRING
	MOV	A,@CH_END
	CALL	VGA_STR
	PAGE	#($)
	RET
STCP_RECORD_X_START:
	BANK	1
	DISI
	MOV	TIME_MS,@250
	CLR	TIME_SEC
	CLR	TIME_MIN
	CLR	TIME_HOUR
	SRAM	SYS_FG,TIME
	ENI
	BANK	0
	RET
STCP_RECORD_X_STOP:
	CRAM	SYS_FG,TIME
	RET

STCP_PLAY:
	INC	_RC
	;SUBA	_RD,@0X0
	MOV	A,_RD
	JPZ	STCP_PLAY_PREP
	SUBA	_RD,@0XF5
	JPZ	STCP_PLAY_DELALL
	SUBA	_RD,@100
	JPNC	STCP_PLAY_X
	RET
STCP_PLAY_PREP:
	CALL	#MENU_LOCK
	CLR	BANK0_TEMP0
	MOV	A,@CH_BLANK
	JMP	STCP_PLAY_X_1
	;RET
STCP_PLAY_X:
	MOV	BANK0_TEMP0,_RD
	INC	_RC
	;SUBA	_RD,@0X0
	MOV	A,_RD
	JPZ	STCP_PLAY_X_OLD
	SUBA	_RD,@0X1
	JPZ	STCP_PLAY_X_NEW
	SUBA	_RD,@0XE0
	JPZ	STCP_PLAY_X_START
	SUBA	_RD,@0XE1
	JPZ	STCP_PLAY_X_STOP
	SUBA	_RD,@0XE2
	JPZ	STCP_PLAY_X_PAUSE
	SUBA	_RD,@0XF3
	JPZ	STCP_PLAY_X_DEL
	RET
STCP_PLAY_X_OLD:
	MOV	A,@0
	JMP	STCP_PLAY_X_PREP
STCP_PLAY_X_NEW:
	MOV	A,@2
STCP_PLAY_X_PREP:
	MOV	TEMP0,A
	MOV	_RC,@(CID_ADDR+1)
	MOV	_RD,TEMP0
	MOV	_RC,@(CID_ADDR+33)
	MOV	_RD,BANK0_TEMP0
	MOV	_RC,@(CID_ADDR+0)
	MOV	_RD,@(STYLE_CENTER+0X80)		; 屏蔽第一行
	CALL	#DISP_CID
	RET
STCP_PLAY_X_START:
	MOV	A,@WD_PLAY
	JMP	STCP_PLAY_X_1
STCP_PLAY_X_STOP:
	MOV	A,@WD_STOP
	JMP	STCP_PLAY_X_1
STCP_PLAY_X_PAUSE:
	MOV	A,@WD_PAUSE
	JMP	STCP_PLAY_X_1
STCP_PLAY_X_DEL:
	MOV	A,@WD_ERASED
STCP_PLAY_X_1:
	
	MOV	BANK0_TEMP1,A
	PAGE	#VGA_STR
	MOV	A,@(STYLE_CENTER)
	CALL	VGA_STR
	MOV	GENE_A,BANK0_TEMP0
	CALL	VGA_HEX_STR
	MOV	A,@CH_SCH1
	CALL	VGA_STR
	MOV	GENE_A,TOTAL_MSG
	CALL	VGA_HEX_STR
	MOV	A,@CH_BLANK
	CALL	VGA_STR
	MOV	A,BANK0_TEMP1
	CALL	VGA_STRING
	MOV	A,@CH_END
	CALL	VGA_STR
	PAGE	#($)
	
	RET
STCP_PLAY_DELALL:
	RET

STCP_TEL:
	INC	_RC
	JPB	_RD,7,STCP_TEL_INFO
	ANDA	_RD,@0X60
	MOV	TEMP0,A
	;SUBA	TEMP0,@0
	MOV	A,TEMP0
	JPZ	STCP_TEL_NUM
	SUBA	TEMP0,@0X20
	JPZ	STCP_TEL_NAME
	SUBA	TEMP0,@0X40
	JPZ	STCP_TEL_TIME
	SUBA	TEMP0,@0X60
	JPZ	STCP_TEL_OGM
STCP_TEL_RET:
	RET
STCP_TEL_INFO:
	MOV	BANK0_TEMP0,_RC
	CLRCIDRAM	@(CID_ADDR+1),@33,@0XFF
	
	MOV	BANK0_TEMP1,@(CID_ADDR+1)
	CALL	TEL_INFO
	MOV	BANK0_TEMP1,@(CID_ADDR+2)
	CALL	TEL_INFO
	MOV	BANK0_TEMP1,@(CID_ADDR+11)
	CALL	TEL_INFO
	MOV	BANK0_TEMP1,@(CID_ADDR+28)
	CALL	TEL_INFO
	JMP	STCP_TEL_RET

TEL_INFO:
	MOV	_RC,BANK0_TEMP0
	MOV	TEMP0,_RD
	MOV	_RC,BANK0_TEMP1
	MOV	_RD,TEMP0
	CRAM	_RD,7
	INC	BANK0_TEMP0
	RET
	
STCP_TEL_NUM:
	MOV	A,@(CID_ADDR+3)
	JMP	STCP_TEL_1
STCP_TEL_NAME:
	MOV	A,@(CID_ADDR+12)
	JMP	STCP_TEL_1
STCP_TEL_TIME:
	MOV	A,@(CID_ADDR+29)
	JMP	STCP_TEL_1
STCP_TEL_OGM:
	MOV	A,@(CID_ADDR+33)
	JMP	STCP_TEL_1
STCP_TEL_1:
	MOV	TEMP1,A
	MOV	TEMP0,_RC
	INC	TEMP0
	ANDA	_RD,@0X1F
	ADD	A,TEMP1
	MOV	TEMP2,A
	CALL	#COPY_CIDRAM
	RET


STCP_NOTE:					; 翻查来电记录
	INC	_RC
	MOV	A,_RD
	JPNZ	STCP_NOTE_VIEW
STCP_NOTE_0:
	MOV	A,TOTAL_CALL
	JPZ	STCP_NOTE_NOCALL
STCP_NOTE_END:
	MOV	A,@WD_END_OF_LIST
	JMP	STCP_NOTE_1
STCP_NOTE_NOCALL:
	MOV	A,@WD_NO_CALL
STCP_NOTE_1:
	MOV	BANK0_TEMP0,A
	CALL	#MENU_LOCK
	PAGE	#VGA_STR
	MOV	A,@(STYLE_CENTER)
	CALL	VGA_STR
	MOV	A,BANK0_TEMP0
	CALL	VGA_STRING
	MOV	A,@CH_END
	CALL	VGA_STR
	PAGE	#($)
	RET
	
STCP_NOTE_VIEW:
	INC	_RC
	SUBA	_RD,@0XFF
	JPZ	STCP_NOTE_VIEW_1
	SUBA	_RD,@0XF2
	JPZ	STCP_NOTE_DEL
	SUBA	_RD,@0XF3
	JPZ	STCP_NOTE_REALDEL
	SUBA	_RD,@0XF4
	JPZ	STCP_NOTE_DELALL
	SUBA	_RD,@0XF5
	JPZ	STCP_NOTE_REALDELALL
	SUBA	_RD,@0XA0
	JPZ	STCP_NOTE_DIAL
	SUBA	_RD,@0XA1
	JPZ	STCP_NOTE_LDIAL
	SUBA	_RD,@0XA2
	JPZ	STCP_NOTE_SAVE
	RET
STCP_NOTE_VIEW_1:
	DEC	_RC
	MOV	BANK0_TEMP0,_RD
	MOV	_RC,@(CID_ADDR+33)
	MOV	_RD,BANK0_TEMP0
	;CALL	#INIT_EDIT
	MOV	_RC,@(CID_ADDR+0)
	MOV	_RD,@(STYLE_CENTER+0X80)		; 居中显示，屏蔽第一行
	CALL	#MENU_LOCK
	CALL	#DISP_CID
	RET
STCP_NOTE_DEL:
	PAGE	#(STCP_MENU_BOOK_BOOK_DEL)
	JMP	STCP_MENU_BOOK_BOOK_DEL
STCP_NOTE_REALDEL:
	PAGE	#(STCP_MENU_BOOK_BOOK_REALDEL)
	JMP	STCP_MENU_BOOK_BOOK_REALDEL
STCP_NOTE_DELALL:
	PAGE	#(STCP_MENU_BOOK_BOOK_DELALL)
	JMP	STCP_MENU_BOOK_BOOK_DELALL
STCP_NOTE_REALDELALL:
	PAGE	#(STCP_MENU_BOOK_BOOK_REALDELALL)
	JMP	STCP_MENU_BOOK_BOOK_REALDELALL
STCP_NOTE_DIAL:
	CALL	#INIT_DIAL
STCP_NOTE_DIAL_1:
	CLR	BANK0_TEMP0
STCP_NOTE_DIAL_LOOP:
	CLRC
	RRCA	BANK0_TEMP0
	ADD	A,@(CID_ADDR+3)
	MOV	_RC,A
	JPB	BANK0_TEMP0,0,$+3
	SWAPA	_RD
	JMP	$+2
	MOV	A,_RD
	AND	A,@0X0F
	CALL	#STORE_DIALNUM
	INC	BANK0_TEMP0
	SUBA	BANK0_TEMP0,@16
	JPNZ	STCP_NOTE_DIAL_LOOP
	MOV	A,@CH_END
	CALL	#STORE_DIALNUM
	RET
STCP_NOTE_LDIAL:
	CALL	#INIT_DIAL
	SWAPA	LCALL12
	AND	A,@0X0F
	MOV	TEMP0,A
	SUB	A,@9
	JPNC	$+5
	MOV	A,TEMP0
	CALL	#STORE_DIALNUM
	ANDA	LCALL12,@0X0F
	MOV	TEMP0,A
	SUB	A,@9
	JPNC	$+5
	MOV	A,TEMP0
	CALL	#STORE_DIALNUM
	SWAPA	LCALL34
	AND	A,@0X0F
	MOV	TEMP0,A
	SUB	A,@9
	JPNC	$+5
	MOV	A,TEMP0
	CALL	#STORE_DIALNUM
	ANDA	LCALL34,@0X0F
	MOV	TEMP0,A
	SUB	A,@9
	JPNC	$+5
	MOV	A,TEMP0
	CALL	#STORE_DIALNUM
	JMP	STCP_NOTE_DIAL_1
STCP_NOTE_SAVE:
	CALL	#INIT_EDIT
	CALL	#CLR_EDIT_STR
	
	PAGE	#VGA_STR
	MOV	A,@(STYLE_CENTER)
	CALL	VGA_STR
	MOV	A,@(WD_COPIED_INTO_BOOK)
	CALL	VGA_STRING
	MOV	A,@CH_END
	CALL	VGA_STR
	PAGE	#($)
	RET


STCP_IDLE:
	CALL	MENU_LOCK
	CRAM	SYS_FG,LOCK_TOPLINE
	SRAM	SYS_FG,SYS_CLOCK
	SRAM	SYS_FG,STAMP
	CRAM	SYS_FG,TIME
	CLR	TMR_NAME
	RET

ORG	0XC00
/*************************************************
菜单
*************************************************/

/*************************************************
同步/初始化
0X90	同步时钟
0X91	新来电总数
0X92	所有来电总数
0X93	新MSG总数
0X94	所有MSG总数
0X95	电话本总数
*************************************************/
STCP_INIT:
	INC	_RC
	SUBA	_RD,@0X97
	JPC	STCP_INIT_RET
	SUBA	_RD,@0X90
	JPNC	STCP_INIT_RET
	;SUBA	_RD,@0X90
	TBL
	JMP	STCP_INIT_CLOCK
	JMP	STCP_INIT_CALL
	JMP	STCP_INIT_MSG
	JMP	STCP_INIT_NOTE
	JMP	STCP_INIT_CODE
	JMP	STCP_INIT_LCALL
	JMP	STCP_INIT_LANGUAGE
	
STCP_INIT_RET:
	RET
STCP_INIT_CLOCK:
	CLR	SEC_REG
	INC	_RC
	MOV	MONTH_REG,_RD
	INC	_RC
	MOV	DAY_REG,_RD
	INC	_RC
	MOV	HOUR_REG,_RD
	INC	_RC
	MOV	MIN_REG,_RD
	INC	_RC
	MOV	WEEK_REG,_RD
	RET
STCP_INIT_CALL:
	INC	_RC
	MOV	NEW_CALL,_RD
	INC	_RC
	MOV	TOTAL_CALL,_RD
	RET
STCP_INIT_MSG:
	INC	_RC
	MOV	NEW_MSG,_RD
	INC	_RC
	MOV	TOTAL_MSG,_RD
	RET
STCP_INIT_NOTE:
	RET
STCP_INIT_CODE:
	INC	_RC
	AND	CODE1,@0X0F
	SWAPA	_RD
	ADD	CODE1,A
	INC	_RC
	SWAPA	_RD
	MOV	CODE23,A
	INC	_RC
	ADD	CODE23,_RD
	RET
STCP_INIT_LCALL:
	INC	_RC
	SWAPA	_RD
	MOV	LCALL12,A
	INC	_RC
	ADD	LCALL12,_RD
	INC	_RC
	SWAPA	_RD
	MOV	LCALL34,A
	INC	_RC
	ADD	LCALL34,_RD
	RET
STCP_INIT_LANGUAGE:
	INC	_RC
	CRAM	SYS_FG,LANGUAGE
	MOV	A,_RD
	JBS	_STATUS,Z
	SRAM	SYS_FG,LANGUAGE
	RET


STCP_MENU:
	INC	_RC
	SUBA	_RD,@0X90
	JPZ	STCP_MENU_LANG
	SUBA	_RD,@0X91
	JPZ	STCP_MENU_TIME
	SUBA	_RD,@0X92
	JPZ	STCP_MENU_LCD
	SUBA	_RD,@0X93
	JPZ	STCP_MENU_CODE
	SUBA	_RD,@0X94
	JPZ	STCP_MENU_LCALL
	SUBA	_RD,@0X95
	JPZ	STCP_MENU_BOOK
	SUBA	_RD,@0X96
	JPZ	STCP_MENU_RECOGM
	SUBA	_RD,@0XF0
	JPZ	STCP_IDLE
	SUBA	_RD,@0XF1
	JPZ	STCP_IDLE
	RET

; --------------------------------------

STCP_MENU_LANG:
	INC	_RC
	SUBA	_RD,@0X0
	JPZ	STCP_MENU_LANG_ENGLISH
	SUBA	_RD,@0X1
	JPZ	STCP_MENU_LANG_GERMANY
	SUBA	_RD,@0XFF
	JPZ	STCP_MENU_LANG_MENU
	SUBA	_RD,@0XF0
	JPZ	STCP_MENU_LANG_NOSAVE
	SUBA	_RD,@0XF1
	JPZ	STCP_MENU_LANG_SAVE
	RET
STCP_MENU_LANG_ENGLISH:
	MOV	_RC,@(EDIT_ADDR+6)
	CRAM	_RD,LANGUAGE
	PAGE	#VGA_STR
	MOV	A,@STYLE_CENTER
	CALL	VGA_STR
	MOV	A,@WD_ENGLISH
	CALL	VGA_STRING
	MOV	A,@CH_END
	CALL	VGA_STR
	PAGE	#($)
	RET
STCP_MENU_LANG_GERMANY:
	MOV	_RC,@(EDIT_ADDR+6)
	SRAM	_RD,LANGUAGE
	PAGE	#VGA_STR
	MOV	A,@STYLE_CENTER
	CALL	VGA_STR
	MOV	A,@WD_GERMAN
	CALL	VGA_STRING
	MOV	A,@CH_END
	CALL	VGA_STR
	PAGE	#($)
	RET
STCP_MENU_LANG_MENU:
	CALL	#MENU_LOCK
	PAGE	#VGA_STR
	MOV	A,@STYLE_CENTER
	CALL	VGA_STR
	MOV	A,@WD_LANGUAGE
	CALL	VGA_STRING
	MOV	A,@CH_END
	CALL	VGA_STR
	PAGE	#($)
	RET

STCP_MENU_LANG_NOSAVE:
	JMP	STCP_MENU_LANG_MENU
STCP_MENU_LANG_SAVE:
	MOV	_RC,@(EDIT_ADDR+6)
	CRAM	SYS_FG,LANGUAGE
	GRAM	_RD,LANGUAGE
	OR	SYS_FG,A
	JMP	STCP_MENU_LANG_MENU

; --------------------------------------

STCP_MENU_TIME:
	INC	_RC
	SUBA	_RD,@0X0
	JPZ	STCP_MENU_TIME_ENTER
	SUBA	_RD,@0XA0
	JPZ	STCP_MENU_TIME_HOUR
	SUBA	_RD,@0XA1
	JPZ	STCP_MENU_TIME_MIN
	SUBA	_RD,@0XA2
	JPZ	STCP_MENU_TIME_MONTH
	SUBA	_RD,@0XA3
	JPZ	STCP_MENU_TIME_DAY
	SUBA	_RD,@0XA4
	JPZ	STCP_MENU_TIME_WEEK
	SUBA	_RD,@0XF0
	JPZ	STCP_MENU_TIME_NOSAVE
	SUBA	_RD,@0XF1
	JPZ	STCP_MENU_TIME_SAVE
	SUBA	_RD,@0XFF
	JPZ	STCP_MENU_TIME_MENU
	RET

STCP_MENU_TIME_ENTER:				; 初始化要调整的时间
	MOV	_RC,@(EDIT_ADDR+1)		; 时间信息放至编辑区
	MOV	_RD,HOUR_REG
	INC	_RC
	MOV	_RD,MIN_REG
	INC	_RC
	MOV	_RD,MONTH_REG
	INC	_RC
	MOV	_RD,DAY_REG
	INC	_RC
	MOV	_RD,WEEK_REG
	;CALL	MENU_LOCK
	CALL	#DISP_MENU_TIME
	MOV	A,@0X30
	CALL	#VGA_STAMP
	RET
STCP_MENU_TIME_HOUR:
	MOV	A,@0
	JMP	STCP_MENU_TIME_1
STCP_MENU_TIME_MIN:
	MOV	A,@1
	JMP	STCP_MENU_TIME_1
STCP_MENU_TIME_MONTH:
	MOV	A,@2
	JMP	STCP_MENU_TIME_1
STCP_MENU_TIME_DAY:
	MOV	A,@3
	JMP	STCP_MENU_TIME_1
STCP_MENU_TIME_WEEK:
	MOV	A,@4
STCP_MENU_TIME_1:
	CALL	#MENU_TIME
	CALL	#DISP_MENU_TIME
	RET

STCP_MENU_TIME_NOSAVE:
	JMP	STCP_MENU_TIME_MENU		; 返回至MENU

STCP_MENU_TIME_SAVE:				; 保存修改的时间
	CLR	SEC_REG
	MOV	_RC,@(EDIT_ADDR+1)
	ANDA	_RD,@0X7F
	MOV	HOUR_REG,A
	INC	_RC
	ANDA	_RD,@0X7F
	MOV	MIN_REG,A
	INC	_RC
	ANDA	_RD,@0X7F
	MOV	MONTH_REG,A
	INC	_RC
	ANDA	_RD,@0X7F
	MOV	DAY_REG,A
	INC	_RC
	ANDA	_RD,@0X7F
	MOV	WEEK_REG,A
	JMP	STCP_MENU_TIME_MENU		; 返回至MENU
STCP_MENU_TIME_MENU:
	CALL	#MENU_LOCK
	PAGE	#VGA_STR
	MOV	A,@STYLE_CENTER
	CALL	VGA_STR
	MOV	A,@WD_SET_CLOCK
	CALL	VGA_STRING
	MOV	A,@CH_END
	CALL	VGA_STR
	PAGE	#($)
	RET

; --------------------------------------

STCP_MENU_LCD:
	INC	_RC
	SUBA	_RD,@0XF0
	JPZ	STCP_MENU_LCD_NOSAVE
	SUBA	_RD,@0XF1
	JPZ	STCP_MENU_LCD_SAVE
	SUBA	_RD,@0XFF
	JPZ	STCP_MENU_LCD_MENU
	SUBA	_RD,@0X0
	JPZ	STCP_MENU_LCD_ENTER
STCP_MENU_LCD_MODIFY:
	MOV	INCREMENT,_RD
	MOV	_RC,@(EDIT_ADDR+6)
	MOV	CURRENT_VALUE,_RD
	MOV	MOD_MIN,@1
	MOV	MOD_MAX,@5
	CALL	#MATH_MODULE
	MOV	_RD,CURRENT_VALUE
	CALL	#DISP_MENU_LCD
	RET
STCP_MENU_LCD_NOSAVE:
	ANDA	LCD_CONTRAST,@0X0F		; 恢复显示对比度
	CALL	#LCD_CONTRAST_APPLY
	CALL	#CLOSE_NUM2			; 关闭第二行显示
	RET
STCP_MENU_LCD_SAVE:
	MOV	_RC,@(EDIT_ADDR+6)
	AND	LCD_CONTRAST,@0XF0
	ANDA	_RD,@0X0F
	ADD	LCD_CONTRAST,A			; 保存对比度等级
	CALL	#CLOSE_NUM2			; 关闭第二行显示
	RET
STCP_MENU_LCD_MENU:
	CALL	#MENU_LOCK
	PAGE	#VGA_STR
	MOV	A,@(STYLE_CENTER)
	CALL	VGA_STR
	MOV	A,@(WD_LCD_CONTRAST)
	CALL	VGA_STRING
	MOV	A,@CH_END
	CALL	VGA_STR
	PAGE	#($)
	RET
STCP_MENU_LCD_ENTER:
	MOV	_RC,@(EDIT_ADDR+6)
	ANDA	LCD_CONTRAST,@0X0F
	MOV	_RD,A
	CALL	#DISP_MENU_LCD
	RET

; --------------------------------------

STCP_MENU_CODE:
	INC	_RC
	SUBA	_RD,@0X0
	JPZ	STCP_MENU_CODE_ENTER
	SUBA	_RD,@0XF0
	JPZ	STCP_MENU_CODE_NOSAVE
	SUBA	_RD,@0XF1
	JPZ	STCP_MENU_CODE_SAVE
	SUBA	_RD,@0XFF
	JPZ	STCP_MENU_CODE_MENU
STCP_MENU_CODE_MODIFY:
	ANDA	_RD,@0X0F
	ADD	A,@1
	CALL	#DISP_MENU_CODE
	RET

STCP_MENU_CODE_ENTER:
	MOV	_RC,@(EDIT_ADDR+6)
	SWAPA	CODE1
	AND	A,@0X0F
	MOV	_RD,A
	INC	_RC
	SWAPA	CODE23
	AND	A,@0X0F
	MOV	_RD,A
	INC	_RC
	ANDA	CODE23,@0X0F
	MOV	_RD,A
	MOV	A,@0
	CALL	#DISP_MENU_CODE
	RET
STCP_MENU_CODE_NOSAVE:
	CALL	#CLOSE_NUM2			; 关闭第二行显示
	RET
STCP_MENU_CODE_SAVE:
	MOV	_RC,@(EDIT_ADDR+6)
	AND	CODE1,@0X0F
	SWAPA	_RD
	AND	A,@0XF0
	ADD	CODE1,A
	INC	_RC
	SWAPA	_RD
	AND	A,@0XF0
	MOV	CODE23,A
	INC	_RC
	ANDA	_RD,@0X0F
	ADD	CODE23,A
	CALL	#CLOSE_NUM2			; 关闭第二行显示
	RET
STCP_MENU_CODE_MENU:
	CALL	#MENU_LOCK
	PAGE	#VGA_STR
	MOV	A,@(STYLE_CENTER)
	CALL	VGA_STR
	MOV	A,@(WD_SET_AREA_CODE)
	CALL	VGA_STRING
	MOV	A,@CH_END
	CALL	VGA_STR
	PAGE	#($)
	RET

; --------------------------------------

STCP_MENU_LCALL:
	INC	_RC
	SUBA	_RD,@0X0
	JPZ	STCP_MENU_LCALL_ENTER
	SUBA	_RD,@0XF0
	JPZ	STCP_MENU_LCALL_NOSAVE
	SUBA	_RD,@0XF1
	JPZ	STCP_MENU_LCALL_SAVE
	SUBA	_RD,@0XFF
	JPZ	STCP_MENU_LCALL_MENU
STCP_MENU_LCALL_MODIFY:
	ANDA	_RD,@0X0F
	ADD	A,@1
	MOV	BANK0_TEMP0,A
	INC	_RC
	MOV	A,BANK0_TEMP0
	CALL	#EDIT_NUM2
	RET
/*
	SUBA	_RD,@0
	JPZ	STCP_MENU_LCALL_MODIFY_ENTER
	SUBA	_RD,@0X80
	JPZ	STCP_MENU_LCALL_MODIFY_DEL
	MOV	BANK0_TEMP1,_RC
	MOV	INCREMENT,_RD
	ADDA	BANK0_TEMP0,@(EDIT_ADDR+5)
	MOV	_RC,A
	MOV	CURRENT_VALUE,_RD
	MOV	MOD_MIN,@0
	MOV	MOD_MAX,@9
	CALL	#MATH_MODULE
	MOV	_RC,BANK0_TEMP1
	MOV	_RD,CURRENT_VALUE
STCP_MENU_LCALL_MODIFY_1:
	MOV	A,BANK0_TEMP0
	CALL	#EDIT_NUM2
	RET

STCP_MENU_LCALL_MODIFY_ENTER:
	MOV	BANK0_TEMP1,_RC
	ADDA	BANK0_TEMP0,@(EDIT_ADDR+5)
	MOV	_RC,A
	MOV	TEMP0,_RD
	MOV	_RC,BANK0_TEMP1
	MOV	_RD,TEMP0
	JMP	STCP_MENU_LCALL_MODIFY_1

STCP_MENU_LCALL_MODIFY_DEL:
	JMP	STCP_MENU_LCALL_MODIFY_1
*/
STCP_MENU_LCALL_ENTER:
	;BANK	1
	MOV	_RC,@(EDIT_ADDR+6)
	SWAPA	LCALL12
	AND	A,@0X0F
	MOV	_RD,A
	INC	_RC
	ANDA	LCALL12,@0X0F
	MOV	_RD,A
	INC	_RC
	SWAPA	LCALL34
	AND	A,@0X0F
	MOV	_RD,A
	INC	_RC
	ANDA	LCALL34,@0X0F
	MOV	_RD,A
	INC	_RC
	MOV	_RD,@0X0F
	SUBA	_RC,@(EDIT_ADDR+21)
	JPNZ	$-6
	MOV	A,@0
	CALL	#DISP_NUM2
	RET

STCP_MENU_LCALL_NOSAVE:
	CALL	#CLOSE_NUM2			; 关闭第二行显示
	RET
STCP_MENU_LCALL_SAVE:
	MOV	_RC,@(EDIT_ADDR+6)
	SWAPA	_RD
	AND	A,@0XF0
	MOV	LCALL12,A
	INC	_RC
	ANDA	_RD,@0X0F
	ADD	LCALL12,A
	INC	_RC
	SWAPA	_RD
	AND	A,@0XF0
	MOV	LCALL34,A
	INC	_RC
	ANDA	_RD,@0X0F
	ADD	LCALL34,A
	CALL	#CLOSE_NUM2			; 关闭第二行显示
	RET

STCP_MENU_LCALL_MENU:
	CALL	#MENU_LOCK
	PAGE	#VGA_STR
	MOV	A,@(STYLE_CENTER)
	CALL	VGA_STR
	MOV	A,@(WD_SET_LONG_CODE)
	CALL	VGA_STRING
	MOV	A,@CH_END
	CALL	VGA_STR
	PAGE	#($)
	RET

; --------------------------------------

STCP_MENU_BOOK:
	INC	_RC
	SUBA	_RD,@0XF0
	;JPZ	STCP_MENU_BOOK_MENU
	JPZ	STCP_MENU_BOOK_BOOK_VIEW_END
	SUBA	_RD,@0XF1
	JPZ	STCP_MENU_BOOK_MENU
	SUBA	_RD,@0XFF
	JPZ	STCP_MENU_BOOK_MENU
STCP_MENU_BOOK_BOOK:
	INC	_RC
	SUBA	_RD,@0XF0
	JPZ	STCP_MENU_BOOK_BOOK_NOSAVE
	SUBA	_RD,@0XF1
	JPZ	STCP_MENU_BOOK_BOOK_SAVE
	SUBA	_RD,@0XF2
	JPZ	STCP_MENU_BOOK_BOOK_DEL
	SUBA	_RD,@0XF3
	JPZ	STCP_MENU_BOOK_BOOK_REALDEL
	SUBA	_RD,@0XF4
	JPZ	STCP_MENU_BOOK_BOOK_DELALL
	SUBA	_RD,@0XF5
	JPZ	STCP_MENU_BOOK_BOOK_REALDELALL
	SUBA	_RD,@0XFF
	JPZ	STCP_MENU_BOOK_BOOK_VIEW
	ANDA	_RD,@0XF0
	SUB	A,@0XB0
	JPZ	STCP_MENU_BOOK_BOOK_MODIFYNUM
	ANDA	_RD,@0XF0
	SUB	A,@0XC0
	JPZ	STCP_MENU_BOOK_BOOK_MODIFYNAME
	SUBA	_RD,@0XD0
	JPZ	STCP_MENU_BOOK_BOOK_MODIFYOGM
	SUBA	_RD,@0XE0
	JPZ	STCP_MENU_BOOK_BOOK_VIEW_FULL
	;RET
STCP_MENU_BOOK_BOOK_NOSAVE:
	;RET
STCP_MENU_BOOK_BOOK_SAVE:
	RET
STCP_MENU_BOOK_BOOK_DEL:
	MOV	A,@WD_ERASE
	JMP	STCP_MENU_BOOK_BOOK_STR
STCP_MENU_BOOK_BOOK_REALDEL:
	MOV	A,@WD_ERASED
	JMP	STCP_MENU_BOOK_BOOK_STR
STCP_MENU_BOOK_BOOK_DELALL:
	MOV	A,@WD_ERASE_ALL
	JMP	STCP_MENU_BOOK_BOOK_STR
STCP_MENU_BOOK_BOOK_REALDELALL:
	MOV	A,@WD_ERASED_ALL
STCP_MENU_BOOK_BOOK_STR:
	MOV	BANK0_TEMP0,A
	CALL	#MENU_LOCK
	PAGE	#VGA_STR
	MOV	A,@(STYLE_CENTER)
	CALL	VGA_STR
	MOV	A,BANK0_TEMP0
	CALL	VGA_STRING
	MOV	A,@CH_END
	CALL	VGA_STR
	PAGE	#($)
	RET
STCP_MENU_BOOK_BOOK_VIEW:
	DEC	_RC
	MOV	A,_RD
	JPZ	STCP_MENU_BOOK_BOOK_VIEW_NEW
	MOV	BANK0_TEMP0,A
	SUB	A,@99
	JPNC	STCP_MENU_BOOK_BOOK_VIEW_END
	CALL	#INIT_EDIT
	
	MOV	_RC,@(CID_ADDR+33)		; 显示序号
	MOV	_RD,BANK0_TEMP0
	MOV	_RC,@(CID_ADDR+0)
	MOV	_RD,@(STYLE_CENTER+0X80)	; 居中显示，屏蔽第一行
	CALL	#DISP_CID
	RET
STCP_MENU_BOOK_BOOK_VIEW_NEW:
	/*
	MOV	_RC,@(EDIT_ADDR+0)
	INC	_RC
	MOV	_RD,@0XFF
	SUBA	_RC,@(EDIT_ADDR+4)
	JPNZ	$-6
	;MOV	_RC,@(EDIT_ADDR+5)
	INC	_RC
	CLR	_RD
	INC	_RC
	MOV	_RD,@0X0F
	SUBA	_RC,@(EDIT_ADDR+21)
	JPNZ	$-6
	INC	_RC
	MOV	_RD,@0XFF
	SUBA	_RC,@(EDIT_ADDR+37)
	JPNZ	$-6
	*/
	CALL	#CLR_EDIT
	CALL	#MENU_LOCK
	RET
STCP_MENU_BOOK_BOOK_MODIFYNUM:
	ANDA	_RD,@0X0F
	ADD	A,@1
	MOV	TEMP0,A
	INC	_RC
	MOV	A,TEMP0
	CALL	#EDIT_NUM2
	MOV	A,@0
	CALL	#DISP_NUM1
	MOV	A,@0
	CALL	#DISP_STR
	RET
STCP_MENU_BOOK_BOOK_MODIFYNAME:
	ANDA	_RD,@0X0F
	ADD	A,@1
	MOV	TEMP0,A
	INC	_RC
	MOV	A,TEMP0
	CALL	#EDIT_STR
	MOV	A,@0
	CALL	#DISP_NUM1
	MOV	A,@0
	CALL	#DISP_NUM2
	RET
STCP_MENU_BOOK_BOOK_MODIFYOGM:
	MOV	A,@5
	MOV	TEMP0,A
	INC	_RC
	MOV	A,TEMP0
	CALL	#EDIT_NUM1
	MOV	A,@0
	CALL	#DISP_NUM2
	MOV	A,@0
	CALL	#DISP_STR
	RET

STCP_MENU_BOOK_BOOK_VIEW_END:
	MOV	A,@(WD_END_OF_NAMES_BOOK)
	JMP	STCP_MENU_BOOK_VIEW
STCP_MENU_BOOK_BOOK_VIEW_FULL:
	MOV	A,@(WD_MEMORY_FULL)
	JMP	STCP_MENU_BOOK_VIEW
STCP_MENU_BOOK_MENU:
	MOV	A,@(WD_EDIT_SEARCH)
STCP_MENU_BOOK_VIEW:
	MOV	BANK0_TEMP0,A
	CALL	#MENU_LOCK
	PAGE	#VGA_STR
	MOV	A,@(STYLE_CENTER)
	CALL	VGA_STR
	MOV	A,BANK0_TEMP0
	CALL	VGA_STRING
	MOV	A,@CH_END
	CALL	VGA_STR
	PAGE	#($)
	RET
; --------------------------------------

STCP_MENU_RECOGM:
	INC	_RC
	SUBA	_RD,@0XFF
	JPZ	STCP_MENU_RECOGM_MENU
	SUBA	_RD,@0XA0
	JPZ	STCP_MENU_RECOGM_CHOICE
	SUBA	_RD,@0XA1
	JPZ	STCP_MENU_RECOGM_RECORDING
	SUBA	_RD,@0XA2
	JPZ	STCP_MENU_RECOGM_PLAY
	SUBA	_RD,@0XF0
	JPZ	STCP_MENU_RECOGM_NOSAVE
	SUBA	_RD,@0XF1
	JPZ	STCP_MENU_RECOGM_SAVE
	RET
STCP_MENU_RECOGM_MENU:
	CALL	#MENU_LOCK
	PAGE	#VGA_STR
	MOV	A,@(STYLE_CENTER)
	CALL	VGA_STR
	MOV	A,@(WD_OGM_RECORDING)
	CALL	VGA_STRING
	MOV	A,@CH_END
	CALL	VGA_STR
	PAGE	#($)
	RET
STCP_MENU_RECOGM_CHOICE:
	INC	_RC
	MOV	BANK0_TEMP0,_RD
	CALL	#MENU_LOCK
	PAGE	#VGA_STR
	MOV	A,@(STYLE_CENTER)
	CALL	VGA_STR
	MOV	A,@(WD_OGM)
	CALL	VGA_STRING
	PAGE	#($)
	JMP	STCP_MENU_RECOGM_1
STCP_MENU_RECOGM_RECORDING:
	INC	_RC
	MOV	BANK0_TEMP0,_RD
	CALL	#MENU_LOCK
	PAGE	#VGA_STR
	MOV	A,@STYLE_CENTER
	CALL	VGA_STR
	MOV	A,@WD_OGM_RECORDING
	CALL	VGA_STRING
	PAGE	#($)
	
	BANK	1
	DISI
	MOV	TIME_MS,@250
	CLR	TIME_SEC
	CLR	TIME_MIN
	CLR	TIME_HOUR
	SRAM	SYS_FG,TIME
	ENI
	BANK	0
	
	JMP	STCP_MENU_RECOGM_1
	
	RET
STCP_MENU_RECOGM_PLAY:
	INC	_RC
	MOV	BANK0_TEMP0,_RD
	CALL	#MENU_LOCK
	PAGE	#VGA_STR
	MOV	A,@STYLE_CENTER
	CALL	VGA_STR
	MOV	A,@WD_OGM_PLAYBACK
	CALL	VGA_STRING
	PAGE	#($)
	CRAM	SYS_FG,TIME
STCP_MENU_RECOGM_1:
	PAGE	#VGA_STR
	MOV	A,@CH_BLANK
	CALL	VGA_STR
	MOV	A,BANK0_TEMP0
	CALL	VGA_STR
	MOV	A,@CH_END
	CALL	VGA_STR
	PAGE	#($)
	RET
STCP_MENU_RECOGM_NOSAVE:
	CRAM	SYS_FG,TIME
	JMP	STCP_MENU_RECOGM_MENU
STCP_MENU_RECOGM_SAVE:
	CRAM	SYS_FG,TIME
	JMP	STCP_MENU_RECOGM_MENU


STCP_REMOTE:
	INC	_RC
	MOV	A,_RD
	JPZ	STCP_REMOTE_VIEW
	RET
STCP_REMOTE_VIEW:
	CALL	#MENU_LOCK
	PAGE	#VGA_STR
	MOV	A,@(STYLE_CENTER)
	CALL	VGA_STR
	MOV	A,@(WD_IN_REMOTE)
	CALL	VGA_STRING
	MOV	A,@CH_END
	CALL	VGA_STR
	PAGE	#($)
	RET
; ------------------------------------------------





STCP_CHK:
	BANK	0
	CIDBANK	1
	MOV	_RC,@(TCP_ADDR+0)
	JPB	_RD,7,STCP_CHK_1
	PAGE	#(0X1200)
	CALL	AUDIO_CHK
	RET
STCP_CHK_1:
	CIDBANK	1
	MOV	_RC,@(TCP_ADDR+1)
	SUBA	_RD,@0X80
	JPNC	STCP_INVALID			; 命令<0X80，无效命令	

	MOV	TEMP0,A
	SUB	A,@7
	JPNC	STCP_INVALID
	MOV	A,TEMP0
	TBL
	JMP	STCP_INIT_CMD			; 0X80 同步/初始化
	JMP	STCP_MENU_CMD			; 0X81 MENU菜单
	JMP	STCP_RECORD_CMD			; 0X82 录音
	JMP	STCP_PLAY_CMD			; 0X83 回放
	JMP	STCP_TEL_CMD			; 0X84 收/发电话号码
	JMP	STCP_NOTE_CMD			; 0X85 翻查来电记录
	JMP	STCP_IDLE_CMD			; 0X86 退出至空闲状态
	JMP	STCP_REMOTE_CMD			; 0X87 进入遥控状态
	
STCP_INVALID:
	RET

STCP_INIT_CMD:
	JMP	#STCP_INIT
STCP_MENU_CMD:
	JMP	#STCP_MENU
STCP_RECORD_CMD:
	JMP	#STCP_RECORD
STCP_PLAY_CMD:
	JMP	#STCP_PLAY
STCP_TEL_CMD:
	JMP	#STCP_TEL
STCP_NOTE_CMD:
	JMP	#STCP_NOTE
STCP_IDLE_CMD:
	JMP	#STCP_IDLE
STCP_REMOTE_CMD:
	JMP	#STCP_REMOTE

ORG	0X1200
STORE_SER:
	MOV	TEMP0,A
	MOV	_RC,@(TCP_ADDR+0)
	ANDA	_RD,@0X3F
	MOV	TEMP3,A
	INC	_RD
	ADDA	TEMP3,@(TCP_ADDR+1)
	MOV	_RC,A
	MOV	_RD,TEMP0
	
	RET

SER_BUF_CHK:
	CIDBANK	1
	BANK	0
	MOV	A,TMR_SER
	JPNZ	SER_BUF_CHK_RET
	MOV	_RC,@(TCP_ADDR+0)
	MOV	A,_RD
	JPZ	SER_BUF_CHK_RET
	JPB	_RD,7,SER_BUF_CHK_RET
	NOP
	CLR	TEMP1
	;MOV	TEMP1,@(TCP_ADDR+1)
SER_BUF_CHK_LOOP:
	INC	TEMP1
	ADDA	TEMP1,@(TCP_ADDR+0)
	;MOV	_RC,TEMP1
	MOV	_RC,A
	SUBA	_RD,@0XFF
	JPZ	SER_BUF_CHK_1
	MOV	A,_RD
	CALL	#SER_STOR_DATA
	;INC	TEMP1
	JMP	SER_BUF_CHK_LOOP
	
SER_BUF_CHK_1:
	DISI
	SRAM	SER_FLAG,3
	SRAM	SER_FLAG,6
	ENI
	
	MOV	TEMP0,@(TCP_ADDR+1)
	MOV	_RC,@(TCP_ADDR+0)
	SUB	_RD,TEMP1
	INC	TEMP1
	ADD	TEMP1,@(TCP_ADDR+0)
SER_BUF_CHK_1_LOOP:
	SUBA	TEMP1,@(TCP_ADDR+70)
	JPZ	SER_BUF_CHK_2
	MOV	_RC,TEMP1
	MOV	TEMP2,_RD
	MOV	_RC,TEMP0
	MOV	_RD,TEMP2
	INC	TEMP0
	INC	TEMP1
	JMP	SER_BUF_CHK_1_LOOP
SER_BUF_CHK_2:
	MOV	_RC,TEMP0
	MOV	_RD,@0XFF
	INC	TEMP0
	SUBA	TEMP0,@(TCP_ADDR+70)
	JPNZ	SER_BUF_CHK_2

SER_BUF_CHK_RET:
	RET


INIT_SER:
	CIDBANK	1
	MOV	_RC,@(TCP_ADDR+0)
	CLR	_RD
	CLRCIDRAM	@(TCP_ADDR+1),@64,@0XFF
	RET

/***************************************
拨号程序
DIAL_CTRL:
.7	0/1	DISABLE/ENABLE
.6	0/1

.4~.3	0~16	0: START 1~16:拨号的位数
***************************************/
TAB_TONE1:
	TBL
	RETL	0X77	; 0
	RETL	0XA0	; 1
	RETL	0XA0	; 2
	RETL	0XA0	; 3
	RETL	0X91	; 4
	RETL	0X91	; 5
	RETL	0X91	; 6
	RETL	0X83	; 7
	RETL	0X83	; 8
	RETL	0X83	; 9
	RETL	0X77	; *
	RETL	0X77	; #
	RETL	0XA0	; A
	RETL	0X91	; B
	RETL	0X83	; C
	RETL	0X77	; D

TAB_TONE2:
	TBL
	RETL	0X54	; 0
	RETL	0X5D	; 1
	RETL	0X54	; 2
	RETL	0X4C	; 3
	RETL	0X5D	; 4
	RETL	0X54	; 5
	RETL	0X4C	; 6
	RETL	0X5D	; 7
	RETL	0X54	; 8
	RETL	0X4C	; 9
	RETL	0X5D	; *
	RETL	0X4C	; #
	RETL	0X44	; A
	RETL	0X44	; B
	RETL	0X44	; C
	RETL	0X44	; D



DIAL_NUM:
	CIDBANK	1
	PAGEIO	0
	BANK	0
	MOV	_RC,@DIAL_ADDR
	JPNB	_RD,7,DIAL_NUM_RET
	JPNB	_RD,5,DIAL_NUM_START
	JPB	_RD,6,DIAL_NUM_DIAL
	JMP	DIAL_NUM_PAUSE

DIAL_NUM_START:
	SRAM	_RD,5
	MOV	A,@STYLE_RIGHT			; 右对齐
	CALL	#VGA_NUM2
	MOV	TMR_DELAY,@250			; 延时1S
	
	PAGE	#VGA_STR
	MOV	A,@STYLE_CENTER
	CALL	VGA_STR
	MOV	A,@(WD_PLS_LIFT_HANDSET)
	CALL	VGA_STRING
	MOV	A,@CH_END
	CALL	VGA_STR
	PAGE	#($)
	JMP	DIAL_NUM_RET

DIAL_NUM_PAUSE:
	MOV	A,TMR_DELAY
	JPNZ	DIAL_NUM_RET
	SRAM	_RD,6
	
	CALL	CHK_DIALNUM
	MOV	TEMP0,A
	SUBA	TEMP0,@0X0F
	JPZ	DIAL_NUM_STOP
	
	MOV	A,TEMP0
	CALL	TAB_TONE1
	IOW	_IOCD
	MOV	A,TEMP0
	CALL	TAB_TONE2
	IOW	_IOCE
	SRAM	_STATUS,5			; OPEN TONE1、TONE2
	SRAM	_STATUS,6
	MOV	TMR_DELAY,@25			; 延时100MS
	MOV	A,TEMP0
	;JPNZ	$+2
	;MOV	A,@0X80
	CALL	#VGA_NUM2
	
	JMP	DIAL_NUM_RET
DIAL_NUM_DIAL:
	MOV	A,TMR_DELAY
	JPNZ	DIAL_NUM_RET
	CRAM	_STATUS,5
	CRAM	_STATUS,6			; CLOSE TONE1、TONE2
	CRAM	_RD,6
	;MOV	TEMP0,_RD
	INC	_RD
	JPNB	_RD,5,DIAL_NUM_STOP		; 超过，停止
	;MOV	TEMP0,_RD
	
	CALL	CHK_DIALNUM
	MOV	TEMP0,A
	
	SUBA	TEMP0,@0X0F
	JPZ	DIAL_NUM_STOP			; 下一位的值==0XF，停止
	MOV	TMR_DELAY,@25
	JMP	DIAL_NUM_RET

DIAL_NUM_STOP:
	MOV	_RC,@DIAL_ADDR
	CLR	_RD
	MOV	A,@CH_END
	CALL	#VGA_NUM2
	JMP	DIAL_NUM_RET

DIAL_NUM_RET:
	RET

CHK_DIALNUM:
	MOV	TEMP0,_RD
	CLRC
	RRCA	TEMP0
	AND	A,@0X0F
	ADD	A,@(DIAL_ADDR+1)
	MOV	_RC,A
	
	JPB	TEMP0,0,$+3
	SWAPA	_RD
	JMP	$+2
	MOV	A,_RD
	AND	A,@0X0F
	RET



STORE_DIALNUM:
	MOV	TEMP0,A
	CIDBANK	1
	MOV	_RC,@(DIAL_ADDR)
	JPB	_RD,7,STORE_DIALNUM_RET		; 有号码正在拨，不能存
	;JPB	_RD,6,$+3
	;MOV	_RD,@0X40
	SUBA	TEMP0,@CH_END
	JPZ	STORE_DIALNUM_END
	SUBA	TEMP0,@NUM_A
	JPC	STORE_DIALNUM_END
STORE_DIALNUM_0:
	MOV	TEMP1,_RD
	INC	_RD
	CLRC
	RRCA	TEMP1
	ADD	A,@(DIAL_ADDR+1)
	MOV	_RC,A
	JPB	TEMP1,0,STORE_DIALNUM_1
	AND	_RD,@0X0F
	SWAPA	TEMP0
	AND	A,@0XF0
	OR	_RD,A
	JMP	STORE_DIALNUM_2
STORE_DIALNUM_1:
	AND	_RD,@0XF0
	ANDA	TEMP0,@0X0F
	OR	_RD,A
STORE_DIALNUM_2:
	JMP	STORE_DIALNUM_RET
STORE_DIALNUM_END:
	MOV	TEMP0,@0X0F
	CALL	STORE_DIALNUM_0
	MOV	_RC,@DIAL_ADDR
	MOV	_RD,@0X80			; 准备拨号
STORE_DIALNUM_RET:
	RET


INIT_DIAL:
	CIDBANK	1
	CLRCIDRAM	@(DIAL_ADDR+1),@19,@0XFF
	MOV	_RC,@(DIAL_ADDR+0)
	CLR	_RD
	RET



DEL_FINISHED:				; 删除完成的命令
	BANK	0
	CIDBANK	1
	DISI
	MOV	_RC,@(TCP_ADDR+0)
	JPNB	_RD,7,DEL_FINISHED_END
	ANDA	_RD,@0X7F
	JPZ	DEL_FINISHED_END
	CLR	INT_TEMP0
DEL_FINISHED_CHK_LOOP:
	INC	INT_TEMP0
	ADDA	INT_TEMP0,@(TCP_ADDR+0)
	MOV	_RC,A
	SUBA	_RD,@0XFF
	JPNZ	DEL_FINISHED_CHK_LOOP
	
	MOV	INT_TEMP1,INT_TEMP0
	MOV	_RC,@(TCP_ADDR+0)
	ANDA	_RD,@0X7F
	MOV	INT_TEMP2,A
	SUB	_RD,INT_TEMP0
DEL_FINISHED_DEL_LOOP:
	SUBA	INT_TEMP1,INT_TEMP2
	JPZ	DEL_FINISHED_DEL_END
	INC	INT_TEMP1
	ADDA	INT_TEMP1,@(TCP_ADDR+0)
	MOV	_RC,A
	MOV	INT_TEMP3,_RD
	SUBA	INT_TEMP1,INT_TEMP0
	ADD	A,@(TCP_ADDR+0)
	MOV	_RC,A
	MOV	_RD,INT_TEMP3
	JMP	DEL_FINISHED_DEL_LOOP

DEL_FINISHED_DEL_END:
	MOV	_RC,@(TCP_ADDR+0)
	ANDA	_RD,@0X7F
	JPNZ	DEL_FINISHED_END
	CLR	_RD

DEL_FINISHED_END:
	ENI
	RET

SAVECOMMAND	MACRO

STOR_COMMAND:
	JPNB	SER_FLAG,7,STOR_COMMAND_END
	CIDBANK	1
	MOV	_RC,@(TCP_ADDR+0)
	JPB	_RD,7,$+3
	MOV	_RD,@0X80
	
	CLR	SER_SEND
STOR_COMMAND_LOOP:					; 将收到的命令保存至COMMAND区域

	SUBA	SER_SEND,SER_CONT
	JPZ	STOR_COMMAND_1
	
	ADDA	SER_SEND,@SER_BASE
	MOV	_RC,A
	MOV	SER_FLAG,_RD
	
	MOV	_RC,@(TCP_ADDR+0)
	INC	_RD
	ANDA	_RD,@0X7F
	ADD	A,@(TCP_ADDR+0)
	MOV	_RC,A
	MOV	_RD,SER_FLAG
	
	INC	SER_SEND
	JMP	STOR_COMMAND_LOOP
STOR_COMMAND_1:
	MOV	_RC,@(TCP_ADDR+0)
	INC	_RD
	ANDA	_RD,@0X7F
	ADD	A,@(TCP_ADDR+0)
	MOV	_RC,A
	MOV	_RD,@0XFF
	
	CLR	SER_SEND
	;CLR	SER_CONT
	CLR	SER_FLAG
STOR_COMMAND_END:
	;RET
	ENDM

AUDIO_CHK:
	BANK	1
	JPB	EVENT,AUDIO,AUDIO_CHK_ON
AUDIO_CHK_OFF:
	MOV	BANK1_TEMP0,@0
	JPNB	_R7,1,AUDIO_CHK_CHNAGE
	MOV	TMR_LINEDET,@20
	SRAM	EVENT,AUDIO
	JMP	AUDIO_CHK_RET

AUDIO_CHK_ON:
	MOV	BANK1_TEMP0,@1
	JPB	_R7,1,AUDIO_CHK_CHNAGE
	MOV	TMR_LINEDET,@20
	CRAM	EVENT,AUDIO
	JMP	AUDIO_CHK_RET

AUDIO_CHK_CHNAGE:
	MOV	A,TMR_LINEDET
	JPZ	AUDIO_CHK_RET
	DEC	TMR_LINEDET
	JPNZ	AUDIO_CHK_RET
	PAGE	#VGA_STR
	MOV	A,@STYLE_CENTER
	CALL	VGA_STR
	ADDA	BANK1_TEMP0,@WD_AUDIO
	CALL	VGA_STRING
	MOV	A,@CH_END
	CALL	VGA_STR
	PAGE	#($)
	
	BANK	0
	MOV	TMR_NAME,@10

	BANK	1
	CIDBANK	1
	MOV	A,@0X88
	CALL	#STORE_SER
	MOV	A,BANK1_TEMP0
	CALL	#STORE_SER
	MOV	A,@0XFF
	CALL	#STORE_SER
	
AUDIO_CHK_RET:
	RET


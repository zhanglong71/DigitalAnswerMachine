
/***************************************
             项目主程序
功能：
	程序调用
	程序分配

***************************************/


include	<emc806.inc>	; emc806定义文件
include "main.inc"
include	"math.inc"


ORG	0X0000
	NOP
	NOP
	NOP
	NOP
	NOP
	JMP	MAIN
	NOP
	NOP

ORG	0X0008
INT_BEGIN:
	DISI
	MOV	INT_TEMP0,A
	SWAP	INT_TEMP0
	MOV	INT_TEMP1,_STATUS
	MOV	INT_TEMP2,_RSR
	MOV	INT_TEMP3,_PPSR
	MOV	INT_TEMP4,_RC
	MOV	A,_RB			; 保存CID体
	AND	A,@0X05
	MOV	INT_TEMP5,A
	
	PAGE	0
	BANK	0
	
	;-------------------------------
;	JPB	_FSR,2,INT_BEGIN_1
;	CRAM	_R7,1
;	JMP	INT_BEGIN_2
;INT_BEGIN_1:
;	SRAM	_R7,1
;INT_BEGIN_2:
	;-------------------------------
	
	JPB	_ISR,6,INT_FSK
	JPB	_ISR,0,INT_TCC
	JPB	_ISR,1,INT_0
	JPB	_ISR,2,INT_1
	JPB	_ISR,3,INT_2
	JPB	_ISR,4,INT_CNT1
	JPB	_ISR,5,INT_CNT2
	JPB	_ISR,7,INT_STD
	JMP	INT_ERR

INT_END:
	MOV	A,_RB
	AND	A,@0XFA
	ADD	A,INT_TEMP5
	MOV	_RB,A
	MOV	_RC,INT_TEMP4
	MOV	_PPSR,INT_TEMP3
	MOV	_RSR,INT_TEMP2
	MOV	_STATUS,INT_TEMP1
	SWAPA	INT_TEMP0
	RETI

INT_TCC_END:
	INC	FSK_COUNT
	JMP	INT_END

INT_TCC:
	MOV	_ISR,@0XFE
	;CRAM	_ISR,0
	
	;-------------------------------
;	JPB	_R7,0,INT_TCC_1
;	SRAM	_R7,0
;	JMP	INT_TCC_2
;INT_TCC_1:
;	CRAM	_R7,0
;INT_TCC_2:
	;-------------------------------
	BANK	1
	JPB	_FSR,1,INT_CHKCD_HI
	ADD	_TCC,@(256-185)
	
	MOV	A,FSK_COUNT
	JPZ	INT_TCC_END
INT_TCC_FSK_DATA:
	SRAM	_STATUS,C
	JBS	_FSR,2
	CRAM	_STATUS,C
	RRC	FSK_TMP
	
	SUBA	FSK_COUNT,@8
	JPNZ	INT_TCC_END
	
	CLR	FSK_COUNT
	CRAM	FSK_FG,FSK_VALID
	
	IOR	_IOCF
	AND	A,@0XFE		; close TCC int
	IOW	_IOCF
	

	
	MOV	A,FSK_BYTE
	JPZ	INT_RECOVER_TYPE
	SUB	A,@1
	JPZ	INT_RECOVER_LENTH
	JMP	INT_RECOVER_OTHER

INT_RECOVER_TYPE:
	SUBA	FSK_TMP,@0X80
	JPZ	INT_RECOVER_TYPE_VALID
	
	SUBA	FSK_TMP,@0X81
	JPZ	INT_RECOVER_TYPE_VALID
	
	SUBA	FSK_TMP,@0X82
	JPZ	INT_RECOVER_TYPE_VALID
	
	SUBA	FSK_TMP,@0X04
	JPZ	INT_RECOVER_TYPE_VALID
	JMP	INT_RECOVER_TYPE_INVALID
INT_RECOVER_TYPE_VALID:
	MOV	FSK_ADR,@FSK_ADDR	; 传送的第一个字节为消息类型
	JMP	INT_RECOVER_OTHER

INT_RECOVER_LENTH:
	MOV	FSK_LENGTH,FSK_TMP	; 消息类型之后的第一个字节是消息长度字
	JMP	INT_RECOVER_OTHER
;INT_RECOVER:
;	MOV	FSK_ADR,@FSK_ADDR	; 传送的第一个字节为消息类型
;	CLR	FSK_BYTE		; 初始化FSK_BYTE

;INT_RECOVERD:
;	SUBA	FSK_BYTE,@1	; 消息类型之后的第一个字节是消息长度字
;	JPNZ	INT_RECOVERD_OTHER
;	MOV	FSK_LENGTH,FSK_TMP
	;SUB	A,@58
	;JPNC	INT_RECOVERD_ERR
	;SUBA	FSK_TMP,@2
	;JPNC	INT_RECOVERD_ERR
INT_RECOVER_OTHER:
	MOV	A,FSK_ADR
	SUB	A,@60
	JPNC	INT_END
	CIDBANK	1
	MOV	_RC,FSK_ADR
	MOV	_RD,FSK_TMP
	INC	FSK_ADR
	INC	FSK_BYTE
	;MOV	A,FSK_BYTE
	;SUB	A,@34
	;JBC	_STATUS,Z
	;NOP
	ADDA	FSK_LENGTH,@3
	SUB	A,FSK_BYTE
	JPNZ	INT_END
	
	CLR	FSK_SUM
	INC	_RC
INT_CHECKSUM:			; 校验
	DEC	_RC
	MOV	A,_RD
	ADD	FSK_SUM,A
	DEC	FSK_BYTE
	JPNZ	INT_CHECKSUM
	
	MOV	A,FSK_SUM
	JPNZ	INT_CHECKSUM_ERR
	SRAM	FSK_FG,FSK_SUC
	;JMP	INT_END

INT_RECOVER_TYPE_INVALID:
; --------------
INT_CHECKSUM_ERR:
	CLR	FSK_BYTE
INT_RECOVERD_ERR:
	JMP	INT_CHKCD_HI
; --------------

INT_0:
	MOV	_ISR,@0XFD
	;CRAM	_ISR,1
	JMP	INT_END

INT_1:
	MOV	_ISR,@0XFB
	;CRAM	_ISR,2
	JMP	INT_END

INT_2:
	MOV	_ISR,@0XF7
	;CRAM	_ISR,3
	JMP	INT_END

INT_CNT1:			; 0.5S
	MOV	_ISR,@0XEF
	;CRAM	_ISR,4
	
	INC	SEC_REG
	CLRC
	RRCA	SEC_REG
	SUB	A,@60
	JPNZ	INT_CNT1_1
	CLR	SEC_REG
	INC	MIN_REG
	SUBA	MIN_REG,@60
	JPNZ	INT_CNT1_1
	CLR	MIN_REG
	INC	HOUR_REG
	SUBA	HOUR_REG,@24
	JPNZ	INT_CNT1_1
	CLR	HOUR_REG
	INC	DAY_REG
	INC	WEEK_REG
	SUBA	WEEK_REG,@7
	JPNZ	INT_CNT1_1
	CLR	WEEK_REG
INT_CNT1_1:
	
	DECZ	TMR_NAME
	JMP	INT_END

INT_CNT2:
	;CRAM	_ISR,5
	MOV	_ISR,@0XDF
	
	PAGEIO	1
	;IOW	_IOCE,@0X0E
	IOW	_IOCC,@0XEF			;0.5MS
	PAGEIO	0
	
	;SRAM	_FSR,4
	;SRAM	_FSR,5
	;SRAM	_FSR,6
	
	CIDBANK	1
	BANK	0
	SER_COMM				; 通讯
	SAVECOMMAND
	MOV	A,SER_SEND
	JPZ	$+3
	MOV	TMR_SER,@16
	DECZ	TMR_SER
	
	INC	TMR
	ANDA	TMR,@7
	JPNZ	INT_CNT2_1
INT_CNT_4MS:
	DECZ	TMR_DELAY
	DECZ	TMR_FLASH

	BANK	1


INT_CNT2_CHKDTMF:
	JPNB	FSK_FG,DTMF_START,INT_CNT2_CHKDTMF_END
	DEC	R1_TMR_DTMF
	MOV	A,R1_TMR_DTMF
	JPNZ	INT_CNT2_CHKDTMF_END
	MOV	_RC,DTMF_ADR
	MOV	_RD,@0X0F
	CRAM	FSK_FG,DTMF_START
	SRAM	FSK_FG,DTMF_SUC

INT_CNT2_CHKDTMF_END:


	JPNB	SYS_FG,TIME,INT_CNT2_1
	DECZ	TIME_MS
	MOV	A,TIME_MS
	JPNZ	INT_CNT2_1
	MOV	TIME_MS,@250
	INC	TIME_SEC
	SUBA	TIME_SEC,@60
	JPNZ	INT_CNT2_1
	CLR	TIME_SEC
	INC	TIME_MIN
	SUBA	TIME_SEC,@60
	JPNZ	INT_CNT2_1
	CLR	TIME_MIN
	INC	TIME_HOUR
	SUBA	TIME_HOUR,@100
	JPNZ	INT_CNT2_1
	CLR	TIME_HOUR

INT_CNT2_1:
	BANK	1
	
	DECZ	TMR_PROTOCOL

INT_CHKCD:
	JPB	R1_SYS_FG,HOOKSTATUS,INT_CHKCD_HI_1
	JPB	FSK_FG,FSK_SUC,INT_CHKCD_HI
	JPB	_FSR,1,INT_CHKCD_HI
INT_CHKCD_LO:
	
	MOV	A,R1_CD
	JPZ	INT_END
	DEC	R1_CD
	NOP
	MOV	A,R1_CD
	JPNZ	INT_END
	
	
	CIDBANK	1
	MOV	A,@FSK_ADDR
	MOV	_RC,A
	MOV	FSK_ADR,A
INT_CHKCD_CLRBUF:
	CLR	_RD
	INC	_RC
	SUBA	_RC,@(FSK_ADDR+60)
	JPNZ	INT_CHKCD_CLRBUF
	
	CLR	FSK_COUNT
	CLR	FSK_BYTE
	CRAM	FSK_FG,FSK_VALID
	;CLR	R1_FSK_STATUS
	
	IOR	_IOCF
	;AND	A,@0x7f				; close dtmf
	OR	A,@0X40				; open fsk
	IOW	_IOCF
	;CRAM	_PPSR,3
	JMP	INT_END
INT_CHKCD_HI:
	MOV	A,R1_CD
	JPNZ	INT_CHKCD_HI_1
	SRAM	_PPSR,3				; dtmf power
	IOR	_IOCF
	AND	A,@0XBE				; close fsk, tcc
	OR	A,@0X80				; open dtmf
	IOW	_IOCF
INT_CHKCD_HI_1:
	MOV	R1_CD,@10
INT_CHKCD_END:
	JMP	INT_END

; --------------------------------------
; FSK接收
INT_FSK:
	MOV	_ISR,@0XBE
	
	BANK	1
	
	JPB	_FSR,1,INT_CHKCD_HI
	JPB	FSK_FG,FSK_VALID,INT_FSK_0
	JPB	_FSR,2,INT_CHKCD_HI
	SRAM	FSK_FG,FSK_VALID
INT_FSK_0:
	MOV	A,FSK_COUNT
	JPNZ	INT_FSK_1
	JPB	_FSR,2,INT_END
INT_FSK_1:
	
	MOV	_TCC,@(256-92)
	IOR	_IOCF
	AND	A,@0X7F				; close dtmf
	OR	A,@1				; open TCC
	IOW	_IOCF
	CRAM	_PPSR,3
	
	JMP	INT_END

INT_STD:
	;CRAM	_ISR,7
	MOV	_ISR,@0X7F
	
	JPNB	_RE,7,INT_END
	
	BANK	1

	MOV	R1_TMR_DTMF,@50

	CIDBANK	1
	
	IOR	_IOC5
	AND	A,@0X0F
	JPZ	INT_STD_BEGIN			; 'D'
	SUB	A,@0X0D				; 'A'
	JPZ	INT_STD_BEGIN
	SUB	A,@0X0E				; 'B'
	JPZ	INT_STD_BEGIN
	JPNB	FSK_FG,DTMF_START,INT_END	; 没有起始符'A/B/D'不接收任何号码
	IOR	_IOC5
	AND	A,@0X0F
	SUB	A,@0X0F				; 'C'
	JPZ	INT_STD_STOP
	IOR	_IOC5
	AND	A,@0X0F
	SUB	A,@12
	JPNC	INT_END				; >12 退出
	JMP	INT_STD_STORE
	

INT_STD_BEGIN:
	JPB	FSK_FG,DTMF_START,INT_STD_STORE
	SRAM	FSK_FG,DTMF_START
	MOV	_RC,@DTMF_ADDR
	;IOR	_IOCF
	;AND	A,@0XBF				; close fsk
	;IOW	_IOCF
	CRAM	_FSR,3
INT_STD_CL:
	CLR	_RD
	INC	_RC
	SUBA	_RC,@(DTMF_ADDR+20)
	JPNZ	INT_STD_CL
	MOV	DTMF_ADR,@DTMF_ADDR

INT_STD_STORE:
	SUBA	DTMF_ADR,@(DTMF_ADDR+20)
	JPZ	INT_STD_STORE_FULL
	MOV	_RC,DTMF_ADR
	IOR	_IOC5
	AND	A,@0X0F
	MOV	_RD,A
	INC	DTMF_ADR
	JMP	INT_END
INT_STD_STORE_FULL:
	MOV	_RC,DTMF_ADR
	MOV	_RD,@0X0F
	JMP	INT_END
	
INT_STD_STOP:
	MOV	_RC,DTMF_ADR
	IOR	_IOC5
	AND	A,@0X0F
	MOV	_RD,A
	CRAM	FSK_FG,DTMF_START
	SRAM	FSK_FG,DTMF_SUC

INT_ERR:
	JMP	INT_END


/***************************************
主程序
***************************************/
MAIN:
	CALL	#INITIAL				; 初始化
	NOP
	CLR	SER_FLAG

	
	
LOOP:
	CID_DECODE
	CALL	#SER_BUF_CHK
	CID_DECODE
	CALL	#TIMER_DRV			; 时间程序
	CID_DECODE
	CALL	#VGA_UPDATE
	CID_DECODE
	;CALL	#TEST_L111
	CALL	#LCD_VIEW
	CID_DECODE
	;CALL	#FSK_DECODE
	;CALL	#DTMF_DECODE
	;CALL	#CID_STORE
	CALL	#STCP_CHK
	CID_DECODE
	;CALL	#AUDIO_SEND
	CALL	#DIAL_NUM
	JMP	LOOP

/***************************************
副程序区
***************************************/

; PAGE 0
include	"initial.asm"
include	"timer.asm"
include	"ASCII.asm"
ORG	0X03E0
include	"ser_com.asm"

include	"CID.asm"		; 400
include	"stcp.asm"

include	"math.asm"
;以下占用1400~1FFF
; 显示模块
include	"VGA.asm"
; LCD驱动模块
; 0X1800~0X1FD2
include	"lcddrv.asm"
include	"string.asm"
